using System;
using AVFoundation;
using CloudKit;
using CoreAnimation;
using CoreData;
using CoreFoundation;
using CoreGraphics;
using CoreImage;
using CoreLocation;
using CoreVideo;
using FileProvider;
using Foundation;
using IOSurface;
using ImageIO;
using Intents;
using LinkPresentation;
using Metal;
using ObjCRuntime;
using OpenGLES;
using Security;
using UIKit;
using UserNotifications;

namespace HCNetSDK
{
	// @interface NSLinguisticAnalysis (NSString)
	[Category]
	[BaseType (typeof(NSString))]
	interface NSString_NSLinguisticAnalysis
	{
		// -(NSArray<NSLinguisticTag> * _Nonnull)linguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme _Nonnull)scheme options:(NSLinguisticTaggerOptions)options orthography:(NSOrthography * _Nullable)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
		[Export ("linguisticTagsInRange:scheme:options:orthography:tokenRanges:")]
		string[] LinguisticTagsInRange (NSRange range, string scheme, NSLinguisticTaggerOptions options, [NullAllowed] NSOrthography orthography, [NullAllowed] out NSValue[] tokenRanges);

		// -(void)enumerateLinguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme _Nonnull)scheme options:(NSLinguisticTaggerOptions)options orthography:(NSOrthography * _Nullable)orthography usingBlock:(void (^ _Nonnull)(NSLinguisticTag _Nullable, NSRange, NSRange, BOOL * _Nonnull))block __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
		[Export ("enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:")]
		unsafe void EnumerateLinguisticTagsInRange (NSRange range, string scheme, NSLinguisticTaggerOptions options, [NullAllowed] NSOrthography orthography, Action<NSString, NSRange, NSRange, bool*> block);
	}

	[Static]
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSMetadataItemFSNameKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemFSNameKey", "__Internal")]
		NSString NSMetadataItemFSNameKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDisplayNameKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemDisplayNameKey", "__Internal")]
		NSString NSMetadataItemDisplayNameKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemURLKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemURLKey", "__Internal")]
		NSString NSMetadataItemURLKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPathKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemPathKey", "__Internal")]
		NSString NSMetadataItemPathKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFSSizeKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemFSSizeKey", "__Internal")]
		NSString NSMetadataItemFSSizeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFSCreationDateKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemFSCreationDateKey", "__Internal")]
		NSString NSMetadataItemFSCreationDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFSContentChangeDateKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemFSContentChangeDateKey", "__Internal")]
		NSString NSMetadataItemFSContentChangeDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContentTypeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (8, 0)]
		[Field ("NSMetadataItemContentTypeKey", "__Internal")]
		NSString NSMetadataItemContentTypeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContentTypeTreeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (8, 0)]
		[Field ("NSMetadataItemContentTypeTreeKey", "__Internal")]
		NSString NSMetadataItemContentTypeTreeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemIsUbiquitousKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataItemIsUbiquitousKey", "__Internal")]
		NSString NSMetadataItemIsUbiquitousKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemHasUnresolvedConflictsKey", "__Internal")]
		NSString NSMetadataUbiquitousItemHasUnresolvedConflictsKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsDownloadedKey __attribute__((availability(macos, introduced=10.7, deprecated=10.9))) __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0)));
		[Introduced (PlatformName.MacOSX, 10, 7, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Deprecated (PlatformName.MacOSX, 10, 9, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Introduced (PlatformName.iOS, 5, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Deprecated (PlatformName.iOS, 7, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Deprecated (PlatformName.WatchOS, 2, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Deprecated (PlatformName.TvOS, 9, 0, message: "Use NSMetadataUbiquitousItemDownloadingStatusKey instead")]
		[Field ("NSMetadataUbiquitousItemIsDownloadedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsDownloadedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadingStatusKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadingStatusKey", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadingStatusKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadingStatusNotDownloaded", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadingStatusNotDownloaded { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadingStatusDownloaded", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadingStatusDownloaded { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadingStatusCurrent", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadingStatusCurrent { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsDownloadingKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemIsDownloadingKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsDownloadingKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsUploadedKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemIsUploadedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsUploadedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsUploadingKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemIsUploadingKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsUploadingKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemPercentDownloadedKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemPercentDownloadedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemPercentDownloadedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemPercentUploadedKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataUbiquitousItemPercentUploadedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemPercentUploadedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadingErrorKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadingErrorKey", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadingErrorKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemUploadingErrorKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSMetadataUbiquitousItemUploadingErrorKey", "__Internal")]
		NSString NSMetadataUbiquitousItemUploadingErrorKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemDownloadRequestedKey __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSMetadataUbiquitousItemDownloadRequestedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemDownloadRequestedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsExternalDocumentKey __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSMetadataUbiquitousItemIsExternalDocumentKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsExternalDocumentKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemContainerDisplayNameKey __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSMetadataUbiquitousItemContainerDisplayNameKey", "__Internal")]
		NSString NSMetadataUbiquitousItemContainerDisplayNameKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemURLInLocalContainerKey __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSMetadataUbiquitousItemURLInLocalContainerKey", "__Internal")]
		NSString NSMetadataUbiquitousItemURLInLocalContainerKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousItemIsSharedKey __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousItemIsSharedKey", "__Internal")]
		NSString NSMetadataUbiquitousItemIsSharedKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemCurrentUserRoleKey __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemCurrentUserRoleKey", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemCurrentUserRoleKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemOwnerNameComponentsKey __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemOwnerNameComponentsKey", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemOwnerNameComponentsKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemRoleOwner __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemRoleOwner", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemRoleOwner { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemRoleParticipant __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemRoleParticipant", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemRoleParticipant { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemPermissionsReadOnly __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemPermissionsReadOnly", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemPermissionsReadOnly { get; }

		// extern NSString *const _Nonnull NSMetadataUbiquitousSharedItemPermissionsReadWrite __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 12), iOS (10, 0)]
		[Field ("NSMetadataUbiquitousSharedItemPermissionsReadWrite", "__Internal")]
		NSString NSMetadataUbiquitousSharedItemPermissionsReadWrite { get; }

		// extern NSString *const _Nonnull NSMetadataItemAttributeChangeDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAttributeChangeDateKey", "__Internal")]
		NSString NSMetadataItemAttributeChangeDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemKeywordsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemKeywordsKey", "__Internal")]
		NSString NSMetadataItemKeywordsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTitleKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTitleKey", "__Internal")]
		NSString NSMetadataItemTitleKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAuthorsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAuthorsKey", "__Internal")]
		NSString NSMetadataItemAuthorsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemEditorsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemEditorsKey", "__Internal")]
		NSString NSMetadataItemEditorsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemParticipantsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemParticipantsKey", "__Internal")]
		NSString NSMetadataItemParticipantsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemProjectsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemProjectsKey", "__Internal")]
		NSString NSMetadataItemProjectsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDownloadedDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDownloadedDateKey", "__Internal")]
		NSString NSMetadataItemDownloadedDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemWhereFromsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemWhereFromsKey", "__Internal")]
		NSString NSMetadataItemWhereFromsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCommentKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCommentKey", "__Internal")]
		NSString NSMetadataItemCommentKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCopyrightKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCopyrightKey", "__Internal")]
		NSString NSMetadataItemCopyrightKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLastUsedDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLastUsedDateKey", "__Internal")]
		NSString NSMetadataItemLastUsedDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContentCreationDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemContentCreationDateKey", "__Internal")]
		NSString NSMetadataItemContentCreationDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContentModificationDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemContentModificationDateKey", "__Internal")]
		NSString NSMetadataItemContentModificationDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDateAddedKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDateAddedKey", "__Internal")]
		NSString NSMetadataItemDateAddedKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDurationSecondsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDurationSecondsKey", "__Internal")]
		NSString NSMetadataItemDurationSecondsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContactKeywordsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemContactKeywordsKey", "__Internal")]
		NSString NSMetadataItemContactKeywordsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemVersionKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemVersionKey", "__Internal")]
		NSString NSMetadataItemVersionKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPixelHeightKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPixelHeightKey", "__Internal")]
		NSString NSMetadataItemPixelHeightKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPixelWidthKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPixelWidthKey", "__Internal")]
		NSString NSMetadataItemPixelWidthKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPixelCountKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPixelCountKey", "__Internal")]
		NSString NSMetadataItemPixelCountKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemColorSpaceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemColorSpaceKey", "__Internal")]
		NSString NSMetadataItemColorSpaceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemBitsPerSampleKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemBitsPerSampleKey", "__Internal")]
		NSString NSMetadataItemBitsPerSampleKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFlashOnOffKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFlashOnOffKey", "__Internal")]
		NSString NSMetadataItemFlashOnOffKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFocalLengthKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFocalLengthKey", "__Internal")]
		NSString NSMetadataItemFocalLengthKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAcquisitionMakeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAcquisitionMakeKey", "__Internal")]
		NSString NSMetadataItemAcquisitionMakeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAcquisitionModelKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAcquisitionModelKey", "__Internal")]
		NSString NSMetadataItemAcquisitionModelKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemISOSpeedKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemISOSpeedKey", "__Internal")]
		NSString NSMetadataItemISOSpeedKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemOrientationKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemOrientationKey", "__Internal")]
		NSString NSMetadataItemOrientationKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLayerNamesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLayerNamesKey", "__Internal")]
		NSString NSMetadataItemLayerNamesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemWhiteBalanceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemWhiteBalanceKey", "__Internal")]
		NSString NSMetadataItemWhiteBalanceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemApertureKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemApertureKey", "__Internal")]
		NSString NSMetadataItemApertureKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemProfileNameKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemProfileNameKey", "__Internal")]
		NSString NSMetadataItemProfileNameKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemResolutionWidthDPIKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemResolutionWidthDPIKey", "__Internal")]
		NSString NSMetadataItemResolutionWidthDPIKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemResolutionHeightDPIKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemResolutionHeightDPIKey", "__Internal")]
		NSString NSMetadataItemResolutionHeightDPIKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExposureModeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExposureModeKey", "__Internal")]
		NSString NSMetadataItemExposureModeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExposureTimeSecondsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExposureTimeSecondsKey", "__Internal")]
		NSString NSMetadataItemExposureTimeSecondsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemEXIFVersionKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemEXIFVersionKey", "__Internal")]
		NSString NSMetadataItemEXIFVersionKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCameraOwnerKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCameraOwnerKey", "__Internal")]
		NSString NSMetadataItemCameraOwnerKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFocalLength35mmKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFocalLength35mmKey", "__Internal")]
		NSString NSMetadataItemFocalLength35mmKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLensModelKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLensModelKey", "__Internal")]
		NSString NSMetadataItemLensModelKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemEXIFGPSVersionKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemEXIFGPSVersionKey", "__Internal")]
		NSString NSMetadataItemEXIFGPSVersionKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAltitudeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAltitudeKey", "__Internal")]
		NSString NSMetadataItemAltitudeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLatitudeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLatitudeKey", "__Internal")]
		NSString NSMetadataItemLatitudeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLongitudeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLongitudeKey", "__Internal")]
		NSString NSMetadataItemLongitudeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemSpeedKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemSpeedKey", "__Internal")]
		NSString NSMetadataItemSpeedKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTimestampKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTimestampKey", "__Internal")]
		NSString NSMetadataItemTimestampKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSTrackKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSTrackKey", "__Internal")]
		NSString NSMetadataItemGPSTrackKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemImageDirectionKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemImageDirectionKey", "__Internal")]
		NSString NSMetadataItemImageDirectionKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemNamedLocationKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemNamedLocationKey", "__Internal")]
		NSString NSMetadataItemNamedLocationKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSStatusKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSStatusKey", "__Internal")]
		NSString NSMetadataItemGPSStatusKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSMeasureModeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSMeasureModeKey", "__Internal")]
		NSString NSMetadataItemGPSMeasureModeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDOPKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDOPKey", "__Internal")]
		NSString NSMetadataItemGPSDOPKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSMapDatumKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSMapDatumKey", "__Internal")]
		NSString NSMetadataItemGPSMapDatumKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDestLatitudeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDestLatitudeKey", "__Internal")]
		NSString NSMetadataItemGPSDestLatitudeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDestLongitudeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDestLongitudeKey", "__Internal")]
		NSString NSMetadataItemGPSDestLongitudeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDestBearingKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDestBearingKey", "__Internal")]
		NSString NSMetadataItemGPSDestBearingKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDestDistanceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDestDistanceKey", "__Internal")]
		NSString NSMetadataItemGPSDestDistanceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSProcessingMethodKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSProcessingMethodKey", "__Internal")]
		NSString NSMetadataItemGPSProcessingMethodKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSAreaInformationKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSAreaInformationKey", "__Internal")]
		NSString NSMetadataItemGPSAreaInformationKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDateStampKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDateStampKey", "__Internal")]
		NSString NSMetadataItemGPSDateStampKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGPSDifferentalKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGPSDifferentalKey", "__Internal")]
		NSString NSMetadataItemGPSDifferentalKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCodecsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCodecsKey", "__Internal")]
		NSString NSMetadataItemCodecsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMediaTypesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMediaTypesKey", "__Internal")]
		NSString NSMetadataItemMediaTypesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemStreamableKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemStreamableKey", "__Internal")]
		NSString NSMetadataItemStreamableKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTotalBitRateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTotalBitRateKey", "__Internal")]
		NSString NSMetadataItemTotalBitRateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemVideoBitRateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemVideoBitRateKey", "__Internal")]
		NSString NSMetadataItemVideoBitRateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudioBitRateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudioBitRateKey", "__Internal")]
		NSString NSMetadataItemAudioBitRateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDeliveryTypeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDeliveryTypeKey", "__Internal")]
		NSString NSMetadataItemDeliveryTypeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAlbumKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAlbumKey", "__Internal")]
		NSString NSMetadataItemAlbumKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemHasAlphaChannelKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemHasAlphaChannelKey", "__Internal")]
		NSString NSMetadataItemHasAlphaChannelKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRedEyeOnOffKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRedEyeOnOffKey", "__Internal")]
		NSString NSMetadataItemRedEyeOnOffKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMeteringModeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMeteringModeKey", "__Internal")]
		NSString NSMetadataItemMeteringModeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMaxApertureKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMaxApertureKey", "__Internal")]
		NSString NSMetadataItemMaxApertureKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFNumberKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFNumberKey", "__Internal")]
		NSString NSMetadataItemFNumberKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExposureProgramKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExposureProgramKey", "__Internal")]
		NSString NSMetadataItemExposureProgramKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExposureTimeStringKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExposureTimeStringKey", "__Internal")]
		NSString NSMetadataItemExposureTimeStringKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemHeadlineKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemHeadlineKey", "__Internal")]
		NSString NSMetadataItemHeadlineKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemInstructionsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemInstructionsKey", "__Internal")]
		NSString NSMetadataItemInstructionsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCityKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCityKey", "__Internal")]
		NSString NSMetadataItemCityKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemStateOrProvinceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemStateOrProvinceKey", "__Internal")]
		NSString NSMetadataItemStateOrProvinceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCountryKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCountryKey", "__Internal")]
		NSString NSMetadataItemCountryKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTextContentKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTextContentKey", "__Internal")]
		NSString NSMetadataItemTextContentKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudioSampleRateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudioSampleRateKey", "__Internal")]
		NSString NSMetadataItemAudioSampleRateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudioChannelCountKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudioChannelCountKey", "__Internal")]
		NSString NSMetadataItemAudioChannelCountKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTempoKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTempoKey", "__Internal")]
		NSString NSMetadataItemTempoKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemKeySignatureKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemKeySignatureKey", "__Internal")]
		NSString NSMetadataItemKeySignatureKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemTimeSignatureKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemTimeSignatureKey", "__Internal")]
		NSString NSMetadataItemTimeSignatureKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudioEncodingApplicationKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudioEncodingApplicationKey", "__Internal")]
		NSString NSMetadataItemAudioEncodingApplicationKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemComposerKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemComposerKey", "__Internal")]
		NSString NSMetadataItemComposerKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLyricistKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLyricistKey", "__Internal")]
		NSString NSMetadataItemLyricistKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudioTrackNumberKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudioTrackNumberKey", "__Internal")]
		NSString NSMetadataItemAudioTrackNumberKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRecordingDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRecordingDateKey", "__Internal")]
		NSString NSMetadataItemRecordingDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMusicalGenreKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMusicalGenreKey", "__Internal")]
		NSString NSMetadataItemMusicalGenreKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemIsGeneralMIDISequenceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemIsGeneralMIDISequenceKey", "__Internal")]
		NSString NSMetadataItemIsGeneralMIDISequenceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRecordingYearKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRecordingYearKey", "__Internal")]
		NSString NSMetadataItemRecordingYearKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemOrganizationsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemOrganizationsKey", "__Internal")]
		NSString NSMetadataItemOrganizationsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemLanguagesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemLanguagesKey", "__Internal")]
		NSString NSMetadataItemLanguagesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRightsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRightsKey", "__Internal")]
		NSString NSMetadataItemRightsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPublishersKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPublishersKey", "__Internal")]
		NSString NSMetadataItemPublishersKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemContributorsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemContributorsKey", "__Internal")]
		NSString NSMetadataItemContributorsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCoverageKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCoverageKey", "__Internal")]
		NSString NSMetadataItemCoverageKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemSubjectKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemSubjectKey", "__Internal")]
		NSString NSMetadataItemSubjectKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemThemeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemThemeKey", "__Internal")]
		NSString NSMetadataItemThemeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDescriptionKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDescriptionKey", "__Internal")]
		NSString NSMetadataItemDescriptionKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemIdentifierKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemIdentifierKey", "__Internal")]
		NSString NSMetadataItemIdentifierKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAudiencesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAudiencesKey", "__Internal")]
		NSString NSMetadataItemAudiencesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemNumberOfPagesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemNumberOfPagesKey", "__Internal")]
		NSString NSMetadataItemNumberOfPagesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPageWidthKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPageWidthKey", "__Internal")]
		NSString NSMetadataItemPageWidthKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPageHeightKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPageHeightKey", "__Internal")]
		NSString NSMetadataItemPageHeightKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemSecurityMethodKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemSecurityMethodKey", "__Internal")]
		NSString NSMetadataItemSecurityMethodKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCreatorKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCreatorKey", "__Internal")]
		NSString NSMetadataItemCreatorKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemEncodingApplicationsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemEncodingApplicationsKey", "__Internal")]
		NSString NSMetadataItemEncodingApplicationsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDueDateKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDueDateKey", "__Internal")]
		NSString NSMetadataItemDueDateKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemStarRatingKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemStarRatingKey", "__Internal")]
		NSString NSMetadataItemStarRatingKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPhoneNumbersKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPhoneNumbersKey", "__Internal")]
		NSString NSMetadataItemPhoneNumbersKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemEmailAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemEmailAddressesKey", "__Internal")]
		NSString NSMetadataItemEmailAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemInstantMessageAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemInstantMessageAddressesKey", "__Internal")]
		NSString NSMetadataItemInstantMessageAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemKindKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemKindKey", "__Internal")]
		NSString NSMetadataItemKindKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRecipientsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRecipientsKey", "__Internal")]
		NSString NSMetadataItemRecipientsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFinderCommentKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFinderCommentKey", "__Internal")]
		NSString NSMetadataItemFinderCommentKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemFontsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemFontsKey", "__Internal")]
		NSString NSMetadataItemFontsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAppleLoopsRootKeyKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAppleLoopsRootKeyKey", "__Internal")]
		NSString NSMetadataItemAppleLoopsRootKeyKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAppleLoopsKeyFilterTypeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAppleLoopsKeyFilterTypeKey", "__Internal")]
		NSString NSMetadataItemAppleLoopsKeyFilterTypeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAppleLoopsLoopModeKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAppleLoopsLoopModeKey", "__Internal")]
		NSString NSMetadataItemAppleLoopsLoopModeKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAppleLoopDescriptorsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAppleLoopDescriptorsKey", "__Internal")]
		NSString NSMetadataItemAppleLoopDescriptorsKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMusicalInstrumentCategoryKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMusicalInstrumentCategoryKey", "__Internal")]
		NSString NSMetadataItemMusicalInstrumentCategoryKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemMusicalInstrumentNameKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemMusicalInstrumentNameKey", "__Internal")]
		NSString NSMetadataItemMusicalInstrumentNameKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemCFBundleIdentifierKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemCFBundleIdentifierKey", "__Internal")]
		NSString NSMetadataItemCFBundleIdentifierKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemInformationKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemInformationKey", "__Internal")]
		NSString NSMetadataItemInformationKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemDirectorKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemDirectorKey", "__Internal")]
		NSString NSMetadataItemDirectorKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemProducerKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemProducerKey", "__Internal")]
		NSString NSMetadataItemProducerKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemGenreKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemGenreKey", "__Internal")]
		NSString NSMetadataItemGenreKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemPerformersKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemPerformersKey", "__Internal")]
		NSString NSMetadataItemPerformersKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemOriginalFormatKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemOriginalFormatKey", "__Internal")]
		NSString NSMetadataItemOriginalFormatKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemOriginalSourceKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemOriginalSourceKey", "__Internal")]
		NSString NSMetadataItemOriginalSourceKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAuthorEmailAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAuthorEmailAddressesKey", "__Internal")]
		NSString NSMetadataItemAuthorEmailAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRecipientEmailAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRecipientEmailAddressesKey", "__Internal")]
		NSString NSMetadataItemRecipientEmailAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemAuthorAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemAuthorAddressesKey", "__Internal")]
		NSString NSMetadataItemAuthorAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemRecipientAddressesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemRecipientAddressesKey", "__Internal")]
		NSString NSMetadataItemRecipientAddressesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemIsLikelyJunkKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemIsLikelyJunkKey", "__Internal")]
		NSString NSMetadataItemIsLikelyJunkKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExecutableArchitecturesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExecutableArchitecturesKey", "__Internal")]
		NSString NSMetadataItemExecutableArchitecturesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemExecutablePlatformKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemExecutablePlatformKey", "__Internal")]
		NSString NSMetadataItemExecutablePlatformKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemApplicationCategoriesKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemApplicationCategoriesKey", "__Internal")]
		NSString NSMetadataItemApplicationCategoriesKey { get; }

		// extern NSString *const _Nonnull NSMetadataItemIsApplicationManagedKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataItemIsApplicationManagedKey", "__Internal")]
		NSString NSMetadataItemIsApplicationManagedKey { get; }
	}

	// @interface NSMetadataQuery : NSObject
	[Watch (2,0), TV (9,0), Mac (10,4), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface NSMetadataQuery
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSMetadataQueryDelegate Delegate { get; set; }

		// @property (assign) id<NSMetadataQueryDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property (copy) NSPredicate * _Nullable predicate;
		[NullAllowed, Export ("predicate", ArgumentSemantic.Copy)]
		NSPredicate Predicate { get; set; }

		// @property (copy) NSArray<NSSortDescriptor *> * _Nonnull sortDescriptors;
		[Export ("sortDescriptors", ArgumentSemantic.Copy)]
		NSSortDescriptor[] SortDescriptors { get; set; }

		// @property (copy) NSArray<NSString *> * _Nonnull valueListAttributes;
		[Export ("valueListAttributes", ArgumentSemantic.Copy)]
		string[] ValueListAttributes { get; set; }

		// @property (copy) NSArray<NSString *> * _Nullable groupingAttributes;
		[NullAllowed, Export ("groupingAttributes", ArgumentSemantic.Copy)]
		string[] GroupingAttributes { get; set; }

		// @property NSTimeInterval notificationBatchingInterval;
		[Export ("notificationBatchingInterval")]
		double NotificationBatchingInterval { get; set; }

		// @property (copy) NSArray * _Nonnull searchScopes;
		[Export ("searchScopes", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] SearchScopes { get; set; }

		// @property (copy) NSArray * _Nullable searchItems __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[NullAllowed, Export ("searchItems", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] SearchItems { get; set; }

		// @property (retain) NSOperationQueue * _Nullable operationQueue __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[NullAllowed, Export ("operationQueue", ArgumentSemantic.Retain)]
		NSOperationQueue OperationQueue { get; set; }

		// -(BOOL)startQuery;
		[Export ("startQuery")]
		[Verify (MethodToProperty)]
		bool StartQuery { get; }

		// -(void)stopQuery;
		[Export ("stopQuery")]
		void StopQuery ();

		// @property (readonly, getter = isStarted) BOOL started;
		[Export ("started")]
		bool Started { [Bind ("isStarted")] get; }

		// @property (readonly, getter = isGathering) BOOL gathering;
		[Export ("gathering")]
		bool Gathering { [Bind ("isGathering")] get; }

		// @property (readonly, getter = isStopped) BOOL stopped;
		[Export ("stopped")]
		bool Stopped { [Bind ("isStopped")] get; }

		// -(void)disableUpdates;
		[Export ("disableUpdates")]
		void DisableUpdates ();

		// -(void)enableUpdates;
		[Export ("enableUpdates")]
		void EnableUpdates ();

		// @property (readonly) NSUInteger resultCount;
		[Export ("resultCount")]
		nuint ResultCount { get; }

		// -(id _Nonnull)resultAtIndex:(NSUInteger)idx;
		[Export ("resultAtIndex:")]
		NSObject ResultAtIndex (nuint idx);

		// -(void)enumerateResultsUsingBlock:(void (^ _Nonnull)(id _Nonnull, NSUInteger, BOOL * _Nonnull))block __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
		[Export ("enumerateResultsUsingBlock:")]
		unsafe void EnumerateResultsUsingBlock (Action<NSObject, nuint, bool*> block);

		// -(void)enumerateResultsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^ _Nonnull)(id _Nonnull, NSUInteger, BOOL * _Nonnull))block __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
		[Export ("enumerateResultsWithOptions:usingBlock:")]
		unsafe void EnumerateResultsWithOptions (NSEnumerationOptions opts, Action<NSObject, nuint, bool*> block);

		// @property (readonly, copy) NSArray * _Nonnull results;
		[Export ("results", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] Results { get; }

		// -(NSUInteger)indexOfResult:(id _Nonnull)result;
		[Export ("indexOfResult:")]
		nuint IndexOfResult (NSObject result);

		// @property (readonly, copy) NSDictionary<NSString *,NSArray<NSMetadataQueryAttributeValueTuple *> *> * _Nonnull valueLists;
		[Export ("valueLists", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSArray<NSMetadataQueryAttributeValueTuple>> ValueLists { get; }

		// @property (readonly, copy) NSArray<NSMetadataQueryResultGroup *> * _Nonnull groupedResults;
		[Export ("groupedResults", ArgumentSemantic.Copy)]
		NSMetadataQueryResultGroup[] GroupedResults { get; }

		// -(id _Nullable)valueOfAttribute:(NSString * _Nonnull)attrName forResultAtIndex:(NSUInteger)idx;
		[Export ("valueOfAttribute:forResultAtIndex:")]
		[return: NullAllowed]
		NSObject ValueOfAttribute (string attrName, nuint idx);
	}

	// @protocol NSMetadataQueryDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSMetadataQueryDelegate
	{
		// @optional -(id _Nonnull)metadataQuery:(NSMetadataQuery * _Nonnull)query replacementObjectForResultObject:(NSMetadataItem * _Nonnull)result;
		[Export ("metadataQuery:replacementObjectForResultObject:")]
		NSObject ReplacementObjectForResultObject (NSMetadataQuery query, NSMetadataItem result);

		// @optional -(id _Nonnull)metadataQuery:(NSMetadataQuery * _Nonnull)query replacementValueForAttribute:(NSString * _Nonnull)attrName value:(id _Nonnull)attrValue;
		[Export ("metadataQuery:replacementValueForAttribute:value:")]
		NSObject ReplacementValueForAttribute (NSMetadataQuery query, string attrName, NSObject attrValue);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull NSMetadataQueryDidStartGatheringNotification __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 4), iOS (5, 0)]
		[Field ("NSMetadataQueryDidStartGatheringNotification", "__Internal")]
		NSString NSMetadataQueryDidStartGatheringNotification { get; }

		// extern const NSNotificationName _Nonnull NSMetadataQueryGatheringProgressNotification __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 4), iOS (5, 0)]
		[Field ("NSMetadataQueryGatheringProgressNotification", "__Internal")]
		NSString NSMetadataQueryGatheringProgressNotification { get; }

		// extern const NSNotificationName _Nonnull NSMetadataQueryDidFinishGatheringNotification __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 4), iOS (5, 0)]
		[Field ("NSMetadataQueryDidFinishGatheringNotification", "__Internal")]
		NSString NSMetadataQueryDidFinishGatheringNotification { get; }

		// extern const NSNotificationName _Nonnull NSMetadataQueryDidUpdateNotification __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 4), iOS (5, 0)]
		[Field ("NSMetadataQueryDidUpdateNotification", "__Internal")]
		NSString NSMetadataQueryDidUpdateNotification { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUpdateAddedItemsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (8, 0)]
		[Field ("NSMetadataQueryUpdateAddedItemsKey", "__Internal")]
		NSString NSMetadataQueryUpdateAddedItemsKey { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUpdateChangedItemsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (8, 0)]
		[Field ("NSMetadataQueryUpdateChangedItemsKey", "__Internal")]
		NSString NSMetadataQueryUpdateChangedItemsKey { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUpdateRemovedItemsKey __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (8, 0)]
		[Field ("NSMetadataQueryUpdateRemovedItemsKey", "__Internal")]
		NSString NSMetadataQueryUpdateRemovedItemsKey { get; }

		// extern NSString *const _Nonnull NSMetadataQueryResultContentRelevanceAttribute __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 4), iOS (5, 0)]
		[Field ("NSMetadataQueryResultContentRelevanceAttribute", "__Internal")]
		NSString NSMetadataQueryResultContentRelevanceAttribute { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUserHomeScope __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("NSMetadataQueryUserHomeScope", "__Internal")]
		NSString NSMetadataQueryUserHomeScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryLocalComputerScope __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("NSMetadataQueryLocalComputerScope", "__Internal")]
		NSString NSMetadataQueryLocalComputerScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryNetworkScope __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("NSMetadataQueryNetworkScope", "__Internal")]
		NSString NSMetadataQueryNetworkScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryIndexedLocalComputerScope __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataQueryIndexedLocalComputerScope", "__Internal")]
		NSString NSMetadataQueryIndexedLocalComputerScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryIndexedNetworkScope __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 9)]
		[Field ("NSMetadataQueryIndexedNetworkScope", "__Internal")]
		NSString NSMetadataQueryIndexedNetworkScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUbiquitousDocumentsScope __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataQueryUbiquitousDocumentsScope", "__Internal")]
		NSString NSMetadataQueryUbiquitousDocumentsScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryUbiquitousDataScope __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSMetadataQueryUbiquitousDataScope", "__Internal")]
		NSString NSMetadataQueryUbiquitousDataScope { get; }

		// extern NSString *const _Nonnull NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope", "__Internal")]
		NSString NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope { get; }
	}

	// @interface NSMetadataItem : NSObject
	[Watch (2,0), TV (9,0), Mac (10,4), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface NSMetadataItem
	{
		// -(instancetype _Nullable)initWithURL:(NSURL * _Nonnull)url __attribute__((objc_designated_initializer)) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,9)]
		[Export ("initWithURL:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSUrl url);

		// -(id _Nullable)valueForAttribute:(NSString * _Nonnull)key;
		[Export ("valueForAttribute:")]
		[return: NullAllowed]
		NSObject ValueForAttribute (string key);

		// -(NSDictionary<NSString *,id> * _Nullable)valuesForAttributes:(NSArray<NSString *> * _Nonnull)keys;
		[Export ("valuesForAttributes:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> ValuesForAttributes (string[] keys);

		// @property (readonly, copy) NSArray<NSString *> * _Nonnull attributes;
		[Export ("attributes", ArgumentSemantic.Copy)]
		string[] Attributes { get; }
	}

	// @interface NSMetadataQueryAttributeValueTuple : NSObject
	[Watch (2,0), TV (9,0), Mac (10,4), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface NSMetadataQueryAttributeValueTuple
	{
		// @property (readonly, copy) NSString * _Nonnull attribute;
		[Export ("attribute")]
		string Attribute { get; }

		// @property (readonly, retain) id _Nullable value;
		[NullAllowed, Export ("value", ArgumentSemantic.Retain)]
		NSObject Value { get; }

		// @property (readonly) NSUInteger count;
		[Export ("count")]
		nuint Count { get; }
	}

	// @interface NSMetadataQueryResultGroup : NSObject
	[Watch (2,0), TV (9,0), Mac (10,4), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface NSMetadataQueryResultGroup
	{
		// @property (readonly, copy) NSString * _Nonnull attribute;
		[Export ("attribute")]
		string Attribute { get; }

		// @property (readonly, retain) id _Nonnull value;
		[Export ("value", ArgumentSemantic.Retain)]
		NSObject Value { get; }

		// @property (readonly, copy) NSArray<NSMetadataQueryResultGroup *> * _Nullable subgroups;
		[NullAllowed, Export ("subgroups", ArgumentSemantic.Copy)]
		NSMetadataQueryResultGroup[] Subgroups { get; }

		// @property (readonly) NSUInteger resultCount;
		[Export ("resultCount")]
		nuint ResultCount { get; }

		// -(id _Nonnull)resultAtIndex:(NSUInteger)idx;
		[Export ("resultAtIndex:")]
		NSObject ResultAtIndex (nuint idx);

		// @property (readonly, copy) NSArray * _Nonnull results;
		[Export ("results", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] Results { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSNetServicesErrorCode;
		[Field ("NSNetServicesErrorCode", "__Internal")]
		NSString NSNetServicesErrorCode { get; }

		// extern const NSErrorDomain _Nonnull NSNetServicesErrorDomain;
		[Field ("NSNetServicesErrorDomain", "__Internal")]
		NSString NSNetServicesErrorDomain { get; }
	}

	// @interface NSNetService : NSObject
	[NoWatch]
	[BaseType (typeof(NSObject))]
	interface NSNetService
	{
		// -(instancetype _Nonnull)initWithDomain:(NSString * _Nonnull)domain type:(NSString * _Nonnull)type name:(NSString * _Nonnull)name port:(int)port __attribute__((objc_designated_initializer));
		[Export ("initWithDomain:type:name:port:")]
		[DesignatedInitializer]
		IntPtr Constructor (string domain, string type, string name, int port);

		// -(instancetype _Nonnull)initWithDomain:(NSString * _Nonnull)domain type:(NSString * _Nonnull)type name:(NSString * _Nonnull)name;
		[Export ("initWithDomain:type:name:")]
		IntPtr Constructor (string domain, string type, string name);

		// -(void)scheduleInRunLoop:(NSRunLoop * _Nonnull)aRunLoop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("scheduleInRunLoop:forMode:")]
		void ScheduleInRunLoop (NSRunLoop aRunLoop, string mode);

		// -(void)removeFromRunLoop:(NSRunLoop * _Nonnull)aRunLoop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("removeFromRunLoop:forMode:")]
		void RemoveFromRunLoop (NSRunLoop aRunLoop, string mode);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSNetServiceDelegate Delegate { get; set; }

		// @property (assign) id<NSNetServiceDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property BOOL includesPeerToPeer __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (7, 0)]
		[Export ("includesPeerToPeer")]
		bool IncludesPeerToPeer { get; set; }

		// @property (readonly, copy) NSString * _Nonnull name;
		[Export ("name")]
		string Name { get; }

		// @property (readonly, copy) NSString * _Nonnull type;
		[Export ("type")]
		string Type { get; }

		// @property (readonly, copy) NSString * _Nonnull domain;
		[Export ("domain")]
		string Domain { get; }

		// @property (readonly, copy) NSString * _Nullable hostName;
		[NullAllowed, Export ("hostName")]
		string HostName { get; }

		// @property (readonly, copy) NSArray<NSData *> * _Nullable addresses;
		[NullAllowed, Export ("addresses", ArgumentSemantic.Copy)]
		NSData[] Addresses { get; }

		// @property (readonly) NSInteger port __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Export ("port")]
		nint Port { get; }

		// -(void)publish;
		[Export ("publish")]
		void Publish ();

		// -(void)publishWithOptions:(NSNetServiceOptions)options __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
		[Export ("publishWithOptions:")]
		void PublishWithOptions (NSNetServiceOptions options);

		// -(void)resolve __attribute__((availability(macos, introduced=10.2, deprecated=10.4))) __attribute__((availability(ios, introduced=2.0, deprecated=2.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "Not supported")]
		[Deprecated (PlatformName.MacOSX, 10, 4, message: "Not supported")]
		[Introduced (PlatformName.iOS, 2, 0, message: "Not supported")]
		[Deprecated (PlatformName.iOS, 2, 0, message: "Not supported")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
		[Deprecated (PlatformName.WatchOS, 2, 0, message: "Not supported")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
		[Deprecated (PlatformName.TvOS, 9, 0, message: "Not supported")]
		[Export ("resolve")]
		void Resolve ();

		// -(void)stop;
		[Export ("stop")]
		void Stop ();

		// +(NSDictionary<NSString *,NSData *> * _Nonnull)dictionaryFromTXTRecordData:(NSData * _Nonnull)txtData;
		[Static]
		[Export ("dictionaryFromTXTRecordData:")]
		NSDictionary<NSString, NSData> DictionaryFromTXTRecordData (NSData txtData);

		// +(NSData * _Nonnull)dataFromTXTRecordDictionary:(NSDictionary<NSString *,NSData *> * _Nonnull)txtDictionary;
		[Static]
		[Export ("dataFromTXTRecordDictionary:")]
		NSData DataFromTXTRecordDictionary (NSDictionary<NSString, NSData> txtDictionary);

		// -(void)resolveWithTimeout:(NSTimeInterval)timeout;
		[Export ("resolveWithTimeout:")]
		void ResolveWithTimeout (double timeout);

		// -(BOOL)getInputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream;
		[Export ("getInputStream:outputStream:")]
		bool GetInputStream ([NullAllowed] out NSInputStream inputStream, [NullAllowed] out NSOutputStream outputStream);

		// -(BOOL)setTXTRecordData:(NSData * _Nullable)recordData;
		[Export ("setTXTRecordData:")]
		bool SetTXTRecordData ([NullAllowed] NSData recordData);

		// -(NSData * _Nullable)TXTRecordData;
		[NullAllowed, Export ("TXTRecordData")]
		[Verify (MethodToProperty)]
		NSData TXTRecordData { get; }

		// -(void)startMonitoring;
		[Export ("startMonitoring")]
		void StartMonitoring ();

		// -(void)stopMonitoring;
		[Export ("stopMonitoring")]
		void StopMonitoring ();
	}

	// @interface NSNetServiceBrowser : NSObject
	[NoWatch]
	[BaseType (typeof(NSObject))]
	interface NSNetServiceBrowser
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSNetServiceBrowserDelegate Delegate { get; set; }

		// @property (assign) id<NSNetServiceBrowserDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property BOOL includesPeerToPeer __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (7, 0)]
		[Export ("includesPeerToPeer")]
		bool IncludesPeerToPeer { get; set; }

		// -(void)scheduleInRunLoop:(NSRunLoop * _Nonnull)aRunLoop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("scheduleInRunLoop:forMode:")]
		void ScheduleInRunLoop (NSRunLoop aRunLoop, string mode);

		// -(void)removeFromRunLoop:(NSRunLoop * _Nonnull)aRunLoop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("removeFromRunLoop:forMode:")]
		void RemoveFromRunLoop (NSRunLoop aRunLoop, string mode);

		// -(void)searchForBrowsableDomains;
		[Export ("searchForBrowsableDomains")]
		void SearchForBrowsableDomains ();

		// -(void)searchForRegistrationDomains;
		[Export ("searchForRegistrationDomains")]
		void SearchForRegistrationDomains ();

		// -(void)searchForServicesOfType:(NSString * _Nonnull)type inDomain:(NSString * _Nonnull)domainString;
		[Export ("searchForServicesOfType:inDomain:")]
		void SearchForServicesOfType (string type, string domainString);

		// -(void)stop;
		[Export ("stop")]
		void Stop ();
	}

	// @protocol NSNetServiceDelegate <NSObject>
	[NoWatch]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSNetServiceDelegate
	{
		// @optional -(void)netServiceWillPublish:(NSNetService * _Nonnull)sender;
		[Export ("netServiceWillPublish:")]
		void NetServiceWillPublish (NSNetService sender);

		// @optional -(void)netServiceDidPublish:(NSNetService * _Nonnull)sender;
		[Export ("netServiceDidPublish:")]
		void NetServiceDidPublish (NSNetService sender);

		// @optional -(void)netService:(NSNetService * _Nonnull)sender didNotPublish:(NSDictionary<NSString *,NSNumber *> * _Nonnull)errorDict;
		[Export ("netService:didNotPublish:")]
		void NetService (NSNetService sender, NSDictionary<NSString, NSNumber> errorDict);

		// @optional -(void)netServiceWillResolve:(NSNetService * _Nonnull)sender;
		[Export ("netServiceWillResolve:")]
		void NetServiceWillResolve (NSNetService sender);

		// @optional -(void)netServiceDidResolveAddress:(NSNetService * _Nonnull)sender;
		[Export ("netServiceDidResolveAddress:")]
		void NetServiceDidResolveAddress (NSNetService sender);

		// @optional -(void)netService:(NSNetService * _Nonnull)sender didNotResolve:(NSDictionary<NSString *,NSNumber *> * _Nonnull)errorDict;
		[Export ("netService:didNotResolve:")]
		void NetService (NSNetService sender, NSDictionary<NSString, NSNumber> errorDict);

		// @optional -(void)netServiceDidStop:(NSNetService * _Nonnull)sender;
		[Export ("netServiceDidStop:")]
		void NetServiceDidStop (NSNetService sender);

		// @optional -(void)netService:(NSNetService * _Nonnull)sender didUpdateTXTRecordData:(NSData * _Nonnull)data;
		[Export ("netService:didUpdateTXTRecordData:")]
		void NetService (NSNetService sender, NSData data);

		// @optional -(void)netService:(NSNetService * _Nonnull)sender didAcceptConnectionWithInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
		[Export ("netService:didAcceptConnectionWithInputStream:outputStream:")]
		void NetService (NSNetService sender, NSInputStream inputStream, NSOutputStream outputStream);
	}

	// @protocol NSNetServiceBrowserDelegate <NSObject>
	[NoWatch]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSNetServiceBrowserDelegate
	{
		// @optional -(void)netServiceBrowserWillSearch:(NSNetServiceBrowser * _Nonnull)browser;
		[Export ("netServiceBrowserWillSearch:")]
		void NetServiceBrowserWillSearch (NSNetServiceBrowser browser);

		// @optional -(void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser * _Nonnull)browser;
		[Export ("netServiceBrowserDidStopSearch:")]
		void NetServiceBrowserDidStopSearch (NSNetServiceBrowser browser);

		// @optional -(void)netServiceBrowser:(NSNetServiceBrowser * _Nonnull)browser didNotSearch:(NSDictionary<NSString *,NSNumber *> * _Nonnull)errorDict;
		[Export ("netServiceBrowser:didNotSearch:")]
		void NetServiceBrowser (NSNetServiceBrowser browser, NSDictionary<NSString, NSNumber> errorDict);

		// @optional -(void)netServiceBrowser:(NSNetServiceBrowser * _Nonnull)browser didFindDomain:(NSString * _Nonnull)domainString moreComing:(BOOL)moreComing;
		[Export ("netServiceBrowser:didFindDomain:moreComing:")]
		void NetServiceBrowser (NSNetServiceBrowser browser, string domainString, bool moreComing);

		// @optional -(void)netServiceBrowser:(NSNetServiceBrowser * _Nonnull)browser didFindService:(NSNetService * _Nonnull)service moreComing:(BOOL)moreComing;
		[Export ("netServiceBrowser:didFindService:moreComing:")]
		void NetServiceBrowser (NSNetServiceBrowser browser, NSNetService service, bool moreComing);

		// @optional -(void)netServiceBrowser:(NSNetServiceBrowser * _Nonnull)browser didRemoveDomain:(NSString * _Nonnull)domainString moreComing:(BOOL)moreComing;
		[Export ("netServiceBrowser:didRemoveDomain:moreComing:")]
		void NetServiceBrowser (NSNetServiceBrowser browser, string domainString, bool moreComing);

		// @optional -(void)netServiceBrowser:(NSNetServiceBrowser * _Nonnull)browser didRemoveService:(NSNetService * _Nonnull)service moreComing:(BOOL)moreComing;
		[Export ("netServiceBrowser:didRemoveService:moreComing:")]
		void NetServiceBrowser (NSNetServiceBrowser browser, NSNetService service, bool moreComing);
	}

	// @interface NSUbiquitousKeyValueStore : NSObject
	[TV (9,0), NoWatch, Mac (10,7), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface NSUbiquitousKeyValueStore
	{
		// @property (readonly, strong, class) NSUbiquitousKeyValueStore * _Nonnull defaultStore;
		[Static]
		[Export ("defaultStore", ArgumentSemantic.Strong)]
		NSUbiquitousKeyValueStore DefaultStore { get; }

		// -(id _Nullable)objectForKey:(NSString * _Nonnull)aKey;
		[Export ("objectForKey:")]
		[return: NullAllowed]
		NSObject ObjectForKey (string aKey);

		// -(void)setObject:(id _Nullable)anObject forKey:(NSString * _Nonnull)aKey;
		[Export ("setObject:forKey:")]
		void SetObject ([NullAllowed] NSObject anObject, string aKey);

		// -(void)removeObjectForKey:(NSString * _Nonnull)aKey;
		[Export ("removeObjectForKey:")]
		void RemoveObjectForKey (string aKey);

		// -(NSString * _Nullable)stringForKey:(NSString * _Nonnull)aKey;
		[Export ("stringForKey:")]
		[return: NullAllowed]
		string StringForKey (string aKey);

		// -(NSArray * _Nullable)arrayForKey:(NSString * _Nonnull)aKey;
		[Export ("arrayForKey:")]
		[Verify (StronglyTypedNSArray)]
		[return: NullAllowed]
		NSObject[] ArrayForKey (string aKey);

		// -(NSDictionary<NSString *,id> * _Nullable)dictionaryForKey:(NSString * _Nonnull)aKey;
		[Export ("dictionaryForKey:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> DictionaryForKey (string aKey);

		// -(NSData * _Nullable)dataForKey:(NSString * _Nonnull)aKey;
		[Export ("dataForKey:")]
		[return: NullAllowed]
		NSData DataForKey (string aKey);

		// -(long long)longLongForKey:(NSString * _Nonnull)aKey;
		[Export ("longLongForKey:")]
		long LongLongForKey (string aKey);

		// -(double)doubleForKey:(NSString * _Nonnull)aKey;
		[Export ("doubleForKey:")]
		double DoubleForKey (string aKey);

		// -(BOOL)boolForKey:(NSString * _Nonnull)aKey;
		[Export ("boolForKey:")]
		bool BoolForKey (string aKey);

		// -(void)setString:(NSString * _Nullable)aString forKey:(NSString * _Nonnull)aKey;
		[Export ("setString:forKey:")]
		void SetString ([NullAllowed] string aString, string aKey);

		// -(void)setData:(NSData * _Nullable)aData forKey:(NSString * _Nonnull)aKey;
		[Export ("setData:forKey:")]
		void SetData ([NullAllowed] NSData aData, string aKey);

		// -(void)setArray:(NSArray * _Nullable)anArray forKey:(NSString * _Nonnull)aKey;
		[Export ("setArray:forKey:")]
		[Verify (StronglyTypedNSArray)]
		void SetArray ([NullAllowed] NSObject[] anArray, string aKey);

		// -(void)setDictionary:(NSDictionary<NSString *,id> * _Nullable)aDictionary forKey:(NSString * _Nonnull)aKey;
		[Export ("setDictionary:forKey:")]
		void SetDictionary ([NullAllowed] NSDictionary<NSString, NSObject> aDictionary, string aKey);

		// -(void)setLongLong:(long long)value forKey:(NSString * _Nonnull)aKey;
		[Export ("setLongLong:forKey:")]
		void SetLongLong (long value, string aKey);

		// -(void)setDouble:(double)value forKey:(NSString * _Nonnull)aKey;
		[Export ("setDouble:forKey:")]
		void SetDouble (double value, string aKey);

		// -(void)setBool:(BOOL)value forKey:(NSString * _Nonnull)aKey;
		[Export ("setBool:forKey:")]
		void SetBool (bool value, string aKey);

		// @property (readonly, copy) NSDictionary<NSString *,id> * _Nonnull dictionaryRepresentation;
		[Export ("dictionaryRepresentation", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> DictionaryRepresentation { get; }

		// -(BOOL)synchronize;
		[Export ("synchronize")]
		[Verify (MethodToProperty)]
		bool Synchronize { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull NSUbiquitousKeyValueStoreDidChangeExternallyNotification __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSUbiquitousKeyValueStoreDidChangeExternallyNotification", "__Internal")]
		NSString NSUbiquitousKeyValueStoreDidChangeExternallyNotification { get; }

		// extern NSString *const _Nonnull NSUbiquitousKeyValueStoreChangeReasonKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSUbiquitousKeyValueStoreChangeReasonKey", "__Internal")]
		NSString NSUbiquitousKeyValueStoreChangeReasonKey { get; }

		// extern NSString *const _Nonnull NSUbiquitousKeyValueStoreChangedKeysKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSUbiquitousKeyValueStoreChangedKeysKey", "__Internal")]
		NSString NSUbiquitousKeyValueStoreChangedKeysKey { get; }
	}

	// @interface NSUndoManager : NSObject
	[Watch (2,0), TV (9,0), Mac (10,0), iOS (3,0)]
	[BaseType (typeof(NSObject))]
	interface NSUndoManager
	{
		// -(void)beginUndoGrouping;
		[Export ("beginUndoGrouping")]
		void BeginUndoGrouping ();

		// -(void)endUndoGrouping;
		[Export ("endUndoGrouping")]
		void EndUndoGrouping ();

		// @property (readonly) NSInteger groupingLevel;
		[Export ("groupingLevel")]
		nint GroupingLevel { get; }

		// -(void)disableUndoRegistration;
		[Export ("disableUndoRegistration")]
		void DisableUndoRegistration ();

		// -(void)enableUndoRegistration;
		[Export ("enableUndoRegistration")]
		void EnableUndoRegistration ();

		// @property (readonly, getter = isUndoRegistrationEnabled) BOOL undoRegistrationEnabled;
		[Export ("undoRegistrationEnabled")]
		bool UndoRegistrationEnabled { [Bind ("isUndoRegistrationEnabled")] get; }

		// @property BOOL groupsByEvent;
		[Export ("groupsByEvent")]
		bool GroupsByEvent { get; set; }

		// @property NSUInteger levelsOfUndo;
		[Export ("levelsOfUndo")]
		nuint LevelsOfUndo { get; set; }

		// @property (copy) NSArray<NSRunLoopMode> * _Nonnull runLoopModes;
		[Export ("runLoopModes", ArgumentSemantic.Copy)]
		string[] RunLoopModes { get; set; }

		// -(void)undo;
		[Export ("undo")]
		void Undo ();

		// -(void)redo;
		[Export ("redo")]
		void Redo ();

		// -(void)undoNestedGroup;
		[Export ("undoNestedGroup")]
		void UndoNestedGroup ();

		// @property (readonly) BOOL canUndo;
		[Export ("canUndo")]
		bool CanUndo { get; }

		// @property (readonly) BOOL canRedo;
		[Export ("canRedo")]
		bool CanRedo { get; }

		// @property (readonly, getter = isUndoing) BOOL undoing;
		[Export ("undoing")]
		bool Undoing { [Bind ("isUndoing")] get; }

		// @property (readonly, getter = isRedoing) BOOL redoing;
		[Export ("redoing")]
		bool Redoing { [Bind ("isRedoing")] get; }

		// -(void)removeAllActions;
		[Export ("removeAllActions")]
		void RemoveAllActions ();

		// -(void)removeAllActionsWithTarget:(id _Nonnull)target;
		[Export ("removeAllActionsWithTarget:")]
		void RemoveAllActionsWithTarget (NSObject target);

		// -(void)registerUndoWithTarget:(id _Nonnull)target selector:(SEL _Nonnull)selector object:(id _Nullable)anObject;
		[Export ("registerUndoWithTarget:selector:object:")]
		void RegisterUndoWithTarget (NSObject target, Selector selector, [NullAllowed] NSObject anObject);

		// -(id _Nonnull)prepareWithInvocationTarget:(id _Nonnull)target;
		[Export ("prepareWithInvocationTarget:")]
		NSObject PrepareWithInvocationTarget (NSObject target);

		// -(void)registerUndoWithTarget:(id _Nonnull)target handler:(void (^ _Nonnull)(id _Nonnull))undoHandler __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((swift_private));
		[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
		[Export ("registerUndoWithTarget:handler:")]
		void RegisterUndoWithTarget (NSObject target, Action<NSObject> undoHandler);

		// -(void)setActionIsDiscardable:(BOOL)discardable __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,7), iOS (5,0)]
		[Export ("setActionIsDiscardable:")]
		void SetActionIsDiscardable (bool discardable);

		// @property (readonly) BOOL undoActionIsDiscardable __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Export ("undoActionIsDiscardable")]
		bool UndoActionIsDiscardable { get; }

		// @property (readonly) BOOL redoActionIsDiscardable __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Export ("redoActionIsDiscardable")]
		bool RedoActionIsDiscardable { get; }

		// @property (readonly, copy) NSString * _Nonnull undoActionName;
		[Export ("undoActionName")]
		string UndoActionName { get; }

		// @property (readonly, copy) NSString * _Nonnull redoActionName;
		[Export ("redoActionName")]
		string RedoActionName { get; }

		// -(void)setActionName:(NSString * _Nonnull)actionName;
		[Export ("setActionName:")]
		void SetActionName (string actionName);

		// @property (readonly, copy) NSString * _Nonnull undoMenuItemTitle;
		[Export ("undoMenuItemTitle")]
		string UndoMenuItemTitle { get; }

		// @property (readonly, copy) NSString * _Nonnull redoMenuItemTitle;
		[Export ("redoMenuItemTitle")]
		string RedoMenuItemTitle { get; }

		// -(NSString * _Nonnull)undoMenuTitleForUndoActionName:(NSString * _Nonnull)actionName;
		[Export ("undoMenuTitleForUndoActionName:")]
		string UndoMenuTitleForUndoActionName (string actionName);

		// -(NSString * _Nonnull)redoMenuTitleForUndoActionName:(NSString * _Nonnull)actionName;
		[Export ("redoMenuTitleForUndoActionName:")]
		string RedoMenuTitleForUndoActionName (string actionName);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSUndoManagerGroupIsDiscardableKey __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSUndoManagerGroupIsDiscardableKey", "__Internal")]
		NSString NSUndoManagerGroupIsDiscardableKey { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerCheckpointNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerCheckpointNotification", "__Internal")]
		NSString NSUndoManagerCheckpointNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerWillUndoChangeNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerWillUndoChangeNotification", "__Internal")]
		NSString NSUndoManagerWillUndoChangeNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerWillRedoChangeNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerWillRedoChangeNotification", "__Internal")]
		NSString NSUndoManagerWillRedoChangeNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerDidUndoChangeNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerDidUndoChangeNotification", "__Internal")]
		NSString NSUndoManagerDidUndoChangeNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerDidRedoChangeNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerDidRedoChangeNotification", "__Internal")]
		NSString NSUndoManagerDidRedoChangeNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerDidOpenUndoGroupNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerDidOpenUndoGroupNotification", "__Internal")]
		NSString NSUndoManagerDidOpenUndoGroupNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerWillCloseUndoGroupNotification __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 0), iOS (3, 0)]
		[Field ("NSUndoManagerWillCloseUndoGroupNotification", "__Internal")]
		NSString NSUndoManagerWillCloseUndoGroupNotification { get; }

		// extern const NSNotificationName _Nonnull NSUndoManagerDidCloseUndoGroupNotification __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (5, 0)]
		[Field ("NSUndoManagerDidCloseUndoGroupNotification", "__Internal")]
		NSString NSUndoManagerDidCloseUndoGroupNotification { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kSSLSessionConfig_default __attribute__((availability(macos, introduced=10.2, deprecated=10.13))) __attribute__((availability(ios, introduced=5.0, deprecated=11.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 13, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_default", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_default { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_ATSv1 __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_ATSv1", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_ATSv1 { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_ATSv1_noPFS __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_ATSv1_noPFS", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_ATSv1_noPFS { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_standard __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_standard", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_standard { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_RC4_fallback __attribute__((availability(macos, introduced=10.2, deprecated=10.13))) __attribute__((availability(ios, introduced=5.0, deprecated=11.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 13, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_RC4_fallback", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_RC4_fallback { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_TLSv1_fallback __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_TLSv1_fallback", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_TLSv1_fallback { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_TLSv1_RC4_fallback __attribute__((availability(macos, introduced=10.2, deprecated=10.13))) __attribute__((availability(ios, introduced=5.0, deprecated=11.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 13, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_TLSv1_RC4_fallback", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_TLSv1_RC4_fallback { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_legacy __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_legacy", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_legacy { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_legacy_DHE __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_legacy_DHE", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_legacy_DHE { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_anonymous __attribute__((availability(macos, introduced=10.2, deprecated=10.15))) __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_anonymous", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_anonymous { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_3DES_fallback __attribute__((availability(macos, introduced=10.2, deprecated=10.13))) __attribute__((availability(ios, introduced=5.0, deprecated=11.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 13, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_3DES_fallback", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_3DES_fallback { get; }

		// extern const CFStringRef _Nonnull kSSLSessionConfig_TLSv1_3DES_fallback __attribute__((availability(macos, introduced=10.2, deprecated=10.13))) __attribute__((availability(ios, introduced=5.0, deprecated=11.0)));
		[Introduced (PlatformName.MacOSX, 10, 2, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.MacOSX, 10, 13, message: "No longer supported. Use Network.framework.")]
		[Introduced (PlatformName.iOS, 5, 0, message: "No longer supported. Use Network.framework.")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "No longer supported. Use Network.framework.")]
		[Field ("kSSLSessionConfig_TLSv1_3DES_fallback", "__Internal")]
		unsafe CFStringRef* kSSLSessionConfig_TLSv1_3DES_fallback { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const int64_t NSURLSessionTransferSizeUnknown __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSURLSessionTransferSizeUnknown", "__Internal")]
		long NSURLSessionTransferSizeUnknown { get; }
	}

	// @interface NSURLSession : NSObject
	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSURLSession
	{
		// @property (readonly, strong, class) NSURLSession * _Nonnull sharedSession;
		[Static]
		[Export ("sharedSession", ArgumentSemantic.Strong)]
		NSUrlSession SharedSession { get; }

		// +(NSURLSession * _Nonnull)sessionWithConfiguration:(NSURLSessionConfiguration * _Nonnull)configuration;
		[Static]
		[Export ("sessionWithConfiguration:")]
		NSUrlSession SessionWithConfiguration (NSUrlSessionConfiguration configuration);

		// +(NSURLSession * _Nonnull)sessionWithConfiguration:(NSURLSessionConfiguration * _Nonnull)configuration delegate:(id<NSURLSessionDelegate> _Nullable)delegate delegateQueue:(NSOperationQueue * _Nullable)queue;
		[Static]
		[Export ("sessionWithConfiguration:delegate:delegateQueue:")]
		NSUrlSession SessionWithConfiguration (NSUrlSessionConfiguration configuration, [NullAllowed] NSUrlSessionDelegate @delegate, [NullAllowed] NSOperationQueue queue);

		// @property (readonly, retain) NSOperationQueue * _Nonnull delegateQueue;
		[Export ("delegateQueue", ArgumentSemantic.Retain)]
		NSOperationQueue DelegateQueue { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSUrlSessionDelegate Delegate { get; }

		// @property (readonly, retain) id<NSURLSessionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Retain)]
		NSObject WeakDelegate { get; }

		// @property (readonly, copy) NSURLSessionConfiguration * _Nonnull configuration;
		[Export ("configuration", ArgumentSemantic.Copy)]
		NSUrlSessionConfiguration Configuration { get; }

		// @property (copy) NSString * _Nullable sessionDescription;
		[NullAllowed, Export ("sessionDescription")]
		string SessionDescription { get; set; }

		// -(void)finishTasksAndInvalidate;
		[Export ("finishTasksAndInvalidate")]
		void FinishTasksAndInvalidate ();

		// -(void)invalidateAndCancel;
		[Export ("invalidateAndCancel")]
		void InvalidateAndCancel ();

		// -(void)resetWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
		[Export ("resetWithCompletionHandler:")]
		void ResetWithCompletionHandler (Action completionHandler);

		// -(void)flushWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
		[Export ("flushWithCompletionHandler:")]
		void FlushWithCompletionHandler (Action completionHandler);

		// -(void)getTasksWithCompletionHandler:(void (^ _Nonnull)(NSArray<NSURLSessionDataTask *> * _Nonnull, NSArray<NSURLSessionUploadTask *> * _Nonnull, NSArray<NSURLSessionDownloadTask *> * _Nonnull))completionHandler;
		[Export ("getTasksWithCompletionHandler:")]
		void GetTasksWithCompletionHandler (Action<NSArray<NSURLSessionDataTask>, NSArray<NSURLSessionUploadTask>, NSArray<NSURLSessionDownloadTask>> completionHandler);

		// -(void)getAllTasksWithCompletionHandler:(void (^ _Nonnull)(NSArray<__kindof NSURLSessionTask *> * _Nonnull))completionHandler __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
		[Export ("getAllTasksWithCompletionHandler:")]
		void GetAllTasksWithCompletionHandler (Action<NSArray<NSURLSessionTask>> completionHandler);

		// -(NSURLSessionDataTask * _Nonnull)dataTaskWithRequest:(NSURLRequest * _Nonnull)request;
		[Export ("dataTaskWithRequest:")]
		NSUrlSessionDataTask DataTaskWithRequest (NSUrlRequest request);

		// -(NSURLSessionDataTask * _Nonnull)dataTaskWithURL:(NSURL * _Nonnull)url;
		[Export ("dataTaskWithURL:")]
		NSUrlSessionDataTask DataTaskWithURL (NSUrl url);

		// -(NSURLSessionUploadTask * _Nonnull)uploadTaskWithRequest:(NSURLRequest * _Nonnull)request fromFile:(NSURL * _Nonnull)fileURL;
		[Export ("uploadTaskWithRequest:fromFile:")]
		NSUrlSessionUploadTask UploadTaskWithRequest (NSUrlRequest request, NSUrl fileURL);

		// -(NSURLSessionUploadTask * _Nonnull)uploadTaskWithRequest:(NSURLRequest * _Nonnull)request fromData:(NSData * _Nonnull)bodyData;
		[Export ("uploadTaskWithRequest:fromData:")]
		NSUrlSessionUploadTask UploadTaskWithRequest (NSUrlRequest request, NSData bodyData);

		// -(NSURLSessionUploadTask * _Nonnull)uploadTaskWithStreamedRequest:(NSURLRequest * _Nonnull)request;
		[Export ("uploadTaskWithStreamedRequest:")]
		NSUrlSessionUploadTask UploadTaskWithStreamedRequest (NSUrlRequest request);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithRequest:(NSURLRequest * _Nonnull)request;
		[Export ("downloadTaskWithRequest:")]
		NSUrlSessionDownloadTask DownloadTaskWithRequest (NSUrlRequest request);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithURL:(NSURL * _Nonnull)url;
		[Export ("downloadTaskWithURL:")]
		NSUrlSessionDownloadTask DownloadTaskWithURL (NSUrl url);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithResumeData:(NSData * _Nonnull)resumeData;
		[Export ("downloadTaskWithResumeData:")]
		NSUrlSessionDownloadTask DownloadTaskWithResumeData (NSData resumeData);

		// -(NSURLSessionStreamTask * _Nonnull)streamTaskWithHostName:(NSString * _Nonnull)hostname port:(NSInteger)port __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
		[Export ("streamTaskWithHostName:port:")]
		NSUrlSessionStreamTask StreamTaskWithHostName (string hostname, nint port);

		// -(NSURLSessionStreamTask * _Nonnull)streamTaskWithNetService:(NSNetService * _Nonnull)service __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9,0), NoWatch, Mac (10,11), iOS (9,0)]
		[Export ("streamTaskWithNetService:")]
		NSUrlSessionStreamTask StreamTaskWithNetService (NSNetService service);

		// -(NSURLSessionWebSocketTask * _Nonnull)webSocketTaskWithURL:(NSURL * _Nonnull)url __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
		[Export ("webSocketTaskWithURL:")]
		NSUrlSessionWebSocketTask WebSocketTaskWithURL (NSUrl url);

		// -(NSURLSessionWebSocketTask * _Nonnull)webSocketTaskWithURL:(NSURL * _Nonnull)url protocols:(NSArray<NSString *> * _Nonnull)protocols __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
		[Export ("webSocketTaskWithURL:protocols:")]
		NSUrlSessionWebSocketTask WebSocketTaskWithURL (NSUrl url, string[] protocols);

		// -(NSURLSessionWebSocketTask * _Nonnull)webSocketTaskWithRequest:(NSURLRequest * _Nonnull)request __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
		[Export ("webSocketTaskWithRequest:")]
		NSUrlSessionWebSocketTask WebSocketTaskWithRequest (NSUrlRequest request);

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use +[NSURLSession sessionWithConfiguration:] or other class methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSession New ();
	}

	// @interface NSURLSessionAsynchronousConvenience (NSURLSession)
	[Category]
	[BaseType (typeof(NSUrlSession))]
	interface NSURLSession_NSURLSessionAsynchronousConvenience
	{
		// -(NSURLSessionDataTask * _Nonnull)dataTaskWithRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("dataTaskWithRequest:completionHandler:")]
		NSUrlSessionDataTask DataTaskWithRequest (NSUrlRequest request, Action<NSData, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionDataTask * _Nonnull)dataTaskWithURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("dataTaskWithURL:completionHandler:")]
		NSUrlSessionDataTask DataTaskWithURL (NSUrl url, Action<NSData, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionUploadTask * _Nonnull)uploadTaskWithRequest:(NSURLRequest * _Nonnull)request fromFile:(NSURL * _Nonnull)fileURL completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("uploadTaskWithRequest:fromFile:completionHandler:")]
		NSUrlSessionUploadTask UploadTaskWithRequest (NSUrlRequest request, NSUrl fileURL, Action<NSData, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionUploadTask * _Nonnull)uploadTaskWithRequest:(NSURLRequest * _Nonnull)request fromData:(NSData * _Nullable)bodyData completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("uploadTaskWithRequest:fromData:completionHandler:")]
		NSUrlSessionUploadTask UploadTaskWithRequest (NSUrlRequest request, [NullAllowed] NSData bodyData, Action<NSData, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("downloadTaskWithRequest:completionHandler:")]
		NSUrlSessionDownloadTask DownloadTaskWithRequest (NSUrlRequest request, Action<NSURL, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("downloadTaskWithURL:completionHandler:")]
		NSUrlSessionDownloadTask DownloadTaskWithURL (NSUrl url, Action<NSURL, NSURLResponse, NSError> completionHandler);

		// -(NSURLSessionDownloadTask * _Nonnull)downloadTaskWithResumeData:(NSData * _Nonnull)resumeData completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSURLResponse * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("downloadTaskWithResumeData:completionHandler:")]
		NSUrlSessionDownloadTask DownloadTaskWithResumeData (NSData resumeData, Action<NSURL, NSURLResponse, NSError> completionHandler);
	}

	// @interface NSURLSessionTask : NSObject <NSCopying, NSProgressReporting>
	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSURLSessionTask : INSCopying, INSProgressReporting
	{
		// @property (readonly) NSUInteger taskIdentifier;
		[Export ("taskIdentifier")]
		nuint TaskIdentifier { get; }

		// @property (readonly, copy) NSURLRequest * _Nullable originalRequest;
		[NullAllowed, Export ("originalRequest", ArgumentSemantic.Copy)]
		NSUrlRequest OriginalRequest { get; }

		// @property (readonly, copy) NSURLRequest * _Nullable currentRequest;
		[NullAllowed, Export ("currentRequest", ArgumentSemantic.Copy)]
		NSUrlRequest CurrentRequest { get; }

		// @property (readonly, copy) NSURLResponse * _Nullable response;
		[NullAllowed, Export ("response", ArgumentSemantic.Copy)]
		NSUrlResponse Response { get; }

		// @property (readonly, strong) NSProgress * _Nonnull progress __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("progress", ArgumentSemantic.Strong)]
		NSProgress Progress { get; }

		// @property (copy) NSDate * _Nullable earliestBeginDate __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[NullAllowed, Export ("earliestBeginDate", ArgumentSemantic.Copy)]
		NSDate EarliestBeginDate { get; set; }

		// @property int64_t countOfBytesClientExpectsToSend __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("countOfBytesClientExpectsToSend")]
		long CountOfBytesClientExpectsToSend { get; set; }

		// @property int64_t countOfBytesClientExpectsToReceive __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("countOfBytesClientExpectsToReceive")]
		long CountOfBytesClientExpectsToReceive { get; set; }

		// @property (readonly) int64_t countOfBytesReceived;
		[Export ("countOfBytesReceived")]
		long CountOfBytesReceived { get; }

		// @property (readonly) int64_t countOfBytesSent;
		[Export ("countOfBytesSent")]
		long CountOfBytesSent { get; }

		// @property (readonly) int64_t countOfBytesExpectedToSend;
		[Export ("countOfBytesExpectedToSend")]
		long CountOfBytesExpectedToSend { get; }

		// @property (readonly) int64_t countOfBytesExpectedToReceive;
		[Export ("countOfBytesExpectedToReceive")]
		long CountOfBytesExpectedToReceive { get; }

		// @property (copy) NSString * _Nullable taskDescription;
		[NullAllowed, Export ("taskDescription")]
		string TaskDescription { get; set; }

		// -(void)cancel;
		[Export ("cancel")]
		void Cancel ();

		// @property (readonly) NSURLSessionTaskState state;
		[Export ("state")]
		NSURLSessionTaskState State { get; }

		// @property (readonly, copy) NSError * _Nullable error;
		[NullAllowed, Export ("error", ArgumentSemantic.Copy)]
		NSError Error { get; }

		// -(void)suspend;
		[Export ("suspend")]
		void Suspend ();

		// -(void)resume;
		[Export ("resume")]
		void Resume ();

		// @property float priority __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Export ("priority")]
		float Priority { get; set; }

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Not supported")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Not supported")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Not supported")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Not supported")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Not supported")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Not supported")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Not supported")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Not supported")]
		[Static]
		[Export ("new")]
		NSUrlSessionTask New ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const float NSURLSessionTaskPriorityDefault __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSURLSessionTaskPriorityDefault", "__Internal")]
		float NSURLSessionTaskPriorityDefault { get; }

		// extern const float NSURLSessionTaskPriorityLow __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSURLSessionTaskPriorityLow", "__Internal")]
		float NSURLSessionTaskPriorityLow { get; }

		// extern const float NSURLSessionTaskPriorityHigh __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[Field ("NSURLSessionTaskPriorityHigh", "__Internal")]
		float NSURLSessionTaskPriorityHigh { get; }
	}

	// @interface NSURLSessionDataTask : NSURLSessionTask
	[BaseType (typeof(NSUrlSessionTask))]
	interface NSURLSessionDataTask
	{
		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use -[NSURLSession dataTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSessionDataTask New ();
	}

	// @interface NSURLSessionUploadTask : NSURLSessionDataTask
	[BaseType (typeof(NSUrlSessionDataTask))]
	interface NSURLSessionUploadTask
	{
		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use -[NSURLSession uploadTaskWithStreamedRequest:] or other NSURLSession methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSessionUploadTask New ();
	}

	// @interface NSURLSessionDownloadTask : NSURLSessionTask
	[BaseType (typeof(NSUrlSessionTask))]
	interface NSURLSessionDownloadTask
	{
		// -(void)cancelByProducingResumeData:(void (^ _Nonnull)(NSData * _Nullable))completionHandler;
		[Export ("cancelByProducingResumeData:")]
		void CancelByProducingResumeData (Action<NSData> completionHandler);

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use -[NSURLSession downloadTaskWithRequest:] or other NSURLSession methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSessionDownloadTask New ();
	}

	// @interface NSURLSessionStreamTask : NSURLSessionTask
	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSUrlSessionTask))]
	interface NSURLSessionStreamTask
	{
		// -(void)readDataOfMinLength:(NSUInteger)minBytes maxLength:(NSUInteger)maxBytes timeout:(NSTimeInterval)timeout completionHandler:(void (^ _Nonnull)(NSData * _Nullable, BOOL, NSError * _Nullable))completionHandler;
		[Export ("readDataOfMinLength:maxLength:timeout:completionHandler:")]
		void ReadDataOfMinLength (nuint minBytes, nuint maxBytes, double timeout, Action<NSData, bool, NSError> completionHandler);

		// -(void)writeData:(NSData * _Nonnull)data timeout:(NSTimeInterval)timeout completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler;
		[Export ("writeData:timeout:completionHandler:")]
		void WriteData (NSData data, double timeout, Action<NSError> completionHandler);

		// -(void)captureStreams;
		[Export ("captureStreams")]
		void CaptureStreams ();

		// -(void)closeWrite;
		[Export ("closeWrite")]
		void CloseWrite ();

		// -(void)closeRead;
		[Export ("closeRead")]
		void CloseRead ();

		// -(void)startSecureConnection;
		[Export ("startSecureConnection")]
		void StartSecureConnection ();

		// -(void)stopSecureConnection __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "TLS cannot be disabled once it is enabled")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "TLS cannot be disabled once it is enabled")]
		[Introduced (PlatformName.iOS, 7, 0, message: "TLS cannot be disabled once it is enabled")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "TLS cannot be disabled once it is enabled")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "TLS cannot be disabled once it is enabled")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "TLS cannot be disabled once it is enabled")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "TLS cannot be disabled once it is enabled")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "TLS cannot be disabled once it is enabled")]
		[Export ("stopSecureConnection")]
		void StopSecureConnection ();

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use -[NSURLSession streamTaskWithHostName:port:] or other NSURLSession methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSessionStreamTask New ();
	}

	// @interface NSURLSessionWebSocketMessage : NSObject
	[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSURLSessionWebSocketMessage
	{
		// -(instancetype _Nonnull)initWithData:(NSData * _Nonnull)data __attribute__((objc_designated_initializer));
		[Export ("initWithData:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSData data);

		// -(instancetype _Nonnull)initWithString:(NSString * _Nonnull)string __attribute__((objc_designated_initializer));
		[Export ("initWithString:")]
		[DesignatedInitializer]
		IntPtr Constructor (string @string);

		// @property (readonly) NSURLSessionWebSocketMessageType type;
		[Export ("type")]
		NSURLSessionWebSocketMessageType Type { get; }

		// @property (readonly, copy) NSData * _Nullable data;
		[NullAllowed, Export ("data", ArgumentSemantic.Copy)]
		NSData Data { get; }

		// @property (readonly, copy) NSString * _Nullable string;
		[NullAllowed, Export ("string")]
		string String { get; }
	}

	// @interface NSURLSessionWebSocketTask : NSURLSessionTask
	[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
	[BaseType (typeof(NSUrlSessionTask))]
	[DisableDefaultCtor]
	interface NSURLSessionWebSocketTask
	{
		// -(void)sendMessage:(NSURLSessionWebSocketMessage * _Nonnull)message completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler;
		[Export ("sendMessage:completionHandler:")]
		void SendMessage (NSUrlSessionWebSocketMessage message, Action<NSError> completionHandler);

		// -(void)receiveMessageWithCompletionHandler:(void (^ _Nonnull)(NSURLSessionWebSocketMessage * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("receiveMessageWithCompletionHandler:")]
		void ReceiveMessageWithCompletionHandler (Action<NSURLSessionWebSocketMessage, NSError> completionHandler);

		// -(void)sendPingWithPongReceiveHandler:(void (^ _Nonnull)(NSError * _Nullable))pongReceiveHandler;
		[Export ("sendPingWithPongReceiveHandler:")]
		void SendPingWithPongReceiveHandler (Action<NSError> pongReceiveHandler);

		// -(void)cancelWithCloseCode:(NSURLSessionWebSocketCloseCode)closeCode reason:(NSData * _Nullable)reason;
		[Export ("cancelWithCloseCode:reason:")]
		void CancelWithCloseCode (NSURLSessionWebSocketCloseCode closeCode, [NullAllowed] NSData reason);

		// @property NSInteger maximumMessageSize;
		[Export ("maximumMessageSize")]
		nint MaximumMessageSize { get; set; }

		// @property (readonly) NSURLSessionWebSocketCloseCode closeCode;
		[Export ("closeCode")]
		NSURLSessionWebSocketCloseCode CloseCode { get; }

		// @property (readonly, copy) NSData * _Nullable closeReason;
		[NullAllowed, Export ("closeReason", ArgumentSemantic.Copy)]
		NSData CloseReason { get; }
	}

	// @interface NSURLSessionConfiguration : NSObject <NSCopying>
	[Watch (2,0), TV (9,0), Mac (10,9), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSURLSessionConfiguration : INSCopying
	{
		// @property (readonly, strong, class) NSURLSessionConfiguration * _Nonnull defaultSessionConfiguration;
		[Static]
		[Export ("defaultSessionConfiguration", ArgumentSemantic.Strong)]
		NSUrlSessionConfiguration DefaultSessionConfiguration { get; }

		// @property (readonly, strong, class) NSURLSessionConfiguration * _Nonnull ephemeralSessionConfiguration;
		[Static]
		[Export ("ephemeralSessionConfiguration", ArgumentSemantic.Strong)]
		NSUrlSessionConfiguration EphemeralSessionConfiguration { get; }

		// +(NSURLSessionConfiguration * _Nonnull)backgroundSessionConfigurationWithIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
		[Static]
		[Export ("backgroundSessionConfigurationWithIdentifier:")]
		NSUrlSessionConfiguration BackgroundSessionConfigurationWithIdentifier (string identifier);

		// @property (readonly, copy) NSString * _Nullable identifier;
		[NullAllowed, Export ("identifier")]
		string Identifier { get; }

		// @property NSURLRequestCachePolicy requestCachePolicy;
		[Export ("requestCachePolicy", ArgumentSemantic.Assign)]
		NSURLRequestCachePolicy RequestCachePolicy { get; set; }

		// @property NSTimeInterval timeoutIntervalForRequest;
		[Export ("timeoutIntervalForRequest")]
		double TimeoutIntervalForRequest { get; set; }

		// @property NSTimeInterval timeoutIntervalForResource;
		[Export ("timeoutIntervalForResource")]
		double TimeoutIntervalForResource { get; set; }

		// @property NSURLRequestNetworkServiceType networkServiceType;
		[Export ("networkServiceType", ArgumentSemantic.Assign)]
		NSURLRequestNetworkServiceType NetworkServiceType { get; set; }

		// @property BOOL allowsCellularAccess;
		[Export ("allowsCellularAccess")]
		bool AllowsCellularAccess { get; set; }

		// @property BOOL allowsExpensiveNetworkAccess __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("allowsExpensiveNetworkAccess")]
		bool AllowsExpensiveNetworkAccess { get; set; }

		// @property BOOL allowsConstrainedNetworkAccess __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("allowsConstrainedNetworkAccess")]
		bool AllowsConstrainedNetworkAccess { get; set; }

		// @property BOOL waitsForConnectivity __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("waitsForConnectivity")]
		bool WaitsForConnectivity { get; set; }

		// @property (getter = isDiscretionary) BOOL discretionary __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (7, 0)]
		[Export ("discretionary")]
		bool Discretionary { [Bind ("isDiscretionary")] get; set; }

		// @property (copy) NSString * _Nullable sharedContainerIdentifier __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (8, 0)]
		[NullAllowed, Export ("sharedContainerIdentifier")]
		string SharedContainerIdentifier { get; set; }

		// @property BOOL sessionSendsLaunchEvents __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable)));
		[Watch (2, 0), TV (9, 0), NoMac, iOS (7, 0)]
		[Export ("sessionSendsLaunchEvents")]
		bool SessionSendsLaunchEvents { get; set; }

		// @property (copy) NSDictionary * _Nullable connectionProxyDictionary;
		[NullAllowed, Export ("connectionProxyDictionary", ArgumentSemantic.Copy)]
		NSDictionary ConnectionProxyDictionary { get; set; }

		// @property SSLProtocol TLSMinimumSupportedProtocol __attribute__((availability(macos, introduced=10.9, deprecated=100000))) __attribute__((availability(ios, introduced=7.0, deprecated=100000))) __attribute__((availability(watchos, introduced=2.0, deprecated=100000))) __attribute__((availability(tvos, introduced=9.0, deprecated=100000)));
		[Introduced (PlatformName.MacOSX, 10, 9)]
		[Deprecated (PlatformName.MacOSX, 100000, 0)]
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 100000, 0)]
		[Introduced (PlatformName.WatchOS, 2, 0)]
		[Deprecated (PlatformName.WatchOS, 100000, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 100000, 0)]
		[Export ("TLSMinimumSupportedProtocol", ArgumentSemantic.Assign)]
		SSLProtocol TLSMinimumSupportedProtocol { get; set; }

		// @property SSLProtocol TLSMaximumSupportedProtocol __attribute__((availability(macos, introduced=10.9, deprecated=100000))) __attribute__((availability(ios, introduced=7.0, deprecated=100000))) __attribute__((availability(watchos, introduced=2.0, deprecated=100000))) __attribute__((availability(tvos, introduced=9.0, deprecated=100000)));
		[Introduced (PlatformName.MacOSX, 10, 9)]
		[Deprecated (PlatformName.MacOSX, 100000, 0)]
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 100000, 0)]
		[Introduced (PlatformName.WatchOS, 2, 0)]
		[Deprecated (PlatformName.WatchOS, 100000, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 100000, 0)]
		[Export ("TLSMaximumSupportedProtocol", ArgumentSemantic.Assign)]
		SSLProtocol TLSMaximumSupportedProtocol { get; set; }

		// @property tls_protocol_version_t TLSMinimumSupportedProtocolVersion __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("TLSMinimumSupportedProtocolVersion", ArgumentSemantic.Assign)]
		tls_protocol_version_t TLSMinimumSupportedProtocolVersion { get; set; }

		// @property tls_protocol_version_t TLSMaximumSupportedProtocolVersion __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("TLSMaximumSupportedProtocolVersion", ArgumentSemantic.Assign)]
		tls_protocol_version_t TLSMaximumSupportedProtocolVersion { get; set; }

		// @property BOOL HTTPShouldUsePipelining;
		[Export ("HTTPShouldUsePipelining")]
		bool HTTPShouldUsePipelining { get; set; }

		// @property BOOL HTTPShouldSetCookies;
		[Export ("HTTPShouldSetCookies")]
		bool HTTPShouldSetCookies { get; set; }

		// @property NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy;
		[Export ("HTTPCookieAcceptPolicy", ArgumentSemantic.Assign)]
		NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy { get; set; }

		// @property (copy) NSDictionary * _Nullable HTTPAdditionalHeaders;
		[NullAllowed, Export ("HTTPAdditionalHeaders", ArgumentSemantic.Copy)]
		NSDictionary HTTPAdditionalHeaders { get; set; }

		// @property NSInteger HTTPMaximumConnectionsPerHost;
		[Export ("HTTPMaximumConnectionsPerHost")]
		nint HTTPMaximumConnectionsPerHost { get; set; }

		// @property (retain) NSHTTPCookieStorage * _Nullable HTTPCookieStorage;
		[NullAllowed, Export ("HTTPCookieStorage", ArgumentSemantic.Retain)]
		NSHttpCookieStorage HTTPCookieStorage { get; set; }

		// @property (retain) NSURLCredentialStorage * _Nullable URLCredentialStorage;
		[NullAllowed, Export ("URLCredentialStorage", ArgumentSemantic.Retain)]
		NSUrlCredentialStorage URLCredentialStorage { get; set; }

		// @property (retain) NSURLCache * _Nullable URLCache;
		[NullAllowed, Export ("URLCache", ArgumentSemantic.Retain)]
		NSUrlCache URLCache { get; set; }

		// @property BOOL shouldUseExtendedBackgroundIdleMode __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 11), iOS (9, 0)]
		[Export ("shouldUseExtendedBackgroundIdleMode")]
		bool ShouldUseExtendedBackgroundIdleMode { get; set; }

		// @property (copy) NSArray<Class> * _Nullable protocolClasses;
		[NullAllowed, Export ("protocolClasses", ArgumentSemantic.Copy)]
		Class[] ProtocolClasses { get; set; }

		// @property NSURLSessionMultipathServiceType multipathServiceType __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (11, 0)]
		[Export ("multipathServiceType", ArgumentSemantic.Assign)]
		NSURLSessionMultipathServiceType MultipathServiceType { get; set; }

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.9, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 9, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use NSURLSessionConfiguration.defaultSessionConfiguration or other class methods to create instances")]
		[Static]
		[Export ("new")]
		NSUrlSessionConfiguration New ();
	}

	// @protocol NSURLSessionDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSURLSessionDelegate
	{
		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
		[Export ("URLSession:didBecomeInvalidWithError:")]
		void URLSession (NSUrlSession session, [NullAllowed] NSError error);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
		[Export ("URLSession:didReceiveChallenge:completionHandler:")]
		void URLSession (NSUrlSession session, NSUrlAuthenticationChallenge challenge, Action<NSURLSessionAuthChallengeDisposition, NSURLCredential> completionHandler);

		// @optional -(void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable)));
		[Watch (2,0), TV (9,0), NoMac, iOS (7,0)]
		[Export ("URLSessionDidFinishEventsForBackgroundURLSession:")]
		void URLSessionDidFinishEventsForBackgroundURLSession (NSUrlSession session);
	}

	// @protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface NSURLSessionTaskDelegate : INSUrlSessionDelegate
	{
		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willBeginDelayedRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLSessionDelayedRequestDisposition, NSURLRequest * _Nullable))completionHandler __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
		[Export ("URLSession:task:willBeginDelayedRequest:completionHandler:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, NSUrlRequest request, Action<NSURLSessionDelayedRequestDisposition, NSURLRequest> completionHandler);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4,0), TV (11,0), Mac (10,13), iOS (11,0)]
		[Export ("URLSession:taskIsWaitingForConnectivity:")]
		void TaskIsWaitingForConnectivity (NSUrlSession session, NSUrlSessionTask task);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
		[Export ("URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, NSHttpUrlResponse response, NSUrlRequest request, Action<NSURLRequest> completionHandler);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
		[Export ("URLSession:task:didReceiveChallenge:completionHandler:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, NSUrlAuthenticationChallenge challenge, Action<NSURLSessionAuthChallengeDisposition, NSURLCredential> completionHandler);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
		[Export ("URLSession:task:needNewBodyStream:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, Action<NSInputStream> completionHandler);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
		[Export ("URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, long bytesSent, long totalBytesSent, long totalBytesExpectedToSend);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
		[Export ("URLSession:task:didFinishCollectingMetrics:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, NSUrlSessionTaskMetrics metrics);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
		[Export ("URLSession:task:didCompleteWithError:")]
		void Task (NSUrlSession session, NSUrlSessionTask task, [NullAllowed] NSError error);
	}

	// @protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface NSURLSessionDataDelegate : INSUrlSessionTaskDelegate
	{
		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
		[Export ("URLSession:dataTask:didReceiveResponse:completionHandler:")]
		void DataTask (NSUrlSession session, NSUrlSessionDataTask dataTask, NSUrlResponse response, Action<NSURLSessionResponseDisposition> completionHandler);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
		[Export ("URLSession:dataTask:didBecomeDownloadTask:")]
		void DataTask (NSUrlSession session, NSUrlSessionDataTask dataTask, NSUrlSessionDownloadTask downloadTask);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
		[Export ("URLSession:dataTask:didBecomeStreamTask:")]
		void DataTask (NSUrlSession session, NSUrlSessionDataTask dataTask, NSUrlSessionStreamTask streamTask);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
		[Export ("URLSession:dataTask:didReceiveData:")]
		void DataTask (NSUrlSession session, NSUrlSessionDataTask dataTask, NSData data);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
		[Export ("URLSession:dataTask:willCacheResponse:completionHandler:")]
		void DataTask (NSUrlSession session, NSUrlSessionDataTask dataTask, NSCachedUrlResponse proposedResponse, Action<NSCachedURLResponse> completionHandler);
	}

	// @protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface NSURLSessionDownloadDelegate : INSUrlSessionTaskDelegate
	{
		// @required -(void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
		[Abstract]
		[Export ("URLSession:downloadTask:didFinishDownloadingToURL:")]
		void DownloadTask (NSUrlSession session, NSUrlSessionDownloadTask downloadTask, NSUrl location);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
		[Export ("URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:")]
		void DownloadTask (NSUrlSession session, NSUrlSessionDownloadTask downloadTask, long bytesWritten, long totalBytesWritten, long totalBytesExpectedToWrite);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
		[Export ("URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:")]
		void DownloadTask (NSUrlSession session, NSUrlSessionDownloadTask downloadTask, long fileOffset, long expectedTotalBytes);
	}

	// @protocol NSURLSessionStreamDelegate <NSURLSessionTaskDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface NSURLSessionStreamDelegate : INSUrlSessionTaskDelegate
	{
		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session readClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
		[Export ("URLSession:readClosedForStreamTask:")]
		void ReadClosedForStreamTask (NSUrlSession session, NSUrlSessionStreamTask streamTask);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session writeClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
		[Export ("URLSession:writeClosedForStreamTask:")]
		void WriteClosedForStreamTask (NSUrlSession session, NSUrlSessionStreamTask streamTask);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
		[Export ("URLSession:betterRouteDiscoveredForStreamTask:")]
		void BetterRouteDiscoveredForStreamTask (NSUrlSession session, NSUrlSessionStreamTask streamTask);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session streamTask:(NSURLSessionStreamTask * _Nonnull)streamTask didBecomeInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
		[Export ("URLSession:streamTask:didBecomeInputStream:outputStream:")]
		void StreamTask (NSUrlSession session, NSUrlSessionStreamTask streamTask, NSInputStream inputStream, NSOutputStream outputStream);
	}

	// @protocol NSURLSessionWebSocketDelegate <NSURLSessionTaskDelegate>
	[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	interface NSURLSessionWebSocketDelegate : INSUrlSessionTaskDelegate
	{
		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session webSocketTask:(NSURLSessionWebSocketTask * _Nonnull)webSocketTask didOpenWithProtocol:(NSString * _Nullable)protocol;
		[Export ("URLSession:webSocketTask:didOpenWithProtocol:")]
		void WebSocketTask (NSUrlSession session, NSUrlSessionWebSocketTask webSocketTask, [NullAllowed] string protocol);

		// @optional -(void)URLSession:(NSURLSession * _Nonnull)session webSocketTask:(NSURLSessionWebSocketTask * _Nonnull)webSocketTask didCloseWithCode:(NSURLSessionWebSocketCloseCode)closeCode reason:(NSData * _Nullable)reason;
		[Export ("URLSession:webSocketTask:didCloseWithCode:reason:")]
		void WebSocketTask (NSUrlSession session, NSUrlSessionWebSocketTask webSocketTask, NSURLSessionWebSocketCloseCode closeCode, [NullAllowed] NSData reason);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSURLSessionDownloadTaskResumeData __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 9), iOS (7, 0)]
		[Field ("NSURLSessionDownloadTaskResumeData", "__Internal")]
		NSString NSURLSessionDownloadTaskResumeData { get; }
	}

	// @interface NSURLSessionDeprecated (NSURLSessionConfiguration)
	[Category]
	[BaseType (typeof(NSUrlSessionConfiguration))]
	interface NSURLSessionConfiguration_NSURLSessionDeprecated
	{
		// +(NSURLSessionConfiguration * _Nonnull)backgroundSessionConfiguration:(NSString * _Nonnull)identifier __attribute__((availability(macos, introduced=10.9, deprecated=10.10))) __attribute__((availability(ios, introduced=7.0, deprecated=8.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=2.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=9.0)));
		[Introduced (PlatformName.MacOSX, 10, 9)]
		[Deprecated (PlatformName.MacOSX, 10, 10)]
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Introduced (PlatformName.WatchOS, 2, 0)]
		[Deprecated (PlatformName.WatchOS, 2, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 9, 0)]
		[Static]
		[Export ("backgroundSessionConfiguration:")]
		NSUrlSessionConfiguration BackgroundSessionConfiguration (string identifier);
	}

	// @interface NSURLSessionTaskTransactionMetrics : NSObject
	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface NSURLSessionTaskTransactionMetrics
	{
		// @property (readonly, copy) NSURLRequest * _Nonnull request;
		[Export ("request", ArgumentSemantic.Copy)]
		NSUrlRequest Request { get; }

		// @property (readonly, copy) NSURLResponse * _Nullable response;
		[NullAllowed, Export ("response", ArgumentSemantic.Copy)]
		NSUrlResponse Response { get; }

		// @property (readonly, copy) NSDate * _Nullable fetchStartDate;
		[NullAllowed, Export ("fetchStartDate", ArgumentSemantic.Copy)]
		NSDate FetchStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable domainLookupStartDate;
		[NullAllowed, Export ("domainLookupStartDate", ArgumentSemantic.Copy)]
		NSDate DomainLookupStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable domainLookupEndDate;
		[NullAllowed, Export ("domainLookupEndDate", ArgumentSemantic.Copy)]
		NSDate DomainLookupEndDate { get; }

		// @property (readonly, copy) NSDate * _Nullable connectStartDate;
		[NullAllowed, Export ("connectStartDate", ArgumentSemantic.Copy)]
		NSDate ConnectStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable secureConnectionStartDate;
		[NullAllowed, Export ("secureConnectionStartDate", ArgumentSemantic.Copy)]
		NSDate SecureConnectionStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable secureConnectionEndDate;
		[NullAllowed, Export ("secureConnectionEndDate", ArgumentSemantic.Copy)]
		NSDate SecureConnectionEndDate { get; }

		// @property (readonly, copy) NSDate * _Nullable connectEndDate;
		[NullAllowed, Export ("connectEndDate", ArgumentSemantic.Copy)]
		NSDate ConnectEndDate { get; }

		// @property (readonly, copy) NSDate * _Nullable requestStartDate;
		[NullAllowed, Export ("requestStartDate", ArgumentSemantic.Copy)]
		NSDate RequestStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable requestEndDate;
		[NullAllowed, Export ("requestEndDate", ArgumentSemantic.Copy)]
		NSDate RequestEndDate { get; }

		// @property (readonly, copy) NSDate * _Nullable responseStartDate;
		[NullAllowed, Export ("responseStartDate", ArgumentSemantic.Copy)]
		NSDate ResponseStartDate { get; }

		// @property (readonly, copy) NSDate * _Nullable responseEndDate;
		[NullAllowed, Export ("responseEndDate", ArgumentSemantic.Copy)]
		NSDate ResponseEndDate { get; }

		// @property (readonly, copy) NSString * _Nullable networkProtocolName;
		[NullAllowed, Export ("networkProtocolName")]
		string NetworkProtocolName { get; }

		// @property (readonly, getter = isProxyConnection, assign) BOOL proxyConnection;
		[Export ("proxyConnection")]
		bool ProxyConnection { [Bind ("isProxyConnection")] get; }

		// @property (readonly, getter = isReusedConnection, assign) BOOL reusedConnection;
		[Export ("reusedConnection")]
		bool ReusedConnection { [Bind ("isReusedConnection")] get; }

		// @property (readonly, assign) NSURLSessionTaskMetricsResourceFetchType resourceFetchType;
		[Export ("resourceFetchType", ArgumentSemantic.Assign)]
		NSURLSessionTaskMetricsResourceFetchType ResourceFetchType { get; }

		// @property (readonly) int64_t countOfRequestHeaderBytesSent __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfRequestHeaderBytesSent")]
		long CountOfRequestHeaderBytesSent { get; }

		// @property (readonly) int64_t countOfRequestBodyBytesSent __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfRequestBodyBytesSent")]
		long CountOfRequestBodyBytesSent { get; }

		// @property (readonly) int64_t countOfRequestBodyBytesBeforeEncoding __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfRequestBodyBytesBeforeEncoding")]
		long CountOfRequestBodyBytesBeforeEncoding { get; }

		// @property (readonly) int64_t countOfResponseHeaderBytesReceived __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfResponseHeaderBytesReceived")]
		long CountOfResponseHeaderBytesReceived { get; }

		// @property (readonly) int64_t countOfResponseBodyBytesReceived __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfResponseBodyBytesReceived")]
		long CountOfResponseBodyBytesReceived { get; }

		// @property (readonly) int64_t countOfResponseBodyBytesAfterDecoding __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("countOfResponseBodyBytesAfterDecoding")]
		long CountOfResponseBodyBytesAfterDecoding { get; }

		// @property (readonly, copy) NSString * _Nullable localAddress __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("localAddress")]
		string LocalAddress { get; }

		// @property (readonly, copy) NSNumber * _Nullable localPort __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("localPort", ArgumentSemantic.Copy)]
		NSNumber LocalPort { get; }

		// @property (readonly, copy) NSString * _Nullable remoteAddress __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("remoteAddress")]
		string RemoteAddress { get; }

		// @property (readonly, copy) NSNumber * _Nullable remotePort __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("remotePort", ArgumentSemantic.Copy)]
		NSNumber RemotePort { get; }

		// @property (readonly, copy) NSNumber * _Nullable negotiatedTLSProtocolVersion __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("negotiatedTLSProtocolVersion", ArgumentSemantic.Copy)]
		NSNumber NegotiatedTLSProtocolVersion { get; }

		// @property (readonly, copy) NSNumber * _Nullable negotiatedTLSCipherSuite __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("negotiatedTLSCipherSuite", ArgumentSemantic.Copy)]
		NSNumber NegotiatedTLSCipherSuite { get; }

		// @property (readonly, getter = isCellular) BOOL cellular __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("cellular")]
		bool Cellular { [Bind ("isCellular")] get; }

		// @property (readonly, getter = isExpensive) BOOL expensive __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("expensive")]
		bool Expensive { [Bind ("isExpensive")] get; }

		// @property (readonly, getter = isConstrained) BOOL constrained __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("constrained")]
		bool Constrained { [Bind ("isConstrained")] get; }

		// @property (readonly, getter = isMultipath) BOOL multipath __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("multipath")]
		bool Multipath { [Bind ("isMultipath")] get; }

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.12, deprecated=10.15))) __attribute__((availability(ios, introduced=10.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=3.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=10.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 12, message: "Not supported")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Not supported")]
		[Introduced (PlatformName.iOS, 10, 0, message: "Not supported")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Not supported")]
		[Introduced (PlatformName.WatchOS, 3, 0, message: "Not supported")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Not supported")]
		[Introduced (PlatformName.TvOS, 10, 0, message: "Not supported")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Not supported")]
		[Static]
		[Export ("new")]
		NSUrlSessionTaskTransactionMetrics New ();
	}

	// @interface NSURLSessionTaskMetrics : NSObject
	[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface NSURLSessionTaskMetrics
	{
		// @property (readonly, copy) NSArray<NSURLSessionTaskTransactionMetrics *> * _Nonnull transactionMetrics;
		[Export ("transactionMetrics", ArgumentSemantic.Copy)]
		NSUrlSessionTaskTransactionMetrics[] TransactionMetrics { get; }

		// @property (readonly, copy) NSDateInterval * _Nonnull taskInterval;
		[Export ("taskInterval", ArgumentSemantic.Copy)]
		NSDateInterval TaskInterval { get; }

		// @property (readonly, assign) NSUInteger redirectCount;
		[Export ("redirectCount")]
		nuint RedirectCount { get; }

		// +(instancetype _Nonnull)new __attribute__((availability(macos, introduced=10.12, deprecated=10.15))) __attribute__((availability(ios, introduced=10.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=3.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=10.0, deprecated=13.0)));
		[Introduced (PlatformName.MacOSX, 10, 12, message: "Not supported")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Not supported")]
		[Introduced (PlatformName.iOS, 10, 0, message: "Not supported")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Not supported")]
		[Introduced (PlatformName.WatchOS, 3, 0, message: "Not supported")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Not supported")]
		[Introduced (PlatformName.TvOS, 10, 0, message: "Not supported")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Not supported")]
		[Static]
		[Export ("new")]
		NSUrlSessionTaskMetrics New ();
	}

	// @interface NSUserActivity : NSObject
	[Watch (2,0), TV (9,0), Mac (10,10), iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface NSUserActivity
	{
		// -(instancetype _Nonnull)initWithActivityType:(NSString * _Nonnull)activityType __attribute__((objc_designated_initializer));
		[Export ("initWithActivityType:")]
		[DesignatedInitializer]
		IntPtr Constructor (string activityType);

		// @property (readonly, copy) NSString * _Nonnull activityType;
		[Export ("activityType")]
		string ActivityType { get; }

		// @property (copy) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (copy) NSDictionary * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Copy)]
		NSDictionary UserInfo { get; set; }

		// -(void)addUserInfoEntriesFromDictionary:(NSDictionary * _Nonnull)otherDictionary;
		[Export ("addUserInfoEntriesFromDictionary:")]
		void AddUserInfoEntriesFromDictionary (NSDictionary otherDictionary);

		// @property (copy) NSSet<NSString *> * _Nullable requiredUserInfoKeys __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[NullAllowed, Export ("requiredUserInfoKeys", ArgumentSemantic.Copy)]
		NSSet<NSString> RequiredUserInfoKeys { get; set; }

		// @property (assign) BOOL needsSave;
		[Export ("needsSave")]
		bool NeedsSave { get; set; }

		// @property (copy) NSURL * _Nullable webpageURL;
		[NullAllowed, Export ("webpageURL", ArgumentSemantic.Copy)]
		NSUrl WebpageURL { get; set; }

		// @property (copy) NSURL * _Nullable referrerURL __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[NullAllowed, Export ("referrerURL", ArgumentSemantic.Copy)]
		NSUrl ReferrerURL { get; set; }

		// @property (copy) NSDate * _Nullable expirationDate __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[NullAllowed, Export ("expirationDate", ArgumentSemantic.Copy)]
		NSDate ExpirationDate { get; set; }

		// @property (copy) NSSet<NSString *> * _Nonnull keywords __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[Export ("keywords", ArgumentSemantic.Copy)]
		NSSet<NSString> Keywords { get; set; }

		// @property BOOL supportsContinuationStreams;
		[Export ("supportsContinuationStreams")]
		bool SupportsContinuationStreams { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSUserActivityDelegate Delegate { get; set; }

		// @property (weak) id<NSUserActivityDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)becomeCurrent;
		[Export ("becomeCurrent")]
		void BecomeCurrent ();

		// -(void)resignCurrent __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3,0), TV (10,0), Mac (10,11), iOS (9,0)]
		[Export ("resignCurrent")]
		void ResignCurrent ();

		// -(void)invalidate;
		[Export ("invalidate")]
		void Invalidate ();

		// -(void)getContinuationStreamsWithCompletionHandler:(void (^ _Nonnull)(NSInputStream * _Nullable, NSOutputStream * _Nullable, NSError * _Nullable))completionHandler;
		[Export ("getContinuationStreamsWithCompletionHandler:")]
		void GetContinuationStreamsWithCompletionHandler (Action<NSInputStream, NSOutputStream, NSError> completionHandler);

		// @property (getter = isEligibleForHandoff) BOOL eligibleForHandoff __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[Export ("eligibleForHandoff")]
		bool EligibleForHandoff { [Bind ("isEligibleForHandoff")] get; set; }

		// @property (getter = isEligibleForSearch) BOOL eligibleForSearch __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[Export ("eligibleForSearch")]
		bool EligibleForSearch { [Bind ("isEligibleForSearch")] get; set; }

		// @property (getter = isEligibleForPublicIndexing) BOOL eligibleForPublicIndexing __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 11), iOS (9, 0)]
		[Export ("eligibleForPublicIndexing")]
		bool EligibleForPublicIndexing { [Bind ("isEligibleForPublicIndexing")] get; set; }

		// @property (getter = isEligibleForPrediction) BOOL eligibleForPrediction __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[Watch (5, 0), NoTV, NoMac, iOS (12, 0)]
		[Export ("eligibleForPrediction")]
		bool EligibleForPrediction { [Bind ("isEligibleForPrediction")] get; set; }

		// @property (copy) NSUserActivityPersistentIdentifier _Nullable persistentIdentifier __attribute__((availability(macos, introduced=15.0))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (5, 0), NoTV, Mac (15, 0), iOS (12, 0)]
		[NullAllowed, Export ("persistentIdentifier")]
		string PersistentIdentifier { get; set; }

		// +(void)deleteSavedUserActivitiesWithPersistentIdentifiers:(NSArray<NSUserActivityPersistentIdentifier> * _Nonnull)persistentIdentifiers completionHandler:(void (^ _Nonnull)(void))handler __attribute__((availability(macos, introduced=15.0))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (5,0), NoTV, Mac (15,0), iOS (12,0)]
		[Static]
		[Export ("deleteSavedUserActivitiesWithPersistentIdentifiers:completionHandler:")]
		void DeleteSavedUserActivitiesWithPersistentIdentifiers (string[] persistentIdentifiers, Action handler);

		// +(void)deleteAllSavedUserActivitiesWithCompletionHandler:(void (^ _Nonnull)(void))handler __attribute__((availability(macos, introduced=15.0))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (5,0), NoTV, Mac (15,0), iOS (12,0)]
		[Static]
		[Export ("deleteAllSavedUserActivitiesWithCompletionHandler:")]
		void DeleteAllSavedUserActivitiesWithCompletionHandler (Action handler);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSUserActivityTypeBrowsingWeb;
		[Field ("NSUserActivityTypeBrowsingWeb", "__Internal")]
		NSString NSUserActivityTypeBrowsingWeb { get; }
	}

	// @protocol NSUserActivityDelegate <NSObject>
	[Watch (3,0), TV (9,0), Mac (10,10), iOS (8,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSUserActivityDelegate
	{
		// @optional -(void)userActivityWillSave:(NSUserActivity * _Nonnull)userActivity;
		[Export ("userActivityWillSave:")]
		void UserActivityWillSave (NSUserActivity userActivity);

		// @optional -(void)userActivityWasContinued:(NSUserActivity * _Nonnull)userActivity;
		[Export ("userActivityWasContinued:")]
		void UserActivityWasContinued (NSUserActivity userActivity);

		// @optional -(void)userActivity:(NSUserActivity * _Nonnull)userActivity didReceiveInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
		[Export ("userActivity:didReceiveInputStream:outputStream:")]
		void UserActivity (NSUserActivity userActivity, NSInputStream inputStream, NSOutputStream outputStream);
	}

	// @interface NSUUID : NSObject <NSCopying, NSSecureCoding>
	[Watch (2,0), TV (9,0), Mac (10,8), iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface NSUUID : INSCopying, INSSecureCoding
	{
		// +(instancetype _Nonnull)UUID;
		[Static]
		[Export ("UUID")]
		NSUuid UUID ();

		// -(instancetype _Nullable)initWithUUIDString:(NSString * _Nonnull)string;
		[Export ("initWithUUIDString:")]
		IntPtr Constructor (string @string);

		// -(instancetype _Nonnull)initWithUUIDBytes:(const unsigned char * _Nullable)bytes;
		[Export ("initWithUUIDBytes:")]
		IntPtr Constructor ([NullAllowed] byte[] bytes);

		// -(void)getUUIDBytes:(unsigned char * _Nonnull)uuid;
		[Export ("getUUIDBytes:")]
		void GetUUIDBytes (byte[] uuid);

		// @property (readonly, copy) NSString * _Nonnull UUIDString;
		[Export ("UUIDString")]
		string UUIDString { get; }
	}

	// @interface DeviceInfo : NSObject
	[BaseType (typeof(NSObject))]
	interface DeviceInfo
	{
		// @property int nDeviceID;
		[Export ("nDeviceID")]
		int NDeviceID { get; set; }

		// @property int nDevicePort;
		[Export ("nDevicePort")]
		int NDevicePort { get; set; }

		// @property int nChannelNum;
		[Export ("nChannelNum")]
		int NChannelNum { get; set; }

		// @property _Bool bLogined;
		[Export ("bLogined")]
		bool BLogined { get; set; }

		// @property long lUserID;
		[Export ("lUserID")]
		nint LUserID { get; set; }

		// @property (retain, nonatomic) NSString * chDeviceName;
		[Export ("chDeviceName", ArgumentSemantic.Retain)]
		string ChDeviceName { get; set; }

		// @property (retain, nonatomic) NSString * chDeviceAddr;
		[Export ("chDeviceAddr", ArgumentSemantic.Retain)]
		string ChDeviceAddr { get; set; }

		// @property (retain, nonatomic) NSString * chLoginName;
		[Export ("chLoginName", ArgumentSemantic.Retain)]
		string ChLoginName { get; set; }

		// @property (retain, nonatomic) NSString * chPassWord;
		[Export ("chPassWord", ArgumentSemantic.Retain)]
		string ChPassWord { get; set; }

		// @property _Bool bHaveIPChannel;
		[Export ("bHaveIPChannel")]
		bool BHaveIPChannel { get; set; }

		// @property _Bool bDeleted;
		[Export ("bDeleted")]
		bool BDeleted { get; set; }
	}

	// @interface UIAcceleration : NSObject
	[Introduced (PlatformName.iOS, 2, 0, message: "UIAcceleration has been replaced by the CoreMotion framework")]
	[Deprecated (PlatformName.iOS, 5, 0, message: "UIAcceleration has been replaced by the CoreMotion framework")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UIAcceleration
	{
		// @property (readonly, nonatomic) NSTimeInterval timestamp;
		[Export ("timestamp")]
		double Timestamp { get; }

		// @property (readonly, nonatomic) UIAccelerationValue x;
		[Export ("x")]
		double X { get; }

		// @property (readonly, nonatomic) UIAccelerationValue y;
		[Export ("y")]
		double Y { get; }

		// @property (readonly, nonatomic) UIAccelerationValue z;
		[Export ("z")]
		double Z { get; }
	}

	// @interface UIAccelerometer : NSObject
	[Introduced (PlatformName.iOS, 2, 0, message: "UIAccelerometer has been replaced by the CoreMotion framework")]
	[Deprecated (PlatformName.iOS, 5, 0, message: "UIAccelerometer has been replaced by the CoreMotion framework")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UIAccelerometer
	{
		// +(UIAccelerometer * _Nonnull)sharedAccelerometer;
		[Static]
		[Export ("sharedAccelerometer")]
		[Verify (MethodToProperty)]
		UIAccelerometer SharedAccelerometer { get; }

		// @property (nonatomic) NSTimeInterval updateInterval;
		[Export ("updateInterval")]
		double UpdateInterval { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIAccelerometerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIAccelerometerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @protocol UIAccelerometerDelegate <NSObject>
	[Introduced (PlatformName.iOS, 2, 0, message: "UIAcceleration has been replaced by the CoreMotion framework")]
	[Deprecated (PlatformName.iOS, 13, 0, message: "UIAcceleration has been replaced by the CoreMotion framework")]
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIAccelerometerDelegate
	{
		// @optional -(void)accelerometer:(UIAccelerometer * _Nonnull)accelerometer didAccelerate:(UIAcceleration * _Nonnull)acceleration __attribute__((availability(ios, introduced=2.0, deprecated=5.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 5, 0)]
		[NoTV]
		[Export ("accelerometer:didAccelerate:")]
		void DidAccelerate (UIAccelerometer accelerometer, UIAcceleration acceleration);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CGPoint CGPointZero __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 0), iOS (2, 0)]
		[Field ("CGPointZero", "__Internal")]
		CGPoint CGPointZero { get; }

		// extern const CGSize CGSizeZero __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 0), iOS (2, 0)]
		[Field ("CGSizeZero", "__Internal")]
		CGSize CGSizeZero { get; }

		// extern const CGRect CGRectZero __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 0), iOS (2, 0)]
		[Field ("CGRectZero", "__Internal")]
		CGRect CGRectZero { get; }

		// extern const CGRect CGRectNull __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 0), iOS (2, 0)]
		[Field ("CGRectNull", "__Internal")]
		CGRect CGRectNull { get; }

		// extern const CGRect CGRectInfinite __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("CGRectInfinite", "__Internal")]
		CGRect CGRectInfinite { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CGAffineTransform CGAffineTransformIdentity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 0), iOS (2, 0)]
		[Field ("CGAffineTransformIdentity", "__Internal")]
		CGAffineTransform CGAffineTransformIdentity { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGColorSpaceGenericGray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 4), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericGray", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericGray { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 4), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericCMYK __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 4), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericCMYK", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericCMYK { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceDisplayP3 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11.2))) __attribute__((availability(ios, introduced=9.3)));
		[Mac (10, 11, 2), iOS (9, 3)]
		[Field ("kCGColorSpaceDisplayP3", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceDisplayP3 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericRGBLinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 5), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericRGBLinear", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericRGBLinear { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceAdobeRGB1998 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 5), iOS (9, 0)]
		[Field ("kCGColorSpaceAdobeRGB1998", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceAdobeRGB1998 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceSRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 5), iOS (9, 0)]
		[Field ("kCGColorSpaceSRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceSRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericGrayGamma2_2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 6), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericGrayGamma2_2", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericGrayGamma2_2 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericXYZ __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceGenericXYZ", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericXYZ { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceGenericLab __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGColorSpaceGenericLab", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceGenericLab { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceACESCGLinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceACESCGLinear", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceACESCGLinear { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceITUR_709 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceITUR_709", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceITUR_709 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceITUR_2020 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceITUR_2020", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceITUR_2020 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceROMMRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceROMMRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceROMMRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceDCIP3 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGColorSpaceDCIP3", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceDCIP3 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedLinearITUR_2020 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14.3))) __attribute__((availability(ios, introduced=12.3)));
		[Mac (10, 14, 3), iOS (12, 3)]
		[Field ("kCGColorSpaceExtendedLinearITUR_2020", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedLinearITUR_2020 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedLinearDisplayP3 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14.3))) __attribute__((availability(ios, introduced=12.3)));
		[Mac (10, 14, 3), iOS (12, 3)]
		[Field ("kCGColorSpaceExtendedLinearDisplayP3", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedLinearDisplayP3 { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceITUR_2020_PQ_EOTF __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGColorSpaceITUR_2020_PQ_EOTF", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceITUR_2020_PQ_EOTF { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceDisplayP3_PQ_EOTF __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14.6))) __attribute__((availability(ios, introduced=13)));
		[Mac (10, 14, 6), iOS (13, 0)]
		[Field ("kCGColorSpaceDisplayP3_PQ_EOTF", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceDisplayP3_PQ_EOTF { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceDisplayP3_HLG __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14.6))) __attribute__((availability(ios, introduced=13)));
		[Mac (10, 14, 6), iOS (13, 0)]
		[Field ("kCGColorSpaceDisplayP3_HLG", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceDisplayP3_HLG { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceITUR_2020_HLG __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14.6))) __attribute__((availability(ios, introduced=13)));
		[Mac (10, 14, 6), iOS (13, 0)]
		[Field ("kCGColorSpaceITUR_2020_HLG", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceITUR_2020_HLG { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedSRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceExtendedSRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedSRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceLinearSRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceLinearSRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceLinearSRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedLinearSRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceExtendedLinearSRGB", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedLinearSRGB { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedGray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceExtendedGray", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedGray { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceLinearGray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceLinearGray", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceLinearGray { get; }

		// extern const CFStringRef _Nonnull kCGColorSpaceExtendedLinearGray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorSpaceExtendedLinearGray", "__Internal")]
		unsafe CFStringRef* kCGColorSpaceExtendedLinearGray { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGColorWhite __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 5)]
		[Field ("kCGColorWhite", "__Internal")]
		unsafe CFStringRef* kCGColorWhite { get; }

		// extern const CFStringRef _Nonnull kCGColorBlack __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 5)]
		[Field ("kCGColorBlack", "__Internal")]
		unsafe CFStringRef* kCGColorBlack { get; }

		// extern const CFStringRef _Nonnull kCGColorClear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 5)]
		[Field ("kCGColorClear", "__Internal")]
		unsafe CFStringRef* kCGColorClear { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGFontVariationAxisName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGFontVariationAxisName", "__Internal")]
		unsafe CFStringRef* kCGFontVariationAxisName { get; }

		// extern const CFStringRef _Nonnull kCGFontVariationAxisMinValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGFontVariationAxisMinValue", "__Internal")]
		unsafe CFStringRef* kCGFontVariationAxisMinValue { get; }

		// extern const CFStringRef _Nonnull kCGFontVariationAxisMaxValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGFontVariationAxisMaxValue", "__Internal")]
		unsafe CFStringRef* kCGFontVariationAxisMaxValue { get; }

		// extern const CFStringRef _Nonnull kCGFontVariationAxisDefaultValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGFontVariationAxisDefaultValue", "__Internal")]
		unsafe CFStringRef* kCGFontVariationAxisDefaultValue { get; }
	}

	// typedef void (^CGPathApplyBlock)(const CGPathElement * _Nonnull);
	unsafe delegate void CGPathApplyBlock (CGPathElement* arg0);

	// typedef _Bool (^CGPDFArrayApplierBlock)(size_t, CGPDFObjectRef _Nonnull, void * _Nullable);
	unsafe delegate bool CGPDFArrayApplierBlock (nuint arg0, CGPDFObjectRef* arg1, [NullAllowed] void* arg2);

	// typedef _Bool (^CGPDFDictionaryApplierBlock)(const char * _Nonnull, CGPDFObjectRef _Nonnull, void * _Nullable);
	unsafe delegate bool CGPDFDictionaryApplierBlock (sbyte* arg0, CGPDFObjectRef* arg1, [NullAllowed] void* arg2);

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGPDFOutlineTitle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGPDFOutlineTitle", "__Internal")]
		unsafe CFStringRef* kCGPDFOutlineTitle { get; }

		// extern const CFStringRef _Nonnull kCGPDFOutlineChildren __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGPDFOutlineChildren", "__Internal")]
		unsafe CFStringRef* kCGPDFOutlineChildren { get; }

		// extern const CFStringRef _Nonnull kCGPDFOutlineDestination __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGPDFOutlineDestination", "__Internal")]
		unsafe CFStringRef* kCGPDFOutlineDestination { get; }

		// extern const CFStringRef _Nonnull kCGPDFOutlineDestinationRect __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGPDFOutlineDestinationRect", "__Internal")]
		unsafe CFStringRef* kCGPDFOutlineDestinationRect { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGColorConversionBlackPointCompensation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGColorConversionBlackPointCompensation", "__Internal")]
		unsafe CFStringRef* kCGColorConversionBlackPointCompensation { get; }

		// extern const CFStringRef _Nonnull kCGColorConversionTRCSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGColorConversionTRCSize", "__Internal")]
		unsafe CFStringRef* kCGColorConversionTRCSize { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGPDFContextMediaBox __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextMediaBox", "__Internal")]
		unsafe CFStringRef* kCGPDFContextMediaBox { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextCropBox __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextCropBox", "__Internal")]
		unsafe CFStringRef* kCGPDFContextCropBox { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextBleedBox __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextBleedBox", "__Internal")]
		unsafe CFStringRef* kCGPDFContextBleedBox { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextTrimBox __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextTrimBox", "__Internal")]
		unsafe CFStringRef* kCGPDFContextTrimBox { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextArtBox __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextArtBox", "__Internal")]
		unsafe CFStringRef* kCGPDFContextArtBox { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextTitle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextTitle", "__Internal")]
		unsafe CFStringRef* kCGPDFContextTitle { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextAuthor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextAuthor", "__Internal")]
		unsafe CFStringRef* kCGPDFContextAuthor { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextSubject __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 5), iOS (2, 0)]
		[Field ("kCGPDFContextSubject", "__Internal")]
		unsafe CFStringRef* kCGPDFContextSubject { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextKeywords __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 5), iOS (2, 0)]
		[Field ("kCGPDFContextKeywords", "__Internal")]
		unsafe CFStringRef* kCGPDFContextKeywords { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextCreator __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextCreator", "__Internal")]
		unsafe CFStringRef* kCGPDFContextCreator { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextOwnerPassword __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextOwnerPassword", "__Internal")]
		unsafe CFStringRef* kCGPDFContextOwnerPassword { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextUserPassword __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextUserPassword", "__Internal")]
		unsafe CFStringRef* kCGPDFContextUserPassword { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextEncryptionKeyLength __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 5), iOS (2, 0)]
		[Field ("kCGPDFContextEncryptionKeyLength", "__Internal")]
		unsafe CFStringRef* kCGPDFContextEncryptionKeyLength { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextAllowsPrinting __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextAllowsPrinting", "__Internal")]
		unsafe CFStringRef* kCGPDFContextAllowsPrinting { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextAllowsCopying __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=2.0)));
		[Mac (10, 4), iOS (2, 0)]
		[Field ("kCGPDFContextAllowsCopying", "__Internal")]
		unsafe CFStringRef* kCGPDFContextAllowsCopying { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextOutputIntent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFContextOutputIntent", "__Internal")]
		unsafe CFStringRef* kCGPDFContextOutputIntent { get; }

		// extern const CFStringRef _Nonnull kCGPDFXOutputIntentSubtype __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXOutputIntentSubtype", "__Internal")]
		unsafe CFStringRef* kCGPDFXOutputIntentSubtype { get; }

		// extern const CFStringRef _Nonnull kCGPDFXOutputConditionIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXOutputConditionIdentifier", "__Internal")]
		unsafe CFStringRef* kCGPDFXOutputConditionIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGPDFXOutputCondition __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXOutputCondition", "__Internal")]
		unsafe CFStringRef* kCGPDFXOutputCondition { get; }

		// extern const CFStringRef _Nonnull kCGPDFXRegistryName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXRegistryName", "__Internal")]
		unsafe CFStringRef* kCGPDFXRegistryName { get; }

		// extern const CFStringRef _Nonnull kCGPDFXInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXInfo", "__Internal")]
		unsafe CFStringRef* kCGPDFXInfo { get; }

		// extern const CFStringRef _Nonnull kCGPDFXDestinationOutputProfile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFXDestinationOutputProfile", "__Internal")]
		unsafe CFStringRef* kCGPDFXDestinationOutputProfile { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextOutputIntents __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 4)]
		[Field ("kCGPDFContextOutputIntents", "__Internal")]
		unsafe CFStringRef* kCGPDFContextOutputIntents { get; }

		// extern const CFStringRef _Nonnull kCGPDFContextAccessPermissions __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGPDFContextAccessPermissions", "__Internal")]
		unsafe CFStringRef* kCGPDFContextAccessPermissions { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CGPDFTagProperty  _Nonnull const kCGPDFTagPropertyActualText __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGPDFTagPropertyActualText", "__Internal")]
		unsafe CGPDFTagProperty* kCGPDFTagPropertyActualText { get; }

		// extern CGPDFTagProperty  _Nonnull const kCGPDFTagPropertyAlternativeText __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGPDFTagPropertyAlternativeText", "__Internal")]
		unsafe CGPDFTagProperty* kCGPDFTagPropertyAlternativeText { get; }

		// extern CGPDFTagProperty  _Nonnull const kCGPDFTagPropertyTitleText __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGPDFTagPropertyTitleText", "__Internal")]
		unsafe CGPDFTagProperty* kCGPDFTagPropertyTitleText { get; }

		// extern CGPDFTagProperty  _Nonnull const kCGPDFTagPropertyLanguageText __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGPDFTagPropertyLanguageText", "__Internal")]
		unsafe CGPDFTagProperty* kCGPDFTagPropertyLanguageText { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIEdgeInsets UIEdgeInsetsZero __attribute__((visibility("default")));
		[Field ("UIEdgeInsetsZero", "__Internal")]
		UIEdgeInsets UIEdgeInsetsZero { get; }

		// extern const NSDirectionalEdgeInsets NSDirectionalEdgeInsetsZero __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (11, 0), iOS (11, 0)]
		[Field ("NSDirectionalEdgeInsetsZero", "__Internal")]
		NSDirectionalEdgeInsets NSDirectionalEdgeInsetsZero { get; }

		// extern const UIOffset UIOffsetZero __attribute__((visibility("default")));
		[Field ("UIOffsetZero", "__Internal")]
		UIOffset UIOffsetZero { get; }
	}

	// @interface NSValueUIGeometryExtensions (NSValue)
	[Category]
	[BaseType (typeof(NSValue))]
	interface NSValue_NSValueUIGeometryExtensions
	{
		// +(NSValue * _Nonnull)valueWithCGPoint:(CGPoint)point;
		[Static]
		[Export ("valueWithCGPoint:")]
		NSValue ValueWithCGPoint (CGPoint point);

		// +(NSValue * _Nonnull)valueWithCGVector:(CGVector)vector;
		[Static]
		[Export ("valueWithCGVector:")]
		NSValue ValueWithCGVector (CGVector vector);

		// +(NSValue * _Nonnull)valueWithCGSize:(CGSize)size;
		[Static]
		[Export ("valueWithCGSize:")]
		NSValue ValueWithCGSize (CGSize size);

		// +(NSValue * _Nonnull)valueWithCGRect:(CGRect)rect;
		[Static]
		[Export ("valueWithCGRect:")]
		NSValue ValueWithCGRect (CGRect rect);

		// +(NSValue * _Nonnull)valueWithCGAffineTransform:(CGAffineTransform)transform;
		[Static]
		[Export ("valueWithCGAffineTransform:")]
		NSValue ValueWithCGAffineTransform (CGAffineTransform transform);

		// +(NSValue * _Nonnull)valueWithUIEdgeInsets:(UIEdgeInsets)insets;
		[Static]
		[Export ("valueWithUIEdgeInsets:")]
		NSValue ValueWithUIEdgeInsets (UIEdgeInsets insets);

		// +(NSValue * _Nonnull)valueWithDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4,0), TV (11,0), iOS (11,0)]
		[Static]
		[Export ("valueWithDirectionalEdgeInsets:")]
		NSValue ValueWithDirectionalEdgeInsets (NSDirectionalEdgeInsets insets);

		// +(NSValue * _Nonnull)valueWithUIOffset:(UIOffset)insets __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("valueWithUIOffset:")]
		NSValue ValueWithUIOffset (UIOffset insets);

		// @property (readonly, nonatomic) CGPoint CGPointValue;
		[Export ("CGPointValue")]
		CGPoint CGPointValue { get; }

		// @property (readonly, nonatomic) CGVector CGVectorValue;
		[Export ("CGVectorValue")]
		CGVector CGVectorValue { get; }

		// @property (readonly, nonatomic) CGSize CGSizeValue;
		[Export ("CGSizeValue")]
		CGSize CGSizeValue { get; }

		// @property (readonly, nonatomic) CGRect CGRectValue;
		[Export ("CGRectValue")]
		CGRect CGRectValue { get; }

		// @property (readonly, nonatomic) CGAffineTransform CGAffineTransformValue;
		[Export ("CGAffineTransformValue")]
		CGAffineTransform CGAffineTransformValue { get; }

		// @property (readonly, nonatomic) UIEdgeInsets UIEdgeInsetsValue;
		[Export ("UIEdgeInsetsValue")]
		UIEdgeInsets UIEdgeInsetsValue { get; }

		// @property (readonly, nonatomic) NSDirectionalEdgeInsets directionalEdgeInsetsValue __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (11, 0), iOS (11, 0)]
		[Export ("directionalEdgeInsetsValue")]
		NSDirectionalEdgeInsets DirectionalEdgeInsetsValue { get; }

		// @property (readonly, nonatomic) UIOffset UIOffsetValue __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("UIOffsetValue")]
		UIOffset UIOffsetValue { get; }
	}

	// @interface UIGeometryKeyedCoding (NSCoder)
	[Category]
	[BaseType (typeof(NSCoder))]
	interface NSCoder_UIGeometryKeyedCoding
	{
		// -(void)encodeCGPoint:(CGPoint)point forKey:(NSString * _Nonnull)key;
		[Export ("encodeCGPoint:forKey:")]
		void EncodeCGPoint (CGPoint point, string key);

		// -(void)encodeCGVector:(CGVector)vector forKey:(NSString * _Nonnull)key;
		[Export ("encodeCGVector:forKey:")]
		void EncodeCGVector (CGVector vector, string key);

		// -(void)encodeCGSize:(CGSize)size forKey:(NSString * _Nonnull)key;
		[Export ("encodeCGSize:forKey:")]
		void EncodeCGSize (CGSize size, string key);

		// -(void)encodeCGRect:(CGRect)rect forKey:(NSString * _Nonnull)key;
		[Export ("encodeCGRect:forKey:")]
		void EncodeCGRect (CGRect rect, string key);

		// -(void)encodeCGAffineTransform:(CGAffineTransform)transform forKey:(NSString * _Nonnull)key;
		[Export ("encodeCGAffineTransform:forKey:")]
		void EncodeCGAffineTransform (CGAffineTransform transform, string key);

		// -(void)encodeUIEdgeInsets:(UIEdgeInsets)insets forKey:(NSString * _Nonnull)key;
		[Export ("encodeUIEdgeInsets:forKey:")]
		void EncodeUIEdgeInsets (UIEdgeInsets insets, string key);

		// -(void)encodeDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets forKey:(NSString * _Nonnull)key __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4,0), TV (11,0), iOS (11,0)]
		[Export ("encodeDirectionalEdgeInsets:forKey:")]
		void EncodeDirectionalEdgeInsets (NSDirectionalEdgeInsets insets, string key);

		// -(void)encodeUIOffset:(UIOffset)offset forKey:(NSString * _Nonnull)key __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("encodeUIOffset:forKey:")]
		void EncodeUIOffset (UIOffset offset, string key);

		// -(CGPoint)decodeCGPointForKey:(NSString * _Nonnull)key;
		[Export ("decodeCGPointForKey:")]
		CGPoint DecodeCGPointForKey (string key);

		// -(CGVector)decodeCGVectorForKey:(NSString * _Nonnull)key;
		[Export ("decodeCGVectorForKey:")]
		CGVector DecodeCGVectorForKey (string key);

		// -(CGSize)decodeCGSizeForKey:(NSString * _Nonnull)key;
		[Export ("decodeCGSizeForKey:")]
		CGSize DecodeCGSizeForKey (string key);

		// -(CGRect)decodeCGRectForKey:(NSString * _Nonnull)key;
		[Export ("decodeCGRectForKey:")]
		CGRect DecodeCGRectForKey (string key);

		// -(CGAffineTransform)decodeCGAffineTransformForKey:(NSString * _Nonnull)key;
		[Export ("decodeCGAffineTransformForKey:")]
		CGAffineTransform DecodeCGAffineTransformForKey (string key);

		// -(UIEdgeInsets)decodeUIEdgeInsetsForKey:(NSString * _Nonnull)key;
		[Export ("decodeUIEdgeInsetsForKey:")]
		UIEdgeInsets DecodeUIEdgeInsetsForKey (string key);

		// -(NSDirectionalEdgeInsets)decodeDirectionalEdgeInsetsForKey:(NSString * _Nonnull)key __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4,0), TV (11,0), iOS (11,0)]
		[Export ("decodeDirectionalEdgeInsetsForKey:")]
		NSDirectionalEdgeInsets DecodeDirectionalEdgeInsetsForKey (string key);

		// -(UIOffset)decodeUIOffsetForKey:(NSString * _Nonnull)key __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("decodeUIOffsetForKey:")]
		UIOffset DecodeUIOffsetForKey (string key);
	}

	// @interface UIBezierPath : NSObject <NSCopying, NSSecureCoding>
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UIBezierPath : INSCopying, INSSecureCoding
	{
		// +(instancetype _Nonnull)bezierPath;
		[Static]
		[Export ("bezierPath")]
		UIBezierPath BezierPath ();

		// +(instancetype _Nonnull)bezierPathWithRect:(CGRect)rect;
		[Static]
		[Export ("bezierPathWithRect:")]
		UIBezierPath BezierPathWithRect (CGRect rect);

		// +(instancetype _Nonnull)bezierPathWithOvalInRect:(CGRect)rect;
		[Static]
		[Export ("bezierPathWithOvalInRect:")]
		UIBezierPath BezierPathWithOvalInRect (CGRect rect);

		// +(instancetype _Nonnull)bezierPathWithRoundedRect:(CGRect)rect cornerRadius:(CGFloat)cornerRadius;
		[Static]
		[Export ("bezierPathWithRoundedRect:cornerRadius:")]
		UIBezierPath BezierPathWithRoundedRect (CGRect rect, nfloat cornerRadius);

		// +(instancetype _Nonnull)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;
		[Static]
		[Export ("bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:")]
		UIBezierPath BezierPathWithRoundedRect (CGRect rect, UIRectCorner corners, CGSize cornerRadii);

		// +(instancetype _Nonnull)bezierPathWithArcCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(int)clockwise;
		[Static]
		[Export ("bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:")]
		UIBezierPath BezierPathWithArcCenter (CGPoint center, nfloat radius, nfloat startAngle, nfloat endAngle, int clockwise);

		// +(instancetype _Nonnull)bezierPathWithCGPath:(CGPathRef _Nonnull)CGPath;
		[Static]
		[Export ("bezierPathWithCGPath:")]
		unsafe UIBezierPath BezierPathWithCGPath (CGPathRef* CGPath);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic) CGPathRef _Nonnull CGPath;
		[Export ("CGPath", ArgumentSemantic.Assign)]
		unsafe CGPathRef* CGPath { get; set; }

		// -(void)moveToPoint:(CGPoint)point;
		[Export ("moveToPoint:")]
		void MoveToPoint (CGPoint point);

		// -(void)addLineToPoint:(CGPoint)point;
		[Export ("addLineToPoint:")]
		void AddLineToPoint (CGPoint point);

		// -(void)addCurveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
		[Export ("addCurveToPoint:controlPoint1:controlPoint2:")]
		void AddCurveToPoint (CGPoint endPoint, CGPoint controlPoint1, CGPoint controlPoint2);

		// -(void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint;
		[Export ("addQuadCurveToPoint:controlPoint:")]
		void AddQuadCurveToPoint (CGPoint endPoint, CGPoint controlPoint);

		// -(void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(int)clockwise __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("addArcWithCenter:radius:startAngle:endAngle:clockwise:")]
		void AddArcWithCenter (CGPoint center, nfloat radius, nfloat startAngle, nfloat endAngle, int clockwise);

		// -(void)closePath;
		[Export ("closePath")]
		void ClosePath ();

		// -(void)removeAllPoints;
		[Export ("removeAllPoints")]
		void RemoveAllPoints ();

		// -(void)appendPath:(UIBezierPath * _Nonnull)bezierPath;
		[Export ("appendPath:")]
		void AppendPath (UIBezierPath bezierPath);

		// -(UIBezierPath * _Nonnull)bezierPathByReversingPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("bezierPathByReversingPath")]
		[Verify (MethodToProperty)]
		UIBezierPath BezierPathByReversingPath { get; }

		// -(void)applyTransform:(CGAffineTransform)transform;
		[Export ("applyTransform:")]
		void ApplyTransform (CGAffineTransform transform);

		// @property (readonly, getter = isEmpty) int empty;
		[Export ("empty")]
		int Empty { [Bind ("isEmpty")] get; }

		// @property (readonly, nonatomic) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @property (readonly, nonatomic) CGPoint currentPoint;
		[Export ("currentPoint")]
		CGPoint CurrentPoint { get; }

		// -(int)containsPoint:(CGPoint)point;
		[Export ("containsPoint:")]
		int ContainsPoint (CGPoint point);

		// @property (nonatomic) CGFloat lineWidth;
		[Export ("lineWidth")]
		nfloat LineWidth { get; set; }

		// @property (nonatomic) CGLineCap lineCapStyle;
		[Export ("lineCapStyle", ArgumentSemantic.Assign)]
		CGLineCap LineCapStyle { get; set; }

		// @property (nonatomic) CGLineJoin lineJoinStyle;
		[Export ("lineJoinStyle", ArgumentSemantic.Assign)]
		CGLineJoin LineJoinStyle { get; set; }

		// @property (nonatomic) CGFloat miterLimit;
		[Export ("miterLimit")]
		nfloat MiterLimit { get; set; }

		// @property (nonatomic) CGFloat flatness;
		[Export ("flatness")]
		nfloat Flatness { get; set; }

		// @property (nonatomic) int usesEvenOddFillRule;
		[Export ("usesEvenOddFillRule")]
		int UsesEvenOddFillRule { get; set; }

		// -(void)setLineDash:(const CGFloat * _Nullable)pattern count:(NSInteger)count phase:(CGFloat)phase;
		[Export ("setLineDash:count:phase:")]
		unsafe void SetLineDash ([NullAllowed] nfloat* pattern, nint count, nfloat phase);

		// -(void)getLineDash:(CGFloat * _Nullable)pattern count:(NSInteger * _Nullable)count phase:(CGFloat * _Nullable)phase;
		[Export ("getLineDash:count:phase:")]
		unsafe void GetLineDash ([NullAllowed] nfloat* pattern, [NullAllowed] nint* count, [NullAllowed] nfloat* phase);

		// -(void)fill;
		[Export ("fill")]
		void Fill ();

		// -(void)stroke;
		[Export ("stroke")]
		void Stroke ();

		// -(void)fillWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
		[Export ("fillWithBlendMode:alpha:")]
		void FillWithBlendMode (CGBlendMode blendMode, nfloat alpha);

		// -(void)strokeWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
		[Export ("strokeWithBlendMode:alpha:")]
		void StrokeWithBlendMode (CGBlendMode blendMode, nfloat alpha);

		// -(void)addClip;
		[Export ("addClip")]
		void AddClip ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CATransform3D CATransform3DIdentity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("CATransform3DIdentity", "__Internal")]
		CATransform3D CATransform3DIdentity { get; }
	}

	// @interface CATransform3DAdditions (NSValue)
	[Category]
	[BaseType (typeof(NSValue))]
	interface NSValue_CATransform3DAdditions
	{
		// +(NSValue * _Nonnull)valueWithCATransform3D:(CATransform3D)t;
		[Static]
		[Export ("valueWithCATransform3D:")]
		NSValue ValueWithCATransform3D (CATransform3D t);

		// @property (readonly) CATransform3D CATransform3DValue;
		[Export ("CATransform3DValue")]
		CATransform3D CATransform3DValue { get; }
	}

	// @protocol CAMediaTiming
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface CAMediaTiming
	{
		// @required @property CFTimeInterval beginTime;
		[Abstract]
		[Export ("beginTime")]
		double BeginTime { get; set; }

		// @required @property CFTimeInterval duration;
		[Abstract]
		[Export ("duration")]
		double Duration { get; set; }

		// @required @property float speed;
		[Abstract]
		[Export ("speed")]
		float Speed { get; set; }

		// @required @property CFTimeInterval timeOffset;
		[Abstract]
		[Export ("timeOffset")]
		double TimeOffset { get; set; }

		// @required @property float repeatCount;
		[Abstract]
		[Export ("repeatCount")]
		float RepeatCount { get; set; }

		// @required @property CFTimeInterval repeatDuration;
		[Abstract]
		[Export ("repeatDuration")]
		double RepeatDuration { get; set; }

		// @required @property int autoreverses;
		[Abstract]
		[Export ("autoreverses")]
		int Autoreverses { get; set; }

		// @required @property (copy) CAMediaTimingFillMode _Nonnull fillMode;
		[Abstract]
		[Export ("fillMode")]
		string FillMode { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAMediaTimingFillMode _Nonnull kCAFillModeForwards __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFillModeForwards", "__Internal")]
		NSString kCAFillModeForwards { get; }

		// extern const CAMediaTimingFillMode _Nonnull kCAFillModeBackwards __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFillModeBackwards", "__Internal")]
		NSString kCAFillModeBackwards { get; }

		// extern const CAMediaTimingFillMode _Nonnull kCAFillModeBoth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFillModeBoth", "__Internal")]
		NSString kCAFillModeBoth { get; }

		// extern const CAMediaTimingFillMode _Nonnull kCAFillModeRemoved __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFillModeRemoved", "__Internal")]
		NSString kCAFillModeRemoved { get; }
	}

	// @interface CALayer : NSObject <NSSecureCoding, CAMediaTiming>
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface CALayer : INSSecureCoding, ICAMediaTiming
	{
		// +(instancetype _Nonnull)layer;
		[Static]
		[Export ("layer")]
		CALayer Layer ();

		// -(instancetype _Nonnull)initWithLayer:(id _Nonnull)layer;
		[Export ("initWithLayer:")]
		IntPtr Constructor (NSObject layer);

		// -(instancetype _Nullable)presentationLayer;
		[Export ("presentationLayer")]
		[return: NullAllowed]
		CALayer PresentationLayer ();

		// -(instancetype _Nonnull)modelLayer;
		[Export ("modelLayer")]
		CALayer ModelLayer ();

		// +(id _Nullable)defaultValueForKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("defaultValueForKey:")]
		[return: NullAllowed]
		NSObject DefaultValueForKey (string key);

		// +(int)needsDisplayForKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("needsDisplayForKey:")]
		int NeedsDisplayForKey (string key);

		// -(int)shouldArchiveValueForKey:(NSString * _Nonnull)key;
		[Export ("shouldArchiveValueForKey:")]
		int ShouldArchiveValueForKey (string key);

		// @property CGRect bounds;
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; set; }

		// @property CGPoint position;
		[Export ("position", ArgumentSemantic.Assign)]
		CGPoint Position { get; set; }

		// @property CGFloat zPosition;
		[Export ("zPosition")]
		nfloat ZPosition { get; set; }

		// @property CGPoint anchorPoint;
		[Export ("anchorPoint", ArgumentSemantic.Assign)]
		CGPoint AnchorPoint { get; set; }

		// @property CGFloat anchorPointZ;
		[Export ("anchorPointZ")]
		nfloat AnchorPointZ { get; set; }

		// @property CATransform3D transform;
		[Export ("transform", ArgumentSemantic.Assign)]
		CATransform3D Transform { get; set; }

		// -(CGAffineTransform)affineTransform;
		// -(void)setAffineTransform:(CGAffineTransform)m;
		[Export ("affineTransform")]
		[Verify (MethodToProperty)]
		CGAffineTransform AffineTransform { get; set; }

		// @property CGRect frame;
		[Export ("frame", ArgumentSemantic.Assign)]
		CGRect Frame { get; set; }

		// @property (getter = isHidden) int hidden;
		[Export ("hidden")]
		int Hidden { [Bind ("isHidden")] get; set; }

		// @property (getter = isDoubleSided) int doubleSided;
		[Export ("doubleSided")]
		int DoubleSided { [Bind ("isDoubleSided")] get; set; }

		// @property (getter = isGeometryFlipped) int geometryFlipped;
		[Export ("geometryFlipped")]
		int GeometryFlipped { [Bind ("isGeometryFlipped")] get; set; }

		// -(int)contentsAreFlipped;
		[Export ("contentsAreFlipped")]
		int ContentsAreFlipped ();

		// @property (readonly) CALayer * _Nullable superlayer;
		[NullAllowed, Export ("superlayer")]
		CALayer Superlayer { get; }

		// -(void)removeFromSuperlayer;
		[Export ("removeFromSuperlayer")]
		void RemoveFromSuperlayer ();

		// @property (copy) NSArray<__kindof CALayer *> * _Nullable sublayers;
		[NullAllowed, Export ("sublayers", ArgumentSemantic.Copy)]
		CALayer[] Sublayers { get; set; }

		// -(void)addSublayer:(CALayer * _Nonnull)layer;
		[Export ("addSublayer:")]
		void AddSublayer (CALayer layer);

		// -(void)insertSublayer:(CALayer * _Nonnull)layer atIndex:(unsigned int)idx;
		[Export ("insertSublayer:atIndex:")]
		void InsertSublayer (CALayer layer, uint idx);

		// -(void)insertSublayer:(CALayer * _Nonnull)layer below:(CALayer * _Nullable)sibling;
		[Export ("insertSublayer:below:")]
		void InsertSublayer (CALayer layer, [NullAllowed] CALayer sibling);

		// -(void)insertSublayer:(CALayer * _Nonnull)layer above:(CALayer * _Nullable)sibling;
		[Export ("insertSublayer:above:")]
		void InsertSublayer (CALayer layer, [NullAllowed] CALayer sibling);

		// -(void)replaceSublayer:(CALayer * _Nonnull)oldLayer with:(CALayer * _Nonnull)newLayer;
		[Export ("replaceSublayer:with:")]
		void ReplaceSublayer (CALayer oldLayer, CALayer newLayer);

		// @property CATransform3D sublayerTransform;
		[Export ("sublayerTransform", ArgumentSemantic.Assign)]
		CATransform3D SublayerTransform { get; set; }

		// @property (strong) __kindof CALayer * _Nullable mask;
		[Export ("mask", ArgumentSemantic.Strong)]
		CALayer Mask { get; set; }

		// @property int masksToBounds;
		[Export ("masksToBounds")]
		int MasksToBounds { get; set; }

		// -(CGPoint)convertPoint:(CGPoint)p fromLayer:(CALayer * _Nullable)l;
		[Export ("convertPoint:fromLayer:")]
		CGPoint ConvertPoint (CGPoint p, [NullAllowed] CALayer l);

		// -(CGPoint)convertPoint:(CGPoint)p toLayer:(CALayer * _Nullable)l;
		[Export ("convertPoint:toLayer:")]
		CGPoint ConvertPoint (CGPoint p, [NullAllowed] CALayer l);

		// -(CGRect)convertRect:(CGRect)r fromLayer:(CALayer * _Nullable)l;
		[Export ("convertRect:fromLayer:")]
		CGRect ConvertRect (CGRect r, [NullAllowed] CALayer l);

		// -(CGRect)convertRect:(CGRect)r toLayer:(CALayer * _Nullable)l;
		[Export ("convertRect:toLayer:")]
		CGRect ConvertRect (CGRect r, [NullAllowed] CALayer l);

		// -(CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(CALayer * _Nullable)l;
		[Export ("convertTime:fromLayer:")]
		double ConvertTime (double t, [NullAllowed] CALayer l);

		// -(CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(CALayer * _Nullable)l;
		[Export ("convertTime:toLayer:")]
		double ConvertTime (double t, [NullAllowed] CALayer l);

		// -(__kindof CALayer * _Nullable)hitTest:(CGPoint)p;
		[Export ("hitTest:")]
		CALayer HitTest (CGPoint p);

		// -(int)containsPoint:(CGPoint)p;
		[Export ("containsPoint:")]
		int ContainsPoint (CGPoint p);

		// @property (strong) id _Nullable contents;
		[NullAllowed, Export ("contents", ArgumentSemantic.Strong)]
		NSObject Contents { get; set; }

		// @property CGRect contentsRect;
		[Export ("contentsRect", ArgumentSemantic.Assign)]
		CGRect ContentsRect { get; set; }

		// @property (copy) CALayerContentsGravity _Nonnull contentsGravity;
		[Export ("contentsGravity")]
		string ContentsGravity { get; set; }

		// @property CGFloat contentsScale __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (4, 0)]
		[Export ("contentsScale")]
		nfloat ContentsScale { get; set; }

		// @property CGRect contentsCenter;
		[Export ("contentsCenter", ArgumentSemantic.Assign)]
		CGRect ContentsCenter { get; set; }

		// @property (copy) CALayerContentsFormat _Nonnull contentsFormat __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 12), iOS (10, 0)]
		[Export ("contentsFormat")]
		string ContentsFormat { get; set; }

		// @property (copy) CALayerContentsFilter _Nonnull minificationFilter;
		[Export ("minificationFilter")]
		string MinificationFilter { get; set; }

		// @property (copy) CALayerContentsFilter _Nonnull magnificationFilter;
		[Export ("magnificationFilter")]
		string MagnificationFilter { get; set; }

		// @property float minificationFilterBias;
		[Export ("minificationFilterBias")]
		float MinificationFilterBias { get; set; }

		// @property (getter = isOpaque) int opaque;
		[Export ("opaque")]
		int Opaque { [Bind ("isOpaque")] get; set; }

		// -(void)display;
		[Export ("display")]
		void Display ();

		// -(void)setNeedsDisplay;
		[Export ("setNeedsDisplay")]
		void SetNeedsDisplay ();

		// -(void)setNeedsDisplayInRect:(CGRect)r;
		[Export ("setNeedsDisplayInRect:")]
		void SetNeedsDisplayInRect (CGRect r);

		// -(int)needsDisplay;
		[Export ("needsDisplay")]
		int NeedsDisplay ();

		// -(void)displayIfNeeded;
		[Export ("displayIfNeeded")]
		void DisplayIfNeeded ();

		// @property int needsDisplayOnBoundsChange;
		[Export ("needsDisplayOnBoundsChange")]
		int NeedsDisplayOnBoundsChange { get; set; }

		// @property int drawsAsynchronously __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 8), iOS (6, 0)]
		[Export ("drawsAsynchronously")]
		int DrawsAsynchronously { get; set; }

		// -(void)drawInContext:(CGContextRef _Nonnull)ctx;
		[Export ("drawInContext:")]
		unsafe void DrawInContext (CGContextRef* ctx);

		// -(void)renderInContext:(CGContextRef _Nonnull)ctx;
		[Export ("renderInContext:")]
		unsafe void RenderInContext (CGContextRef* ctx);

		// @property CAEdgeAntialiasingMask edgeAntialiasingMask;
		[Export ("edgeAntialiasingMask", ArgumentSemantic.Assign)]
		CAEdgeAntialiasingMask EdgeAntialiasingMask { get; set; }

		// @property int allowsEdgeAntialiasing __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (2, 0)]
		[Export ("allowsEdgeAntialiasing")]
		int AllowsEdgeAntialiasing { get; set; }

		// @property CGColorRef _Nullable backgroundColor;
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* BackgroundColor { get; set; }

		// @property CGFloat cornerRadius;
		[Export ("cornerRadius")]
		nfloat CornerRadius { get; set; }

		// @property CACornerMask maskedCorners __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("maskedCorners", ArgumentSemantic.Assign)]
		CACornerMask MaskedCorners { get; set; }

		// @property (copy) CALayerCornerCurve _Nonnull cornerCurve __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("cornerCurve")]
		string CornerCurve { get; set; }

		// +(CGFloat)cornerCurveExpansionFactor:(CALayerCornerCurve _Nonnull)curve __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
		[Static]
		[Export ("cornerCurveExpansionFactor:")]
		nfloat CornerCurveExpansionFactor (string curve);

		// @property CGFloat borderWidth;
		[Export ("borderWidth")]
		nfloat BorderWidth { get; set; }

		// @property CGColorRef _Nullable borderColor;
		[NullAllowed, Export ("borderColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* BorderColor { get; set; }

		// @property float opacity;
		[Export ("opacity")]
		float Opacity { get; set; }

		// @property int allowsGroupOpacity __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 10), iOS (2, 0)]
		[Export ("allowsGroupOpacity")]
		int AllowsGroupOpacity { get; set; }

		// @property (strong) id _Nullable compositingFilter;
		[NullAllowed, Export ("compositingFilter", ArgumentSemantic.Strong)]
		NSObject CompositingFilter { get; set; }

		// @property (copy) NSArray * _Nullable filters;
		[NullAllowed, Export ("filters", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] Filters { get; set; }

		// @property (copy) NSArray * _Nullable backgroundFilters;
		[NullAllowed, Export ("backgroundFilters", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] BackgroundFilters { get; set; }

		// @property int shouldRasterize;
		[Export ("shouldRasterize")]
		int ShouldRasterize { get; set; }

		// @property CGFloat rasterizationScale;
		[Export ("rasterizationScale")]
		nfloat RasterizationScale { get; set; }

		// @property CGColorRef _Nullable shadowColor;
		[NullAllowed, Export ("shadowColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* ShadowColor { get; set; }

		// @property float shadowOpacity;
		[Export ("shadowOpacity")]
		float ShadowOpacity { get; set; }

		// @property CGSize shadowOffset;
		[Export ("shadowOffset", ArgumentSemantic.Assign)]
		CGSize ShadowOffset { get; set; }

		// @property CGFloat shadowRadius;
		[Export ("shadowRadius")]
		nfloat ShadowRadius { get; set; }

		// @property CGPathRef _Nullable shadowPath;
		[NullAllowed, Export ("shadowPath", ArgumentSemantic.Assign)]
		unsafe CGPathRef* ShadowPath { get; set; }

		// -(CGSize)preferredFrameSize;
		[Export ("preferredFrameSize")]
		CGSize PreferredFrameSize ();

		// -(void)setNeedsLayout;
		[Export ("setNeedsLayout")]
		void SetNeedsLayout ();

		// -(int)needsLayout;
		[Export ("needsLayout")]
		int NeedsLayout ();

		// -(void)layoutIfNeeded;
		[Export ("layoutIfNeeded")]
		void LayoutIfNeeded ();

		// -(void)layoutSublayers;
		[Export ("layoutSublayers")]
		void LayoutSublayers ();

		// +(id<CAAction> _Nullable)defaultActionForKey:(NSString * _Nonnull)event;
		[Static]
		[Export ("defaultActionForKey:")]
		[return: NullAllowed]
		CAAction DefaultActionForKey (string @event);

		// -(id<CAAction> _Nullable)actionForKey:(NSString * _Nonnull)event;
		[Export ("actionForKey:")]
		[return: NullAllowed]
		CAAction ActionForKey (string @event);

		// @property (copy) NSDictionary<NSString *,id<CAAction>> * _Nullable actions;
		[NullAllowed, Export ("actions", ArgumentSemantic.Copy)]
		NSDictionary<NSString, CAAction> Actions { get; set; }

		// -(void)addAnimation:(CAAnimation * _Nonnull)anim forKey:(NSString * _Nullable)key;
		[Export ("addAnimation:forKey:")]
		void AddAnimation (CAAnimation anim, [NullAllowed] string key);

		// -(void)removeAllAnimations;
		[Export ("removeAllAnimations")]
		void RemoveAllAnimations ();

		// -(void)removeAnimationForKey:(NSString * _Nonnull)key;
		[Export ("removeAnimationForKey:")]
		void RemoveAnimationForKey (string key);

		// -(NSArray<NSString *> * _Nullable)animationKeys;
		[Export ("animationKeys")]
		[return: NullAllowed]
		string[] AnimationKeys ();

		// -(__kindof CAAnimation * _Nullable)animationForKey:(NSString * _Nonnull)key;
		[Export ("animationForKey:")]
		CAAnimation AnimationForKey (string key);

		// @property (copy) NSString * _Nullable name;
		[NullAllowed, Export ("name")]
		string Name { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		CALayerDelegate Delegate { get; set; }

		// @property (weak) id<CALayerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy) NSDictionary * _Nullable style;
		[NullAllowed, Export ("style", ArgumentSemantic.Copy)]
		NSDictionary Style { get; set; }
	}

	// @protocol CAAction
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface CAAction
	{
		// @required -(void)runActionForKey:(NSString * _Nonnull)event object:(id _Nonnull)anObject arguments:(NSDictionary * _Nullable)dict;
		[Abstract]
		[Export ("runActionForKey:object:arguments:")]
		void Object (string @event, NSObject anObject, [NullAllowed] NSDictionary dict);
	}

	// @interface CAActionAdditions (NSNull) <CAAction>
	[Category]
	[BaseType (typeof(NSNull))]
	interface NSNull_CAActionAdditions : ICAAction
	{
	}

	// @protocol CALayerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface CALayerDelegate
	{
		// @optional -(void)displayLayer:(CALayer * _Nonnull)layer;
		[Export ("displayLayer:")]
		void DisplayLayer (CALayer layer);

		// @optional -(void)drawLayer:(CALayer * _Nonnull)layer inContext:(CGContextRef _Nonnull)ctx;
		[Export ("drawLayer:inContext:")]
		unsafe void DrawLayer (CALayer layer, CGContextRef* ctx);

		// @optional -(void)layerWillDraw:(CALayer * _Nonnull)layer __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3,0), TV (10,0), Mac (10,12), iOS (10,0)]
		[Export ("layerWillDraw:")]
		void LayerWillDraw (CALayer layer);

		// @optional -(void)layoutSublayersOfLayer:(CALayer * _Nonnull)layer;
		[Export ("layoutSublayersOfLayer:")]
		void LayoutSublayersOfLayer (CALayer layer);

		// @optional -(id<CAAction> _Nullable)actionForLayer:(CALayer * _Nonnull)layer forKey:(NSString * _Nonnull)event;
		[Export ("actionForLayer:forKey:")]
		[return: NullAllowed]
		CAAction ActionForLayer (CALayer layer, string @event);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CALayerContentsGravity _Nonnull kCAGravityCenter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityCenter", "__Internal")]
		NSString kCAGravityCenter { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityTop __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityTop", "__Internal")]
		NSString kCAGravityTop { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityBottom __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityBottom", "__Internal")]
		NSString kCAGravityBottom { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityLeft __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityLeft", "__Internal")]
		NSString kCAGravityLeft { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityRight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityRight", "__Internal")]
		NSString kCAGravityRight { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityTopLeft __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityTopLeft", "__Internal")]
		NSString kCAGravityTopLeft { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityTopRight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityTopRight", "__Internal")]
		NSString kCAGravityTopRight { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityBottomLeft __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityBottomLeft", "__Internal")]
		NSString kCAGravityBottomLeft { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityBottomRight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityBottomRight", "__Internal")]
		NSString kCAGravityBottomRight { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityResize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityResize", "__Internal")]
		NSString kCAGravityResize { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityResizeAspect __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityResizeAspect", "__Internal")]
		NSString kCAGravityResizeAspect { get; }

		// extern const CALayerContentsGravity _Nonnull kCAGravityResizeAspectFill __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAGravityResizeAspectFill", "__Internal")]
		NSString kCAGravityResizeAspectFill { get; }

		// extern const CALayerContentsFormat _Nonnull kCAContentsFormatRGBA8Uint __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 12), iOS (10, 0)]
		[Field ("kCAContentsFormatRGBA8Uint", "__Internal")]
		NSString kCAContentsFormatRGBA8Uint { get; }

		// extern const CALayerContentsFormat _Nonnull kCAContentsFormatRGBA16Float __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 12), iOS (10, 0)]
		[Field ("kCAContentsFormatRGBA16Float", "__Internal")]
		NSString kCAContentsFormatRGBA16Float { get; }

		// extern const CALayerContentsFormat _Nonnull kCAContentsFormatGray8Uint __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), Mac (10, 12), iOS (10, 0)]
		[Field ("kCAContentsFormatGray8Uint", "__Internal")]
		NSString kCAContentsFormatGray8Uint { get; }

		// extern const CALayerContentsFilter _Nonnull kCAFilterNearest __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFilterNearest", "__Internal")]
		NSString kCAFilterNearest { get; }

		// extern const CALayerContentsFilter _Nonnull kCAFilterLinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAFilterLinear", "__Internal")]
		NSString kCAFilterLinear { get; }

		// extern const CALayerContentsFilter _Nonnull kCAFilterTrilinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAFilterTrilinear", "__Internal")]
		NSString kCAFilterTrilinear { get; }

		// extern const CALayerCornerCurve _Nonnull kCACornerCurveCircular __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Field ("kCACornerCurveCircular", "__Internal")]
		NSString kCACornerCurveCircular { get; }

		// extern const CALayerCornerCurve _Nonnull kCACornerCurveContinuous __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Field ("kCACornerCurveContinuous", "__Internal")]
		NSString kCACornerCurveContinuous { get; }

		// extern NSString *const _Nonnull kCAOnOrderIn __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAOnOrderIn", "__Internal")]
		NSString kCAOnOrderIn { get; }

		// extern NSString *const _Nonnull kCAOnOrderOut __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAOnOrderOut", "__Internal")]
		NSString kCAOnOrderOut { get; }

		// extern NSString *const _Nonnull kCATransition __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransition", "__Internal")]
		NSString kCATransition { get; }
	}

	// @interface CAAnimation : NSObject <NSSecureCoding, NSCopying, CAMediaTiming, CAAction>
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface CAAnimation : INSSecureCoding, INSCopying, ICAMediaTiming, ICAAction
	{
		// +(instancetype _Nonnull)animation;
		[Static]
		[Export ("animation")]
		CAAnimation Animation ();

		// +(id _Nullable)defaultValueForKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("defaultValueForKey:")]
		[return: NullAllowed]
		NSObject DefaultValueForKey (string key);

		// -(int)shouldArchiveValueForKey:(NSString * _Nonnull)key;
		[Export ("shouldArchiveValueForKey:")]
		int ShouldArchiveValueForKey (string key);

		// @property (strong) CAMediaTimingFunction * _Nullable timingFunction;
		[NullAllowed, Export ("timingFunction", ArgumentSemantic.Strong)]
		CAMediaTimingFunction TimingFunction { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		CAAnimationDelegate Delegate { get; set; }

		// @property (strong) id<CAAnimationDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Strong)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isRemovedOnCompletion) int removedOnCompletion;
		[Export ("removedOnCompletion")]
		int RemovedOnCompletion { [Bind ("isRemovedOnCompletion")] get; set; }
	}

	// @protocol CAAnimationDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface CAAnimationDelegate
	{
		// @optional -(void)animationDidStart:(CAAnimation * _Nonnull)anim;
		[Export ("animationDidStart:")]
		void AnimationDidStart (CAAnimation anim);

		// @optional -(void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(int)flag;
		[Export ("animationDidStop:finished:")]
		void AnimationDidStop (CAAnimation anim, int flag);
	}

	// @interface CAPropertyAnimation : CAAnimation
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CAAnimation))]
	interface CAPropertyAnimation
	{
		// +(instancetype _Nonnull)animationWithKeyPath:(NSString * _Nullable)path;
		[Static]
		[Export ("animationWithKeyPath:")]
		CAPropertyAnimation AnimationWithKeyPath ([NullAllowed] string path);

		// @property (copy) NSString * _Nullable keyPath;
		[NullAllowed, Export ("keyPath")]
		string KeyPath { get; set; }

		// @property (getter = isAdditive) int additive;
		[Export ("additive")]
		int Additive { [Bind ("isAdditive")] get; set; }

		// @property (getter = isCumulative) int cumulative;
		[Export ("cumulative")]
		int Cumulative { [Bind ("isCumulative")] get; set; }

		// @property (strong) CAValueFunction * _Nullable valueFunction;
		[NullAllowed, Export ("valueFunction", ArgumentSemantic.Strong)]
		CAValueFunction ValueFunction { get; set; }
	}

	// @interface CABasicAnimation : CAPropertyAnimation
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CAPropertyAnimation))]
	interface CABasicAnimation
	{
		// @property (strong) id _Nullable fromValue;
		[NullAllowed, Export ("fromValue", ArgumentSemantic.Strong)]
		NSObject FromValue { get; set; }

		// @property (strong) id _Nullable toValue;
		[NullAllowed, Export ("toValue", ArgumentSemantic.Strong)]
		NSObject ToValue { get; set; }

		// @property (strong) id _Nullable byValue;
		[NullAllowed, Export ("byValue", ArgumentSemantic.Strong)]
		NSObject ByValue { get; set; }
	}

	// @interface CAKeyframeAnimation : CAPropertyAnimation
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CAPropertyAnimation))]
	interface CAKeyframeAnimation
	{
		// @property (copy) NSArray * _Nullable values;
		[NullAllowed, Export ("values", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] Values { get; set; }

		// @property CGPathRef _Nullable path;
		[NullAllowed, Export ("path", ArgumentSemantic.Assign)]
		unsafe CGPathRef* Path { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable keyTimes;
		[NullAllowed, Export ("keyTimes", ArgumentSemantic.Copy)]
		NSNumber[] KeyTimes { get; set; }

		// @property (copy) NSArray<CAMediaTimingFunction *> * _Nullable timingFunctions;
		[NullAllowed, Export ("timingFunctions", ArgumentSemantic.Copy)]
		CAMediaTimingFunction[] TimingFunctions { get; set; }

		// @property (copy) CAAnimationCalculationMode _Nonnull calculationMode;
		[Export ("calculationMode")]
		string CalculationMode { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable tensionValues;
		[NullAllowed, Export ("tensionValues", ArgumentSemantic.Copy)]
		NSNumber[] TensionValues { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable continuityValues;
		[NullAllowed, Export ("continuityValues", ArgumentSemantic.Copy)]
		NSNumber[] ContinuityValues { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable biasValues;
		[NullAllowed, Export ("biasValues", ArgumentSemantic.Copy)]
		NSNumber[] BiasValues { get; set; }

		// @property (copy) CAAnimationRotationMode _Nullable rotationMode;
		[NullAllowed, Export ("rotationMode")]
		string RotationMode { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAAnimationCalculationMode _Nonnull kCAAnimationLinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAAnimationLinear", "__Internal")]
		NSString kCAAnimationLinear { get; }

		// extern const CAAnimationCalculationMode _Nonnull kCAAnimationDiscrete __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAAnimationDiscrete", "__Internal")]
		NSString kCAAnimationDiscrete { get; }

		// extern const CAAnimationCalculationMode _Nonnull kCAAnimationPaced __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAAnimationPaced", "__Internal")]
		NSString kCAAnimationPaced { get; }

		// extern const CAAnimationCalculationMode _Nonnull kCAAnimationCubic __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (4, 0)]
		[Field ("kCAAnimationCubic", "__Internal")]
		NSString kCAAnimationCubic { get; }

		// extern const CAAnimationCalculationMode _Nonnull kCAAnimationCubicPaced __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 7), iOS (4, 0)]
		[Field ("kCAAnimationCubicPaced", "__Internal")]
		NSString kCAAnimationCubicPaced { get; }

		// extern const CAAnimationRotationMode _Nonnull kCAAnimationRotateAuto __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAAnimationRotateAuto", "__Internal")]
		NSString kCAAnimationRotateAuto { get; }

		// extern const CAAnimationRotationMode _Nonnull kCAAnimationRotateAutoReverse __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAAnimationRotateAutoReverse", "__Internal")]
		NSString kCAAnimationRotateAutoReverse { get; }
	}

	// @interface CASpringAnimation : CABasicAnimation
	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
	[BaseType (typeof(CABasicAnimation))]
	interface CASpringAnimation
	{
		// @property CGFloat mass;
		[Export ("mass")]
		nfloat Mass { get; set; }

		// @property CGFloat stiffness;
		[Export ("stiffness")]
		nfloat Stiffness { get; set; }

		// @property CGFloat damping;
		[Export ("damping")]
		nfloat Damping { get; set; }

		// @property CGFloat initialVelocity;
		[Export ("initialVelocity")]
		nfloat InitialVelocity { get; set; }

		// @property (readonly) CFTimeInterval settlingDuration;
		[Export ("settlingDuration")]
		double SettlingDuration { get; }
	}

	// @interface CATransition : CAAnimation
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CAAnimation))]
	interface CATransition
	{
		// @property (copy) CATransitionType _Nonnull type;
		[Export ("type")]
		string Type { get; set; }

		// @property (copy) CATransitionSubtype _Nullable subtype;
		[NullAllowed, Export ("subtype")]
		string Subtype { get; set; }

		// @property float startProgress;
		[Export ("startProgress")]
		float StartProgress { get; set; }

		// @property float endProgress;
		[Export ("endProgress")]
		float EndProgress { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CATransitionType _Nonnull kCATransitionFade __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionFade", "__Internal")]
		NSString kCATransitionFade { get; }

		// extern const CATransitionType _Nonnull kCATransitionMoveIn __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionMoveIn", "__Internal")]
		NSString kCATransitionMoveIn { get; }

		// extern const CATransitionType _Nonnull kCATransitionPush __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionPush", "__Internal")]
		NSString kCATransitionPush { get; }

		// extern const CATransitionType _Nonnull kCATransitionReveal __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionReveal", "__Internal")]
		NSString kCATransitionReveal { get; }

		// extern const CATransitionSubtype _Nonnull kCATransitionFromRight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionFromRight", "__Internal")]
		NSString kCATransitionFromRight { get; }

		// extern const CATransitionSubtype _Nonnull kCATransitionFromLeft __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionFromLeft", "__Internal")]
		NSString kCATransitionFromLeft { get; }

		// extern const CATransitionSubtype _Nonnull kCATransitionFromTop __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionFromTop", "__Internal")]
		NSString kCATransitionFromTop { get; }

		// extern const CATransitionSubtype _Nonnull kCATransitionFromBottom __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransitionFromBottom", "__Internal")]
		NSString kCATransitionFromBottom { get; }
	}

	// @interface CAAnimationGroup : CAAnimation
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CAAnimation))]
	interface CAAnimationGroup
	{
		// @property (copy) NSArray<CAAnimation *> * _Nullable animations;
		[NullAllowed, Export ("animations", ArgumentSemantic.Copy)]
		CAAnimation[] Animations { get; set; }
	}

	// @interface CADisplayLink : NSObject
	[Watch (2,0), TV (9,0), NoMac, iOS (3,1)]
	[BaseType (typeof(NSObject))]
	interface CADisplayLink
	{
		// +(CADisplayLink * _Nonnull)displayLinkWithTarget:(id _Nonnull)target selector:(SEL _Nonnull)sel;
		[Static]
		[Export ("displayLinkWithTarget:selector:")]
		CADisplayLink DisplayLinkWithTarget (NSObject target, Selector sel);

		// -(void)addToRunLoop:(NSRunLoop * _Nonnull)runloop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("addToRunLoop:forMode:")]
		void AddToRunLoop (NSRunLoop runloop, string mode);

		// -(void)removeFromRunLoop:(NSRunLoop * _Nonnull)runloop forMode:(NSRunLoopMode _Nonnull)mode;
		[Export ("removeFromRunLoop:forMode:")]
		void RemoveFromRunLoop (NSRunLoop runloop, string mode);

		// -(void)invalidate;
		[Export ("invalidate")]
		void Invalidate ();

		// @property (readonly, nonatomic) CFTimeInterval timestamp;
		[Export ("timestamp")]
		double Timestamp { get; }

		// @property (readonly, nonatomic) CFTimeInterval duration;
		[Export ("duration")]
		double Duration { get; }

		// @property (readonly, nonatomic) CFTimeInterval targetTimestamp __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), iOS (10, 0)]
		[Export ("targetTimestamp")]
		double TargetTimestamp { get; }

		// @property (getter = isPaused, nonatomic) int paused;
		[Export ("paused")]
		int Paused { [Bind ("isPaused")] get; set; }

		// @property (nonatomic) NSInteger frameInterval __attribute__((availability(ios, introduced=3.1, deprecated=10.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 3, 1, message: "preferredFramesPerSecond")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "preferredFramesPerSecond")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "preferredFramesPerSecond")]
		[Deprecated (PlatformName.WatchOS, 3, 0, message: "preferredFramesPerSecond")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "preferredFramesPerSecond")]
		[Deprecated (PlatformName.TvOS, 10, 0, message: "preferredFramesPerSecond")]
		[Export ("frameInterval")]
		nint FrameInterval { get; set; }

		// @property (nonatomic) NSInteger preferredFramesPerSecond __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, introduced=10.0)));
		[Watch (3, 0), TV (10, 0), iOS (10, 0)]
		[Export ("preferredFramesPerSecond")]
		nint PreferredFramesPerSecond { get; set; }
	}

	// @interface EAGLSharegroup : NSObject
	[BaseType (typeof(NSObject))]
	interface EAGLSharegroup
	{
		// @property (copy, nonatomic) NSString * _Nullable debugLabel __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("debugLabel")]
		string DebugLabel { get; set; }
	}

	// @interface EAGLContext : NSObject
	[Introduced (PlatformName.iOS, 2, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Deprecated (PlatformName.iOS, 12, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Introduced (PlatformName.TvOS, 9, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Deprecated (PlatformName.TvOS, 12, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface EAGLContext
	{
		// -(instancetype _Nullable)initWithAPI:(EAGLRenderingAPI)api;
		[Export ("initWithAPI:")]
		IntPtr Constructor (EAGLRenderingAPI api);

		// -(instancetype _Nullable)initWithAPI:(EAGLRenderingAPI)api sharegroup:(EAGLSharegroup * _Nonnull)sharegroup __attribute__((objc_designated_initializer));
		[Export ("initWithAPI:sharegroup:")]
		[DesignatedInitializer]
		IntPtr Constructor (EAGLRenderingAPI api, EAGLSharegroup sharegroup);

		// +(int)setCurrentContext:(EAGLContext * _Nullable)context;
		[Static]
		[Export ("setCurrentContext:")]
		int SetCurrentContext ([NullAllowed] EAGLContext context);

		// +(EAGLContext * _Nullable)currentContext;
		[Static]
		[NullAllowed, Export ("currentContext")]
		[Verify (MethodToProperty)]
		EAGLContext CurrentContext { get; }

		// @property (readonly) EAGLRenderingAPI API;
		[Export ("API")]
		EAGLRenderingAPI API { get; }

		// @property (readonly) EAGLSharegroup * _Nonnull sharegroup;
		[Export ("sharegroup")]
		EAGLSharegroup Sharegroup { get; }

		// @property (copy, nonatomic) NSString * _Nullable debugLabel __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("debugLabel")]
		string DebugLabel { get; set; }

		// @property (getter = isMultiThreaded, nonatomic) int multiThreaded __attribute__((availability(ios, introduced=7.1)));
		[iOS (7, 1)]
		[Export ("multiThreaded")]
		int MultiThreaded { [Bind ("isMultiThreaded")] get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull kEAGLDrawablePropertyRetainedBacking __attribute__((visibility("default")));
		[Field ("kEAGLDrawablePropertyRetainedBacking", "__Internal")]
		NSString kEAGLDrawablePropertyRetainedBacking { get; }

		// extern NSString *const _Nonnull kEAGLDrawablePropertyColorFormat __attribute__((visibility("default")));
		[Field ("kEAGLDrawablePropertyColorFormat", "__Internal")]
		NSString kEAGLDrawablePropertyColorFormat { get; }

		// extern NSString *const _Nonnull kEAGLColorFormatRGBA8 __attribute__((visibility("default")));
		[Field ("kEAGLColorFormatRGBA8", "__Internal")]
		NSString kEAGLColorFormatRGBA8 { get; }

		// extern NSString *const _Nonnull kEAGLColorFormatRGB565 __attribute__((visibility("default")));
		[Field ("kEAGLColorFormatRGB565", "__Internal")]
		NSString kEAGLColorFormatRGB565 { get; }

		// extern NSString *const _Nonnull kEAGLColorFormatSRGBA8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kEAGLColorFormatSRGBA8", "__Internal")]
		NSString kEAGLColorFormatSRGBA8 { get; }
	}

	// @protocol EAGLDrawable
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface EAGLDrawable
	{
		// @required @property (copy) NSDictionary<NSString *,id> * _Nullable drawableProperties;
		[Abstract]
		[NullAllowed, Export ("drawableProperties", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> DrawableProperties { get; set; }
	}

	// @interface EAGLContextDrawableAdditions (EAGLContext)
	[Introduced (PlatformName.iOS, 2, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Deprecated (PlatformName.iOS, 12, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Introduced (PlatformName.TvOS, 9, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Deprecated (PlatformName.TvOS, 12, 0, message: "OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)")]
	[Category]
	[BaseType (typeof(EAGLContext))]
	interface EAGLContext_EAGLContextDrawableAdditions
	{
		// -(int)renderbufferStorage:(NSUInteger)target fromDrawable:(id<EAGLDrawable> _Nullable)drawable;
		[Export ("renderbufferStorage:fromDrawable:")]
		int RenderbufferStorage (nuint target, [NullAllowed] EAGLDrawable drawable);

		// -(int)presentRenderbuffer:(NSUInteger)target;
		[Export ("presentRenderbuffer:")]
		int PresentRenderbuffer (nuint target);

		// -(int)presentRenderbuffer:(NSUInteger)target atTime:(CFTimeInterval)presentationTime;
		[Export ("presentRenderbuffer:atTime:")]
		int PresentRenderbuffer (nuint target, double presentationTime);

		// -(int)presentRenderbuffer:(NSUInteger)target afterMinimumDuration:(CFTimeInterval)duration;
		[Export ("presentRenderbuffer:afterMinimumDuration:")]
		int PresentRenderbuffer (nuint target, double duration);
	}

	// @interface CAEAGLLayer : CALayer <EAGLDrawable>
	[Introduced (PlatformName.iOS, 2, 0, message: "OpenGLES is deprecated")]
	[Deprecated (PlatformName.iOS, 12, 0, message: "OpenGLES is deprecated")]
	[Introduced (PlatformName.WatchOS, 2, 0, message: "OpenGLES is deprecated")]
	[Deprecated (PlatformName.WatchOS, 5, 0, message: "OpenGLES is deprecated")]
	[Introduced (PlatformName.TvOS, 9, 0, message: "OpenGLES is deprecated")]
	[Deprecated (PlatformName.TvOS, 12, 0, message: "OpenGLES is deprecated")]
	[NoMac]
	[BaseType (typeof(CALayer))]
	interface CAEAGLLayer : IEAGLDrawable
	{
		// @property int presentsWithTransaction __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), iOS (9, 0)]
		[Export ("presentsWithTransaction")]
		int PresentsWithTransaction { get; set; }
	}

	// typedef void (^MTLDrawablePresentedHandler)(id<MTLDrawable> _Nonnull);
	delegate void MTLDrawablePresentedHandler (MTLDrawable arg0);

	// @protocol MTLDrawable <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Mac (10,11), iOS (8,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface MTLDrawable
	{
		// @required -(void)present;
		[Abstract]
		[Export ("present")]
		void Present ();

		// @required -(void)presentAtTime:(CFTimeInterval)presentationTime;
		[Abstract]
		[Export ("presentAtTime:")]
		void PresentAtTime (double presentationTime);

		// @required -(void)presentAfterMinimumDuration:(CFTimeInterval)duration __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[NoMac, iOS (10,3)]
		[Advice ("This API is not available when using UIKit on macOS."), Abstract]
		[Export ("presentAfterMinimumDuration:")]
		void PresentAfterMinimumDuration (double duration);

		// @required -(void)addPresentedHandler:(MTLDrawablePresentedHandler _Nonnull)block __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[NoMac, iOS (10,3)]
		[Advice ("This API is not available when using UIKit on macOS."), Abstract]
		[Export ("addPresentedHandler:")]
		void AddPresentedHandler (MTLDrawablePresentedHandler block);

		// @required @property (readonly, nonatomic) CFTimeInterval presentedTime __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[NoMac, iOS (10, 3)]
		[Advice ("This API is not available when using UIKit on macOS."), Abstract]
		[Export ("presentedTime")]
		double PresentedTime { get; }

		// @required @property (readonly, nonatomic) NSUInteger drawableID __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[NoMac, iOS (10, 3)]
		[Advice ("This API is not available when using UIKit on macOS."), Abstract]
		[Export ("drawableID")]
		nuint DrawableID { get; }
	}

	// @protocol CAMetalDrawable <MTLDrawable>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface CAMetalDrawable : IMTLDrawable
	{
		// @required @property (readonly) id<MTLTexture> _Nonnull texture;
		[Abstract]
		[Export ("texture")]
		MTLTexture Texture { get; }

		// @required @property (readonly) CAMetalLayer * _Nonnull layer;
		[Abstract]
		[Export ("layer")]
		CAMetalLayer Layer { get; }
	}

	// @interface CAMetalLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,11), iOS (8,0)]
	[BaseType (typeof(CALayer))]
	interface CAMetalLayer
	{
		// @property (retain) id<MTLDevice> _Nullable device;
		[NullAllowed, Export ("device", ArgumentSemantic.Retain)]
		MTLDevice Device { get; set; }

		// @property (readonly) id<MTLDevice> _Nullable preferredDevice __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[NullAllowed, Export ("preferredDevice")]
		MTLDevice PreferredDevice { get; }

		// @property MTLPixelFormat pixelFormat;
		[Export ("pixelFormat", ArgumentSemantic.Assign)]
		MTLPixelFormat PixelFormat { get; set; }

		// @property int framebufferOnly;
		[Export ("framebufferOnly")]
		int FramebufferOnly { get; set; }

		// @property CGSize drawableSize;
		[Export ("drawableSize", ArgumentSemantic.Assign)]
		CGSize DrawableSize { get; set; }

		// -(id<CAMetalDrawable> _Nullable)nextDrawable;
		[NullAllowed, Export ("nextDrawable")]
		[Verify (MethodToProperty)]
		CAMetalDrawable NextDrawable { get; }

		// @property NSUInteger maximumDrawableCount __attribute__((availability(macos, introduced=10.13.2))) __attribute__((availability(ios, introduced=11.2))) __attribute__((availability(watchos, introduced=4.2))) __attribute__((availability(tvos, introduced=11.2)));
		[Watch (4, 2), TV (11, 2), Mac (10, 13, 2), iOS (11, 2)]
		[Export ("maximumDrawableCount")]
		nuint MaximumDrawableCount { get; set; }

		// @property int presentsWithTransaction;
		[Export ("presentsWithTransaction")]
		int PresentsWithTransaction { get; set; }

		// @property CGColorSpaceRef _Nullable colorspace;
		[NullAllowed, Export ("colorspace", ArgumentSemantic.Assign)]
		unsafe CGColorSpaceRef* Colorspace { get; set; }

		// @property int allowsNextDrawableTimeout __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0))) __attribute__((availability(tvos, introduced=11.0)));
		[Watch (4, 0), TV (11, 0), Mac (10, 13), iOS (11, 0)]
		[Export ("allowsNextDrawableTimeout")]
		int AllowsNextDrawableTimeout { get; set; }
	}

	// @interface CAEmitterCell : NSObject <NSSecureCoding, CAMediaTiming>
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CAEmitterCell : INSSecureCoding, ICAMediaTiming
	{
		// +(instancetype _Nonnull)emitterCell;
		[Static]
		[Export ("emitterCell")]
		CAEmitterCell EmitterCell ();

		// +(id _Nullable)defaultValueForKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("defaultValueForKey:")]
		[return: NullAllowed]
		NSObject DefaultValueForKey (string key);

		// -(int)shouldArchiveValueForKey:(NSString * _Nonnull)key;
		[Export ("shouldArchiveValueForKey:")]
		int ShouldArchiveValueForKey (string key);

		// @property (copy) NSString * _Nullable name;
		[NullAllowed, Export ("name")]
		string Name { get; set; }

		// @property (getter = isEnabled) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property float birthRate;
		[Export ("birthRate")]
		float BirthRate { get; set; }

		// @property float lifetime;
		[Export ("lifetime")]
		float Lifetime { get; set; }

		// @property float lifetimeRange;
		[Export ("lifetimeRange")]
		float LifetimeRange { get; set; }

		// @property CGFloat emissionLatitude;
		[Export ("emissionLatitude")]
		nfloat EmissionLatitude { get; set; }

		// @property CGFloat emissionLongitude;
		[Export ("emissionLongitude")]
		nfloat EmissionLongitude { get; set; }

		// @property CGFloat emissionRange;
		[Export ("emissionRange")]
		nfloat EmissionRange { get; set; }

		// @property CGFloat velocity;
		[Export ("velocity")]
		nfloat Velocity { get; set; }

		// @property CGFloat velocityRange;
		[Export ("velocityRange")]
		nfloat VelocityRange { get; set; }

		// @property CGFloat xAcceleration;
		[Export ("xAcceleration")]
		nfloat XAcceleration { get; set; }

		// @property CGFloat yAcceleration;
		[Export ("yAcceleration")]
		nfloat YAcceleration { get; set; }

		// @property CGFloat zAcceleration;
		[Export ("zAcceleration")]
		nfloat ZAcceleration { get; set; }

		// @property CGFloat scale;
		[Export ("scale")]
		nfloat Scale { get; set; }

		// @property CGFloat scaleRange;
		[Export ("scaleRange")]
		nfloat ScaleRange { get; set; }

		// @property CGFloat scaleSpeed;
		[Export ("scaleSpeed")]
		nfloat ScaleSpeed { get; set; }

		// @property CGFloat spin;
		[Export ("spin")]
		nfloat Spin { get; set; }

		// @property CGFloat spinRange;
		[Export ("spinRange")]
		nfloat SpinRange { get; set; }

		// @property CGColorRef _Nullable color;
		[NullAllowed, Export ("color", ArgumentSemantic.Assign)]
		unsafe CGColorRef* Color { get; set; }

		// @property float redRange;
		[Export ("redRange")]
		float RedRange { get; set; }

		// @property float greenRange;
		[Export ("greenRange")]
		float GreenRange { get; set; }

		// @property float blueRange;
		[Export ("blueRange")]
		float BlueRange { get; set; }

		// @property float alphaRange;
		[Export ("alphaRange")]
		float AlphaRange { get; set; }

		// @property float redSpeed;
		[Export ("redSpeed")]
		float RedSpeed { get; set; }

		// @property float greenSpeed;
		[Export ("greenSpeed")]
		float GreenSpeed { get; set; }

		// @property float blueSpeed;
		[Export ("blueSpeed")]
		float BlueSpeed { get; set; }

		// @property float alphaSpeed;
		[Export ("alphaSpeed")]
		float AlphaSpeed { get; set; }

		// @property (strong) id _Nullable contents;
		[NullAllowed, Export ("contents", ArgumentSemantic.Strong)]
		NSObject Contents { get; set; }

		// @property CGRect contentsRect;
		[Export ("contentsRect", ArgumentSemantic.Assign)]
		CGRect ContentsRect { get; set; }

		// @property CGFloat contentsScale;
		[Export ("contentsScale")]
		nfloat ContentsScale { get; set; }

		// @property (copy) NSString * _Nonnull minificationFilter;
		[Export ("minificationFilter")]
		string MinificationFilter { get; set; }

		// @property (copy) NSString * _Nonnull magnificationFilter;
		[Export ("magnificationFilter")]
		string MagnificationFilter { get; set; }

		// @property float minificationFilterBias;
		[Export ("minificationFilterBias")]
		float MinificationFilterBias { get; set; }

		// @property (copy) NSArray<CAEmitterCell *> * _Nullable emitterCells;
		[NullAllowed, Export ("emitterCells", ArgumentSemantic.Copy)]
		CAEmitterCell[] EmitterCells { get; set; }

		// @property (copy) NSDictionary * _Nullable style;
		[NullAllowed, Export ("style", ArgumentSemantic.Copy)]
		NSDictionary Style { get; set; }
	}

	// @interface CAEmitterLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (5,0)]
	[BaseType (typeof(CALayer))]
	interface CAEmitterLayer
	{
		// @property (copy) NSArray<CAEmitterCell *> * _Nullable emitterCells;
		[NullAllowed, Export ("emitterCells", ArgumentSemantic.Copy)]
		CAEmitterCell[] EmitterCells { get; set; }

		// @property float birthRate;
		[Export ("birthRate")]
		float BirthRate { get; set; }

		// @property float lifetime;
		[Export ("lifetime")]
		float Lifetime { get; set; }

		// @property CGPoint emitterPosition;
		[Export ("emitterPosition", ArgumentSemantic.Assign)]
		CGPoint EmitterPosition { get; set; }

		// @property CGFloat emitterZPosition;
		[Export ("emitterZPosition")]
		nfloat EmitterZPosition { get; set; }

		// @property CGSize emitterSize;
		[Export ("emitterSize", ArgumentSemantic.Assign)]
		CGSize EmitterSize { get; set; }

		// @property CGFloat emitterDepth;
		[Export ("emitterDepth")]
		nfloat EmitterDepth { get; set; }

		// @property (copy) CAEmitterLayerEmitterShape _Nonnull emitterShape;
		[Export ("emitterShape")]
		string EmitterShape { get; set; }

		// @property (copy) CAEmitterLayerEmitterMode _Nonnull emitterMode;
		[Export ("emitterMode")]
		string EmitterMode { get; set; }

		// @property (copy) CAEmitterLayerRenderMode _Nonnull renderMode;
		[Export ("renderMode")]
		string RenderMode { get; set; }

		// @property int preservesDepth;
		[Export ("preservesDepth")]
		int PreservesDepth { get; set; }

		// @property float velocity;
		[Export ("velocity")]
		float Velocity { get; set; }

		// @property float scale;
		[Export ("scale")]
		float Scale { get; set; }

		// @property float spin;
		[Export ("spin")]
		float Spin { get; set; }

		// @property unsigned int seed;
		[Export ("seed")]
		uint Seed { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerPoint __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerPoint", "__Internal")]
		NSString kCAEmitterLayerPoint { get; }

		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerLine __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerLine", "__Internal")]
		NSString kCAEmitterLayerLine { get; }

		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerRectangle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerRectangle", "__Internal")]
		NSString kCAEmitterLayerRectangle { get; }

		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerCuboid __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerCuboid", "__Internal")]
		NSString kCAEmitterLayerCuboid { get; }

		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerCircle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerCircle", "__Internal")]
		NSString kCAEmitterLayerCircle { get; }

		// extern const CAEmitterLayerEmitterShape _Nonnull kCAEmitterLayerSphere __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerSphere", "__Internal")]
		NSString kCAEmitterLayerSphere { get; }

		// extern const CAEmitterLayerEmitterMode _Nonnull kCAEmitterLayerPoints __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerPoints", "__Internal")]
		NSString kCAEmitterLayerPoints { get; }

		// extern const CAEmitterLayerEmitterMode _Nonnull kCAEmitterLayerOutline __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerOutline", "__Internal")]
		NSString kCAEmitterLayerOutline { get; }

		// extern const CAEmitterLayerEmitterMode _Nonnull kCAEmitterLayerSurface __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerSurface", "__Internal")]
		NSString kCAEmitterLayerSurface { get; }

		// extern const CAEmitterLayerEmitterMode _Nonnull kCAEmitterLayerVolume __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerVolume", "__Internal")]
		NSString kCAEmitterLayerVolume { get; }

		// extern const CAEmitterLayerRenderMode _Nonnull kCAEmitterLayerUnordered __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerUnordered", "__Internal")]
		NSString kCAEmitterLayerUnordered { get; }

		// extern const CAEmitterLayerRenderMode _Nonnull kCAEmitterLayerOldestFirst __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerOldestFirst", "__Internal")]
		NSString kCAEmitterLayerOldestFirst { get; }

		// extern const CAEmitterLayerRenderMode _Nonnull kCAEmitterLayerOldestLast __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerOldestLast", "__Internal")]
		NSString kCAEmitterLayerOldestLast { get; }

		// extern const CAEmitterLayerRenderMode _Nonnull kCAEmitterLayerBackToFront __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerBackToFront", "__Internal")]
		NSString kCAEmitterLayerBackToFront { get; }

		// extern const CAEmitterLayerRenderMode _Nonnull kCAEmitterLayerAdditive __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (5, 0)]
		[Field ("kCAEmitterLayerAdditive", "__Internal")]
		NSString kCAEmitterLayerAdditive { get; }
	}

	// @interface CAMediaTimingFunction : NSObject <NSSecureCoding>
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface CAMediaTimingFunction : INSSecureCoding
	{
		// +(instancetype _Nonnull)functionWithName:(CAMediaTimingFunctionName _Nonnull)name;
		[Static]
		[Export ("functionWithName:")]
		CAMediaTimingFunction FunctionWithName (string name);

		// +(instancetype _Nonnull)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;
		[Static]
		[Export ("functionWithControlPoints::::")]
		CAMediaTimingFunction FunctionWithControlPoints (float c1x, float c1y, float c2x, float c2y);

		// -(instancetype _Nonnull)initWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;
		[Export ("initWithControlPoints::::")]
		IntPtr Constructor (float c1x, float c1y, float c2x, float c2y);

		// -(void)getControlPointAtIndex:(size_t)idx values:(float * _Nonnull)ptr;
		[Export ("getControlPointAtIndex:values:")]
		void GetControlPointAtIndex (nuint idx, float[] ptr);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAMediaTimingFunctionName _Nonnull kCAMediaTimingFunctionLinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAMediaTimingFunctionLinear", "__Internal")]
		NSString kCAMediaTimingFunctionLinear { get; }

		// extern const CAMediaTimingFunctionName _Nonnull kCAMediaTimingFunctionEaseIn __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAMediaTimingFunctionEaseIn", "__Internal")]
		NSString kCAMediaTimingFunctionEaseIn { get; }

		// extern const CAMediaTimingFunctionName _Nonnull kCAMediaTimingFunctionEaseOut __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAMediaTimingFunctionEaseOut", "__Internal")]
		NSString kCAMediaTimingFunctionEaseOut { get; }

		// extern const CAMediaTimingFunctionName _Nonnull kCAMediaTimingFunctionEaseInEaseOut __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAMediaTimingFunctionEaseInEaseOut", "__Internal")]
		NSString kCAMediaTimingFunctionEaseInEaseOut { get; }

		// extern const CAMediaTimingFunctionName _Nonnull kCAMediaTimingFunctionDefault __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAMediaTimingFunctionDefault", "__Internal")]
		NSString kCAMediaTimingFunctionDefault { get; }
	}

	// @interface CAGradientLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,0)]
	[BaseType (typeof(CALayer))]
	interface CAGradientLayer
	{
		// @property (copy) NSArray * _Nullable colors;
		[NullAllowed, Export ("colors", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] Colors { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable locations;
		[NullAllowed, Export ("locations", ArgumentSemantic.Copy)]
		NSNumber[] Locations { get; set; }

		// @property CGPoint startPoint;
		[Export ("startPoint", ArgumentSemantic.Assign)]
		CGPoint StartPoint { get; set; }

		// @property CGPoint endPoint;
		[Export ("endPoint", ArgumentSemantic.Assign)]
		CGPoint EndPoint { get; set; }

		// @property (copy) CAGradientLayerType _Nonnull type;
		[Export ("type")]
		string Type { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAGradientLayerType _Nonnull kCAGradientLayerAxial __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAGradientLayerAxial", "__Internal")]
		NSString kCAGradientLayerAxial { get; }

		// extern const CAGradientLayerType _Nonnull kCAGradientLayerRadial __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 2)]
		[Field ("kCAGradientLayerRadial", "__Internal")]
		NSString kCAGradientLayerRadial { get; }

		// extern const CAGradientLayerType _Nonnull kCAGradientLayerConic __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, introduced=12.0)));
		[Watch (5, 0), TV (12, 0), Mac (10, 14), iOS (12, 0)]
		[Field ("kCAGradientLayerConic", "__Internal")]
		NSString kCAGradientLayerConic { get; }
	}

	// @interface CAReplicatorLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,0)]
	[BaseType (typeof(CALayer))]
	interface CAReplicatorLayer
	{
		// @property NSInteger instanceCount;
		[Export ("instanceCount")]
		nint InstanceCount { get; set; }

		// @property int preservesDepth;
		[Export ("preservesDepth")]
		int PreservesDepth { get; set; }

		// @property CFTimeInterval instanceDelay;
		[Export ("instanceDelay")]
		double InstanceDelay { get; set; }

		// @property CATransform3D instanceTransform;
		[Export ("instanceTransform", ArgumentSemantic.Assign)]
		CATransform3D InstanceTransform { get; set; }

		// @property CGColorRef _Nullable instanceColor;
		[NullAllowed, Export ("instanceColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* InstanceColor { get; set; }

		// @property float instanceRedOffset;
		[Export ("instanceRedOffset")]
		float InstanceRedOffset { get; set; }

		// @property float instanceGreenOffset;
		[Export ("instanceGreenOffset")]
		float InstanceGreenOffset { get; set; }

		// @property float instanceBlueOffset;
		[Export ("instanceBlueOffset")]
		float InstanceBlueOffset { get; set; }

		// @property float instanceAlphaOffset;
		[Export ("instanceAlphaOffset")]
		float InstanceAlphaOffset { get; set; }
	}

	// @interface CAScrollLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CALayer))]
	interface CAScrollLayer
	{
		// -(void)scrollToPoint:(CGPoint)p;
		[Export ("scrollToPoint:")]
		void ScrollToPoint (CGPoint p);

		// -(void)scrollToRect:(CGRect)r;
		[Export ("scrollToRect:")]
		void ScrollToRect (CGRect r);

		// @property (copy) CAScrollLayerScrollMode _Nonnull scrollMode;
		[Export ("scrollMode")]
		string ScrollMode { get; set; }
	}

	// @interface CALayerScrolling (CALayer)
	[Category]
	[BaseType (typeof(CALayer))]
	interface CALayer_CALayerScrolling
	{
		// -(void)scrollPoint:(CGPoint)p;
		[Export ("scrollPoint:")]
		void ScrollPoint (CGPoint p);

		// -(void)scrollRectToVisible:(CGRect)r;
		[Export ("scrollRectToVisible:")]
		void ScrollRectToVisible (CGRect r);

		// @property (readonly) CGRect visibleRect;
		[Export ("visibleRect")]
		CGRect VisibleRect { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAScrollLayerScrollMode _Nonnull kCAScrollNone __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAScrollNone", "__Internal")]
		NSString kCAScrollNone { get; }

		// extern const CAScrollLayerScrollMode _Nonnull kCAScrollVertically __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAScrollVertically", "__Internal")]
		NSString kCAScrollVertically { get; }

		// extern const CAScrollLayerScrollMode _Nonnull kCAScrollHorizontally __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAScrollHorizontally", "__Internal")]
		NSString kCAScrollHorizontally { get; }

		// extern const CAScrollLayerScrollMode _Nonnull kCAScrollBoth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCAScrollBoth", "__Internal")]
		NSString kCAScrollBoth { get; }
	}

	// @interface CAShapeLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,0)]
	[BaseType (typeof(CALayer))]
	interface CAShapeLayer
	{
		// @property CGPathRef _Nullable path;
		[NullAllowed, Export ("path", ArgumentSemantic.Assign)]
		unsafe CGPathRef* Path { get; set; }

		// @property CGColorRef _Nullable fillColor;
		[NullAllowed, Export ("fillColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* FillColor { get; set; }

		// @property (copy) CAShapeLayerFillRule _Nonnull fillRule;
		[Export ("fillRule")]
		string FillRule { get; set; }

		// @property CGColorRef _Nullable strokeColor;
		[NullAllowed, Export ("strokeColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* StrokeColor { get; set; }

		// @property CGFloat strokeStart;
		[Export ("strokeStart")]
		nfloat StrokeStart { get; set; }

		// @property CGFloat strokeEnd;
		[Export ("strokeEnd")]
		nfloat StrokeEnd { get; set; }

		// @property CGFloat lineWidth;
		[Export ("lineWidth")]
		nfloat LineWidth { get; set; }

		// @property CGFloat miterLimit;
		[Export ("miterLimit")]
		nfloat MiterLimit { get; set; }

		// @property (copy) CAShapeLayerLineCap _Nonnull lineCap;
		[Export ("lineCap")]
		string LineCap { get; set; }

		// @property (copy) CAShapeLayerLineJoin _Nonnull lineJoin;
		[Export ("lineJoin")]
		string LineJoin { get; set; }

		// @property CGFloat lineDashPhase;
		[Export ("lineDashPhase")]
		nfloat LineDashPhase { get; set; }

		// @property (copy) NSArray<NSNumber *> * _Nullable lineDashPattern;
		[NullAllowed, Export ("lineDashPattern", ArgumentSemantic.Copy)]
		NSNumber[] LineDashPattern { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAShapeLayerFillRule _Nonnull kCAFillRuleNonZero __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAFillRuleNonZero", "__Internal")]
		NSString kCAFillRuleNonZero { get; }

		// extern const CAShapeLayerFillRule _Nonnull kCAFillRuleEvenOdd __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAFillRuleEvenOdd", "__Internal")]
		NSString kCAFillRuleEvenOdd { get; }

		// extern const CAShapeLayerLineJoin _Nonnull kCALineJoinMiter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineJoinMiter", "__Internal")]
		NSString kCALineJoinMiter { get; }

		// extern const CAShapeLayerLineJoin _Nonnull kCALineJoinRound __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineJoinRound", "__Internal")]
		NSString kCALineJoinRound { get; }

		// extern const CAShapeLayerLineJoin _Nonnull kCALineJoinBevel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineJoinBevel", "__Internal")]
		NSString kCALineJoinBevel { get; }

		// extern const CAShapeLayerLineCap _Nonnull kCALineCapButt __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineCapButt", "__Internal")]
		NSString kCALineCapButt { get; }

		// extern const CAShapeLayerLineCap _Nonnull kCALineCapRound __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineCapRound", "__Internal")]
		NSString kCALineCapRound { get; }

		// extern const CAShapeLayerLineCap _Nonnull kCALineCapSquare __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCALineCapSquare", "__Internal")]
		NSString kCALineCapSquare { get; }
	}

	// @interface CATextLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CALayer))]
	interface CATextLayer
	{
		// @property (copy) id _Nullable string;
		[NullAllowed, Export ("string", ArgumentSemantic.Copy)]
		NSObject String { get; set; }

		// @property CFTypeRef _Nullable font;
		[NullAllowed, Export ("font", ArgumentSemantic.Assign)]
		unsafe void* Font { get; set; }

		// @property CGFloat fontSize;
		[Export ("fontSize")]
		nfloat FontSize { get; set; }

		// @property CGColorRef _Nullable foregroundColor;
		[NullAllowed, Export ("foregroundColor", ArgumentSemantic.Assign)]
		unsafe CGColorRef* ForegroundColor { get; set; }

		// @property (getter = isWrapped) int wrapped;
		[Export ("wrapped")]
		int Wrapped { [Bind ("isWrapped")] get; set; }

		// @property (copy) CATextLayerTruncationMode _Nonnull truncationMode;
		[Export ("truncationMode")]
		string TruncationMode { get; set; }

		// @property (copy) CATextLayerAlignmentMode _Nonnull alignmentMode;
		[Export ("alignmentMode")]
		string AlignmentMode { get; set; }

		// @property int allowsFontSubpixelQuantization;
		[Export ("allowsFontSubpixelQuantization")]
		int AllowsFontSubpixelQuantization { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CATextLayerTruncationMode _Nonnull kCATruncationNone __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCATruncationNone", "__Internal")]
		NSString kCATruncationNone { get; }

		// extern const CATextLayerTruncationMode _Nonnull kCATruncationStart __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCATruncationStart", "__Internal")]
		NSString kCATruncationStart { get; }

		// extern const CATextLayerTruncationMode _Nonnull kCATruncationEnd __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCATruncationEnd", "__Internal")]
		NSString kCATruncationEnd { get; }

		// extern const CATextLayerTruncationMode _Nonnull kCATruncationMiddle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCATruncationMiddle", "__Internal")]
		NSString kCATruncationMiddle { get; }

		// extern const CATextLayerAlignmentMode _Nonnull kCAAlignmentNatural __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCAAlignmentNatural", "__Internal")]
		NSString kCAAlignmentNatural { get; }

		// extern const CATextLayerAlignmentMode _Nonnull kCAAlignmentLeft __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCAAlignmentLeft", "__Internal")]
		NSString kCAAlignmentLeft { get; }

		// extern const CATextLayerAlignmentMode _Nonnull kCAAlignmentRight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCAAlignmentRight", "__Internal")]
		NSString kCAAlignmentRight { get; }

		// extern const CATextLayerAlignmentMode _Nonnull kCAAlignmentCenter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCAAlignmentCenter", "__Internal")]
		NSString kCAAlignmentCenter { get; }

		// extern const CATextLayerAlignmentMode _Nonnull kCAAlignmentJustified __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (3, 2)]
		[Field ("kCAAlignmentJustified", "__Internal")]
		NSString kCAAlignmentJustified { get; }
	}

	// @interface CATiledLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(CALayer))]
	interface CATiledLayer
	{
		// +(CFTimeInterval)fadeDuration;
		[Static]
		[Export ("fadeDuration")]
		[Verify (MethodToProperty)]
		double FadeDuration { get; }

		// @property size_t levelsOfDetail;
		[Export ("levelsOfDetail")]
		nuint LevelsOfDetail { get; set; }

		// @property size_t levelsOfDetailBias;
		[Export ("levelsOfDetailBias")]
		nuint LevelsOfDetailBias { get; set; }

		// @property CGSize tileSize;
		[Export ("tileSize", ArgumentSemantic.Assign)]
		CGSize TileSize { get; set; }
	}

	// @interface CATransaction : NSObject
	[Watch (2,0), TV (9,0), Mac (10,5), iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface CATransaction
	{
		// +(void)begin;
		[Static]
		[Export ("begin")]
		void Begin ();

		// +(void)commit;
		[Static]
		[Export ("commit")]
		void Commit ();

		// +(void)flush;
		[Static]
		[Export ("flush")]
		void Flush ();

		// +(void)lock;
		[Static]
		[Export ("lock")]
		void Lock ();

		// +(void)unlock;
		[Static]
		[Export ("unlock")]
		void Unlock ();

		// +(CFTimeInterval)animationDuration;
		// +(void)setAnimationDuration:(CFTimeInterval)dur;
		[Static]
		[Export ("animationDuration")]
		[Verify (MethodToProperty)]
		double AnimationDuration { get; set; }

		// +(CAMediaTimingFunction * _Nullable)animationTimingFunction;
		[Static]
		[Export ("animationTimingFunction")]
		[return: NullAllowed]
		CAMediaTimingFunction AnimationTimingFunction ();

		// +(void)setAnimationTimingFunction:(CAMediaTimingFunction * _Nullable)function;
		[Static]
		[Export ("setAnimationTimingFunction:")]
		void SetAnimationTimingFunction ([NullAllowed] CAMediaTimingFunction function);

		// +(int)disableActions;
		[Static]
		[Export ("disableActions")]
		int DisableActions ();

		// +(void)setDisableActions:(int)flag;
		[Static]
		[Export ("setDisableActions:")]
		void SetDisableActions (int flag);

		// +(void (^ _Nullable)(void))completionBlock;
		[Static]
		[Export ("completionBlock")]
		[return: NullAllowed]
		Action CompletionBlock ();

		// +(void)setCompletionBlock:(void (^ _Nullable)(void))block;
		[Static]
		[Export ("setCompletionBlock:")]
		void SetCompletionBlock ([NullAllowed] Action block);

		// +(id _Nullable)valueForKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("valueForKey:")]
		[return: NullAllowed]
		NSObject ValueForKey (string key);

		// +(void)setValue:(id _Nullable)anObject forKey:(NSString * _Nonnull)key;
		[Static]
		[Export ("setValue:forKey:")]
		void SetValue ([NullAllowed] NSObject anObject, string key);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull kCATransactionAnimationDuration __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransactionAnimationDuration", "__Internal")]
		NSString kCATransactionAnimationDuration { get; }

		// extern NSString *const _Nonnull kCATransactionDisableActions __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=2.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 5), iOS (2, 0)]
		[Field ("kCATransactionDisableActions", "__Internal")]
		NSString kCATransactionDisableActions { get; }

		// extern NSString *const _Nonnull kCATransactionAnimationTimingFunction __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCATransactionAnimationTimingFunction", "__Internal")]
		NSString kCATransactionAnimationTimingFunction { get; }

		// extern NSString *const _Nonnull kCATransactionCompletionBlock __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (4, 0)]
		[Field ("kCATransactionCompletionBlock", "__Internal")]
		NSString kCATransactionCompletionBlock { get; }
	}

	// @interface CATransformLayer : CALayer
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,0)]
	[BaseType (typeof(CALayer))]
	interface CATransformLayer
	{
	}

	// @interface CAValueFunction : NSObject <NSSecureCoding>
	[Watch (2,0), TV (9,0), Mac (10,6), iOS (3,0)]
	[BaseType (typeof(NSObject))]
	interface CAValueFunction : INSSecureCoding
	{
		// +(instancetype _Nullable)functionWithName:(CAValueFunctionName _Nonnull)name;
		[Static]
		[Export ("functionWithName:")]
		[return: NullAllowed]
		CAValueFunction FunctionWithName (string name);

		// @property (readonly) CAValueFunctionName _Nonnull name;
		[Export ("name")]
		string Name { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CAValueFunctionName _Nonnull kCAValueFunctionRotateX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionRotateX", "__Internal")]
		NSString kCAValueFunctionRotateX { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionRotateY __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionRotateY", "__Internal")]
		NSString kCAValueFunctionRotateY { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionRotateZ __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionRotateZ", "__Internal")]
		NSString kCAValueFunctionRotateZ { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionScale __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionScale", "__Internal")]
		NSString kCAValueFunctionScale { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionScaleX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionScaleX", "__Internal")]
		NSString kCAValueFunctionScaleX { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionScaleY __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionScaleY", "__Internal")]
		NSString kCAValueFunctionScaleY { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionScaleZ __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionScaleZ", "__Internal")]
		NSString kCAValueFunctionScaleZ { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionTranslate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionTranslate", "__Internal")]
		NSString kCAValueFunctionTranslate { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionTranslateX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionTranslateX", "__Internal")]
		NSString kCAValueFunctionTranslateX { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionTranslateY __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionTranslateY", "__Internal")]
		NSString kCAValueFunctionTranslateY { get; }

		// extern const CAValueFunctionName _Nonnull kCAValueFunctionTranslateZ __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2, 0), TV (9, 0), Mac (10, 6), iOS (3, 0)]
		[Field ("kCAValueFunctionTranslateZ", "__Internal")]
		NSString kCAValueFunctionTranslateZ { get; }
	}

	// @interface UIEvent : NSObject
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIEvent
	{
		// @property (readonly, nonatomic) UIEventType type __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("type")]
		UIEventType Type { get; }

		// @property (readonly, nonatomic) UIEventSubtype subtype __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("subtype")]
		UIEventSubtype Subtype { get; }

		// @property (readonly, nonatomic) NSTimeInterval timestamp;
		[Export ("timestamp")]
		double Timestamp { get; }

		// @property (readonly, nonatomic) NSSet<UITouch *> * _Nullable allTouches;
		[NullAllowed, Export ("allTouches")]
		NSSet<UITouch> AllTouches { get; }

		// -(NSSet<UITouch *> * _Nullable)touchesForWindow:(UIWindow * _Nonnull)window;
		[Export ("touchesForWindow:")]
		[return: NullAllowed]
		NSSet<UITouch> TouchesForWindow (UIWindow window);

		// -(NSSet<UITouch *> * _Nullable)touchesForView:(UIView * _Nonnull)view;
		[Export ("touchesForView:")]
		[return: NullAllowed]
		NSSet<UITouch> TouchesForView (UIView view);

		// -(NSSet<UITouch *> * _Nullable)touchesForGestureRecognizer:(UIGestureRecognizer * _Nonnull)gesture __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("touchesForGestureRecognizer:")]
		[return: NullAllowed]
		NSSet<UITouch> TouchesForGestureRecognizer (UIGestureRecognizer gesture);

		// -(NSArray<UITouch *> * _Nullable)coalescedTouchesForTouch:(UITouch * _Nonnull)touch __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("coalescedTouchesForTouch:")]
		[return: NullAllowed]
		UITouch[] CoalescedTouchesForTouch (UITouch touch);

		// -(NSArray<UITouch *> * _Nullable)predictedTouchesForTouch:(UITouch * _Nonnull)touch __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("predictedTouchesForTouch:")]
		[return: NullAllowed]
		UITouch[] PredictedTouchesForTouch (UITouch touch);
	}

	// @interface UIMenuElement : NSObject <NSCopying, NSSecureCoding>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIMenuElement : INSCopying, INSSecureCoding
	{
		// @property (readonly, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; }

		// @property (readonly, nonatomic) UIImage * _Nullable image;
		[NullAllowed, Export ("image")]
		UIImage Image { get; }

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	// @interface UIMenu : UIMenuElement
	[iOS (13,0)]
	[BaseType (typeof(UIMenuElement))]
	[DisableDefaultCtor]
	interface UIMenu
	{
		// @property (readonly, nonatomic) UIMenuIdentifier _Nonnull identifier;
		[Export ("identifier")]
		string Identifier { get; }

		// @property (readonly, nonatomic) UIMenuOptions options;
		[Export ("options")]
		UIMenuOptions Options { get; }

		// @property (readonly, nonatomic) NSArray<UIMenuElement *> * _Nonnull children;
		[Export ("children")]
		UIMenuElement[] Children { get; }

		// +(UIMenu * _Nonnull)menuWithTitle:(NSString * _Nonnull)title children:(NSArray<UIMenuElement *> * _Nonnull)children __attribute__((availability(swift, unavailable)));
		[Unavailable (PlatformName.Swift)]
		[Static]
		[Export ("menuWithTitle:children:")]
		UIMenu MenuWithTitle (string title, UIMenuElement[] children);

		// +(UIMenu * _Nonnull)menuWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image identifier:(UIMenuIdentifier _Nullable)identifier options:(UIMenuOptions)options children:(NSArray<UIMenuElement *> * _Nonnull)children __attribute__((swift_private));
		[Static]
		[Export ("menuWithTitle:image:identifier:options:children:")]
		UIMenu MenuWithTitle (string title, [NullAllowed] UIImage image, [NullAllowed] string identifier, UIMenuOptions options, UIMenuElement[] children);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(UIMenu * _Nonnull)menuByReplacingChildren:(NSArray<UIMenuElement *> * _Nonnull)newChildren;
		[Export ("menuByReplacingChildren:")]
		UIMenu MenuByReplacingChildren (UIMenuElement[] newChildren);
	}

	// @interface UICommandAlternate : NSObject <NSCopying, NSSecureCoding>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UICommandAlternate : INSCopying, INSSecureCoding
	{
		// @property (readonly, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; }

		// @property (readonly, nonatomic) SEL _Nonnull action;
		[Export ("action")]
		Selector Action { get; }

		// @property (readonly, nonatomic) UIKeyModifierFlags modifierFlags;
		[Export ("modifierFlags")]
		UIKeyModifierFlags ModifierFlags { get; }

		// +(instancetype _Nonnull)alternateWithTitle:(NSString * _Nonnull)title action:(SEL _Nonnull)action modifierFlags:(UIKeyModifierFlags)modifierFlags;
		[Static]
		[Export ("alternateWithTitle:action:modifierFlags:")]
		UICommandAlternate AlternateWithTitle (string title, Selector action, UIKeyModifierFlags modifierFlags);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	// @interface UICommand : UIMenuElement
	[iOS (13,0)]
	[BaseType (typeof(UIMenuElement))]
	[DisableDefaultCtor]
	interface UICommand
	{
		// @property (copy, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Copy)]
		UIImage Image { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable discoverabilityTitle;
		[NullAllowed, Export ("discoverabilityTitle")]
		string DiscoverabilityTitle { get; set; }

		// @property (readonly, nonatomic) SEL _Nonnull action;
		[Export ("action")]
		Selector Action { get; }

		// @property (readonly, nonatomic) id _Nullable propertyList;
		[NullAllowed, Export ("propertyList")]
		NSObject PropertyList { get; }

		// @property (nonatomic) UIMenuElementAttributes attributes;
		[Export ("attributes", ArgumentSemantic.Assign)]
		UIMenuElementAttributes Attributes { get; set; }

		// @property (nonatomic) UIMenuElementState state;
		[Export ("state", ArgumentSemantic.Assign)]
		UIMenuElementState State { get; set; }

		// @property (readonly, nonatomic) NSArray<UICommandAlternate *> * _Nonnull alternates;
		[Export ("alternates")]
		UICommandAlternate[] Alternates { get; }

		// +(instancetype _Nonnull)commandWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image action:(SEL _Nonnull)action propertyList:(id _Nullable)propertyList __attribute__((swift_private));
		[Static]
		[Export ("commandWithTitle:image:action:propertyList:")]
		UICommand CommandWithTitle (string title, [NullAllowed] UIImage image, Selector action, [NullAllowed] NSObject propertyList);

		// +(instancetype _Nonnull)commandWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image action:(SEL _Nonnull)action propertyList:(id _Nullable)propertyList alternates:(NSArray<UICommandAlternate *> * _Nonnull)alternates __attribute__((swift_private));
		[Static]
		[Export ("commandWithTitle:image:action:propertyList:alternates:")]
		UICommand CommandWithTitle (string title, [NullAllowed] UIImage image, Selector action, [NullAllowed] NSObject propertyList, UICommandAlternate[] alternates);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIMenuIdentifier _Nonnull UIMenuApplication __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuApplication", "__Internal")]
		NSString UIMenuApplication { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuFile __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuFile", "__Internal")]
		NSString UIMenuFile { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuEdit __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuEdit", "__Internal")]
		NSString UIMenuEdit { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuView __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuView", "__Internal")]
		NSString UIMenuView { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuWindow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuWindow", "__Internal")]
		NSString UIMenuWindow { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuHelp __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuHelp", "__Internal")]
		NSString UIMenuHelp { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuAbout __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuAbout", "__Internal")]
		NSString UIMenuAbout { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuPreferences __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuPreferences", "__Internal")]
		NSString UIMenuPreferences { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuServices __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuServices", "__Internal")]
		NSString UIMenuServices { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuHide __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuHide", "__Internal")]
		NSString UIMenuHide { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuQuit __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuQuit", "__Internal")]
		NSString UIMenuQuit { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuNewScene __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuNewScene", "__Internal")]
		NSString UIMenuNewScene { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuClose __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuClose", "__Internal")]
		NSString UIMenuClose { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuPrint __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuPrint", "__Internal")]
		NSString UIMenuPrint { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuUndoRedo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuUndoRedo", "__Internal")]
		NSString UIMenuUndoRedo { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuStandardEdit __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuStandardEdit", "__Internal")]
		NSString UIMenuStandardEdit { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuFind __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuFind", "__Internal")]
		NSString UIMenuFind { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuReplace __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuReplace", "__Internal")]
		NSString UIMenuReplace { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuShare __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuShare", "__Internal")]
		NSString UIMenuShare { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuTextStyle __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuTextStyle", "__Internal")]
		NSString UIMenuTextStyle { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSpelling __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSpelling", "__Internal")]
		NSString UIMenuSpelling { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSpellingPanel __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSpellingPanel", "__Internal")]
		NSString UIMenuSpellingPanel { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSpellingOptions __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSpellingOptions", "__Internal")]
		NSString UIMenuSpellingOptions { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSubstitutions __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSubstitutions", "__Internal")]
		NSString UIMenuSubstitutions { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSubstitutionsPanel __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSubstitutionsPanel", "__Internal")]
		NSString UIMenuSubstitutionsPanel { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSubstitutionOptions __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSubstitutionOptions", "__Internal")]
		NSString UIMenuSubstitutionOptions { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuTransformations __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuTransformations", "__Internal")]
		NSString UIMenuTransformations { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuSpeech __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuSpeech", "__Internal")]
		NSString UIMenuSpeech { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuLookup __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuLookup", "__Internal")]
		NSString UIMenuLookup { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuLearn __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuLearn", "__Internal")]
		NSString UIMenuLearn { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuFormat __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuFormat", "__Internal")]
		NSString UIMenuFormat { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuFont __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuFont", "__Internal")]
		NSString UIMenuFont { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuTextSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuTextSize", "__Internal")]
		NSString UIMenuTextSize { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuTextColor __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuTextColor", "__Internal")]
		NSString UIMenuTextColor { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuTextStylePasteboard __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuTextStylePasteboard", "__Internal")]
		NSString UIMenuTextStylePasteboard { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuText __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuText", "__Internal")]
		NSString UIMenuText { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuWritingDirection __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuWritingDirection", "__Internal")]
		NSString UIMenuWritingDirection { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuAlignment __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuAlignment", "__Internal")]
		NSString UIMenuAlignment { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuToolbar __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuToolbar", "__Internal")]
		NSString UIMenuToolbar { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuFullscreen __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuFullscreen", "__Internal")]
		NSString UIMenuFullscreen { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuMinimizeAndZoom __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuMinimizeAndZoom", "__Internal")]
		NSString UIMenuMinimizeAndZoom { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuBringAllToFront __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuBringAllToFront", "__Internal")]
		NSString UIMenuBringAllToFront { get; }

		// extern const UIMenuIdentifier _Nonnull UIMenuRoot __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIMenuRoot", "__Internal")]
		NSString UIMenuRoot { get; }

		// extern NSString *const _Nonnull UICommandTagShare __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UICommandTagShare", "__Internal")]
		NSString UICommandTagShare { get; }
	}

	// @interface UIKeyCommand : UICommand
	[iOS (7,0)]
	[BaseType (typeof(UICommand))]
	interface UIKeyCommand
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (copy, nonatomic) NSString * _Nonnull title __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) UIImage * _Nullable image __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("image", ArgumentSemantic.Copy)]
		UIImage Image { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable discoverabilityTitle __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("discoverabilityTitle")]
		string DiscoverabilityTitle { get; set; }

		// @property (readonly, nonatomic) SEL _Nullable action;
		[NullAllowed, Export ("action")]
		Selector Action { get; }

		// @property (readonly, nonatomic) NSString * _Nullable input;
		[NullAllowed, Export ("input")]
		string Input { get; }

		// @property (readonly, nonatomic) UIKeyModifierFlags modifierFlags;
		[Export ("modifierFlags")]
		UIKeyModifierFlags ModifierFlags { get; }

		// @property (readonly, nonatomic) id _Nullable propertyList __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("propertyList")]
		NSObject PropertyList { get; }

		// @property (nonatomic) UIMenuElementAttributes attributes __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("attributes", ArgumentSemantic.Assign)]
		UIMenuElementAttributes Attributes { get; set; }

		// @property (nonatomic) UIMenuElementState state __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("state", ArgumentSemantic.Assign)]
		UIMenuElementState State { get; set; }

		// @property (readonly, nonatomic) NSArray<UICommandAlternate *> * _Nonnull alternates __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("alternates")]
		UICommandAlternate[] Alternates { get; }

		// +(instancetype _Nonnull)commandWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image action:(SEL _Nonnull)action input:(NSString * _Nonnull)input modifierFlags:(UIKeyModifierFlags)modifierFlags propertyList:(id _Nullable)propertyList __attribute__((swift_private));
		[Static]
		[Export ("commandWithTitle:image:action:input:modifierFlags:propertyList:")]
		UIKeyCommand CommandWithTitle (string title, [NullAllowed] UIImage image, Selector action, string input, UIKeyModifierFlags modifierFlags, [NullAllowed] NSObject propertyList);

		// +(instancetype _Nonnull)commandWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image action:(SEL _Nonnull)action input:(NSString * _Nonnull)input modifierFlags:(UIKeyModifierFlags)modifierFlags propertyList:(id _Nullable)propertyList alternates:(NSArray<UICommandAlternate *> * _Nonnull)alternates __attribute__((swift_private));
		[Static]
		[Export ("commandWithTitle:image:action:input:modifierFlags:propertyList:alternates:")]
		UIKeyCommand CommandWithTitle (string title, [NullAllowed] UIImage image, Selector action, string input, UIKeyModifierFlags modifierFlags, [NullAllowed] NSObject propertyList, UICommandAlternate[] alternates);

		// +(instancetype _Nonnull)keyCommandWithInput:(NSString * _Nonnull)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL _Nonnull)action;
		[Static]
		[Export ("keyCommandWithInput:modifierFlags:action:")]
		UIKeyCommand KeyCommandWithInput (string input, UIKeyModifierFlags modifierFlags, Selector action);

		// +(instancetype _Nonnull)keyCommandWithInput:(NSString * _Nonnull)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL _Nonnull)action discoverabilityTitle:(NSString * _Nonnull)discoverabilityTitle __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Static]
		[Export ("keyCommandWithInput:modifierFlags:action:discoverabilityTitle:")]
		UIKeyCommand KeyCommandWithInput (string input, UIKeyModifierFlags modifierFlags, Selector action, string discoverabilityTitle);
	}

	// @protocol UIPasteConfigurationSupporting <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIPasteConfigurationSupporting
	{
		// @required @property (copy, nonatomic) UIPasteConfiguration * _Nullable pasteConfiguration;
		[Abstract]
		[NullAllowed, Export ("pasteConfiguration", ArgumentSemantic.Copy)]
		UIPasteConfiguration PasteConfiguration { get; set; }

		// @optional -(void)pasteItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders;
		[Export ("pasteItemProviders:")]
		void PasteItemProviders (NSItemProvider[] itemProviders);

		// @optional -(int)canPasteItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders;
		[Export ("canPasteItemProviders:")]
		int CanPasteItemProviders (NSItemProvider[] itemProviders);
	}

	// @protocol UIUserActivityRestoring <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (8,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIUserActivityRestoring
	{
		// @required -(void)restoreUserActivityState:(NSUserActivity * _Nonnull)userActivity;
		[Abstract]
		[Export ("restoreUserActivityState:")]
		void RestoreUserActivityState (NSUserActivity userActivity);
	}

	// typedef NSDictionary<NSAttributedStringKey,id> * _Nonnull (^UITextAttributesConversionHandler)(NSDictionary<NSAttributedStringKey,id> * _Nonnull);
	delegate NSDictionary<NSString, NSObject> UITextAttributesConversionHandler (NSDictionary<NSString, NSObject> arg0);

	// @protocol UIResponderStandardEditActions <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIResponderStandardEditActions
	{
		// @optional -(void)cut:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("cut:")]
		void Cut ([NullAllowed] NSObject sender);

		// @optional -(void)copy:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("copy:")]
		void Copy ([NullAllowed] NSObject sender);

		// @optional -(void)paste:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("paste:")]
		void Paste ([NullAllowed] NSObject sender);

		// @optional -(void)select:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("select:")]
		void Select ([NullAllowed] NSObject sender);

		// @optional -(void)selectAll:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("selectAll:")]
		void SelectAll ([NullAllowed] NSObject sender);

		// @optional -(void)delete:(id _Nullable)sender __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("delete:")]
		void Delete ([NullAllowed] NSObject sender);

		// @optional -(void)makeTextWritingDirectionLeftToRight:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("makeTextWritingDirectionLeftToRight:")]
		void MakeTextWritingDirectionLeftToRight ([NullAllowed] NSObject sender);

		// @optional -(void)makeTextWritingDirectionRightToLeft:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("makeTextWritingDirectionRightToLeft:")]
		void MakeTextWritingDirectionRightToLeft ([NullAllowed] NSObject sender);

		// @optional -(void)toggleBoldface:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("toggleBoldface:")]
		void ToggleBoldface ([NullAllowed] NSObject sender);

		// @optional -(void)toggleItalics:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("toggleItalics:")]
		void ToggleItalics ([NullAllowed] NSObject sender);

		// @optional -(void)toggleUnderline:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("toggleUnderline:")]
		void ToggleUnderline ([NullAllowed] NSObject sender);

		// @optional -(void)increaseSize:(id _Nullable)sender __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("increaseSize:")]
		void IncreaseSize ([NullAllowed] NSObject sender);

		// @optional -(void)decreaseSize:(id _Nullable)sender __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("decreaseSize:")]
		void DecreaseSize ([NullAllowed] NSObject sender);

		// @optional -(void)updateTextAttributesWithConversionHandler:(UITextAttributesConversionHandler _Nonnull)conversionHandler __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("updateTextAttributesWithConversionHandler:")]
		void UpdateTextAttributesWithConversionHandler (UITextAttributesConversionHandler conversionHandler);
	}

	// @interface UIResponder : NSObject <UIResponderStandardEditActions>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIResponder : IUIResponderStandardEditActions
	{
		// @property (readonly, nonatomic) UIResponder * _Nullable nextResponder;
		[NullAllowed, Export ("nextResponder")]
		UIResponder NextResponder { get; }

		// @property (readonly, nonatomic) int canBecomeFirstResponder;
		[Export ("canBecomeFirstResponder")]
		int CanBecomeFirstResponder { get; }

		// -(int)becomeFirstResponder;
		[Export ("becomeFirstResponder")]
		[Verify (MethodToProperty)]
		int BecomeFirstResponder { get; }

		// @property (readonly, nonatomic) int canResignFirstResponder;
		[Export ("canResignFirstResponder")]
		int CanResignFirstResponder { get; }

		// -(int)resignFirstResponder;
		[Export ("resignFirstResponder")]
		[Verify (MethodToProperty)]
		int ResignFirstResponder { get; }

		// @property (readonly, nonatomic) int isFirstResponder;
		[Export ("isFirstResponder")]
		int IsFirstResponder { get; }

		// -(void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
		[Export ("touchesBegan:withEvent:")]
		void TouchesBegan (NSSet<UITouch> touches, [NullAllowed] UIEvent @event);

		// -(void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
		[Export ("touchesMoved:withEvent:")]
		void TouchesMoved (NSSet<UITouch> touches, [NullAllowed] UIEvent @event);

		// -(void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
		[Export ("touchesEnded:withEvent:")]
		void TouchesEnded (NSSet<UITouch> touches, [NullAllowed] UIEvent @event);

		// -(void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
		[Export ("touchesCancelled:withEvent:")]
		void TouchesCancelled (NSSet<UITouch> touches, [NullAllowed] UIEvent @event);

		// -(void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> * _Nonnull)touches __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("touchesEstimatedPropertiesUpdated:")]
		void TouchesEstimatedPropertiesUpdated (NSSet<UITouch> touches);

		// -(void)pressesBegan:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nullable)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesBegan:withEvent:")]
		void PressesBegan (NSSet<UIPress> presses, [NullAllowed] UIPressesEvent @event);

		// -(void)pressesChanged:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nullable)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesChanged:withEvent:")]
		void PressesChanged (NSSet<UIPress> presses, [NullAllowed] UIPressesEvent @event);

		// -(void)pressesEnded:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nullable)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesEnded:withEvent:")]
		void PressesEnded (NSSet<UIPress> presses, [NullAllowed] UIPressesEvent @event);

		// -(void)pressesCancelled:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nullable)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesCancelled:withEvent:")]
		void PressesCancelled (NSSet<UIPress> presses, [NullAllowed] UIPressesEvent @event);

		// -(void)motionBegan:(UIEventSubtype)motion withEvent:(UIEvent * _Nullable)event __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("motionBegan:withEvent:")]
		void MotionBegan (UIEventSubtype motion, [NullAllowed] UIEvent @event);

		// -(void)motionEnded:(UIEventSubtype)motion withEvent:(UIEvent * _Nullable)event __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("motionEnded:withEvent:")]
		void MotionEnded (UIEventSubtype motion, [NullAllowed] UIEvent @event);

		// -(void)motionCancelled:(UIEventSubtype)motion withEvent:(UIEvent * _Nullable)event __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("motionCancelled:withEvent:")]
		void MotionCancelled (UIEventSubtype motion, [NullAllowed] UIEvent @event);

		// -(void)remoteControlReceivedWithEvent:(UIEvent * _Nullable)event __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("remoteControlReceivedWithEvent:")]
		void RemoteControlReceivedWithEvent ([NullAllowed] UIEvent @event);

		// -(int)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("canPerformAction:withSender:")]
		int CanPerformAction (Selector action, [NullAllowed] NSObject sender);

		// -(id _Nullable)targetForAction:(SEL _Nonnull)action withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("targetForAction:withSender:")]
		[return: NullAllowed]
		NSObject TargetForAction (Selector action, [NullAllowed] NSObject sender);

		// -(void)buildMenuWithBuilder:(id<UIMenuBuilder> _Nonnull)builder;
		[Export ("buildMenuWithBuilder:")]
		void BuildMenuWithBuilder (UIMenuBuilder builder);

		// -(void)validateCommand:(UICommand * _Nonnull)command;
		[Export ("validateCommand:")]
		void ValidateCommand (UICommand command);

		// @property (readonly, nonatomic) NSUndoManager * _Nullable undoManager __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("undoManager")]
		NSUndoManager UndoManager { get; }

		// @property (readonly, nonatomic) UIEditingInteractionConfiguration editingInteractionConfiguration __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("editingInteractionConfiguration")]
		UIEditingInteractionConfiguration EditingInteractionConfiguration { get; }
	}

	// @interface UIResponderKeyCommands (UIResponder)
	[Category]
	[BaseType (typeof(UIResponder))]
	interface UIResponder_UIResponderKeyCommands
	{
		// @property (readonly, nonatomic) NSArray<UIKeyCommand *> * _Nullable keyCommands __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("keyCommands")]
		UIKeyCommand[] KeyCommands { get; }
	}

	// @interface UIResponderInputViewAdditions (UIResponder)
	[Category]
	[BaseType (typeof(UIResponder))]
	interface UIResponder_UIResponderInputViewAdditions
	{
		// @property (readonly, nonatomic, strong) __kindof UIView * _Nullable inputView __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("inputView", ArgumentSemantic.Strong)]
		UIView InputView { get; }

		// @property (readonly, nonatomic, strong) __kindof UIView * _Nullable inputAccessoryView __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("inputAccessoryView", ArgumentSemantic.Strong)]
		UIView InputAccessoryView { get; }

		// @property (readonly, nonatomic, strong) UITextInputAssistantItem * _Nonnull inputAssistantItem __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (9, 0)]
		[Export ("inputAssistantItem", ArgumentSemantic.Strong)]
		UITextInputAssistantItem InputAssistantItem { get; }

		// @property (readonly, nonatomic, strong) UIInputViewController * _Nullable inputViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("inputViewController", ArgumentSemantic.Strong)]
		UIInputViewController InputViewController { get; }

		// @property (readonly, nonatomic, strong) UIInputViewController * _Nullable inputAccessoryViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("inputAccessoryViewController", ArgumentSemantic.Strong)]
		UIInputViewController InputAccessoryViewController { get; }

		// @property (readonly, nonatomic, strong) UITextInputMode * _Nullable textInputMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("textInputMode", ArgumentSemantic.Strong)]
		UITextInputMode TextInputMode { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nullable textInputContextIdentifier __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("textInputContextIdentifier", ArgumentSemantic.Strong)]
		string TextInputContextIdentifier { get; }

		// +(void)clearTextInputContextIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("clearTextInputContextIdentifier:")]
		void ClearTextInputContextIdentifier (string identifier);

		// -(void)reloadInputViews __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("reloadInputViews")]
		void ReloadInputViews ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UIKeyInputUpArrow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIKeyInputUpArrow", "__Internal")]
		NSString UIKeyInputUpArrow { get; }

		// extern NSString *const _Nonnull UIKeyInputDownArrow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIKeyInputDownArrow", "__Internal")]
		NSString UIKeyInputDownArrow { get; }

		// extern NSString *const _Nonnull UIKeyInputLeftArrow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIKeyInputLeftArrow", "__Internal")]
		NSString UIKeyInputLeftArrow { get; }

		// extern NSString *const _Nonnull UIKeyInputRightArrow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIKeyInputRightArrow", "__Internal")]
		NSString UIKeyInputRightArrow { get; }

		// extern NSString *const _Nonnull UIKeyInputEscape __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIKeyInputEscape", "__Internal")]
		NSString UIKeyInputEscape { get; }
	}

	// @interface ActivityContinuation (UIResponder) <UIUserActivityRestoring>
	[Category]
	[BaseType (typeof(UIResponder))]
	interface UIResponder_ActivityContinuation : IUIUserActivityRestoring
	{
		// @property (nonatomic, strong) NSUserActivity * _Nullable userActivity __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("userActivity", ArgumentSemantic.Strong)]
		NSUserActivity UserActivity { get; set; }

		// -(void)updateUserActivityState:(NSUserActivity * _Nonnull)activity __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("updateUserActivityState:")]
		void UpdateUserActivityState (NSUserActivity activity);

		// -(void)restoreUserActivityState:(NSUserActivity * _Nonnull)activity __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("restoreUserActivityState:")]
		void RestoreUserActivityState (NSUserActivity activity);
	}

	// @interface UIPasteConfigurationSupporting (UIResponder) <UIPasteConfigurationSupporting>
	[Category]
	[BaseType (typeof(UIResponder))]
	interface UIResponder_UIPasteConfigurationSupporting : IUIPasteConfigurationSupporting
	{
	}

	// @interface CIVector : NSObject <NSCopying, NSSecureCoding>
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIVector : INSCopying, INSSecureCoding
	{
		// +(instancetype _Nonnull)vectorWithValues:(const CGFloat * _Nonnull)values count:(size_t)count;
		[Static]
		[Export ("vectorWithValues:count:")]
		unsafe CIVector VectorWithValues (nfloat* values, nuint count);

		// +(instancetype _Nonnull)vectorWithX:(CGFloat)x;
		[Static]
		[Export ("vectorWithX:")]
		CIVector VectorWithX (nfloat x);

		// +(instancetype _Nonnull)vectorWithX:(CGFloat)x Y:(CGFloat)y;
		[Static]
		[Export ("vectorWithX:Y:")]
		CIVector VectorWithX (nfloat x, nfloat y);

		// +(instancetype _Nonnull)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
		[Static]
		[Export ("vectorWithX:Y:Z:")]
		CIVector VectorWithX (nfloat x, nfloat y, nfloat z);

		// +(instancetype _Nonnull)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;
		[Static]
		[Export ("vectorWithX:Y:Z:W:")]
		CIVector VectorWithX (nfloat x, nfloat y, nfloat z, nfloat w);

		// +(instancetype _Nonnull)vectorWithCGPoint:(CGPoint)p __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("vectorWithCGPoint:")]
		CIVector VectorWithCGPoint (CGPoint p);

		// +(instancetype _Nonnull)vectorWithCGRect:(CGRect)r __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("vectorWithCGRect:")]
		CIVector VectorWithCGRect (CGRect r);

		// +(instancetype _Nonnull)vectorWithCGAffineTransform:(CGAffineTransform)t __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("vectorWithCGAffineTransform:")]
		CIVector VectorWithCGAffineTransform (CGAffineTransform t);

		// +(instancetype _Nonnull)vectorWithString:(NSString * _Nonnull)representation;
		[Static]
		[Export ("vectorWithString:")]
		CIVector VectorWithString (string representation);

		// -(instancetype _Nonnull)initWithValues:(const CGFloat * _Nonnull)values count:(size_t)count __attribute__((objc_designated_initializer));
		[Export ("initWithValues:count:")]
		[DesignatedInitializer]
		unsafe IntPtr Constructor (nfloat* values, nuint count);

		// -(instancetype _Nonnull)initWithX:(CGFloat)x;
		[Export ("initWithX:")]
		IntPtr Constructor (nfloat x);

		// -(instancetype _Nonnull)initWithX:(CGFloat)x Y:(CGFloat)y;
		[Export ("initWithX:Y:")]
		IntPtr Constructor (nfloat x, nfloat y);

		// -(instancetype _Nonnull)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
		[Export ("initWithX:Y:Z:")]
		IntPtr Constructor (nfloat x, nfloat y, nfloat z);

		// -(instancetype _Nonnull)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;
		[Export ("initWithX:Y:Z:W:")]
		IntPtr Constructor (nfloat x, nfloat y, nfloat z, nfloat w);

		// -(instancetype _Nonnull)initWithCGPoint:(CGPoint)p __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCGPoint:")]
		IntPtr Constructor (CGPoint p);

		// -(instancetype _Nonnull)initWithCGRect:(CGRect)r __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCGRect:")]
		IntPtr Constructor (CGRect r);

		// -(instancetype _Nonnull)initWithCGAffineTransform:(CGAffineTransform)r __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCGAffineTransform:")]
		IntPtr Constructor (CGAffineTransform r);

		// -(instancetype _Nonnull)initWithString:(NSString * _Nonnull)representation;
		[Export ("initWithString:")]
		IntPtr Constructor (string representation);

		// -(CGFloat)valueAtIndex:(size_t)index;
		[Export ("valueAtIndex:")]
		nfloat ValueAtIndex (nuint index);

		// @property (readonly) size_t count;
		[Export ("count")]
		nuint Count { get; }

		// @property (readonly) CGFloat X;
		[Export ("X")]
		nfloat X { get; }

		// @property (readonly) CGFloat Y;
		[Export ("Y")]
		nfloat Y { get; }

		// @property (readonly) CGFloat Z;
		[Export ("Z")]
		nfloat Z { get; }

		// @property (readonly) CGFloat W;
		[Export ("W")]
		nfloat W { get; }

		// @property (readonly) CGPoint CGPointValue __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("CGPointValue")]
		CGPoint CGPointValue { get; }

		// @property (readonly) CGRect CGRectValue __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("CGRectValue")]
		CGRect CGRectValue { get; }

		// @property (readonly) CGAffineTransform CGAffineTransformValue __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("CGAffineTransformValue")]
		CGAffineTransform CGAffineTransformValue { get; }

		// @property (readonly) NSString * _Nonnull stringRepresentation;
		[Export ("stringRepresentation")]
		string StringRepresentation { get; }
	}

	// @interface CIColor : NSObject <NSSecureCoding, NSCopying>
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIColor : INSSecureCoding, INSCopying
	{
		// +(instancetype _Nonnull)colorWithCGColor:(CGColorRef _Nonnull)c;
		[Static]
		[Export ("colorWithCGColor:")]
		unsafe CIColor ColorWithCGColor (CGColorRef* c);

		// +(instancetype _Nonnull)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
		[Static]
		[Export ("colorWithRed:green:blue:alpha:")]
		CIColor ColorWithRed (nfloat r, nfloat g, nfloat b, nfloat a);

		// +(instancetype _Nonnull)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b;
		[Static]
		[Export ("colorWithRed:green:blue:")]
		CIColor ColorWithRed (nfloat r, nfloat g, nfloat b);

		// +(instancetype _Nullable)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("colorWithRed:green:blue:alpha:colorSpace:")]
		[return: NullAllowed]
		unsafe CIColor ColorWithRed (nfloat r, nfloat g, nfloat b, nfloat a, CGColorSpaceRef* colorSpace);

		// +(instancetype _Nullable)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("colorWithRed:green:blue:colorSpace:")]
		[return: NullAllowed]
		unsafe CIColor ColorWithRed (nfloat r, nfloat g, nfloat b, CGColorSpaceRef* colorSpace);

		// +(instancetype _Nonnull)colorWithString:(NSString * _Nonnull)representation;
		[Static]
		[Export ("colorWithString:")]
		CIColor ColorWithString (string representation);

		// -(instancetype _Nonnull)initWithCGColor:(CGColorRef _Nonnull)c __attribute__((objc_designated_initializer));
		[Export ("initWithCGColor:")]
		[DesignatedInitializer]
		unsafe IntPtr Constructor (CGColorRef* c);

		// -(instancetype _Nonnull)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
		[Export ("initWithRed:green:blue:alpha:")]
		IntPtr Constructor (nfloat r, nfloat g, nfloat b, nfloat a);

		// -(instancetype _Nonnull)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithRed:green:blue:")]
		IntPtr Constructor (nfloat r, nfloat g, nfloat b);

		// -(instancetype _Nullable)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("initWithRed:green:blue:alpha:colorSpace:")]
		unsafe IntPtr Constructor (nfloat r, nfloat g, nfloat b, nfloat a, CGColorSpaceRef* colorSpace);

		// -(instancetype _Nullable)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("initWithRed:green:blue:colorSpace:")]
		unsafe IntPtr Constructor (nfloat r, nfloat g, nfloat b, CGColorSpaceRef* colorSpace);

		// @property (readonly) size_t numberOfComponents;
		[Export ("numberOfComponents")]
		nuint NumberOfComponents { get; }

		// @property (readonly) const CGFloat * _Nonnull components __attribute__((objc_returns_inner_pointer));
		[Export ("components")]
		unsafe nfloat* Components { get; }

		// @property (readonly) CGFloat alpha;
		[Export ("alpha")]
		nfloat Alpha { get; }

		// @property (readonly) CGColorSpaceRef _Nonnull colorSpace __attribute__((cf_returns_not_retained));
		[Export ("colorSpace")]
		unsafe CGColorSpaceRef* ColorSpace { get; }

		// @property (readonly) CGFloat red;
		[Export ("red")]
		nfloat Red { get; }

		// @property (readonly) CGFloat green;
		[Export ("green")]
		nfloat Green { get; }

		// @property (readonly) CGFloat blue;
		[Export ("blue")]
		nfloat Blue { get; }

		// @property (readonly) NSString * _Nonnull stringRepresentation;
		[Export ("stringRepresentation")]
		string StringRepresentation { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull blackColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("blackColor", ArgumentSemantic.Strong)]
		CIColor BlackColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull whiteColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("whiteColor", ArgumentSemantic.Strong)]
		CIColor WhiteColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull grayColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("grayColor", ArgumentSemantic.Strong)]
		CIColor GrayColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull redColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("redColor", ArgumentSemantic.Strong)]
		CIColor RedColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull greenColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("greenColor", ArgumentSemantic.Strong)]
		CIColor GreenColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull blueColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("blueColor", ArgumentSemantic.Strong)]
		CIColor BlueColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull cyanColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("cyanColor", ArgumentSemantic.Strong)]
		CIColor CyanColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull magentaColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("magentaColor", ArgumentSemantic.Strong)]
		CIColor MagentaColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull yellowColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("yellowColor", ArgumentSemantic.Strong)]
		CIColor YellowColor { get; }

		// @property (readonly, strong, class) CIColor * _Nonnull clearColor __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("clearColor", ArgumentSemantic.Strong)]
		CIColor ClearColor { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CVTime kCVZeroTime __attribute__((visibility("default")));
		[Field ("kCVZeroTime", "__Internal")]
		CVTime kCVZeroTime { get; }

		// extern const CVTime kCVIndefiniteTime __attribute__((visibility("default")));
		[Field ("kCVIndefiniteTime", "__Internal")]
		CVTime kCVIndefiniteTime { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCVBufferPropagatedAttachmentsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVBufferPropagatedAttachmentsKey", "__Internal")]
		unsafe CFStringRef* kCVBufferPropagatedAttachmentsKey { get; }

		// extern CFStringRef  _Nonnull const kCVBufferNonPropagatedAttachmentsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVBufferNonPropagatedAttachmentsKey", "__Internal")]
		unsafe CFStringRef* kCVBufferNonPropagatedAttachmentsKey { get; }

		// extern CFStringRef  _Nonnull const kCVBufferMovieTimeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVBufferMovieTimeKey", "__Internal")]
		unsafe CFStringRef* kCVBufferMovieTimeKey { get; }

		// extern CFStringRef  _Nonnull const kCVBufferTimeValueKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVBufferTimeValueKey", "__Internal")]
		unsafe CFStringRef* kCVBufferTimeValueKey { get; }

		// extern CFStringRef  _Nonnull const kCVBufferTimeScaleKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVBufferTimeScaleKey", "__Internal")]
		unsafe CFStringRef* kCVBufferTimeScaleKey { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCVImageBufferCGColorSpaceKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCGColorSpaceKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCGColorSpaceKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferCleanApertureKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCleanApertureKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCleanApertureKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferCleanApertureWidthKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCleanApertureWidthKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCleanApertureWidthKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferCleanApertureHeightKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCleanApertureHeightKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCleanApertureHeightKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferCleanApertureHorizontalOffsetKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCleanApertureHorizontalOffsetKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCleanApertureHorizontalOffsetKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferCleanApertureVerticalOffsetKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferCleanApertureVerticalOffsetKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferCleanApertureVerticalOffsetKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferPreferredCleanApertureKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferPreferredCleanApertureKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferPreferredCleanApertureKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldCountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldCountKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldCountKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldDetailKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldDetailKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldDetailKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldDetailTemporalTopFirst __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldDetailTemporalTopFirst", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldDetailTemporalTopFirst { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldDetailTemporalBottomFirst __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldDetailTemporalBottomFirst", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldDetailTemporalBottomFirst { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldDetailSpatialFirstLineEarly __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldDetailSpatialFirstLineEarly", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldDetailSpatialFirstLineEarly { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferFieldDetailSpatialFirstLineLate __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferFieldDetailSpatialFirstLineLate", "__Internal")]
		unsafe CFStringRef* kCVImageBufferFieldDetailSpatialFirstLineLate { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferPixelAspectRatioKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferPixelAspectRatioKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferPixelAspectRatioKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferPixelAspectRatioHorizontalSpacingKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferPixelAspectRatioHorizontalSpacingKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferPixelAspectRatioHorizontalSpacingKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferPixelAspectRatioVerticalSpacingKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferPixelAspectRatioVerticalSpacingKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferPixelAspectRatioVerticalSpacingKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferDisplayDimensionsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferDisplayDimensionsKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferDisplayDimensionsKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferDisplayWidthKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferDisplayWidthKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferDisplayWidthKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferDisplayHeightKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferDisplayHeightKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferDisplayHeightKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferGammaLevelKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferGammaLevelKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferGammaLevelKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferICCProfileKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferICCProfileKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferICCProfileKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrixKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferYCbCrMatrixKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrixKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_ITU_R_709_2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_ITU_R_709_2", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_ITU_R_709_2 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_ITU_R_601_4 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_ITU_R_601_4", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_ITU_R_601_4 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_SMPTE_240M_1995 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_SMPTE_240M_1995", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_SMPTE_240M_1995 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_DCI_P3 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_DCI_P3", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_DCI_P3 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_P3_D65 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_P3_D65", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_P3_D65 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferYCbCrMatrix_ITU_R_2020 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferYCbCrMatrix_ITU_R_2020", "__Internal")]
		unsafe CFStringRef* kCVImageBufferYCbCrMatrix_ITU_R_2020 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimariesKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferColorPrimariesKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimariesKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_ITU_R_709_2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferColorPrimaries_ITU_R_709_2", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_ITU_R_709_2 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_EBU_3213 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferColorPrimaries_EBU_3213", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_EBU_3213 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_SMPTE_C __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferColorPrimaries_SMPTE_C", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_SMPTE_C { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_P22 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("kCVImageBufferColorPrimaries_P22", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_P22 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_DCI_P3 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferColorPrimaries_DCI_P3", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_DCI_P3 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_P3_D65 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferColorPrimaries_P3_D65", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_P3_D65 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferColorPrimaries_ITU_R_2020 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferColorPrimaries_ITU_R_2020", "__Internal")]
		unsafe CFStringRef* kCVImageBufferColorPrimaries_ITU_R_2020 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunctionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferTransferFunctionKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunctionKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_ITU_R_709_2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferTransferFunction_ITU_R_709_2", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_ITU_R_709_2 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_SMPTE_240M_1995 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferTransferFunction_SMPTE_240M_1995", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_SMPTE_240M_1995 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_UseGamma __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferTransferFunction_UseGamma", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_UseGamma { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_EBU_3213 __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCVImageBufferTransferFunction_EBU_3213", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_EBU_3213 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_SMPTE_C __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCVImageBufferTransferFunction_SMPTE_C", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_SMPTE_C { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_sRGB __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCVImageBufferTransferFunction_sRGB", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_sRGB { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_ITU_R_2020 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVImageBufferTransferFunction_ITU_R_2020", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_ITU_R_2020 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_SMPTE_ST_428_1 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCVImageBufferTransferFunction_SMPTE_ST_428_1", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_SMPTE_ST_428_1 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_ITU_R_2100_HLG __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCVImageBufferTransferFunction_ITU_R_2100_HLG", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_ITU_R_2100_HLG { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferTransferFunction_Linear __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCVImageBufferTransferFunction_Linear", "__Internal")]
		unsafe CFStringRef* kCVImageBufferTransferFunction_Linear { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocationTopFieldKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocationTopFieldKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocationTopFieldKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocationBottomFieldKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocationBottomFieldKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocationBottomFieldKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_Left __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_Left", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_Left { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_Center __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_Center", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_Center { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_TopLeft __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_TopLeft", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_TopLeft { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_Top __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_Top", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_Top { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_BottomLeft __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_BottomLeft", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_BottomLeft { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_Bottom __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_Bottom", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_Bottom { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaLocation_DV420 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaLocation_DV420", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaLocation_DV420 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaSubsamplingKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaSubsamplingKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaSubsamplingKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaSubsampling_420 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaSubsampling_420", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaSubsampling_420 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaSubsampling_422 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaSubsampling_422", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaSubsampling_422 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferChromaSubsampling_411 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVImageBufferChromaSubsampling_411", "__Internal")]
		unsafe CFStringRef* kCVImageBufferChromaSubsampling_411 { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferAlphaChannelIsOpaque __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCVImageBufferAlphaChannelIsOpaque", "__Internal")]
		unsafe CFStringRef* kCVImageBufferAlphaChannelIsOpaque { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferAlphaChannelModeKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, Mac (10, 15), iOS (13, 0)]
		[Field ("kCVImageBufferAlphaChannelModeKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferAlphaChannelModeKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferAlphaChannelMode_StraightAlpha __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, Mac (10, 15), iOS (13, 0)]
		[Field ("kCVImageBufferAlphaChannelMode_StraightAlpha", "__Internal")]
		unsafe CFStringRef* kCVImageBufferAlphaChannelMode_StraightAlpha { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferAlphaChannelMode_PremultipliedAlpha __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, Mac (10, 15), iOS (13, 0)]
		[Field ("kCVImageBufferAlphaChannelMode_PremultipliedAlpha", "__Internal")]
		unsafe CFStringRef* kCVImageBufferAlphaChannelMode_PremultipliedAlpha { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferMasteringDisplayColorVolumeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCVImageBufferMasteringDisplayColorVolumeKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferMasteringDisplayColorVolumeKey { get; }

		// extern CFStringRef  _Nonnull const kCVImageBufferContentLightLevelInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCVImageBufferContentLightLevelInfoKey", "__Internal")]
		unsafe CFStringRef* kCVImageBufferContentLightLevelInfoKey { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCVPixelBufferPixelFormatTypeKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferPixelFormatTypeKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPixelFormatTypeKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferMemoryAllocatorKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferMemoryAllocatorKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferMemoryAllocatorKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferWidthKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferWidthKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferWidthKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferHeightKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferHeightKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferHeightKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferExtendedPixelsLeftKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferExtendedPixelsLeftKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferExtendedPixelsLeftKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferExtendedPixelsTopKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferExtendedPixelsTopKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferExtendedPixelsTopKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferExtendedPixelsRightKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferExtendedPixelsRightKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferExtendedPixelsRightKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferExtendedPixelsBottomKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferExtendedPixelsBottomKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferExtendedPixelsBottomKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferBytesPerRowAlignmentKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferBytesPerRowAlignmentKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferBytesPerRowAlignmentKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferCGBitmapContextCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferCGBitmapContextCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferCGBitmapContextCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferCGImageCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferCGImageCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferCGImageCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferOpenGLCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelBufferOpenGLCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferOpenGLCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferPlaneAlignmentKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 6), iOS (4, 0)]
		[Field ("kCVPixelBufferPlaneAlignmentKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPlaneAlignmentKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfacePropertiesKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 6), iOS (4, 0)]
		[Field ("kCVPixelBufferIOSurfacePropertiesKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferIOSurfacePropertiesKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferOpenGLESCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[TV (9, 0), NoWatch, NoMac, iOS (6, 0)]
		[Field ("kCVPixelBufferOpenGLESCompatibilityKey", "__Internal"), Advice ("This API is not available when using UIKit on macOS.")]
		unsafe CFStringRef* kCVPixelBufferOpenGLESCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferMetalCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 11), iOS (8, 0)]
		[Field ("kCVPixelBufferMetalCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferMetalCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferOpenGLTextureCacheCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 11)]
		[Field ("kCVPixelBufferOpenGLTextureCacheCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferOpenGLTextureCacheCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferOpenGLESTextureCacheCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[TV (9, 0), NoWatch, NoMac, iOS (9, 0)]
		[Field ("kCVPixelBufferOpenGLESTextureCacheCompatibilityKey", "__Internal"), Advice ("This API is not available when using UIKit on macOS.")]
		unsafe CFStringRef* kCVPixelBufferOpenGLESTextureCacheCompatibilityKey { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kIOSurfaceAllocSize __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceAllocSize", "__Internal")]
		unsafe CFStringRef* kIOSurfaceAllocSize { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceWidth __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceWidth", "__Internal")]
		unsafe CFStringRef* kIOSurfaceWidth { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceHeight __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceHeight", "__Internal")]
		unsafe CFStringRef* kIOSurfaceHeight { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceBytesPerRow __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceBytesPerRow", "__Internal")]
		unsafe CFStringRef* kIOSurfaceBytesPerRow { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceBytesPerElement __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceBytesPerElement", "__Internal")]
		unsafe CFStringRef* kIOSurfaceBytesPerElement { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceElementWidth __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceElementWidth", "__Internal")]
		unsafe CFStringRef* kIOSurfaceElementWidth { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceElementHeight __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceElementHeight", "__Internal")]
		unsafe CFStringRef* kIOSurfaceElementHeight { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceOffset __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceOffset", "__Internal")]
		unsafe CFStringRef* kIOSurfaceOffset { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneInfo __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneInfo", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneInfo { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneWidth __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneWidth", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneWidth { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneHeight __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneHeight", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneHeight { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneBytesPerRow __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneBytesPerRow", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneBytesPerRow { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneOffset __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneOffset", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneOffset { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneSize __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneSize", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneSize { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneBase __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneBase", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneBase { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneBitsPerElement __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneBitsPerElement", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneBitsPerElement { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneBytesPerElement __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneBytesPerElement", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneBytesPerElement { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneElementWidth __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneElementWidth", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneElementWidth { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneElementHeight __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePlaneElementHeight", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneElementHeight { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceCacheMode __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfaceCacheMode", "__Internal")]
		unsafe CFStringRef* kIOSurfaceCacheMode { get; }

		// extern const CFStringRef _Nonnull kIOSurfaceIsGlobal __attribute__((availability(ios, introduced=3.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Field ("kIOSurfaceIsGlobal", "__Internal")]
		unsafe CFStringRef* kIOSurfaceIsGlobal { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePixelFormat __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("kIOSurfacePixelFormat", "__Internal")]
		unsafe CFStringRef* kIOSurfacePixelFormat { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePixelSizeCastingAllowed __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kIOSurfacePixelSizeCastingAllowed", "__Internal")]
		unsafe CFStringRef* kIOSurfacePixelSizeCastingAllowed { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneComponentBitDepths __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneComponentBitDepths", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneComponentBitDepths { get; }

		// extern const CFStringRef _Nonnull kIOSurfacePlaneComponentBitOffsets __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneComponentBitOffsets", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneComponentBitOffsets { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kIOSurfacePlaneComponentNames __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneComponentNames", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneComponentNames { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kIOSurfacePlaneComponentTypes __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneComponentTypes", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneComponentTypes { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kIOSurfacePlaneComponentRanges __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfacePlaneComponentRanges", "__Internal")]
		unsafe CFStringRef* kIOSurfacePlaneComponentRanges { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kIOSurfaceSubsampling __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kIOSurfaceSubsampling", "__Internal")]
		unsafe CFStringRef* kIOSurfaceSubsampling { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfaceOpenGLTextureCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 6)]
		[Field ("kCVPixelBufferIOSurfaceOpenGLTextureCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferIOSurfaceOpenGLTextureCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfaceOpenGLFBOCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 6)]
		[Field ("kCVPixelBufferIOSurfaceOpenGLFBOCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferIOSurfaceOpenGLFBOCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfaceOpenGLESTextureCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[TV (9, 0), NoWatch, NoMac, iOS (5, 0)]
		[Field ("kCVPixelBufferIOSurfaceOpenGLESTextureCompatibilityKey", "__Internal"), Advice ("This API is not available when using UIKit on macOS.")]
		unsafe CFStringRef* kCVPixelBufferIOSurfaceOpenGLESTextureCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferIOSurfaceOpenGLESFBOCompatibilityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[TV (9, 0), NoWatch, NoMac, iOS (5, 0)]
		[Field ("kCVPixelBufferIOSurfaceOpenGLESFBOCompatibilityKey", "__Internal"), Advice ("This API is not available when using UIKit on macOS.")]
		unsafe CFStringRef* kCVPixelBufferIOSurfaceOpenGLESFBOCompatibilityKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferPoolMinimumBufferCountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelBufferPoolMinimumBufferCountKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPoolMinimumBufferCountKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferPoolMaximumBufferAgeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelBufferPoolMaximumBufferAgeKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPoolMaximumBufferAgeKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferPoolAllocationThresholdKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelBufferPoolAllocationThresholdKey", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPoolAllocationThresholdKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelBufferPoolFreeBufferNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelBufferPoolFreeBufferNotification", "__Internal")]
		unsafe CFStringRef* kCVPixelBufferPoolFreeBufferNotification { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCVOpenGLESTextureCacheMaximumTextureAgeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0, deprecated=12.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=12.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0, message: "OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.TvOS, 12, 0, message: "OpenGL/OpenGLES is no longer supported. Use Metal APIs instead. (Define COREVIDEO_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[NoWatch, NoMac]
		[Field ("kCVOpenGLESTextureCacheMaximumTextureAgeKey", "__Internal")]
		unsafe CFStringRef* kCVOpenGLESTextureCacheMaximumTextureAgeKey { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatName", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatName { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatConstant __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatConstant", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatConstant { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatCodecType __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatCodecType", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatCodecType { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatFourCC __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatFourCC", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatFourCC { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatContainsAlpha __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.3)));
		[iOS (4, 3)]
		[Field ("kCVPixelFormatContainsAlpha", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatContainsAlpha { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatContainsYCbCr __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCVPixelFormatContainsYCbCr", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatContainsYCbCr { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatContainsRGB __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCVPixelFormatContainsRGB", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatContainsRGB { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatContainsGrayscale __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCVPixelFormatContainsGrayscale", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatContainsGrayscale { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatComponentRange __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVPixelFormatComponentRange", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatComponentRange { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatComponentRange_VideoRange __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVPixelFormatComponentRange_VideoRange", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatComponentRange_VideoRange { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatComponentRange_FullRange __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVPixelFormatComponentRange_FullRange", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatComponentRange_FullRange { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatComponentRange_WideRange __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCVPixelFormatComponentRange_WideRange", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatComponentRange_WideRange { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatPlanes __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatPlanes", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatPlanes { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBlockWidth __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBlockWidth", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBlockWidth { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBlockHeight __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBlockHeight", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBlockHeight { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBitsPerBlock __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBitsPerBlock", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBitsPerBlock { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBlockHorizontalAlignment __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBlockHorizontalAlignment", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBlockHorizontalAlignment { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBlockVerticalAlignment __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBlockVerticalAlignment", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBlockVerticalAlignment { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatBlackBlock __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatBlackBlock", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatBlackBlock { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatHorizontalSubsampling __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatHorizontalSubsampling", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatHorizontalSubsampling { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatVerticalSubsampling __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatVerticalSubsampling", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatVerticalSubsampling { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatOpenGLFormat __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatOpenGLFormat", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatOpenGLFormat { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatOpenGLType __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatOpenGLType", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatOpenGLType { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatOpenGLInternalFormat __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatOpenGLInternalFormat", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatOpenGLInternalFormat { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatCGBitmapInfo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatCGBitmapInfo", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatCGBitmapInfo { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatQDCompatibility __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelFormatQDCompatibility", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatQDCompatibility { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatCGBitmapContextCompatibility __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelFormatCGBitmapContextCompatibility", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatCGBitmapContextCompatibility { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatCGImageCompatibility __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelFormatCGImageCompatibility", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatCGImageCompatibility { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatOpenGLCompatibility __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4, 0), TV (9, 0), Mac (10, 4), iOS (4, 0)]
		[Field ("kCVPixelFormatOpenGLCompatibility", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatOpenGLCompatibility { get; }

		// extern CFStringRef  _Nonnull const kCVPixelFormatOpenGLESCompatibility __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(macCatalyst, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Unavailable (PlatformName.MacCatalyst)]
		[TV (9, 0), NoWatch, NoMac, iOS (5, 0)]
		[Field ("kCVPixelFormatOpenGLESCompatibility", "__Internal"), Advice ("This API is not available when using UIKit on macOS.")]
		unsafe CFStringRef* kCVPixelFormatOpenGLESCompatibility { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCVPixelFormatFillExtendedPixelsCallback __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("kCVPixelFormatFillExtendedPixelsCallback", "__Internal")]
		unsafe CFStringRef* kCVPixelFormatFillExtendedPixelsCallback { get; }

		// extern CFStringRef  _Nonnull const kCVMetalTextureUsage __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, Mac (10, 13), iOS (11, 0)]
		[Field ("kCVMetalTextureUsage", "__Internal")]
		unsafe CFStringRef* kCVMetalTextureUsage { get; }

		// extern CFStringRef  _Nonnull const kCVMetalTextureStorageMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, Mac (10, 15), iOS (13, 0)]
		[Field ("kCVMetalTextureStorageMode", "__Internal")]
		unsafe CFStringRef* kCVMetalTextureStorageMode { get; }

		// extern CFStringRef  _Nonnull const kCVMetalTextureCacheMaximumTextureAgeKey __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, Mac (10, 11), iOS (8, 0)]
		[Field ("kCVMetalTextureCacheMaximumTextureAgeKey", "__Internal")]
		unsafe CFStringRef* kCVMetalTextureCacheMaximumTextureAgeKey { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceExif __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceExif", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceExif { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceExifAux __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceExifAux", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceExifAux { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceExifEX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceExifEX", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceExifEX { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceDublinCore __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceDublinCore", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceDublinCore { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceIPTCCore __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceIPTCCore", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceIPTCCore { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceIPTCExtension __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImageMetadataNamespaceIPTCExtension", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceIPTCExtension { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespacePhotoshop __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespacePhotoshop", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespacePhotoshop { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceTIFF __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceTIFF", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceTIFF { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceXMPBasic __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceXMPBasic", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceXMPBasic { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataNamespaceXMPRights __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataNamespaceXMPRights", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataNamespaceXMPRights { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixExif __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixExif", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixExif { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixExifAux __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixExifAux", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixExifAux { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixExifEX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixExifEX", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixExifEX { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixDublinCore __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixDublinCore", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixDublinCore { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixIPTCCore __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixIPTCCore", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixIPTCCore { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixIPTCExtension __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImageMetadataPrefixIPTCExtension", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixIPTCExtension { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixPhotoshop __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixPhotoshop", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixPhotoshop { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixTIFF __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixTIFF", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixTIFF { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixXMPBasic __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixXMPBasic", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixXMPBasic { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataPrefixXMPRights __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataPrefixXMPRights", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataPrefixXMPRights { get; }
	}

	// typedef _Bool (^CGImageMetadataTagBlock)(CFStringRef _Nonnull, CGImageMetadataTagRef _Nonnull);
	unsafe delegate bool CGImageMetadataTagBlock (CFStringRef* arg0, CGImageMetadataTagRef* arg1);

	[Static]
	 
	partial interface Constants
	{
		// extern CFStringRef  _Nonnull const kCGImageMetadataEnumerateRecursively __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataEnumerateRecursively", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataEnumerateRecursively { get; }

		// extern CFStringRef  _Nonnull const kCFErrorDomainCGImageMetadata __attribute__((visibility("default")));
		[Field ("kCFErrorDomainCGImageMetadata", "__Internal")]
		unsafe CFStringRef* kCFErrorDomainCGImageMetadata { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGImageSourceTypeIdentifierHint __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceTypeIdentifierHint", "__Internal")]
		unsafe CFStringRef* kCGImageSourceTypeIdentifierHint { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceShouldCache __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceShouldCache", "__Internal")]
		unsafe CFStringRef* kCGImageSourceShouldCache { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceShouldCacheImmediately __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImageSourceShouldCacheImmediately", "__Internal")]
		unsafe CFStringRef* kCGImageSourceShouldCacheImmediately { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceShouldAllowFloat __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceShouldAllowFloat", "__Internal")]
		unsafe CFStringRef* kCGImageSourceShouldAllowFloat { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceCreateThumbnailFromImageIfAbsent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceCreateThumbnailFromImageIfAbsent", "__Internal")]
		unsafe CFStringRef* kCGImageSourceCreateThumbnailFromImageIfAbsent { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceCreateThumbnailFromImageAlways __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceCreateThumbnailFromImageAlways", "__Internal")]
		unsafe CFStringRef* kCGImageSourceCreateThumbnailFromImageAlways { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceThumbnailMaxPixelSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceThumbnailMaxPixelSize", "__Internal")]
		unsafe CFStringRef* kCGImageSourceThumbnailMaxPixelSize { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceCreateThumbnailWithTransform __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageSourceCreateThumbnailWithTransform", "__Internal")]
		unsafe CFStringRef* kCGImageSourceCreateThumbnailWithTransform { get; }

		// extern const CFStringRef _Nonnull kCGImageSourceSubsampleFactor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGImageSourceSubsampleFactor", "__Internal")]
		unsafe CFStringRef* kCGImageSourceSubsampleFactor { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationLossyCompressionQuality __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageDestinationLossyCompressionQuality", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationLossyCompressionQuality { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationBackgroundColor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageDestinationBackgroundColor", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationBackgroundColor { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationImageMaxPixelSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImageDestinationImageMaxPixelSize", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationImageMaxPixelSize { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationEmbedThumbnail __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImageDestinationEmbedThumbnail", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationEmbedThumbnail { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationOptimizeColorForSharing __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=9.3)));
		[Mac (10, 12), iOS (9, 3)]
		[Field ("kCGImageDestinationOptimizeColorForSharing", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationOptimizeColorForSharing { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationMetadata __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageDestinationMetadata", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationMetadata { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationMergeMetadata __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageDestinationMergeMetadata", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationMergeMetadata { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataShouldExcludeXMP __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageMetadataShouldExcludeXMP", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataShouldExcludeXMP { get; }

		// extern const CFStringRef _Nonnull kCGImageMetadataShouldExcludeGPS __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImageMetadataShouldExcludeGPS", "__Internal")]
		unsafe CFStringRef* kCGImageMetadataShouldExcludeGPS { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationDateTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageDestinationDateTime", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationDateTime { get; }

		// extern const CFStringRef _Nonnull kCGImageDestinationOrientation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.8))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 8), iOS (7, 0)]
		[Field ("kCGImageDestinationOrientation", "__Internal")]
		unsafe CFStringRef* kCGImageDestinationOrientation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyRawDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyRawDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyRawDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerMinoltaDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerMinoltaDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerMinoltaDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerFujiDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerFujiDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerFujiDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerOlympusDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerOlympusDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerOlympusDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerPentaxDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerPentaxDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerPentaxDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImageProperty8BIMDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageProperty8BIMDictionary", "__Internal")]
		unsafe CFStringRef* kCGImageProperty8BIMDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyOpenEXRDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 9), iOS (11, 3)]
		[Field ("kCGImagePropertyOpenEXRDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyOpenEXRDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerAppleDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 10), iOS (7, 0)]
		[Field ("kCGImagePropertyMakerAppleDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerAppleDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyFileContentsDictionary __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyFileContentsDictionary", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyFileContentsDictionary { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyFileSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyFileSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyFileSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPixelHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPixelHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPixelHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPixelWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPixelWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPixelWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDPIHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyDPIHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDPIHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDPIWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyDPIWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDPIWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDepth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyDepth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDepth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyOrientation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyOrientation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyOrientation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIsFloat __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIsFloat", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIsFloat { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIsIndexed __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIsIndexed", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIsIndexed { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHasAlpha __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyHasAlpha", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHasAlpha { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyColorModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyColorModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyColorModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyProfileName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyProfileName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyProfileName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPrimaryImage __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyPrimaryImage", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPrimaryImage { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyColorModelRGB __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyColorModelRGB", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyColorModelRGB { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyColorModelGray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyColorModelGray", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyColorModelGray { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyColorModelCMYK __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyColorModelCMYK", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyColorModelCMYK { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyColorModelLab __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyColorModelLab", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyColorModelLab { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFCompression __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFCompression", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFCompression { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFPhotometricInterpretation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFPhotometricInterpretation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFPhotometricInterpretation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFDocumentName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFDocumentName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFDocumentName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFImageDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFImageDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFImageDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFMake __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFMake", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFMake { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFOrientation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFOrientation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFOrientation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFXResolution __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFXResolution", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFXResolution { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFYResolution __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFYResolution", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFYResolution { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFResolutionUnit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFResolutionUnit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFResolutionUnit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFSoftware __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFSoftware", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFSoftware { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFTransferFunction __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFTransferFunction", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFTransferFunction { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFDateTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFDateTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFDateTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFArtist __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFArtist", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFArtist { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFHostComputer __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFHostComputer", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFHostComputer { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFCopyright __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFCopyright", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFCopyright { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFWhitePoint __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFWhitePoint", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFWhitePoint { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFPrimaryChromaticities __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyTIFFPrimaryChromaticities", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFPrimaryChromaticities { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFTileWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGImagePropertyTIFFTileWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFTileWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyTIFFTileLength __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGImagePropertyTIFFTileLength", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyTIFFTileLength { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFXDensity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFXDensity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFXDensity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFYDensity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFYDensity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFYDensity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFDensityUnit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFDensityUnit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFDensityUnit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyJFIFIsProgressive __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyJFIFIsProgressive", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyJFIFIsProgressive { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSLoopCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSLoopCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSLoopCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSUnclampedDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSUnclampedDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSUnclampedDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSCanvasPixelWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSCanvasPixelWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSCanvasPixelWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSCanvasPixelHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSCanvasPixelHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSCanvasPixelHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHEICSFrameInfoArray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyHEICSFrameInfoArray", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHEICSFrameInfoArray { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifExposureTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifExposureTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifExposureTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifExposureProgram __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifExposureProgram", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifExposureProgram { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSpectralSensitivity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSpectralSensitivity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSpectralSensitivity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifISOSpeedRatings __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifISOSpeedRatings", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifISOSpeedRatings { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifOECF __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifOECF", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifOECF { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSensitivityType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifSensitivityType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSensitivityType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifStandardOutputSensitivity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifStandardOutputSensitivity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifStandardOutputSensitivity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifRecommendedExposureIndex __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifRecommendedExposureIndex", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifRecommendedExposureIndex { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifISOSpeed __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifISOSpeed", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifISOSpeed { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifISOSpeedLatitudeyyy __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifISOSpeedLatitudeyyy", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifISOSpeedLatitudeyyy { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifISOSpeedLatitudezzz __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 9), iOS (7, 0)]
		[Field ("kCGImagePropertyExifISOSpeedLatitudezzz", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifISOSpeedLatitudezzz { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifDateTimeOriginal __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifDateTimeOriginal", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifDateTimeOriginal { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifDateTimeDigitized __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifDateTimeDigitized", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifDateTimeDigitized { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifOffsetTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyExifOffsetTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifOffsetTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifOffsetTimeOriginal __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyExifOffsetTimeOriginal", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifOffsetTimeOriginal { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifOffsetTimeDigitized __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyExifOffsetTimeDigitized", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifOffsetTimeDigitized { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifComponentsConfiguration __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifComponentsConfiguration", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifComponentsConfiguration { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifCompressedBitsPerPixel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifCompressedBitsPerPixel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifCompressedBitsPerPixel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifShutterSpeedValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifShutterSpeedValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifShutterSpeedValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifApertureValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifApertureValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifApertureValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifBrightnessValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifBrightnessValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifBrightnessValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifExposureBiasValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifExposureBiasValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifExposureBiasValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifMaxApertureValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifMaxApertureValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifMaxApertureValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubjectDistance __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubjectDistance", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubjectDistance { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifMeteringMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifMeteringMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifMeteringMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifLightSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifLightSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifLightSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFlash __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFlash", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFlash { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFocalLength __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFocalLength", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFocalLength { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubjectArea __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubjectArea", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubjectArea { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifMakerNote __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifMakerNote", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifMakerNote { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifUserComment __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifUserComment", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifUserComment { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubsecTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubsecTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubsecTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubsecTimeOriginal __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 11), iOS (10, 0)]
		[Field ("kCGImagePropertyExifSubsecTimeOriginal", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubsecTimeOriginal { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubsecTimeDigitized __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubsecTimeDigitized", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubsecTimeDigitized { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFlashPixVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFlashPixVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFlashPixVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifColorSpace __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifColorSpace", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifColorSpace { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifPixelXDimension __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifPixelXDimension", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifPixelXDimension { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifPixelYDimension __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifPixelYDimension", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifPixelYDimension { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifRelatedSoundFile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifRelatedSoundFile", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifRelatedSoundFile { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFlashEnergy __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFlashEnergy", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFlashEnergy { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSpatialFrequencyResponse __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSpatialFrequencyResponse", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSpatialFrequencyResponse { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFocalPlaneXResolution __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFocalPlaneXResolution", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFocalPlaneXResolution { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFocalPlaneYResolution __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFocalPlaneYResolution", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFocalPlaneYResolution { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFocalPlaneResolutionUnit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFocalPlaneResolutionUnit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFocalPlaneResolutionUnit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubjectLocation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubjectLocation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubjectLocation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifExposureIndex __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifExposureIndex", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifExposureIndex { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSensingMethod __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSensingMethod", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSensingMethod { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFileSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFileSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFileSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSceneType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSceneType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSceneType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifCFAPattern __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifCFAPattern", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifCFAPattern { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifCustomRendered __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifCustomRendered", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifCustomRendered { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifExposureMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifExposureMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifExposureMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifWhiteBalance __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifWhiteBalance", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifWhiteBalance { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifDigitalZoomRatio __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifDigitalZoomRatio", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifDigitalZoomRatio { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifFocalLenIn35mmFilm __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifFocalLenIn35mmFilm", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifFocalLenIn35mmFilm { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSceneCaptureType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSceneCaptureType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSceneCaptureType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifGainControl __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifGainControl", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifGainControl { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifContrast __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifContrast", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifContrast { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSaturation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSaturation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSaturation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSharpness __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSharpness", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSharpness { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifDeviceSettingDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifDeviceSettingDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifDeviceSettingDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubjectDistRange __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifSubjectDistRange", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubjectDistRange { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifImageUniqueID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifImageUniqueID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifImageUniqueID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifCameraOwnerName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifCameraOwnerName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifCameraOwnerName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifBodySerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifBodySerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifBodySerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifLensSpecification __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifLensSpecification", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifLensSpecification { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifLensMake __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifLensMake", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifLensMake { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifLensModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifLensModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifLensModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifLensSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyExifLensSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifLensSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifGamma __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyExifGamma", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifGamma { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifSubsecTimeOrginal __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4, deprecated=10.11))) __attribute__((availability(ios, introduced=4.0, deprecated=10.0)));
		[Introduced (PlatformName.MacOSX, 10, 4, message: "No longer supported")]
		[Deprecated (PlatformName.MacOSX, 10, 11, message: "No longer supported")]
		[Introduced (PlatformName.iOS, 4, 0, message: "No longer supported")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "No longer supported")]
		[Field ("kCGImagePropertyExifSubsecTimeOrginal", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifSubsecTimeOrginal { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxLensInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxLensInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxLensInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxLensModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxLensModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxLensModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxLensID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxLensID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxLensID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxLensSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxLensSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxLensSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxImageNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxImageNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxImageNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxFlashCompensation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxFlashCompensation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxFlashCompensation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxOwnerName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxOwnerName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxOwnerName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyExifAuxFirmware __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyExifAuxFirmware", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyExifAuxFirmware { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFLoopCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFLoopCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFLoopCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFImageColorMap __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFImageColorMap", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFImageColorMap { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFHasGlobalColorMap __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFHasGlobalColorMap", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFHasGlobalColorMap { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFUnclampedDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 7), iOS (4, 0)]
		[Field ("kCGImagePropertyGIFUnclampedDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFUnclampedDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFCanvasPixelWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyGIFCanvasPixelWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFCanvasPixelWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFCanvasPixelHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyGIFCanvasPixelHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFCanvasPixelHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGIFFrameInfoArray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyGIFFrameInfoArray", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGIFFrameInfoArray { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGAuthor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGAuthor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGAuthor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGChromaticities __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGChromaticities", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGChromaticities { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGComment __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyPNGComment", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGComment { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGCopyright __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGCopyright", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGCopyright { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGCreationTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGCreationTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGCreationTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGDisclaimer __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyPNGDisclaimer", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGDisclaimer { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGGamma __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGGamma", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGGamma { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGInterlaceType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGInterlaceType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGInterlaceType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGModificationTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGModificationTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGModificationTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGSoftware __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGSoftware", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGSoftware { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyPNGSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGsRGBIntent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGsRGBIntent", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGsRGBIntent { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGTitle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=5.0)));
		[Mac (10, 7), iOS (5, 0)]
		[Field ("kCGImagePropertyPNGTitle", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGTitle { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGWarning __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyPNGWarning", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGWarning { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGXPixelsPerMeter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGXPixelsPerMeter", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGXPixelsPerMeter { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPNGYPixelsPerMeter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyPNGYPixelsPerMeter", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGYPixelsPerMeter { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGLoopCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImagePropertyAPNGLoopCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGLoopCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImagePropertyAPNGDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGUnclampedDelayTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImagePropertyAPNGUnclampedDelayTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGUnclampedDelayTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGFrameInfoArray __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyAPNGFrameInfoArray", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGFrameInfoArray { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGCanvasPixelWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyAPNGCanvasPixelWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGCanvasPixelWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAPNGCanvasPixelHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImagePropertyAPNGCanvasPixelHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAPNGCanvasPixelHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSLatitudeRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSLatitudeRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSLatitudeRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSLatitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSLatitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSLatitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSLongitudeRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSLongitudeRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSLongitudeRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSLongitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSLongitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSLongitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSAltitudeRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSAltitudeRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSAltitudeRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSAltitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSAltitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSAltitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSTimeStamp __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSTimeStamp", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSTimeStamp { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSSatellites __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSSatellites", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSSatellites { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSStatus __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSStatus", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSStatus { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSMeasureMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSMeasureMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSMeasureMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDOP __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDOP", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDOP { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSSpeedRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSSpeedRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSSpeedRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSSpeed __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSSpeed", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSSpeed { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSTrackRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSTrackRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSTrackRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSTrack __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSTrack", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSTrack { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSImgDirectionRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSImgDirectionRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSImgDirectionRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSImgDirection __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSImgDirection", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSImgDirection { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSMapDatum __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSMapDatum", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSMapDatum { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestLatitudeRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestLatitudeRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestLatitudeRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestLatitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestLatitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestLatitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestLongitudeRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestLongitudeRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestLongitudeRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestLongitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestLongitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestLongitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestBearingRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestBearingRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestBearingRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestBearing __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestBearing", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestBearing { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestDistanceRef __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestDistanceRef", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestDistanceRef { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDestDistance __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDestDistance", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDestDistance { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSProcessingMethod __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSProcessingMethod", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSProcessingMethod { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSAreaInformation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSAreaInformation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSAreaInformation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDateStamp __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDateStamp", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDateStamp { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSDifferental __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyGPSDifferental", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSDifferental { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyGPSHPositioningError __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImagePropertyGPSHPositioningError", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyGPSHPositioningError { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCObjectTypeReference __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCObjectTypeReference", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCObjectTypeReference { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCObjectAttributeReference __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCObjectAttributeReference", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCObjectAttributeReference { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCObjectName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCObjectName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCObjectName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCEditStatus __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCEditStatus", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCEditStatus { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCEditorialUpdate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCEditorialUpdate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCEditorialUpdate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCUrgency __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCUrgency", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCUrgency { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCSubjectReference __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCSubjectReference", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCSubjectReference { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCategory __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCategory", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCategory { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCSupplementalCategory __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCSupplementalCategory", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCSupplementalCategory { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCFixtureIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCFixtureIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCFixtureIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCKeywords __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCKeywords", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCKeywords { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContentLocationCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContentLocationCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContentLocationCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContentLocationName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContentLocationName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContentLocationName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCReleaseDate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCReleaseDate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCReleaseDate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCReleaseTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCReleaseTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCReleaseTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExpirationDate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCExpirationDate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExpirationDate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExpirationTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCExpirationTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExpirationTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCSpecialInstructions __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCSpecialInstructions", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCSpecialInstructions { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCActionAdvised __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCActionAdvised", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCActionAdvised { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCReferenceService __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCReferenceService", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCReferenceService { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCReferenceDate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCReferenceDate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCReferenceDate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCReferenceNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCReferenceNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCReferenceNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCDateCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCDateCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCDateCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCTimeCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCTimeCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCTimeCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCDigitalCreationDate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCDigitalCreationDate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCDigitalCreationDate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCDigitalCreationTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCDigitalCreationTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCDigitalCreationTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCOriginatingProgram __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCOriginatingProgram", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCOriginatingProgram { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCProgramVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCProgramVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCProgramVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCObjectCycle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCObjectCycle", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCObjectCycle { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCByline __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCByline", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCByline { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCBylineTitle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCBylineTitle", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCBylineTitle { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCSubLocation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCSubLocation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCSubLocation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCProvinceState __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCProvinceState", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCProvinceState { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCountryPrimaryLocationCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCountryPrimaryLocationCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCountryPrimaryLocationCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCountryPrimaryLocationName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCountryPrimaryLocationName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCountryPrimaryLocationName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCOriginalTransmissionReference __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCOriginalTransmissionReference", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCOriginalTransmissionReference { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCHeadline __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCHeadline", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCHeadline { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCredit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCredit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCredit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCopyrightNotice __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCopyrightNotice", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCopyrightNotice { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContact __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContact", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContact { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCaptionAbstract __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCaptionAbstract", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCaptionAbstract { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCWriterEditor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCWriterEditor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCWriterEditor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCImageType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCImageType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCImageType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCImageOrientation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCImageOrientation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCImageOrientation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCLanguageIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCLanguageIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCLanguageIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCStarRating __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCStarRating", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCStarRating { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCCreatorContactInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCCreatorContactInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCCreatorContactInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCRightsUsageTerms __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCRightsUsageTerms", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCRightsUsageTerms { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCScene __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCScene", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCScene { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAboutCvTerm __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAboutCvTerm", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAboutCvTerm { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAboutCvTermCvId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAboutCvTermCvId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAboutCvTermCvId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAboutCvTermId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAboutCvTermId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAboutCvTermId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAboutCvTermName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAboutCvTermName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAboutCvTermName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAboutCvTermRefinedAbout __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAboutCvTermRefinedAbout", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAboutCvTermRefinedAbout { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAddlModelInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAddlModelInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAddlModelInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkOrObject __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkOrObject", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkOrObject { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCircaDateCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCircaDateCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCircaDateCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkContentDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkContentDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkContentDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkContributionDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkContributionDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkContributionDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCopyrightNotice __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCopyrightNotice", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCopyrightNotice { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCreator __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCreator", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCreator { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCreatorID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCreatorID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCreatorID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCopyrightOwnerID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCopyrightOwnerID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCopyrightOwnerID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkCopyrightOwnerName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkCopyrightOwnerName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkCopyrightOwnerName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkLicensorID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkLicensorID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkLicensorID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkLicensorName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkLicensorName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkLicensorName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkDateCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkDateCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkDateCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkPhysicalDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkPhysicalDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkPhysicalDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkSourceInventoryNo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkSourceInventoryNo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkSourceInventoryNo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkSourceInvURL __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkSourceInvURL", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkSourceInvURL { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkStylePeriod __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkStylePeriod", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkStylePeriod { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtArtworkTitle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtArtworkTitle", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtArtworkTitle { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAudioBitrate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAudioBitrate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAudioBitrate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAudioBitrateMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAudioBitrateMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAudioBitrateMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtAudioChannelCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtAudioChannelCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtAudioChannelCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCircaDateCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCircaDateCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCircaDateCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContainerFormat __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContainerFormat", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContainerFormat { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContainerFormatIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContainerFormatIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContainerFormatIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContainerFormatName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContainerFormatName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContainerFormatName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContributor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContributor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContributor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContributorIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContributorIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContributorIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContributorName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContributorName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContributorName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtContributorRole __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtContributorRole", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtContributorRole { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCopyrightYear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCopyrightYear", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCopyrightYear { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCreator __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCreator", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCreator { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCreatorIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCreatorIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCreatorIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCreatorName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCreatorName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCreatorName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtCreatorRole __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtCreatorRole", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtCreatorRole { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtControlledVocabularyTerm __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtControlledVocabularyTerm", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtControlledVocabularyTerm { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreen __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreen", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreen { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionD __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionD", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionD { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionH __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionH", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionH { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionText __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionText", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionText { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionUnit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionUnit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionUnit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionW __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionW", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionW { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionX __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionX", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionX { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDataOnScreenRegionY __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDataOnScreenRegionY", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDataOnScreenRegionY { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDigitalImageGUID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDigitalImageGUID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDigitalImageGUID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDigitalSourceFileType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDigitalSourceFileType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDigitalSourceFileType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDigitalSourceType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDigitalSourceType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDigitalSourceType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDopesheet __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDopesheet", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDopesheet { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDopesheetLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDopesheetLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDopesheetLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDopesheetLinkLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDopesheetLinkLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDopesheetLinkLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEmbdEncRightsExpr __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEmbdEncRightsExpr", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEmbdEncRightsExpr { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEpisode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEpisode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEpisode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEpisodeIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEpisodeIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEpisodeIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEpisodeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEpisodeName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEpisodeName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEpisodeNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEpisodeNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEpisodeNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtEvent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtEvent", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtEvent { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtShownEvent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtShownEvent", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtShownEvent { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtShownEventIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtShownEventIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtShownEventIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtShownEventName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtShownEventName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtShownEventName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtExternalMetadataLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtExternalMetadataLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtExternalMetadataLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtFeedIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtFeedIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtFeedIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtGenre __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtGenre", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtGenre { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtGenreCvId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtGenreCvId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtGenreCvId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtGenreCvTermId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtGenreCvTermId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtGenreCvTermId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtGenreCvTermName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtGenreCvTermName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtGenreCvTermName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtGenreCvTermRefinedAbout __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtGenreCvTermRefinedAbout", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtGenreCvTermRefinedAbout { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtHeadline __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtHeadline", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtHeadline { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtIPTCLastEdited __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtIPTCLastEdited", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtIPTCLastEdited { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLinkedEncRightsExpr __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLinkedEncRightsExpr", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLinkedEncRightsExpr { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLinkedEncodedRightsExpr __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLinkedEncodedRightsExpr", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLinkedEncodedRightsExpr { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLinkedEncodedRightsExprType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLinkedEncodedRightsExprType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLinkedEncodedRightsExprType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationCreated __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationCreated", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationCreated { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationCity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationCity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationCity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationCountryCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationCountryCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationCountryCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationCountryName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationCountryName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationCountryName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationGPSAltitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationGPSAltitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationGPSAltitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationGPSLatitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationGPSLatitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationGPSLatitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationGPSLongitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationGPSLongitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationGPSLongitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationLocationId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationLocationId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationLocationId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationLocationName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationLocationName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationLocationName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationProvinceState __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationProvinceState", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationProvinceState { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationSublocation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationSublocation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationSublocation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationWorldRegion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationWorldRegion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationWorldRegion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtLocationShown __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtLocationShown", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtLocationShown { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtMaxAvailHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtMaxAvailHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtMaxAvailHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtMaxAvailWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtMaxAvailWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtMaxAvailWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtModelAge __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtModelAge", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtModelAge { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtOrganisationInImageCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtOrganisationInImageCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtOrganisationInImageCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtOrganisationInImageName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtOrganisationInImageName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtOrganisationInImageName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonHeard __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonHeard", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonHeard { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonHeardIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonHeardIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonHeardIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonHeardName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonHeardName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonHeardName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImage __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImage", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImage { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageWDetails __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageWDetails", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageWDetails { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageCharacteristic __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageCharacteristic", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageCharacteristic { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageCvTermCvId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageCvTermCvId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageCvTermCvId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageCvTermId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageCvTermId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageCvTermId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageCvTermName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageCvTermName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageCvTermName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPersonInImageName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPersonInImageName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPersonInImageName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtProductInImage __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtProductInImage", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtProductInImage { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtProductInImageDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtProductInImageDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtProductInImageDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtProductInImageGTIN __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtProductInImageGTIN", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtProductInImageGTIN { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtProductInImageName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtProductInImageName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtProductInImageName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPublicationEvent __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPublicationEvent", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPublicationEvent { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPublicationEventDate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPublicationEventDate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPublicationEventDate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPublicationEventIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPublicationEventIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPublicationEventIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtPublicationEventName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtPublicationEventName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtPublicationEventName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRating __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRating", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRating { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRatingRegion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRatingRegion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRatingRegion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionCity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionCity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionCity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionCountryCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionCountryCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionCountryCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionCountryName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionCountryName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionCountryName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionGPSAltitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionGPSAltitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionGPSAltitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionGPSLatitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionGPSLatitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionGPSLatitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionGPSLongitude __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionGPSLongitude", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionGPSLongitude { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionLocationId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionLocationId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionLocationId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionLocationName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionLocationName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionLocationName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionProvinceState __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionProvinceState", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionProvinceState { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionSublocation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionSublocation", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionSublocation { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingRegionWorldRegion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingRegionWorldRegion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingRegionWorldRegion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingScaleMaxValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingScaleMaxValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingScaleMaxValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingScaleMinValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingScaleMinValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingScaleMinValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingSourceLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingSourceLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingSourceLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingValue __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingValue", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingValue { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRatingValueLogoLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRatingValueLogoLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRatingValueLogoLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRegistryID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRegistryID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRegistryID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRegistryEntryRole __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRegistryEntryRole", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRegistryEntryRole { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRegistryItemID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRegistryItemID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRegistryItemID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtRegistryOrganisationID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtRegistryOrganisationID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtRegistryOrganisationID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtReleaseReady __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtReleaseReady", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtReleaseReady { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeason __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeason", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeason { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeasonIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeasonIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeasonIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeasonName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeasonName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeasonName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeasonNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeasonNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeasonNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeries __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeries", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeries { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeriesIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeriesIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeriesIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSeriesName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSeriesName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSeriesName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtStorylineIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtStorylineIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtStorylineIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtStreamReady __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtStreamReady", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtStreamReady { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtStylePeriod __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtStylePeriod", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtStylePeriod { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSupplyChainSource __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSupplyChainSource", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSupplyChainSource { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSupplyChainSourceIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSupplyChainSourceIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSupplyChainSourceIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtSupplyChainSourceName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtSupplyChainSourceName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtSupplyChainSourceName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTemporalCoverage __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTemporalCoverage", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTemporalCoverage { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTemporalCoverageFrom __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTemporalCoverageFrom", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTemporalCoverageFrom { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTemporalCoverageTo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTemporalCoverageTo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTemporalCoverageTo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTranscript __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTranscript", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTranscript { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTranscriptLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTranscriptLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTranscriptLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTranscriptLinkLink __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTranscriptLinkLink", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTranscriptLinkLink { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoBitrate __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoBitrate", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoBitrate { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoBitrateMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoBitrateMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoBitrateMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoDisplayAspectRatio __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoDisplayAspectRatio", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoDisplayAspectRatio { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoEncodingProfile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoEncodingProfile", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoEncodingProfile { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoShotType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoShotType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoShotType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoShotTypeIdentifier __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoShotTypeIdentifier", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoShotTypeIdentifier { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoShotTypeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoShotTypeName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoShotTypeName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVideoStreamsCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVideoStreamsCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVideoStreamsCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtVisualColor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtVisualColor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtVisualColor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtWorkflowTag __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtWorkflowTag", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtWorkflowTag { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtWorkflowTagCvId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtWorkflowTagCvId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtWorkflowTagCvId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtWorkflowTagCvTermId __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtWorkflowTagCvTermId", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtWorkflowTagCvTermId { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtWorkflowTagCvTermName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtWorkflowTagCvTermName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtWorkflowTagCvTermName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 13, 4), iOS (11, 3)]
		[Field ("kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoCity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoCity", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoCity { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoCountry __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoCountry", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoCountry { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoAddress __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoAddress", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoAddress { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoPostalCode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoPostalCode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoPostalCode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoStateProvince __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoStateProvince", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoStateProvince { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoEmails __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoEmails", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoEmails { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoPhones __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoPhones", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoPhones { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyIPTCContactInfoWebURLs __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 6), iOS (4, 0)]
		[Field ("kCGImagePropertyIPTCContactInfoWebURLs", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyIPTCContactInfoWebURLs { get; }

		// extern const CFStringRef _Nonnull kCGImageProperty8BIMLayerNames __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 4), iOS (4, 0)]
		[Field ("kCGImageProperty8BIMLayerNames", "__Internal")]
		unsafe CFStringRef* kCGImageProperty8BIMLayerNames { get; }

		// extern const CFStringRef _Nonnull kCGImageProperty8BIMVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Field ("kCGImageProperty8BIMVersion", "__Internal")]
		unsafe CFStringRef* kCGImageProperty8BIMVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBackwardVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGBackwardVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBackwardVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGUniqueCameraModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGUniqueCameraModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGUniqueCameraModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGLocalizedCameraModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGLocalizedCameraModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGLocalizedCameraModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCameraSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGCameraSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCameraSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGLensInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyDNGLensInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGLensInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBlackLevel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGBlackLevel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBlackLevel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGWhiteLevel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGWhiteLevel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGWhiteLevel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCalibrationIlluminant1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGCalibrationIlluminant1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCalibrationIlluminant1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCalibrationIlluminant2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGCalibrationIlluminant2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCalibrationIlluminant2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGColorMatrix1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGColorMatrix1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGColorMatrix1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGColorMatrix2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGColorMatrix2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGColorMatrix2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCameraCalibration1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGCameraCalibration1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCameraCalibration1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCameraCalibration2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGCameraCalibration2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCameraCalibration2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAsShotNeutral __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGAsShotNeutral", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAsShotNeutral { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAsShotWhiteXY __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGAsShotWhiteXY", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAsShotWhiteXY { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBaselineExposure __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGBaselineExposure", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBaselineExposure { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBaselineNoise __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGBaselineNoise", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBaselineNoise { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBaselineSharpness __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGBaselineSharpness", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBaselineSharpness { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPrivateData __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGPrivateData", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPrivateData { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCameraCalibrationSignature __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGCameraCalibrationSignature", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCameraCalibrationSignature { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileCalibrationSignature __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGProfileCalibrationSignature", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileCalibrationSignature { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGNoiseProfile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGNoiseProfile", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGNoiseProfile { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGWarpRectilinear __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGWarpRectilinear", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGWarpRectilinear { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGWarpFisheye __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGWarpFisheye", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGWarpFisheye { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGFixVignetteRadial __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Field ("kCGImagePropertyDNGFixVignetteRadial", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGFixVignetteRadial { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGActiveArea __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGActiveArea", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGActiveArea { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAnalogBalance __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGAnalogBalance", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAnalogBalance { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAntiAliasStrength __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGAntiAliasStrength", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAntiAliasStrength { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAsShotICCProfile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGAsShotICCProfile", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAsShotICCProfile { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAsShotPreProfileMatrix __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGAsShotPreProfileMatrix", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAsShotPreProfileMatrix { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGAsShotProfileName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGAsShotProfileName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGAsShotProfileName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBaselineExposureOffset __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBaselineExposureOffset", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBaselineExposureOffset { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBayerGreenSplit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBayerGreenSplit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBayerGreenSplit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBestQualityScale __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBestQualityScale", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBestQualityScale { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBlackLevelDeltaH __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBlackLevelDeltaH", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBlackLevelDeltaH { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBlackLevelDeltaV __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBlackLevelDeltaV", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBlackLevelDeltaV { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGBlackLevelRepeatDim __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGBlackLevelRepeatDim", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGBlackLevelRepeatDim { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCFALayout __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGCFALayout", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCFALayout { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCFAPlaneColor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGCFAPlaneColor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCFAPlaneColor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGChromaBlurRadius __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGChromaBlurRadius", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGChromaBlurRadius { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGColorimetricReference __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGColorimetricReference", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGColorimetricReference { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCurrentICCProfile __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGCurrentICCProfile", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCurrentICCProfile { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGCurrentPreProfileMatrix __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGCurrentPreProfileMatrix", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGCurrentPreProfileMatrix { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDefaultBlackRender __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGDefaultBlackRender", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDefaultBlackRender { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDefaultCropOrigin __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGDefaultCropOrigin", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDefaultCropOrigin { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDefaultCropSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGDefaultCropSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDefaultCropSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDefaultScale __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGDefaultScale", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDefaultScale { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGDefaultUserCrop __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGDefaultUserCrop", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGDefaultUserCrop { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGExtraCameraProfiles __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGExtraCameraProfiles", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGExtraCameraProfiles { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGForwardMatrix1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGForwardMatrix1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGForwardMatrix1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGForwardMatrix2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGForwardMatrix2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGForwardMatrix2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGLinearizationTable __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGLinearizationTable", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGLinearizationTable { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGLinearResponseLimit __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGLinearResponseLimit", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGLinearResponseLimit { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGMakerNoteSafety __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGMakerNoteSafety", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGMakerNoteSafety { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGMaskedAreas __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGMaskedAreas", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGMaskedAreas { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGNewRawImageDigest __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGNewRawImageDigest", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGNewRawImageDigest { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGNoiseReductionApplied __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGNoiseReductionApplied", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGNoiseReductionApplied { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOpcodeList1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOpcodeList1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOpcodeList1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOpcodeList2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOpcodeList2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOpcodeList2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOpcodeList3 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOpcodeList3", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOpcodeList3 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalBestQualityFinalSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalBestQualityFinalSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalBestQualityFinalSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalDefaultCropSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalDefaultCropSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalDefaultCropSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalDefaultFinalSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalDefaultFinalSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalDefaultFinalSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalRawFileData __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalRawFileData", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalRawFileData { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalRawFileDigest __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalRawFileDigest", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalRawFileDigest { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGOriginalRawFileName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGOriginalRawFileName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGOriginalRawFileName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewApplicationName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewApplicationName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewApplicationName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewApplicationVersion __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewApplicationVersion", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewApplicationVersion { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewColorSpace __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewColorSpace", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewColorSpace { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewDateTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewDateTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewDateTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewSettingsDigest __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewSettingsDigest", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewSettingsDigest { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGPreviewSettingsName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGPreviewSettingsName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGPreviewSettingsName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileCopyright __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileCopyright", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileCopyright { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileEmbedPolicy __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileEmbedPolicy", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileEmbedPolicy { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileHueSatMapData1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileHueSatMapData1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileHueSatMapData1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileHueSatMapData2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileHueSatMapData2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileHueSatMapData2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileHueSatMapDims __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileHueSatMapDims", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileHueSatMapDims { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileHueSatMapEncoding __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileHueSatMapEncoding", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileHueSatMapEncoding { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileLookTableData __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileLookTableData", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileLookTableData { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileLookTableDims __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileLookTableDims", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileLookTableDims { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileLookTableEncoding __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileLookTableEncoding", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileLookTableEncoding { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGProfileToneCurve __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGProfileToneCurve", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGProfileToneCurve { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGRawDataUniqueID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGRawDataUniqueID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGRawDataUniqueID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGRawImageDigest __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGRawImageDigest", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGRawImageDigest { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGRawToPreviewGain __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGRawToPreviewGain", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGRawToPreviewGain { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGReductionMatrix1 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGReductionMatrix1", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGReductionMatrix1 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGReductionMatrix2 __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGReductionMatrix2", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGReductionMatrix2 { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGRowInterleaveFactor __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGRowInterleaveFactor", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGRowInterleaveFactor { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGShadowScale __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGShadowScale", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGShadowScale { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyDNGSubTileBlockSize __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImagePropertyDNGSubTileBlockSize", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyDNGSubTileBlockSize { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFDescription", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFDescription { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFFirmware __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFFirmware", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFFirmware { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFOwnerName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFOwnerName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFOwnerName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFImageName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFImageName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFImageName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFImageFileName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFImageFileName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFImageFileName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFReleaseMethod __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFReleaseMethod", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFReleaseMethod { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFReleaseTiming __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFReleaseTiming", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFReleaseTiming { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFRecordID __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFRecordID", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFRecordID { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFSelfTimingTime __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFSelfTimingTime", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFSelfTimingTime { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFCameraSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFCameraSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFCameraSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFImageSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFImageSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFImageSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFContinuousDrive __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFContinuousDrive", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFContinuousDrive { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFFocusMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFFocusMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFFocusMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFMeteringMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFMeteringMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFMeteringMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFShootingMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFShootingMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFShootingMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFLensModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFLensModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFLensModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFLensMaxMM __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFLensMaxMM", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFLensMaxMM { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFLensMinMM __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFLensMinMM", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFLensMinMM { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFWhiteBalanceIndex __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFWhiteBalanceIndex", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFWhiteBalanceIndex { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFFlashExposureComp __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFFlashExposureComp", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFFlashExposureComp { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyCIFFMeasuredEV __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyCIFFMeasuredEV", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyCIFFMeasuredEV { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonISOSetting __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonISOSetting", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonISOSetting { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonColorMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonColorMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonColorMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonQuality __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonQuality", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonQuality { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonWhiteBalanceMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonWhiteBalanceMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonWhiteBalanceMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonSharpenMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonSharpenMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonSharpenMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonFocusMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonFocusMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonFocusMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonFlashSetting __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonFlashSetting", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonFlashSetting { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonISOSelection __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonISOSelection", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonISOSelection { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonFlashExposureComp __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonFlashExposureComp", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonFlashExposureComp { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonImageAdjustment __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonImageAdjustment", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonImageAdjustment { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonLensAdapter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonLensAdapter", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonLensAdapter { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonLensType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonLensType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonLensType { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonLensInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonLensInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonLensInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonFocusDistance __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonFocusDistance", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonFocusDistance { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonDigitalZoom __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonDigitalZoom", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonDigitalZoom { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonShootingMode __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonShootingMode", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonShootingMode { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonCameraSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonCameraSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonCameraSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerNikonShutterCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerNikonShutterCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerNikonShutterCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonOwnerName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonOwnerName", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonOwnerName { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonCameraSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonCameraSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonCameraSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonImageSerialNumber __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonImageSerialNumber", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonImageSerialNumber { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonFlashExposureComp __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonFlashExposureComp", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonFlashExposureComp { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonContinuousDrive __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonContinuousDrive", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonContinuousDrive { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonLensModel __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonLensModel", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonLensModel { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonFirmware __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonFirmware", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonFirmware { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyMakerCanonAspectRatioInfo __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=4.0)));
		[Mac (10, 5), iOS (4, 0)]
		[Field ("kCGImagePropertyMakerCanonAspectRatioInfo", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyMakerCanonAspectRatioInfo { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyOpenEXRAspectRatio __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.9))) __attribute__((availability(ios, introduced=11.3)));
		[Mac (10, 9), iOS (11, 3)]
		[Field ("kCGImagePropertyOpenEXRAspectRatio", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyOpenEXRAspectRatio { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CFStringRef _Nonnull kCGImagePropertyPNGCompressionFilter __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Field ("kCGImagePropertyPNGCompressionFilter", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPNGCompressionFilter { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypeDepth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImageAuxiliaryDataTypeDepth", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypeDepth { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypeDisparity __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImageAuxiliaryDataTypeDisparity", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypeDisparity { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypePortraitEffectsMatte __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0)));
		[Mac (10, 14), iOS (12, 0)]
		[Field ("kCGImageAuxiliaryDataTypePortraitEffectsMatte", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypePortraitEffectsMatte { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypeSemanticSegmentationSkinMatte __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImageAuxiliaryDataTypeSemanticSegmentationSkinMatte", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypeSemanticSegmentationSkinMatte { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypeSemanticSegmentationHairMatte __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImageAuxiliaryDataTypeSemanticSegmentationHairMatte", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypeSemanticSegmentationHairMatte { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataTypeSemanticSegmentationTeethMatte __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("kCGImageAuxiliaryDataTypeSemanticSegmentationTeethMatte", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataTypeSemanticSegmentationTeethMatte { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataInfoData __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImageAuxiliaryDataInfoData", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataInfoData { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataInfoDataDescription __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImageAuxiliaryDataInfoDataDescription", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataInfoDataDescription { get; }

		// extern const CFStringRef _Nonnull kCGImageAuxiliaryDataInfoMetadata __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImageAuxiliaryDataInfoMetadata", "__Internal")]
		unsafe CFStringRef* kCGImageAuxiliaryDataInfoMetadata { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyImageCount __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyImageCount", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyImageCount { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyWidth __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyWidth", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyWidth { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyHeight __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyHeight", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyHeight { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyBytesPerRow __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyBytesPerRow", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyBytesPerRow { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyNamedColorSpace __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyNamedColorSpace", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyNamedColorSpace { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyPixelFormat __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyPixelFormat", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyPixelFormat { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyImages __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyImages", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyImages { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyThumbnailImages __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyThumbnailImages", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyThumbnailImages { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAuxiliaryData __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyAuxiliaryData", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAuxiliaryData { get; }

		// extern const CFStringRef _Nonnull kCGImagePropertyAuxiliaryDataType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.13))) __attribute__((availability(ios, introduced=11.0)));
		[Mac (10, 13), iOS (11, 0)]
		[Field ("kCGImagePropertyAuxiliaryDataType", "__Internal")]
		unsafe CFStringRef* kCGImagePropertyAuxiliaryDataType { get; }
	}

	// @interface CIImage : NSObject <NSSecureCoding, NSCopying>
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIImage : INSSecureCoding, INSCopying
	{
		// +(CIImage * _Nonnull)imageWithCGImage:(CGImageRef _Nonnull)image;
		[Static]
		[Export ("imageWithCGImage:")]
		unsafe CIImage ImageWithCGImage (CGImageRef* image);

		// +(CIImage * _Nonnull)imageWithCGImage:(CGImageRef _Nonnull)image options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Static]
		[Export ("imageWithCGImage:options:")]
		unsafe CIImage ImageWithCGImage (CGImageRef* image, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithCGImageSource:(CGImageSourceRef _Nonnull)source index:(size_t)index options:(NSDictionary<CIImageOption,id> * _Nullable)dict __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Static]
		[Export ("imageWithCGImageSource:index:options:")]
		unsafe CIImage ImageWithCGImageSource (CGImageSourceRef* source, nuint index, [NullAllowed] NSDictionary<NSString, NSObject> dict);

		// +(CIImage * _Nonnull)imageWithCGLayer:(CGLayerRef _Nonnull)layer __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Static]
		[Export ("imageWithCGLayer:")]
		unsafe CIImage ImageWithCGLayer (CGLayerRef* layer);

		// +(CIImage * _Nonnull)imageWithCGLayer:(CGLayerRef _Nonnull)layer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Static]
		[Export ("imageWithCGLayer:options:")]
		unsafe CIImage ImageWithCGLayer (CGLayerRef* layer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithBitmapData:(NSData * _Nonnull)data bytesPerRow:(size_t)bytesPerRow size:(CGSize)size format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nullable)colorSpace;
		[Static]
		[Export ("imageWithBitmapData:bytesPerRow:size:format:colorSpace:")]
		unsafe CIImage ImageWithBitmapData (NSData data, nuint bytesPerRow, CGSize size, int format, [NullAllowed] CGColorSpaceRef* colorSpace);

		// +(CIImage * _Nonnull)imageWithTexture:(unsigned int)name size:(CGSize)size flipped:(int)flipped colorSpace:(CGColorSpaceRef _Nullable)colorSpace __attribute__((availability(ios, introduced=6.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 6, 0, message: "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("imageWithTexture:size:flipped:colorSpace:")]
		unsafe CIImage ImageWithTexture (uint name, CGSize size, int flipped, [NullAllowed] CGColorSpaceRef* colorSpace);

		// +(CIImage * _Nonnull)imageWithTexture:(unsigned int)name size:(CGSize)size flipped:(int)flipped options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Static]
		[Export ("imageWithTexture:size:flipped:options:")]
		CIImage ImageWithTexture (uint name, CGSize size, int flipped, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nullable)imageWithMTLTexture:(id<MTLTexture> _Nonnull)texture options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("imageWithMTLTexture:options:")]
		[return: NullAllowed]
		CIImage ImageWithMTLTexture (MTLTexture texture, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nullable)imageWithContentsOfURL:(NSURL * _Nonnull)url;
		[Static]
		[Export ("imageWithContentsOfURL:")]
		[return: NullAllowed]
		CIImage ImageWithContentsOfURL (NSUrl url);

		// +(CIImage * _Nullable)imageWithContentsOfURL:(NSURL * _Nonnull)url options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Static]
		[Export ("imageWithContentsOfURL:options:")]
		[return: NullAllowed]
		CIImage ImageWithContentsOfURL (NSUrl url, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nullable)imageWithData:(NSData * _Nonnull)data;
		[Static]
		[Export ("imageWithData:")]
		[return: NullAllowed]
		CIImage ImageWithData (NSData data);

		// +(CIImage * _Nullable)imageWithData:(NSData * _Nonnull)data options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Static]
		[Export ("imageWithData:options:")]
		[return: NullAllowed]
		CIImage ImageWithData (NSData data, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithCVImageBuffer:(CVImageBufferRef _Nonnull)imageBuffer __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("imageWithCVImageBuffer:")]
		unsafe CIImage ImageWithCVImageBuffer (CVImageBufferRef* imageBuffer);

		// +(CIImage * _Nonnull)imageWithCVImageBuffer:(CVImageBufferRef _Nonnull)imageBuffer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("imageWithCVImageBuffer:options:")]
		unsafe CIImage ImageWithCVImageBuffer (CVImageBufferRef* imageBuffer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithCVPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("imageWithCVPixelBuffer:")]
		unsafe CIImage ImageWithCVPixelBuffer (CVPixelBufferRef* pixelBuffer);

		// +(CIImage * _Nonnull)imageWithCVPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("imageWithCVPixelBuffer:options:")]
		unsafe CIImage ImageWithCVPixelBuffer (CVPixelBufferRef* pixelBuffer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithIOSurface:(IOSurfaceRef _Nonnull)surface __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("imageWithIOSurface:")]
		unsafe CIImage ImageWithIOSurface (IOSurfaceRef* surface);

		// +(CIImage * _Nonnull)imageWithIOSurface:(IOSurfaceRef _Nonnull)surface options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("imageWithIOSurface:options:")]
		unsafe CIImage ImageWithIOSurface (IOSurfaceRef* surface, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIImage * _Nonnull)imageWithColor:(CIColor * _Nonnull)color;
		[Static]
		[Export ("imageWithColor:")]
		CIImage ImageWithColor (CIColor color);

		// +(CIImage * _Nonnull)emptyImage;
		[Static]
		[Export ("emptyImage")]
		[Verify (MethodToProperty)]
		CIImage EmptyImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull blackImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("blackImage", ArgumentSemantic.Strong)]
		CIImage BlackImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull whiteImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("whiteImage", ArgumentSemantic.Strong)]
		CIImage WhiteImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull grayImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("grayImage", ArgumentSemantic.Strong)]
		CIImage GrayImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull redImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("redImage", ArgumentSemantic.Strong)]
		CIImage RedImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull greenImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("greenImage", ArgumentSemantic.Strong)]
		CIImage GreenImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull blueImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("blueImage", ArgumentSemantic.Strong)]
		CIImage BlueImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull cyanImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("cyanImage", ArgumentSemantic.Strong)]
		CIImage CyanImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull magentaImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("magentaImage", ArgumentSemantic.Strong)]
		CIImage MagentaImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull yellowImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("yellowImage", ArgumentSemantic.Strong)]
		CIImage YellowImage { get; }

		// @property (readonly, strong, class) CIImage * _Nonnull clearImage __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("clearImage", ArgumentSemantic.Strong)]
		CIImage ClearImage { get; }

		// -(instancetype _Nonnull)initWithCGImage:(CGImageRef _Nonnull)image;
		[Export ("initWithCGImage:")]
		unsafe IntPtr Constructor (CGImageRef* image);

		// -(instancetype _Nonnull)initWithCGImage:(CGImageRef _Nonnull)image options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Export ("initWithCGImage:options:")]
		unsafe IntPtr Constructor (CGImageRef* image, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithCGImageSource:(CGImageSourceRef _Nonnull)source index:(size_t)index options:(NSDictionary<CIImageOption,id> * _Nullable)dict __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("initWithCGImageSource:index:options:")]
		unsafe IntPtr Constructor (CGImageSourceRef* source, nuint index, [NullAllowed] NSDictionary<NSString, NSObject> dict);

		// -(instancetype _Nonnull)initWithCGLayer:(CGLayerRef _Nonnull)layer __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("initWithCGLayer:")]
		unsafe IntPtr Constructor (CGLayerRef* layer);

		// -(instancetype _Nonnull)initWithCGLayer:(CGLayerRef _Nonnull)layer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("initWithCGLayer:options:")]
		unsafe IntPtr Constructor (CGLayerRef* layer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithData:(NSData * _Nonnull)data;
		[Export ("initWithData:")]
		IntPtr Constructor (NSData data);

		// -(instancetype _Nullable)initWithData:(NSData * _Nonnull)data options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Export ("initWithData:options:")]
		IntPtr Constructor (NSData data, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithBitmapData:(NSData * _Nonnull)data bytesPerRow:(size_t)bytesPerRow size:(CGSize)size format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nullable)colorSpace;
		[Export ("initWithBitmapData:bytesPerRow:size:format:colorSpace:")]
		unsafe IntPtr Constructor (NSData data, nuint bytesPerRow, CGSize size, int format, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(instancetype _Nonnull)initWithTexture:(unsigned int)name size:(CGSize)size flipped:(int)flipped colorSpace:(CGColorSpaceRef _Nullable)colorSpace __attribute__((availability(ios, introduced=6.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 6, 0, message: "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image OpenGL API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Export ("initWithTexture:size:flipped:colorSpace:")]
		unsafe IntPtr Constructor (uint name, CGSize size, int flipped, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(instancetype _Nonnull)initWithTexture:(unsigned int)name size:(CGSize)size flipped:(int)flipped options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("initWithTexture:size:flipped:options:")]
		IntPtr Constructor (uint name, CGSize size, int flipped, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithMTLTexture:(id<MTLTexture> _Nonnull)texture options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithMTLTexture:options:")]
		IntPtr Constructor (MTLTexture texture, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithContentsOfURL:(NSURL * _Nonnull)url;
		[Export ("initWithContentsOfURL:")]
		IntPtr Constructor (NSUrl url);

		// -(instancetype _Nullable)initWithContentsOfURL:(NSURL * _Nonnull)url options:(NSDictionary<CIImageOption,id> * _Nullable)options;
		[Export ("initWithContentsOfURL:options:")]
		IntPtr Constructor (NSUrl url, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithIOSurface:(IOSurfaceRef _Nonnull)surface __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithIOSurface:")]
		unsafe IntPtr Constructor (IOSurfaceRef* surface);

		// -(instancetype _Nonnull)initWithIOSurface:(IOSurfaceRef _Nonnull)surface options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithIOSurface:options:")]
		unsafe IntPtr Constructor (IOSurfaceRef* surface, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithCVImageBuffer:(CVImageBufferRef _Nonnull)imageBuffer __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithCVImageBuffer:")]
		unsafe IntPtr Constructor (CVImageBufferRef* imageBuffer);

		// -(instancetype _Nonnull)initWithCVImageBuffer:(CVImageBufferRef _Nonnull)imageBuffer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithCVImageBuffer:options:")]
		unsafe IntPtr Constructor (CVImageBufferRef* imageBuffer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithCVPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCVPixelBuffer:")]
		unsafe IntPtr Constructor (CVPixelBufferRef* pixelBuffer);

		// -(instancetype _Nonnull)initWithCVPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCVPixelBuffer:options:")]
		unsafe IntPtr Constructor (CVPixelBufferRef* pixelBuffer, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithColor:(CIColor * _Nonnull)color;
		[Export ("initWithColor:")]
		IntPtr Constructor (CIColor color);

		// -(CIImage * _Nonnull)imageByApplyingTransform:(CGAffineTransform)matrix;
		[Export ("imageByApplyingTransform:")]
		CIImage ImageByApplyingTransform (CGAffineTransform matrix);

		// -(CIImage * _Nonnull)imageByApplyingTransform:(CGAffineTransform)matrix highQualityDownsample:(int)highQualityDownsample __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageByApplyingTransform:highQualityDownsample:")]
		CIImage ImageByApplyingTransform (CGAffineTransform matrix, int highQualityDownsample);

		// -(CIImage * _Nonnull)imageByApplyingOrientation:(int)orientation __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("imageByApplyingOrientation:")]
		CIImage ImageByApplyingOrientation (int orientation);

		// -(CGAffineTransform)imageTransformForOrientation:(int)orientation __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("imageTransformForOrientation:")]
		CGAffineTransform ImageTransformForOrientation (int orientation);

		// -(CIImage * _Nonnull)imageByApplyingCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("imageByApplyingCGOrientation:")]
		CIImage ImageByApplyingCGOrientation (CGImagePropertyOrientation orientation);

		// -(CGAffineTransform)imageTransformForCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("imageTransformForCGOrientation:")]
		CGAffineTransform ImageTransformForCGOrientation (CGImagePropertyOrientation orientation);

		// -(CIImage * _Nonnull)imageByCompositingOverImage:(CIImage * _Nonnull)dest __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("imageByCompositingOverImage:")]
		CIImage ImageByCompositingOverImage (CIImage dest);

		// -(CIImage * _Nonnull)imageByCroppingToRect:(CGRect)rect;
		[Export ("imageByCroppingToRect:")]
		CIImage ImageByCroppingToRect (CGRect rect);

		// -(CIImage * _Nonnull)imageByClampingToExtent __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("imageByClampingToExtent")]
		[Verify (MethodToProperty)]
		CIImage ImageByClampingToExtent { get; }

		// -(CIImage * _Nonnull)imageByClampingToRect:(CGRect)rect __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageByClampingToRect:")]
		CIImage ImageByClampingToRect (CGRect rect);

		// -(CIImage * _Nonnull)imageByApplyingFilter:(NSString * _Nonnull)filterName withInputParameters:(NSDictionary<NSString *,id> * _Nullable)params __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("imageByApplyingFilter:withInputParameters:")]
		CIImage ImageByApplyingFilter (string filterName, [NullAllowed] NSDictionary<NSString, NSObject> @params);

		// -(CIImage * _Nonnull)imageByApplyingFilter:(NSString * _Nonnull)filterName __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("imageByApplyingFilter:")]
		CIImage ImageByApplyingFilter (string filterName);

		// -(CIImage * _Nullable)imageByColorMatchingColorSpaceToWorkingSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageByColorMatchingColorSpaceToWorkingSpace:")]
		[return: NullAllowed]
		unsafe CIImage ImageByColorMatchingColorSpaceToWorkingSpace (CGColorSpaceRef* colorSpace);

		// -(CIImage * _Nullable)imageByColorMatchingWorkingSpaceToColorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageByColorMatchingWorkingSpaceToColorSpace:")]
		[return: NullAllowed]
		unsafe CIImage ImageByColorMatchingWorkingSpaceToColorSpace (CGColorSpaceRef* colorSpace);

		// -(CIImage * _Nonnull)imageByPremultiplyingAlpha __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("imageByPremultiplyingAlpha")]
		[Verify (MethodToProperty)]
		CIImage ImageByPremultiplyingAlpha { get; }

		// -(CIImage * _Nonnull)imageByUnpremultiplyingAlpha __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("imageByUnpremultiplyingAlpha")]
		[Verify (MethodToProperty)]
		CIImage ImageByUnpremultiplyingAlpha { get; }

		// -(CIImage * _Nonnull)imageBySettingAlphaOneInExtent:(CGRect)extent __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageBySettingAlphaOneInExtent:")]
		CIImage ImageBySettingAlphaOneInExtent (CGRect extent);

		// -(CIImage * _Nonnull)imageByApplyingGaussianBlurWithSigma:(double)sigma __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageByApplyingGaussianBlurWithSigma:")]
		CIImage ImageByApplyingGaussianBlurWithSigma (double sigma);

		// -(CIImage * _Nonnull)imageBySettingProperties:(NSDictionary * _Nonnull)properties __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("imageBySettingProperties:")]
		CIImage ImageBySettingProperties (NSDictionary properties);

		// -(CIImage * _Nonnull)imageBySamplingLinear __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("imageBySamplingLinear")]
		[Verify (MethodToProperty)]
		CIImage ImageBySamplingLinear { get; }

		// -(CIImage * _Nonnull)imageBySamplingNearest __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("imageBySamplingNearest")]
		[Verify (MethodToProperty)]
		CIImage ImageBySamplingNearest { get; }

		// -(CIImage * _Nonnull)imageByInsertingIntermediate __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Export ("imageByInsertingIntermediate")]
		[Verify (MethodToProperty)]
		CIImage ImageByInsertingIntermediate { get; }

		// -(CIImage * _Nonnull)imageByInsertingIntermediate:(int)cache __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("imageByInsertingIntermediate:")]
		CIImage ImageByInsertingIntermediate (int cache);

		// @property (readonly, nonatomic) CGRect extent;
		[Export ("extent")]
		CGRect Extent { get; }

		// @property (readonly, atomic) NSDictionary<NSString *,id> * _Nonnull properties __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("properties")]
		NSDictionary<NSString, NSObject> Properties { get; }

		// @property (readonly, atomic) CIFilterShape * _Nonnull definition __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("definition")]
		CIFilterShape Definition { get; }

		// @property (readonly, atomic) NSURL * _Nullable url __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("url")]
		NSUrl Url { get; }

		// @property (readonly, atomic) CGColorSpaceRef _Nullable colorSpace __attribute__((availability(ios, introduced=9.0))) __attribute__((cf_returns_not_retained));
		[iOS (9, 0)]
		[NullAllowed, Export ("colorSpace")]
		unsafe CGColorSpaceRef* ColorSpace { get; }

		// @property (readonly, nonatomic) CVPixelBufferRef _Nullable pixelBuffer __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("pixelBuffer")]
		unsafe CVPixelBufferRef* PixelBuffer { get; }

		// @property (readonly, nonatomic) CGImageRef _Nullable CGImage __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("CGImage")]
		unsafe CGImageRef* CGImage { get; }

		// -(CGRect)regionOfInterestForImage:(CIImage * _Nonnull)image inRect:(CGRect)rect __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("regionOfInterestForImage:inRect:")]
		CGRect RegionOfInterestForImage (CIImage image, CGRect rect);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern CIFormat kCIFormatARGB8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("kCIFormatARGB8", "__Internal")]
		int kCIFormatARGB8 { get; }

		// extern CIFormat kCIFormatBGRA8 __attribute__((visibility("default")));
		[Field ("kCIFormatBGRA8", "__Internal")]
		int kCIFormatBGRA8 { get; }

		// extern CIFormat kCIFormatRGBA8 __attribute__((visibility("default")));
		[Field ("kCIFormatRGBA8", "__Internal")]
		int kCIFormatRGBA8 { get; }

		// extern CIFormat kCIFormatABGR8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatABGR8", "__Internal")]
		int kCIFormatABGR8 { get; }

		// extern CIFormat kCIFormatRGBAh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("kCIFormatRGBAh", "__Internal")]
		int kCIFormatRGBAh { get; }

		// extern CIFormat kCIFormatRGBA16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatRGBA16", "__Internal")]
		int kCIFormatRGBA16 { get; }

		// extern CIFormat kCIFormatRGBAf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIFormatRGBAf", "__Internal")]
		int kCIFormatRGBAf { get; }

		// extern CIFormat kCIFormatA8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatA8", "__Internal")]
		int kCIFormatA8 { get; }

		// extern CIFormat kCIFormatA16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatA16", "__Internal")]
		int kCIFormatA16 { get; }

		// extern CIFormat kCIFormatAh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatAh", "__Internal")]
		int kCIFormatAh { get; }

		// extern CIFormat kCIFormatAf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatAf", "__Internal")]
		int kCIFormatAf { get; }

		// extern CIFormat kCIFormatR8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatR8", "__Internal")]
		int kCIFormatR8 { get; }

		// extern CIFormat kCIFormatR16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatR16", "__Internal")]
		int kCIFormatR16 { get; }

		// extern CIFormat kCIFormatRh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRh", "__Internal")]
		int kCIFormatRh { get; }

		// extern CIFormat kCIFormatRf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRf", "__Internal")]
		int kCIFormatRf { get; }

		// extern CIFormat kCIFormatRG8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRG8", "__Internal")]
		int kCIFormatRG8 { get; }

		// extern CIFormat kCIFormatRG16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRG16", "__Internal")]
		int kCIFormatRG16 { get; }

		// extern CIFormat kCIFormatRGh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRGh", "__Internal")]
		int kCIFormatRGh { get; }

		// extern CIFormat kCIFormatRGf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIFormatRGf", "__Internal")]
		int kCIFormatRGf { get; }

		// extern CIFormat kCIFormatL8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatL8", "__Internal")]
		int kCIFormatL8 { get; }

		// extern CIFormat kCIFormatL16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatL16", "__Internal")]
		int kCIFormatL16 { get; }

		// extern CIFormat kCIFormatLh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLh", "__Internal")]
		int kCIFormatLh { get; }

		// extern CIFormat kCIFormatLf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLf", "__Internal")]
		int kCIFormatLf { get; }

		// extern CIFormat kCIFormatLA8 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLA8", "__Internal")]
		int kCIFormatLA8 { get; }

		// extern CIFormat kCIFormatLA16 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLA16", "__Internal")]
		int kCIFormatLA16 { get; }

		// extern CIFormat kCIFormatLAh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLAh", "__Internal")]
		int kCIFormatLAh { get; }

		// extern CIFormat kCIFormatLAf __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIFormatLAf", "__Internal")]
		int kCIFormatLAf { get; }

		// extern const CIImageOption _Nonnull kCIImageColorSpace __attribute__((visibility("default")));
		[Field ("kCIImageColorSpace", "__Internal")]
		NSString kCIImageColorSpace { get; }

		// extern const CIImageOption _Nonnull kCIImageNearestSampling __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageNearestSampling", "__Internal")]
		NSString kCIImageNearestSampling { get; }

		// extern const CIImageOption _Nonnull kCIImageProperties __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIImageProperties", "__Internal")]
		NSString kCIImageProperties { get; }

		// extern const CIImageOption _Nonnull kCIImageApplyOrientationProperty __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageApplyOrientationProperty", "__Internal")]
		NSString kCIImageApplyOrientationProperty { get; }

		// extern const CIImageOption _Nonnull kCIImageTextureTarget __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIImageTextureTarget", "__Internal")]
		NSString kCIImageTextureTarget { get; }

		// extern const CIImageOption _Nonnull kCIImageTextureFormat __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIImageTextureFormat", "__Internal")]
		NSString kCIImageTextureFormat { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliaryDepth __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageAuxiliaryDepth", "__Internal")]
		NSString kCIImageAuxiliaryDepth { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliaryDisparity __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageAuxiliaryDisparity", "__Internal")]
		NSString kCIImageAuxiliaryDisparity { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliaryPortraitEffectsMatte __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIImageAuxiliaryPortraitEffectsMatte", "__Internal")]
		NSString kCIImageAuxiliaryPortraitEffectsMatte { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliarySemanticSegmentationSkinMatte __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageAuxiliarySemanticSegmentationSkinMatte", "__Internal")]
		NSString kCIImageAuxiliarySemanticSegmentationSkinMatte { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliarySemanticSegmentationHairMatte __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageAuxiliarySemanticSegmentationHairMatte", "__Internal")]
		NSString kCIImageAuxiliarySemanticSegmentationHairMatte { get; }

		// extern const CIImageOption _Nonnull kCIImageAuxiliarySemanticSegmentationTeethMatte __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageAuxiliarySemanticSegmentationTeethMatte", "__Internal")]
		NSString kCIImageAuxiliarySemanticSegmentationTeethMatte { get; }
	}

	// @interface AutoAdjustment (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_AutoAdjustment
	{
		// -(NSArray<CIFilter *> * _Nonnull)autoAdjustmentFilters __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("autoAdjustmentFilters")]
		[Verify (MethodToProperty)]
		CIFilter[] AutoAdjustmentFilters { get; }

		// -(NSArray<CIFilter *> * _Nonnull)autoAdjustmentFiltersWithOptions:(NSDictionary<CIImageAutoAdjustmentOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("autoAdjustmentFiltersWithOptions:")]
		CIFilter[] AutoAdjustmentFiltersWithOptions ([NullAllowed] NSDictionary<NSString, NSObject> options);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CIImageAutoAdjustmentOption _Nonnull kCIImageAutoAdjustEnhance __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIImageAutoAdjustEnhance", "__Internal")]
		NSString kCIImageAutoAdjustEnhance { get; }

		// extern const CIImageAutoAdjustmentOption _Nonnull kCIImageAutoAdjustRedEye __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIImageAutoAdjustRedEye", "__Internal")]
		NSString kCIImageAutoAdjustRedEye { get; }

		// extern const CIImageAutoAdjustmentOption _Nonnull kCIImageAutoAdjustFeatures __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIImageAutoAdjustFeatures", "__Internal")]
		NSString kCIImageAutoAdjustFeatures { get; }

		// extern const CIImageAutoAdjustmentOption _Nonnull kCIImageAutoAdjustCrop __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCIImageAutoAdjustCrop", "__Internal")]
		NSString kCIImageAutoAdjustCrop { get; }

		// extern const CIImageAutoAdjustmentOption _Nonnull kCIImageAutoAdjustLevel __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCIImageAutoAdjustLevel", "__Internal")]
		NSString kCIImageAutoAdjustLevel { get; }
	}

	// @interface AVDepthData (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_AVDepthData
	{
		// @property (readonly, nonatomic) AVDepthData * _Nullable depthData __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[NullAllowed, Export ("depthData")]
		AVDepthData DepthData { get; }

		// -(instancetype _Nullable)initWithDepthData:(AVDepthData * _Nonnull)data options:(NSDictionary<NSString *,id> * _Nullable)options __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("initWithDepthData:options:")]
		IntPtr Constructor (AVDepthData data, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithDepthData:(AVDepthData * _Nonnull)data __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("initWithDepthData:")]
		IntPtr Constructor (AVDepthData data);

		// +(instancetype _Nullable)imageWithDepthData:(AVDepthData * _Nonnull)data options:(NSDictionary<NSString *,id> * _Nullable)options __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("imageWithDepthData:options:")]
		[return: NullAllowed]
		CIImage ImageWithDepthData (AVDepthData data, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(instancetype _Nullable)imageWithDepthData:(AVDepthData * _Nonnull)data __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("imageWithDepthData:")]
		[return: NullAllowed]
		CIImage ImageWithDepthData (AVDepthData data);
	}

	// @interface AVPortraitEffectsMatte (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_AVPortraitEffectsMatte
	{
		// @property (readonly, nonatomic) AVPortraitEffectsMatte * _Nullable portraitEffectsMatte __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[NullAllowed, Export ("portraitEffectsMatte")]
		AVPortraitEffectsMatte PortraitEffectsMatte { get; }

		// -(instancetype _Nullable)initWithPortaitEffectsMatte:(AVPortraitEffectsMatte * _Nonnull)matte options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("initWithPortaitEffectsMatte:options:")]
		IntPtr Constructor (AVPortraitEffectsMatte matte, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithPortaitEffectsMatte:(AVPortraitEffectsMatte * _Nonnull)matte __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("initWithPortaitEffectsMatte:")]
		IntPtr Constructor (AVPortraitEffectsMatte matte);

		// +(instancetype _Nullable)imageWithPortaitEffectsMatte:(AVPortraitEffectsMatte * _Nonnull)matte options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Static]
		[Export ("imageWithPortaitEffectsMatte:options:")]
		[return: NullAllowed]
		CIImage ImageWithPortaitEffectsMatte (AVPortraitEffectsMatte matte, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(instancetype _Nullable)imageWithPortaitEffectsMatte:(AVPortraitEffectsMatte * _Nonnull)matte __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Static]
		[Export ("imageWithPortaitEffectsMatte:")]
		[return: NullAllowed]
		CIImage ImageWithPortaitEffectsMatte (AVPortraitEffectsMatte matte);
	}

	// @interface AVSemanticSegmentationMatte (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_AVSemanticSegmentationMatte
	{
		// @property (readonly, nonatomic) AVSemanticSegmentationMatte * _Nullable semanticSegmentationMatte __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("semanticSegmentationMatte")]
		AVSemanticSegmentationMatte SemanticSegmentationMatte { get; }

		// -(instancetype _Nullable)initWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte * _Nonnull)matte options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("initWithSemanticSegmentationMatte:options:")]
		IntPtr Constructor (AVSemanticSegmentationMatte matte, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte * _Nonnull)matte __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("initWithSemanticSegmentationMatte:")]
		IntPtr Constructor (AVSemanticSegmentationMatte matte);

		// +(instancetype _Nullable)imageWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte * _Nonnull)matte options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Static]
		[Export ("imageWithSemanticSegmentationMatte:options:")]
		[return: NullAllowed]
		CIImage ImageWithSemanticSegmentationMatte (AVSemanticSegmentationMatte matte, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(instancetype _Nullable)imageWithSemanticSegmentationMatte:(AVSemanticSegmentationMatte * _Nonnull)matte __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Static]
		[Export ("imageWithSemanticSegmentationMatte:")]
		[return: NullAllowed]
		CIImage ImageWithSemanticSegmentationMatte (AVSemanticSegmentationMatte matte);
	}

	// @interface CIContext : NSObject
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIContext
	{
		// +(CIContext * _Nonnull)contextWithCGContext:(CGContextRef _Nonnull)cgctx options:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("contextWithCGContext:options:")]
		unsafe CIContext ContextWithCGContext (CGContextRef* cgctx, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIContext * _Nonnull)contextWithOptions:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("contextWithOptions:")]
		CIContext ContextWithOptions ([NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIContext * _Nonnull)context __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Static]
		[Export ("context")]
		[Verify (MethodToProperty)]
		CIContext Context { get; }

		// -(instancetype _Nonnull)initWithOptions:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithOptions:")]
		IntPtr Constructor ([NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIContext * _Nonnull)contextWithEAGLContext:(EAGLContext * _Nonnull)eaglContext __attribute__((availability(ios, introduced=5.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("contextWithEAGLContext:")]
		CIContext ContextWithEAGLContext (EAGLContext eaglContext);

		// +(CIContext * _Nonnull)contextWithEAGLContext:(EAGLContext * _Nonnull)eaglContext options:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image OpenGLES API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("contextWithEAGLContext:options:")]
		CIContext ContextWithEAGLContext (EAGLContext eaglContext, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIContext * _Nonnull)contextWithMTLDevice:(id<MTLDevice> _Nonnull)device __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("contextWithMTLDevice:")]
		CIContext ContextWithMTLDevice (MTLDevice device);

		// +(CIContext * _Nonnull)contextWithMTLDevice:(id<MTLDevice> _Nonnull)device options:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("contextWithMTLDevice:options:")]
		CIContext ContextWithMTLDevice (MTLDevice device, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// +(CIContext * _Nonnull)contextWithMTLCommandQueue:(id<MTLCommandQueue> _Nonnull)commandQueue __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Static]
		[Export ("contextWithMTLCommandQueue:")]
		CIContext ContextWithMTLCommandQueue (MTLCommandQueue commandQueue);

		// +(CIContext * _Nonnull)contextWithMTLCommandQueue:(id<MTLCommandQueue> _Nonnull)commandQueue options:(NSDictionary<CIContextOption,id> * _Nullable)options __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Static]
		[Export ("contextWithMTLCommandQueue:options:")]
		CIContext ContextWithMTLCommandQueue (MTLCommandQueue commandQueue, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// @property (readonly, nonatomic) CGColorSpaceRef _Nullable workingColorSpace __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("workingColorSpace")]
		unsafe CGColorSpaceRef* WorkingColorSpace { get; }

		// @property (readonly, nonatomic) CIFormat workingFormat __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("workingFormat")]
		int WorkingFormat { get; }

		// -(void)drawImage:(CIImage * _Nonnull)image atPoint:(CGPoint)atPoint fromRect:(CGRect)fromRect __attribute__((availability(ios, introduced=5.0, deprecated=6.0)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[Export ("drawImage:atPoint:fromRect:")]
		void DrawImage (CIImage image, CGPoint atPoint, CGRect fromRect);

		// -(void)drawImage:(CIImage * _Nonnull)image inRect:(CGRect)inRect fromRect:(CGRect)fromRect;
		[Export ("drawImage:inRect:fromRect:")]
		void DrawImage (CIImage image, CGRect inRect, CGRect fromRect);

		// -(CGLayerRef _Nullable)createCGLayerWithSize:(CGSize)size info:(CFDictionaryRef _Nullable)info __attribute__((cf_returns_retained)) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("createCGLayerWithSize:info:")]
		[return: NullAllowed]
		unsafe CGLayerRef* CreateCGLayerWithSize (CGSize size, [NullAllowed] CFDictionaryRef* info);

		// -(void)render:(CIImage * _Nonnull)image toBitmap:(void * _Nonnull)data rowBytes:(ptrdiff_t)rowBytes bounds:(CGRect)bounds format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nullable)colorSpace;
		[Export ("render:toBitmap:rowBytes:bounds:format:colorSpace:")]
		unsafe void Render (CIImage image, void* data, IntPtr rowBytes, CGRect bounds, int format, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(void)render:(CIImage * _Nonnull)image toIOSurface:(IOSurfaceRef _Nonnull)surface bounds:(CGRect)bounds colorSpace:(CGColorSpaceRef _Nullable)colorSpace __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("render:toIOSurface:bounds:colorSpace:")]
		unsafe void Render (CIImage image, IOSurfaceRef* surface, CGRect bounds, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(void)render:(CIImage * _Nonnull)image toCVPixelBuffer:(CVPixelBufferRef _Nonnull)buffer __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("render:toCVPixelBuffer:")]
		unsafe void Render (CIImage image, CVPixelBufferRef* buffer);

		// -(void)render:(CIImage * _Nonnull)image toCVPixelBuffer:(CVPixelBufferRef _Nonnull)buffer bounds:(CGRect)bounds colorSpace:(CGColorSpaceRef _Nullable)colorSpace __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("render:toCVPixelBuffer:bounds:colorSpace:")]
		unsafe void Render (CIImage image, CVPixelBufferRef* buffer, CGRect bounds, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(void)render:(CIImage * _Nonnull)image toMTLTexture:(id<MTLTexture> _Nonnull)texture commandBuffer:(id<MTLCommandBuffer> _Nullable)commandBuffer bounds:(CGRect)bounds colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("render:toMTLTexture:commandBuffer:bounds:colorSpace:")]
		unsafe void Render (CIImage image, MTLTexture texture, [NullAllowed] MTLCommandBuffer commandBuffer, CGRect bounds, CGColorSpaceRef* colorSpace);

		// -(void)reclaimResources __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("reclaimResources")]
		void ReclaimResources ();

		// -(void)clearCaches __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("clearCaches")]
		void ClearCaches ();

		// -(CGSize)inputImageMaximumSize __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("inputImageMaximumSize")]
		[Verify (MethodToProperty)]
		CGSize InputImageMaximumSize { get; }

		// -(CGSize)outputImageMaximumSize __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("outputImageMaximumSize")]
		[Verify (MethodToProperty)]
		CGSize OutputImageMaximumSize { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CIContextOption _Nonnull kCIContextOutputColorSpace __attribute__((visibility("default")));
		[Field ("kCIContextOutputColorSpace", "__Internal")]
		NSString kCIContextOutputColorSpace { get; }

		// extern const CIContextOption _Nonnull kCIContextWorkingColorSpace __attribute__((visibility("default")));
		[Field ("kCIContextWorkingColorSpace", "__Internal")]
		NSString kCIContextWorkingColorSpace { get; }

		// extern const CIContextOption _Nonnull kCIContextWorkingFormat __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCIContextWorkingFormat", "__Internal")]
		NSString kCIContextWorkingFormat { get; }

		// extern const CIContextOption _Nonnull kCIContextHighQualityDownsample __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIContextHighQualityDownsample", "__Internal")]
		NSString kCIContextHighQualityDownsample { get; }

		// extern const CIContextOption _Nonnull kCIContextOutputPremultiplied __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIContextOutputPremultiplied", "__Internal")]
		NSString kCIContextOutputPremultiplied { get; }

		// extern const CIContextOption _Nonnull kCIContextCacheIntermediates __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIContextCacheIntermediates", "__Internal")]
		NSString kCIContextCacheIntermediates { get; }

		// extern const CIContextOption _Nonnull kCIContextUseSoftwareRenderer __attribute__((visibility("default")));
		[Field ("kCIContextUseSoftwareRenderer", "__Internal")]
		NSString kCIContextUseSoftwareRenderer { get; }

		// extern const CIContextOption _Nonnull kCIContextPriorityRequestLow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("kCIContextPriorityRequestLow", "__Internal")]
		NSString kCIContextPriorityRequestLow { get; }

		// extern const CIContextOption _Nonnull kCIContextAllowLowPower __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIContextAllowLowPower", "__Internal")]
		NSString kCIContextAllowLowPower { get; }
	}

	// @interface createCGImage (CIContext)
	[Category]
	[BaseType (typeof(CIContext))]
	interface CIContext_createCGImage
	{
		// -(CGImageRef _Nullable)createCGImage:(CIImage * _Nonnull)image fromRect:(CGRect)fromRect __attribute__((cf_returns_retained));
		[Export ("createCGImage:fromRect:")]
		[return: NullAllowed]
		unsafe CGImageRef* CreateCGImage (CIImage image, CGRect fromRect);

		// -(CGImageRef _Nullable)createCGImage:(CIImage * _Nonnull)image fromRect:(CGRect)fromRect format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nullable)colorSpace __attribute__((cf_returns_retained));
		[Export ("createCGImage:fromRect:format:colorSpace:")]
		[return: NullAllowed]
		unsafe CGImageRef* CreateCGImage (CIImage image, CGRect fromRect, int format, [NullAllowed] CGColorSpaceRef* colorSpace);

		// -(CGImageRef _Nullable)createCGImage:(CIImage * _Nonnull)image fromRect:(CGRect)fromRect format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nullable)colorSpace deferred:(int)deferred __attribute__((cf_returns_retained)) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("createCGImage:fromRect:format:colorSpace:deferred:")]
		[return: NullAllowed]
		unsafe CGImageRef* CreateCGImage (CIImage image, CGRect fromRect, int format, [NullAllowed] CGColorSpaceRef* colorSpace, int deferred);
	}

	// @interface OfflineGPUSupport (CIContext)
	[Category]
	[BaseType (typeof(CIContext))]
	interface CIContext_OfflineGPUSupport
	{
		// +(unsigned int)offlineGPUCount __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Static]
		[Export ("offlineGPUCount")]
		[Verify (MethodToProperty)]
		uint OfflineGPUCount { get; }
	}

	// @interface ImageRepresentation (CIContext)
	[Category]
	[BaseType (typeof(CIContext))]
	interface CIContext_ImageRepresentation
	{
		// -(NSData * _Nullable)TIFFRepresentationOfImage:(CIImage * _Nonnull)image format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("TIFFRepresentationOfImage:format:colorSpace:options:")]
		[return: NullAllowed]
		unsafe NSData TIFFRepresentationOfImage (CIImage image, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options);

		// -(NSData * _Nullable)JPEGRepresentationOfImage:(CIImage * _Nonnull)image colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("JPEGRepresentationOfImage:colorSpace:options:")]
		[return: NullAllowed]
		unsafe NSData JPEGRepresentationOfImage (CIImage image, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options);

		// -(NSData * _Nullable)HEIFRepresentationOfImage:(CIImage * _Nonnull)image format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("HEIFRepresentationOfImage:format:colorSpace:options:")]
		[return: NullAllowed]
		unsafe NSData HEIFRepresentationOfImage (CIImage image, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options);

		// -(NSData * _Nullable)PNGRepresentationOfImage:(CIImage * _Nonnull)image format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("PNGRepresentationOfImage:format:colorSpace:options:")]
		[return: NullAllowed]
		unsafe NSData PNGRepresentationOfImage (CIImage image, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options);

		// -(int)writeTIFFRepresentationOfImage:(CIImage * _Nonnull)image toURL:(NSURL * _Nonnull)url format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options error:(NSError * _Nullable * _Nullable)errorPtr __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("writeTIFFRepresentationOfImage:toURL:format:colorSpace:options:error:")]
		unsafe int WriteTIFFRepresentationOfImage (CIImage image, NSUrl url, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSError errorPtr);

		// -(int)writePNGRepresentationOfImage:(CIImage * _Nonnull)image toURL:(NSURL * _Nonnull)url format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options error:(NSError * _Nullable * _Nullable)errorPtr __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("writePNGRepresentationOfImage:toURL:format:colorSpace:options:error:")]
		unsafe int WritePNGRepresentationOfImage (CIImage image, NSUrl url, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSError errorPtr);

		// -(int)writeJPEGRepresentationOfImage:(CIImage * _Nonnull)image toURL:(NSURL * _Nonnull)url colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options error:(NSError * _Nullable * _Nullable)errorPtr __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("writeJPEGRepresentationOfImage:toURL:colorSpace:options:error:")]
		unsafe int WriteJPEGRepresentationOfImage (CIImage image, NSUrl url, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSError errorPtr);

		// -(int)writeHEIFRepresentationOfImage:(CIImage * _Nonnull)image toURL:(NSURL * _Nonnull)url format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace options:(NSDictionary<CIImageRepresentationOption,id> * _Nonnull)options error:(NSError * _Nullable * _Nullable)errorPtr __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("writeHEIFRepresentationOfImage:toURL:format:colorSpace:options:error:")]
		unsafe int WriteHEIFRepresentationOfImage (CIImage image, NSUrl url, int format, CGColorSpaceRef* colorSpace, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSError errorPtr);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationAVDepthData __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageRepresentationAVDepthData", "__Internal")]
		NSString kCIImageRepresentationAVDepthData { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationDepthImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageRepresentationDepthImage", "__Internal")]
		NSString kCIImageRepresentationDepthImage { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationDisparityImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIImageRepresentationDisparityImage", "__Internal")]
		NSString kCIImageRepresentationDisparityImage { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationAVPortraitEffectsMatte __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIImageRepresentationAVPortraitEffectsMatte", "__Internal")]
		NSString kCIImageRepresentationAVPortraitEffectsMatte { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationPortraitEffectsMatteImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIImageRepresentationPortraitEffectsMatteImage", "__Internal")]
		NSString kCIImageRepresentationPortraitEffectsMatteImage { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationAVSemanticSegmentationMattes __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageRepresentationAVSemanticSegmentationMattes", "__Internal")]
		NSString kCIImageRepresentationAVSemanticSegmentationMattes { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationSemanticSegmentationSkinMatteImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageRepresentationSemanticSegmentationSkinMatteImage", "__Internal")]
		NSString kCIImageRepresentationSemanticSegmentationSkinMatteImage { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationSemanticSegmentationHairMatteImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageRepresentationSemanticSegmentationHairMatteImage", "__Internal")]
		NSString kCIImageRepresentationSemanticSegmentationHairMatteImage { get; }

		// extern const CIImageRepresentationOption _Nonnull kCIImageRepresentationSemanticSegmentationTeethMatteImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("kCIImageRepresentationSemanticSegmentationTeethMatteImage", "__Internal")]
		NSString kCIImageRepresentationSemanticSegmentationTeethMatteImage { get; }
	}

	// @interface CIDepthBlurEffect (CIContext)
	[Category]
	[BaseType (typeof(CIContext))]
	interface CIContext_CIDepthBlurEffect
	{
		// -(CIFilter * _Nullable)depthBlurEffectFilterForImageURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nullable)options __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("depthBlurEffectFilterForImageURL:options:")]
		[return: NullAllowed]
		CIFilter DepthBlurEffectFilterForImageURL (NSUrl url, [NullAllowed] NSDictionary options);

		// -(CIFilter * _Nullable)depthBlurEffectFilterForImageData:(NSData * _Nonnull)data options:(NSDictionary * _Nullable)options __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("depthBlurEffectFilterForImageData:options:")]
		[return: NullAllowed]
		CIFilter DepthBlurEffectFilterForImageData (NSData data, [NullAllowed] NSDictionary options);

		// -(CIFilter * _Nullable)depthBlurEffectFilterForImage:(CIImage * _Nonnull)image disparityImage:(CIImage * _Nonnull)disparityImage portraitEffectsMatte:(CIImage * _Nullable)portraitEffectsMatte orientation:(CGImagePropertyOrientation)orientation options:(NSDictionary * _Nullable)options __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("depthBlurEffectFilterForImage:disparityImage:portraitEffectsMatte:orientation:options:")]
		[return: NullAllowed]
		CIFilter DepthBlurEffectFilterForImage (CIImage image, CIImage disparityImage, [NullAllowed] CIImage portraitEffectsMatte, CGImagePropertyOrientation orientation, [NullAllowed] NSDictionary options);

		// -(CIFilter * _Nullable)depthBlurEffectFilterForImage:(CIImage * _Nonnull)image disparityImage:(CIImage * _Nonnull)disparityImage portraitEffectsMatte:(CIImage * _Nullable)portraitEffectsMatte hairSemanticSegmentation:(CIImage * _Nullable)hairSemanticSegmentation orientation:(CGImagePropertyOrientation)orientation options:(NSDictionary * _Nullable)options __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("depthBlurEffectFilterForImage:disparityImage:portraitEffectsMatte:hairSemanticSegmentation:orientation:options:")]
		[return: NullAllowed]
		CIFilter DepthBlurEffectFilterForImage (CIImage image, CIImage disparityImage, [NullAllowed] CIImage portraitEffectsMatte, [NullAllowed] CIImage hairSemanticSegmentation, CGImagePropertyOrientation orientation, [NullAllowed] NSDictionary options);
	}

	// @protocol CIFilterConstructor
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface CIFilterConstructor
	{
		// @required -(CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name;
		[Abstract]
		[Export ("filterWithName:")]
		[return: NullAllowed]
		CIFilter FilterWithName (string name);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull kCIAttributeFilterName __attribute__((visibility("default")));
		[Field ("kCIAttributeFilterName", "__Internal")]
		NSString kCIAttributeFilterName { get; }

		// extern NSString *const _Nonnull kCIAttributeFilterDisplayName __attribute__((visibility("default")));
		[Field ("kCIAttributeFilterDisplayName", "__Internal")]
		NSString kCIAttributeFilterDisplayName { get; }

		// extern NSString *const _Nonnull kCIAttributeDescription __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeDescription", "__Internal")]
		NSString kCIAttributeDescription { get; }

		// extern NSString *const _Nonnull kCIAttributeFilterAvailable_Mac __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeFilterAvailable_Mac", "__Internal")]
		NSString kCIAttributeFilterAvailable_Mac { get; }

		// extern NSString *const _Nonnull kCIAttributeFilterAvailable_iOS __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeFilterAvailable_iOS", "__Internal")]
		NSString kCIAttributeFilterAvailable_iOS { get; }

		// extern NSString *const _Nonnull kCIAttributeReferenceDocumentation __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeReferenceDocumentation", "__Internal")]
		NSString kCIAttributeReferenceDocumentation { get; }

		// extern NSString *const _Nonnull kCIAttributeFilterCategories __attribute__((visibility("default")));
		[Field ("kCIAttributeFilterCategories", "__Internal")]
		NSString kCIAttributeFilterCategories { get; }

		// extern NSString *const _Nonnull kCIAttributeClass __attribute__((visibility("default")));
		[Field ("kCIAttributeClass", "__Internal")]
		NSString kCIAttributeClass { get; }

		// extern NSString *const _Nonnull kCIAttributeType __attribute__((visibility("default")));
		[Field ("kCIAttributeType", "__Internal")]
		NSString kCIAttributeType { get; }

		// extern NSString *const _Nonnull kCIAttributeMin __attribute__((visibility("default")));
		[Field ("kCIAttributeMin", "__Internal")]
		NSString kCIAttributeMin { get; }

		// extern NSString *const _Nonnull kCIAttributeMax __attribute__((visibility("default")));
		[Field ("kCIAttributeMax", "__Internal")]
		NSString kCIAttributeMax { get; }

		// extern NSString *const _Nonnull kCIAttributeSliderMin __attribute__((visibility("default")));
		[Field ("kCIAttributeSliderMin", "__Internal")]
		NSString kCIAttributeSliderMin { get; }

		// extern NSString *const _Nonnull kCIAttributeSliderMax __attribute__((visibility("default")));
		[Field ("kCIAttributeSliderMax", "__Internal")]
		NSString kCIAttributeSliderMax { get; }

		// extern NSString *const _Nonnull kCIAttributeDefault __attribute__((visibility("default")));
		[Field ("kCIAttributeDefault", "__Internal")]
		NSString kCIAttributeDefault { get; }

		// extern NSString *const _Nonnull kCIAttributeIdentity __attribute__((visibility("default")));
		[Field ("kCIAttributeIdentity", "__Internal")]
		NSString kCIAttributeIdentity { get; }

		// extern NSString *const _Nonnull kCIAttributeName __attribute__((visibility("default")));
		[Field ("kCIAttributeName", "__Internal")]
		NSString kCIAttributeName { get; }

		// extern NSString *const _Nonnull kCIAttributeDisplayName __attribute__((visibility("default")));
		[Field ("kCIAttributeDisplayName", "__Internal")]
		NSString kCIAttributeDisplayName { get; }

		// extern NSString *const _Nonnull kCIUIParameterSet __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIUIParameterSet", "__Internal")]
		NSString kCIUIParameterSet { get; }

		// extern NSString *const _Nonnull kCIUISetBasic __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIUISetBasic", "__Internal")]
		NSString kCIUISetBasic { get; }

		// extern NSString *const _Nonnull kCIUISetIntermediate __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIUISetIntermediate", "__Internal")]
		NSString kCIUISetIntermediate { get; }

		// extern NSString *const _Nonnull kCIUISetAdvanced __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIUISetAdvanced", "__Internal")]
		NSString kCIUISetAdvanced { get; }

		// extern NSString *const _Nonnull kCIUISetDevelopment __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIUISetDevelopment", "__Internal")]
		NSString kCIUISetDevelopment { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeTime __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeTime", "__Internal")]
		NSString kCIAttributeTypeTime { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeScalar __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeScalar", "__Internal")]
		NSString kCIAttributeTypeScalar { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeDistance __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeDistance", "__Internal")]
		NSString kCIAttributeTypeDistance { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeAngle __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeAngle", "__Internal")]
		NSString kCIAttributeTypeAngle { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeBoolean __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeBoolean", "__Internal")]
		NSString kCIAttributeTypeBoolean { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeInteger __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIAttributeTypeInteger", "__Internal")]
		NSString kCIAttributeTypeInteger { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeCount __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIAttributeTypeCount", "__Internal")]
		NSString kCIAttributeTypeCount { get; }

		// extern NSString *const _Nonnull kCIAttributeTypePosition __attribute__((visibility("default")));
		[Field ("kCIAttributeTypePosition", "__Internal")]
		NSString kCIAttributeTypePosition { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeOffset __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeOffset", "__Internal")]
		NSString kCIAttributeTypeOffset { get; }

		// extern NSString *const _Nonnull kCIAttributeTypePosition3 __attribute__((visibility("default")));
		[Field ("kCIAttributeTypePosition3", "__Internal")]
		NSString kCIAttributeTypePosition3 { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeRectangle __attribute__((visibility("default")));
		[Field ("kCIAttributeTypeRectangle", "__Internal")]
		NSString kCIAttributeTypeRectangle { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeOpaqueColor __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeTypeOpaqueColor", "__Internal")]
		NSString kCIAttributeTypeOpaqueColor { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeColor __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIAttributeTypeColor", "__Internal")]
		NSString kCIAttributeTypeColor { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeGradient __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIAttributeTypeGradient", "__Internal")]
		NSString kCIAttributeTypeGradient { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeImage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIAttributeTypeImage", "__Internal")]
		NSString kCIAttributeTypeImage { get; }

		// extern NSString *const _Nonnull kCIAttributeTypeTransform __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIAttributeTypeTransform", "__Internal")]
		NSString kCIAttributeTypeTransform { get; }

		// extern NSString *const _Nonnull kCICategoryDistortionEffect __attribute__((visibility("default")));
		[Field ("kCICategoryDistortionEffect", "__Internal")]
		NSString kCICategoryDistortionEffect { get; }

		// extern NSString *const _Nonnull kCICategoryGeometryAdjustment __attribute__((visibility("default")));
		[Field ("kCICategoryGeometryAdjustment", "__Internal")]
		NSString kCICategoryGeometryAdjustment { get; }

		// extern NSString *const _Nonnull kCICategoryCompositeOperation __attribute__((visibility("default")));
		[Field ("kCICategoryCompositeOperation", "__Internal")]
		NSString kCICategoryCompositeOperation { get; }

		// extern NSString *const _Nonnull kCICategoryHalftoneEffect __attribute__((visibility("default")));
		[Field ("kCICategoryHalftoneEffect", "__Internal")]
		NSString kCICategoryHalftoneEffect { get; }

		// extern NSString *const _Nonnull kCICategoryColorAdjustment __attribute__((visibility("default")));
		[Field ("kCICategoryColorAdjustment", "__Internal")]
		NSString kCICategoryColorAdjustment { get; }

		// extern NSString *const _Nonnull kCICategoryColorEffect __attribute__((visibility("default")));
		[Field ("kCICategoryColorEffect", "__Internal")]
		NSString kCICategoryColorEffect { get; }

		// extern NSString *const _Nonnull kCICategoryTransition __attribute__((visibility("default")));
		[Field ("kCICategoryTransition", "__Internal")]
		NSString kCICategoryTransition { get; }

		// extern NSString *const _Nonnull kCICategoryTileEffect __attribute__((visibility("default")));
		[Field ("kCICategoryTileEffect", "__Internal")]
		NSString kCICategoryTileEffect { get; }

		// extern NSString *const _Nonnull kCICategoryGenerator __attribute__((visibility("default")));
		[Field ("kCICategoryGenerator", "__Internal")]
		NSString kCICategoryGenerator { get; }

		// extern NSString *const _Nonnull kCICategoryReduction __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCICategoryReduction", "__Internal")]
		NSString kCICategoryReduction { get; }

		// extern NSString *const _Nonnull kCICategoryGradient __attribute__((visibility("default")));
		[Field ("kCICategoryGradient", "__Internal")]
		NSString kCICategoryGradient { get; }

		// extern NSString *const _Nonnull kCICategoryStylize __attribute__((visibility("default")));
		[Field ("kCICategoryStylize", "__Internal")]
		NSString kCICategoryStylize { get; }

		// extern NSString *const _Nonnull kCICategorySharpen __attribute__((visibility("default")));
		[Field ("kCICategorySharpen", "__Internal")]
		NSString kCICategorySharpen { get; }

		// extern NSString *const _Nonnull kCICategoryBlur __attribute__((visibility("default")));
		[Field ("kCICategoryBlur", "__Internal")]
		NSString kCICategoryBlur { get; }

		// extern NSString *const _Nonnull kCICategoryVideo __attribute__((visibility("default")));
		[Field ("kCICategoryVideo", "__Internal")]
		NSString kCICategoryVideo { get; }

		// extern NSString *const _Nonnull kCICategoryStillImage __attribute__((visibility("default")));
		[Field ("kCICategoryStillImage", "__Internal")]
		NSString kCICategoryStillImage { get; }

		// extern NSString *const _Nonnull kCICategoryInterlaced __attribute__((visibility("default")));
		[Field ("kCICategoryInterlaced", "__Internal")]
		NSString kCICategoryInterlaced { get; }

		// extern NSString *const _Nonnull kCICategoryNonSquarePixels __attribute__((visibility("default")));
		[Field ("kCICategoryNonSquarePixels", "__Internal")]
		NSString kCICategoryNonSquarePixels { get; }

		// extern NSString *const _Nonnull kCICategoryHighDynamicRange __attribute__((visibility("default")));
		[Field ("kCICategoryHighDynamicRange", "__Internal")]
		NSString kCICategoryHighDynamicRange { get; }

		// extern NSString *const _Nonnull kCICategoryBuiltIn __attribute__((visibility("default")));
		[Field ("kCICategoryBuiltIn", "__Internal")]
		NSString kCICategoryBuiltIn { get; }

		// extern NSString *const _Nonnull kCICategoryFilterGenerator __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCICategoryFilterGenerator", "__Internal")]
		NSString kCICategoryFilterGenerator { get; }

		// extern NSString *const _Nonnull kCIApplyOptionExtent __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIApplyOptionExtent", "__Internal")]
		NSString kCIApplyOptionExtent { get; }

		// extern NSString *const _Nonnull kCIApplyOptionDefinition __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIApplyOptionDefinition", "__Internal")]
		NSString kCIApplyOptionDefinition { get; }

		// extern NSString *const _Nonnull kCIApplyOptionUserInfo __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIApplyOptionUserInfo", "__Internal")]
		NSString kCIApplyOptionUserInfo { get; }

		// extern NSString *const _Nonnull kCIApplyOptionColorSpace __attribute__((visibility("default"))) __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Field ("kCIApplyOptionColorSpace", "__Internal")]
		NSString kCIApplyOptionColorSpace { get; }

		// extern NSString *const _Nonnull kCIOutputImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIOutputImageKey", "__Internal")]
		NSString kCIOutputImageKey { get; }

		// extern NSString *const _Nonnull kCIInputBackgroundImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIInputBackgroundImageKey", "__Internal")]
		NSString kCIInputBackgroundImageKey { get; }

		// extern NSString *const _Nonnull kCIInputImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("kCIInputImageKey", "__Internal")]
		NSString kCIInputImageKey { get; }

		// extern NSString *const _Nonnull kCIInputDepthImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIInputDepthImageKey", "__Internal")]
		NSString kCIInputDepthImageKey { get; }

		// extern NSString *const _Nonnull kCIInputDisparityImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIInputDisparityImageKey", "__Internal")]
		NSString kCIInputDisparityImageKey { get; }

		// extern NSString *const _Nonnull kCIInputAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIInputAmountKey", "__Internal")]
		NSString kCIInputAmountKey { get; }

		// extern NSString *const _Nonnull kCIInputTimeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputTimeKey", "__Internal")]
		NSString kCIInputTimeKey { get; }

		// extern NSString *const _Nonnull kCIInputTransformKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputTransformKey", "__Internal")]
		NSString kCIInputTransformKey { get; }

		// extern NSString *const _Nonnull kCIInputScaleKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputScaleKey", "__Internal")]
		NSString kCIInputScaleKey { get; }

		// extern NSString *const _Nonnull kCIInputAspectRatioKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputAspectRatioKey", "__Internal")]
		NSString kCIInputAspectRatioKey { get; }

		// extern NSString *const _Nonnull kCIInputCenterKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputCenterKey", "__Internal")]
		NSString kCIInputCenterKey { get; }

		// extern NSString *const _Nonnull kCIInputRadiusKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputRadiusKey", "__Internal")]
		NSString kCIInputRadiusKey { get; }

		// extern NSString *const _Nonnull kCIInputAngleKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputAngleKey", "__Internal")]
		NSString kCIInputAngleKey { get; }

		// extern NSString *const _Nonnull kCIInputRefractionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIInputRefractionKey", "__Internal")]
		NSString kCIInputRefractionKey { get; }

		// extern NSString *const _Nonnull kCIInputWidthKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputWidthKey", "__Internal")]
		NSString kCIInputWidthKey { get; }

		// extern NSString *const _Nonnull kCIInputSharpnessKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputSharpnessKey", "__Internal")]
		NSString kCIInputSharpnessKey { get; }

		// extern NSString *const _Nonnull kCIInputIntensityKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputIntensityKey", "__Internal")]
		NSString kCIInputIntensityKey { get; }

		// extern NSString *const _Nonnull kCIInputEVKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputEVKey", "__Internal")]
		NSString kCIInputEVKey { get; }

		// extern NSString *const _Nonnull kCIInputSaturationKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputSaturationKey", "__Internal")]
		NSString kCIInputSaturationKey { get; }

		// extern NSString *const _Nonnull kCIInputColorKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputColorKey", "__Internal")]
		NSString kCIInputColorKey { get; }

		// extern NSString *const _Nonnull kCIInputBrightnessKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputBrightnessKey", "__Internal")]
		NSString kCIInputBrightnessKey { get; }

		// extern NSString *const _Nonnull kCIInputContrastKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputContrastKey", "__Internal")]
		NSString kCIInputContrastKey { get; }

		// extern NSString *const _Nonnull kCIInputBiasKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIInputBiasKey", "__Internal")]
		NSString kCIInputBiasKey { get; }

		// extern NSString *const _Nonnull kCIInputWeightsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIInputWeightsKey", "__Internal")]
		NSString kCIInputWeightsKey { get; }

		// extern NSString *const _Nonnull kCIInputGradientImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIInputGradientImageKey", "__Internal")]
		NSString kCIInputGradientImageKey { get; }

		// extern NSString *const _Nonnull kCIInputMaskImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputMaskImageKey", "__Internal")]
		NSString kCIInputMaskImageKey { get; }

		// extern NSString *const _Nonnull kCIInputMatteImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIInputMatteImageKey", "__Internal")]
		NSString kCIInputMatteImageKey { get; }

		// extern NSString *const _Nonnull kCIInputShadingImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIInputShadingImageKey", "__Internal")]
		NSString kCIInputShadingImageKey { get; }

		// extern NSString *const _Nonnull kCIInputTargetImageKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputTargetImageKey", "__Internal")]
		NSString kCIInputTargetImageKey { get; }

		// extern NSString *const _Nonnull kCIInputExtentKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("kCIInputExtentKey", "__Internal")]
		NSString kCIInputExtentKey { get; }

		// extern NSString *const _Nonnull kCIInputVersionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("kCIInputVersionKey", "__Internal")]
		NSString kCIInputVersionKey { get; }
	}

	// @interface CIFilter : NSObject <NSSecureCoding, NSCopying>
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIFilter : INSSecureCoding, INSCopying
	{
		// @property (readonly, nonatomic) CIImage * _Nullable outputImage __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("outputImage")]
		CIImage OutputImage { get; }

		// @property (copy, nonatomic) NSString * _Nonnull name;
		[Export ("name")]
		string Name { get; set; }

		// @property (getter = isEnabled) int enabled __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nonnull inputKeys;
		[Export ("inputKeys")]
		string[] InputKeys { get; }

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nonnull outputKeys;
		[Export ("outputKeys")]
		string[] OutputKeys { get; }

		// -(void)setDefaults;
		[Export ("setDefaults")]
		void SetDefaults ();

		// @property (readonly, nonatomic) NSDictionary<NSString *,id> * _Nonnull attributes;
		[Export ("attributes")]
		NSDictionary<NSString, NSObject> Attributes { get; }

		// -(CIImage * _Nullable)apply:(CIKernel * _Nonnull)k arguments:(NSArray * _Nullable)args options:(NSDictionary<NSString *,id> * _Nullable)dict __attribute__((availability(ios, unavailable)));
		[NoiOS]
		[Export ("apply:arguments:options:")]
		[Verify (StronglyTypedNSArray)]
		[return: NullAllowed]
		CIImage Apply (CIKernel k, [NullAllowed] NSObject[] args, [NullAllowed] NSDictionary<NSString, NSObject> dict);

		// -(CIImage * _Nullable)apply:(CIKernel * _Nonnull)k, ... __attribute__((sentinel(0, 1))) __attribute__((availability(ios, unavailable))) __attribute__((availability(swift, unavailable)));
		[Unavailable (PlatformName.Swift)]
		[NoiOS]
		[Internal]
		[Export ("apply:", IsVariadic = true)]
		[return: NullAllowed]
		CIImage Apply (CIKernel k, IntPtr varArgs);
	}

	// @protocol CIFilter
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface CIFilter
	{
		// @required @property (readonly, nonatomic) CIImage * _Nullable outputImage;
		[Abstract]
		[NullAllowed, Export ("outputImage")]
		CIImage OutputImage { get; }

		// @optional +(NSDictionary<NSString *,id> * _Nullable)customAttributes;
		[Static]
		[NullAllowed, Export ("customAttributes")]
		[Verify (MethodToProperty)]
		NSDictionary<NSString, NSObject> CustomAttributes { get; }
	}

	// @interface CIFilterRegistry (CIFilter)
	[Category]
	[BaseType (typeof(CIFilter))]
	interface CIFilter_CIFilterRegistry
	{
		// +(CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name;
		[Static]
		[Export ("filterWithName:")]
		[return: NullAllowed]
		CIFilter FilterWithName (string name);

		// +(CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name keysAndValues:(id)key0, ... __attribute__((sentinel(0, 1))) __attribute__((availability(swift, unavailable)));
		[Unavailable (PlatformName.Swift)]
		[Static, Internal]
		[Export ("filterWithName:keysAndValues:", IsVariadic = true)]
		[return: NullAllowed]
		CIFilter FilterWithName (string name, NSObject key0, IntPtr varArgs);

		// +(CIFilter * _Nullable)filterWithName:(NSString * _Nonnull)name withInputParameters:(NSDictionary<NSString *,id> * _Nullable)params __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Static]
		[Export ("filterWithName:withInputParameters:")]
		[return: NullAllowed]
		CIFilter FilterWithName (string name, [NullAllowed] NSDictionary<NSString, NSObject> @params);

		// +(NSArray<NSString *> * _Nonnull)filterNamesInCategory:(NSString * _Nullable)category;
		[Static]
		[Export ("filterNamesInCategory:")]
		string[] FilterNamesInCategory ([NullAllowed] string category);

		// +(NSArray<NSString *> * _Nonnull)filterNamesInCategories:(NSArray<NSString *> * _Nullable)categories;
		[Static]
		[Export ("filterNamesInCategories:")]
		string[] FilterNamesInCategories ([NullAllowed] string[] categories);

		// +(void)registerFilterName:(NSString * _Nonnull)name constructor:(id<CIFilterConstructor> _Nonnull)anObject classAttributes:(NSDictionary<NSString *,id> * _Nonnull)attributes __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("registerFilterName:constructor:classAttributes:")]
		void RegisterFilterName (string name, CIFilterConstructor anObject, NSDictionary<NSString, NSObject> attributes);

		// +(NSString * _Nullable)localizedNameForFilterName:(NSString * _Nonnull)filterName __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("localizedNameForFilterName:")]
		[return: NullAllowed]
		string LocalizedNameForFilterName (string filterName);

		// +(NSString * _Nonnull)localizedNameForCategory:(NSString * _Nonnull)category __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("localizedNameForCategory:")]
		string LocalizedNameForCategory (string category);

		// +(NSString * _Nullable)localizedDescriptionForFilterName:(NSString * _Nonnull)filterName __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("localizedDescriptionForFilterName:")]
		[return: NullAllowed]
		string LocalizedDescriptionForFilterName (string filterName);

		// +(NSURL * _Nullable)localizedReferenceDocumentationForFilterName:(NSString * _Nonnull)filterName __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("localizedReferenceDocumentationForFilterName:")]
		[return: NullAllowed]
		NSUrl LocalizedReferenceDocumentationForFilterName (string filterName);
	}

	// @interface CIFilterXMPSerialization (CIFilter)
	[Category]
	[BaseType (typeof(CIFilter))]
	interface CIFilter_CIFilterXMPSerialization
	{
		// +(NSData * _Nullable)serializedXMPFromFilters:(NSArray<CIFilter *> * _Nonnull)filters inputImageExtent:(CGRect)extent __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("serializedXMPFromFilters:inputImageExtent:")]
		[return: NullAllowed]
		NSData SerializedXMPFromFilters (CIFilter[] filters, CGRect extent);

		// +(NSArray<CIFilter *> * _Nonnull)filterArrayFromSerializedXMP:(NSData * _Nonnull)xmpData inputImageExtent:(CGRect)extent error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("filterArrayFromSerializedXMP:inputImageExtent:error:")]
		CIFilter[] FilterArrayFromSerializedXMP (NSData xmpData, CGRect extent, [NullAllowed] out NSError outError);
	}

	// typedef CGRect (^CIKernelROICallback)(int, CGRect);
	delegate CGRect CIKernelROICallback (int arg0, CGRect arg1);

	// @interface CIKernel : NSObject
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface CIKernel
	{
		// +(NSArray<CIKernel *> * _Nullable)kernelsWithString:(NSString * _Nonnull)string __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("kernelsWithString:")]
		[return: NullAllowed]
		CIKernel[] KernelsWithString (string @string);

		// +(instancetype _Nullable)kernelWithString:(NSString * _Nonnull)string __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("kernelWithString:")]
		[return: NullAllowed]
		CIKernel KernelWithString (string @string);

		// +(instancetype _Nullable)kernelWithFunctionName:(NSString * _Nonnull)name fromMetalLibraryData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("kernelWithFunctionName:fromMetalLibraryData:error:")]
		[return: NullAllowed]
		CIKernel KernelWithFunctionName (string name, NSData data, [NullAllowed] out NSError error);

		// +(instancetype _Nullable)kernelWithFunctionName:(NSString * _Nonnull)name fromMetalLibraryData:(NSData * _Nonnull)data outputPixelFormat:(CIFormat)format error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:")]
		[return: NullAllowed]
		CIKernel KernelWithFunctionName (string name, NSData data, int format, [NullAllowed] out NSError error);

		// @property (readonly, atomic) NSString * _Nonnull name __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("name")]
		string Name { get; }

		// -(void)setROISelector:(SEL _Nonnull)method __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("setROISelector:")]
		void SetROISelector (Selector method);

		// -(CIImage * _Nullable)applyWithExtent:(CGRect)extent roiCallback:(CIKernelROICallback _Nonnull)callback arguments:(NSArray<id> * _Nullable)args __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("applyWithExtent:roiCallback:arguments:")]
		[return: NullAllowed]
		CIImage ApplyWithExtent (CGRect extent, CIKernelROICallback callback, [NullAllowed] NSObject[] args);
	}

	// @interface CIColorKernel : CIKernel
	[iOS (8,0)]
	[BaseType (typeof(CIKernel))]
	interface CIColorKernel
	{
		// +(instancetype _Nullable)kernelWithString:(NSString * _Nonnull)string __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("kernelWithString:")]
		[return: NullAllowed]
		CIColorKernel KernelWithString (string @string);

		// -(CIImage * _Nullable)applyWithExtent:(CGRect)extent arguments:(NSArray<id> * _Nullable)args;
		[Export ("applyWithExtent:arguments:")]
		[return: NullAllowed]
		CIImage ApplyWithExtent (CGRect extent, [NullAllowed] NSObject[] args);
	}

	// @interface CIWarpKernel : CIKernel
	[iOS (8,0)]
	[BaseType (typeof(CIKernel))]
	interface CIWarpKernel
	{
		// +(instancetype _Nullable)kernelWithString:(NSString * _Nonnull)string __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("kernelWithString:")]
		[return: NullAllowed]
		CIWarpKernel KernelWithString (string @string);

		// -(CIImage * _Nullable)applyWithExtent:(CGRect)extent roiCallback:(CIKernelROICallback _Nonnull)callback inputImage:(CIImage * _Nonnull)image arguments:(NSArray<id> * _Nullable)args;
		[Export ("applyWithExtent:roiCallback:inputImage:arguments:")]
		[return: NullAllowed]
		CIImage ApplyWithExtent (CGRect extent, CIKernelROICallback callback, CIImage image, [NullAllowed] NSObject[] args);
	}

	// @interface CIBlendKernel : CIColorKernel
	[iOS (11,0)]
	[BaseType (typeof(CIColorKernel))]
	interface CIBlendKernel
	{
		// +(instancetype _Nullable)kernelWithString:(NSString * _Nonnull)string __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Core Image Kernel Language API deprecated. (Define CI_SILENCE_GL_DEPRECATION to silence these warnings)")]
		[Static]
		[Export ("kernelWithString:")]
		[return: NullAllowed]
		CIBlendKernel KernelWithString (string @string);

		// -(CIImage * _Nullable)applyWithForeground:(CIImage * _Nonnull)foreground background:(CIImage * _Nonnull)background;
		[Export ("applyWithForeground:background:")]
		[return: NullAllowed]
		CIImage ApplyWithForeground (CIImage foreground, CIImage background);

		// -(CIImage * _Nullable)applyWithForeground:(CIImage * _Nonnull)foreground background:(CIImage * _Nonnull)background colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("applyWithForeground:background:colorSpace:")]
		[return: NullAllowed]
		unsafe CIImage ApplyWithForeground (CIImage foreground, CIImage background, CGColorSpaceRef* colorSpace);
	}

	// @interface BuiltIn (CIBlendKernel)
	[Category]
	[BaseType (typeof(CIBlendKernel))]
	interface CIBlendKernel_BuiltIn
	{
		// @property (readonly, strong, class) CIBlendKernel * _Nonnull componentAdd;
		[Static]
		[Export ("componentAdd", ArgumentSemantic.Strong)]
		CIBlendKernel ComponentAdd { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull componentMultiply;
		[Static]
		[Export ("componentMultiply", ArgumentSemantic.Strong)]
		CIBlendKernel ComponentMultiply { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull componentMin;
		[Static]
		[Export ("componentMin", ArgumentSemantic.Strong)]
		CIBlendKernel ComponentMin { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull componentMax;
		[Static]
		[Export ("componentMax", ArgumentSemantic.Strong)]
		CIBlendKernel ComponentMax { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull clear;
		[Static]
		[Export ("clear", ArgumentSemantic.Strong)]
		CIBlendKernel Clear { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull source;
		[Static]
		[Export ("source", ArgumentSemantic.Strong)]
		CIBlendKernel Source { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull destination;
		[Static]
		[Export ("destination", ArgumentSemantic.Strong)]
		CIBlendKernel Destination { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull sourceOver;
		[Static]
		[Export ("sourceOver", ArgumentSemantic.Strong)]
		CIBlendKernel SourceOver { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull destinationOver;
		[Static]
		[Export ("destinationOver", ArgumentSemantic.Strong)]
		CIBlendKernel DestinationOver { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull sourceIn;
		[Static]
		[Export ("sourceIn", ArgumentSemantic.Strong)]
		CIBlendKernel SourceIn { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull destinationIn;
		[Static]
		[Export ("destinationIn", ArgumentSemantic.Strong)]
		CIBlendKernel DestinationIn { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull sourceOut;
		[Static]
		[Export ("sourceOut", ArgumentSemantic.Strong)]
		CIBlendKernel SourceOut { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull destinationOut;
		[Static]
		[Export ("destinationOut", ArgumentSemantic.Strong)]
		CIBlendKernel DestinationOut { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull sourceAtop;
		[Static]
		[Export ("sourceAtop", ArgumentSemantic.Strong)]
		CIBlendKernel SourceAtop { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull destinationAtop;
		[Static]
		[Export ("destinationAtop", ArgumentSemantic.Strong)]
		CIBlendKernel DestinationAtop { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull exclusiveOr;
		[Static]
		[Export ("exclusiveOr", ArgumentSemantic.Strong)]
		CIBlendKernel ExclusiveOr { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull multiply;
		[Static]
		[Export ("multiply", ArgumentSemantic.Strong)]
		CIBlendKernel Multiply { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull screen;
		[Static]
		[Export ("screen", ArgumentSemantic.Strong)]
		CIBlendKernel Screen { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull overlay;
		[Static]
		[Export ("overlay", ArgumentSemantic.Strong)]
		CIBlendKernel Overlay { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull darken;
		[Static]
		[Export ("darken", ArgumentSemantic.Strong)]
		CIBlendKernel Darken { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull lighten;
		[Static]
		[Export ("lighten", ArgumentSemantic.Strong)]
		CIBlendKernel Lighten { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull colorDodge;
		[Static]
		[Export ("colorDodge", ArgumentSemantic.Strong)]
		CIBlendKernel ColorDodge { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull colorBurn;
		[Static]
		[Export ("colorBurn", ArgumentSemantic.Strong)]
		CIBlendKernel ColorBurn { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull hardLight;
		[Static]
		[Export ("hardLight", ArgumentSemantic.Strong)]
		CIBlendKernel HardLight { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull softLight;
		[Static]
		[Export ("softLight", ArgumentSemantic.Strong)]
		CIBlendKernel SoftLight { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull difference;
		[Static]
		[Export ("difference", ArgumentSemantic.Strong)]
		CIBlendKernel Difference { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull exclusion;
		[Static]
		[Export ("exclusion", ArgumentSemantic.Strong)]
		CIBlendKernel Exclusion { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull hue;
		[Static]
		[Export ("hue", ArgumentSemantic.Strong)]
		CIBlendKernel Hue { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull saturation;
		[Static]
		[Export ("saturation", ArgumentSemantic.Strong)]
		CIBlendKernel Saturation { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull color;
		[Static]
		[Export ("color", ArgumentSemantic.Strong)]
		CIBlendKernel Color { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull luminosity;
		[Static]
		[Export ("luminosity", ArgumentSemantic.Strong)]
		CIBlendKernel Luminosity { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull subtract;
		[Static]
		[Export ("subtract", ArgumentSemantic.Strong)]
		CIBlendKernel Subtract { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull divide;
		[Static]
		[Export ("divide", ArgumentSemantic.Strong)]
		CIBlendKernel Divide { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull linearBurn;
		[Static]
		[Export ("linearBurn", ArgumentSemantic.Strong)]
		CIBlendKernel LinearBurn { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull linearDodge;
		[Static]
		[Export ("linearDodge", ArgumentSemantic.Strong)]
		CIBlendKernel LinearDodge { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull vividLight;
		[Static]
		[Export ("vividLight", ArgumentSemantic.Strong)]
		CIBlendKernel VividLight { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull linearLight;
		[Static]
		[Export ("linearLight", ArgumentSemantic.Strong)]
		CIBlendKernel LinearLight { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull pinLight;
		[Static]
		[Export ("pinLight", ArgumentSemantic.Strong)]
		CIBlendKernel PinLight { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull hardMix;
		[Static]
		[Export ("hardMix", ArgumentSemantic.Strong)]
		CIBlendKernel HardMix { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull darkerColor;
		[Static]
		[Export ("darkerColor", ArgumentSemantic.Strong)]
		CIBlendKernel DarkerColor { get; }

		// @property (readonly, strong, class) CIBlendKernel * _Nonnull lighterColor;
		[Static]
		[Export ("lighterColor", ArgumentSemantic.Strong)]
		CIBlendKernel LighterColor { get; }
	}

	// @interface CIDetector : NSObject
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIDetector
	{
		// +(CIDetector * _Nullable)detectorOfType:(NSString * _Nonnull)type context:(CIContext * _Nullable)context options:(NSDictionary<NSString *,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("detectorOfType:context:options:")]
		[return: NullAllowed]
		CIDetector DetectorOfType (string type, [NullAllowed] CIContext context, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(NSArray<CIFeature *> * _Nonnull)featuresInImage:(CIImage * _Nonnull)image __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("featuresInImage:")]
		CIFeature[] FeaturesInImage (CIImage image);

		// -(NSArray<CIFeature *> * _Nonnull)featuresInImage:(CIImage * _Nonnull)image options:(NSDictionary<NSString *,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("featuresInImage:options:")]
		CIFeature[] FeaturesInImage (CIImage image, [NullAllowed] NSDictionary<NSString, NSObject> options);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull CIDetectorTypeFace __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("CIDetectorTypeFace", "__Internal")]
		NSString CIDetectorTypeFace { get; }

		// extern NSString *const _Nonnull CIDetectorTypeRectangle __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("CIDetectorTypeRectangle", "__Internal")]
		NSString CIDetectorTypeRectangle { get; }

		// extern NSString *const _Nonnull CIDetectorTypeQRCode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("CIDetectorTypeQRCode", "__Internal")]
		NSString CIDetectorTypeQRCode { get; }

		// extern NSString *const _Nonnull CIDetectorTypeText __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("CIDetectorTypeText", "__Internal")]
		NSString CIDetectorTypeText { get; }

		// extern NSString *const _Nonnull CIDetectorAccuracy __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("CIDetectorAccuracy", "__Internal")]
		NSString CIDetectorAccuracy { get; }

		// extern NSString *const _Nonnull CIDetectorAccuracyLow __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("CIDetectorAccuracyLow", "__Internal")]
		NSString CIDetectorAccuracyLow { get; }

		// extern NSString *const _Nonnull CIDetectorAccuracyHigh __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("CIDetectorAccuracyHigh", "__Internal")]
		NSString CIDetectorAccuracyHigh { get; }

		// extern NSString *const _Nonnull CIDetectorTracking __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("CIDetectorTracking", "__Internal")]
		NSString CIDetectorTracking { get; }

		// extern NSString *const _Nonnull CIDetectorMinFeatureSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("CIDetectorMinFeatureSize", "__Internal")]
		NSString CIDetectorMinFeatureSize { get; }

		// extern NSString *const _Nonnull CIDetectorMaxFeatureCount __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("CIDetectorMaxFeatureCount", "__Internal")]
		NSString CIDetectorMaxFeatureCount { get; }

		// extern NSString *const _Nonnull CIDetectorNumberOfAngles __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("CIDetectorNumberOfAngles", "__Internal")]
		NSString CIDetectorNumberOfAngles { get; }

		// extern NSString *const _Nonnull CIDetectorImageOrientation __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("CIDetectorImageOrientation", "__Internal")]
		NSString CIDetectorImageOrientation { get; }

		// extern NSString *const _Nonnull CIDetectorEyeBlink __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("CIDetectorEyeBlink", "__Internal")]
		NSString CIDetectorEyeBlink { get; }

		// extern NSString *const _Nonnull CIDetectorSmile __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("CIDetectorSmile", "__Internal")]
		NSString CIDetectorSmile { get; }

		// extern NSString *const _Nonnull CIDetectorFocalLength __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("CIDetectorFocalLength", "__Internal")]
		NSString CIDetectorFocalLength { get; }

		// extern NSString *const _Nonnull CIDetectorAspectRatio __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("CIDetectorAspectRatio", "__Internal")]
		NSString CIDetectorAspectRatio { get; }

		// extern NSString *const _Nonnull CIDetectorReturnSubFeatures __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("CIDetectorReturnSubFeatures", "__Internal")]
		NSString CIDetectorReturnSubFeatures { get; }
	}

	// @interface CIFeature : NSObject
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface CIFeature
	{
		// @property (readonly, retain) NSString * _Nonnull type;
		[Export ("type", ArgumentSemantic.Retain)]
		string Type { get; }

		// @property (readonly, assign) CGRect bounds;
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull CIFeatureTypeFace __attribute__((visibility("default")));
		[Field ("CIFeatureTypeFace", "__Internal")]
		NSString CIFeatureTypeFace { get; }

		// extern NSString *const _Nonnull CIFeatureTypeRectangle __attribute__((visibility("default")));
		[Field ("CIFeatureTypeRectangle", "__Internal")]
		NSString CIFeatureTypeRectangle { get; }

		// extern NSString *const _Nonnull CIFeatureTypeQRCode __attribute__((visibility("default")));
		[Field ("CIFeatureTypeQRCode", "__Internal")]
		NSString CIFeatureTypeQRCode { get; }

		// extern NSString *const _Nonnull CIFeatureTypeText __attribute__((visibility("default")));
		[Field ("CIFeatureTypeText", "__Internal")]
		NSString CIFeatureTypeText { get; }
	}

	// @interface CIFaceFeature : CIFeature
	[iOS (5,0)]
	[BaseType (typeof(CIFeature))]
	interface CIFaceFeature
	{
		// @property (readonly, assign) CGRect bounds;
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; }

		// @property (readonly, assign) int hasLeftEyePosition;
		[Export ("hasLeftEyePosition")]
		int HasLeftEyePosition { get; }

		// @property (readonly, assign) CGPoint leftEyePosition;
		[Export ("leftEyePosition", ArgumentSemantic.Assign)]
		CGPoint LeftEyePosition { get; }

		// @property (readonly, assign) int hasRightEyePosition;
		[Export ("hasRightEyePosition")]
		int HasRightEyePosition { get; }

		// @property (readonly, assign) CGPoint rightEyePosition;
		[Export ("rightEyePosition", ArgumentSemantic.Assign)]
		CGPoint RightEyePosition { get; }

		// @property (readonly, assign) int hasMouthPosition;
		[Export ("hasMouthPosition")]
		int HasMouthPosition { get; }

		// @property (readonly, assign) CGPoint mouthPosition;
		[Export ("mouthPosition", ArgumentSemantic.Assign)]
		CGPoint MouthPosition { get; }

		// @property (readonly, assign) int hasTrackingID;
		[Export ("hasTrackingID")]
		int HasTrackingID { get; }

		// @property (readonly, assign) int trackingID;
		[Export ("trackingID")]
		int TrackingID { get; }

		// @property (readonly, assign) int hasTrackingFrameCount;
		[Export ("hasTrackingFrameCount")]
		int HasTrackingFrameCount { get; }

		// @property (readonly, assign) int trackingFrameCount;
		[Export ("trackingFrameCount")]
		int TrackingFrameCount { get; }

		// @property (readonly, assign) int hasFaceAngle;
		[Export ("hasFaceAngle")]
		int HasFaceAngle { get; }

		// @property (readonly, assign) float faceAngle;
		[Export ("faceAngle")]
		float FaceAngle { get; }

		// @property (readonly, assign) int hasSmile;
		[Export ("hasSmile")]
		int HasSmile { get; }

		// @property (readonly, assign) int leftEyeClosed;
		[Export ("leftEyeClosed")]
		int LeftEyeClosed { get; }

		// @property (readonly, assign) int rightEyeClosed;
		[Export ("rightEyeClosed")]
		int RightEyeClosed { get; }
	}

	// @interface CIRectangleFeature : CIFeature
	[iOS (8,0)]
	[BaseType (typeof(CIFeature))]
	interface CIRectangleFeature
	{
		// @property (readonly) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @property (readonly) CGPoint topLeft;
		[Export ("topLeft")]
		CGPoint TopLeft { get; }

		// @property (readonly) CGPoint topRight;
		[Export ("topRight")]
		CGPoint TopRight { get; }

		// @property (readonly) CGPoint bottomLeft;
		[Export ("bottomLeft")]
		CGPoint BottomLeft { get; }

		// @property (readonly) CGPoint bottomRight;
		[Export ("bottomRight")]
		CGPoint BottomRight { get; }
	}

	// @interface CIQRCodeFeature : CIFeature <NSSecureCoding, NSCopying>
	[iOS (8,0)]
	[BaseType (typeof(CIFeature))]
	interface CIQRCodeFeature : INSSecureCoding, INSCopying
	{
		// @property (readonly) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @property (readonly) CGPoint topLeft;
		[Export ("topLeft")]
		CGPoint TopLeft { get; }

		// @property (readonly) CGPoint topRight;
		[Export ("topRight")]
		CGPoint TopRight { get; }

		// @property (readonly) CGPoint bottomLeft;
		[Export ("bottomLeft")]
		CGPoint BottomLeft { get; }

		// @property (readonly) CGPoint bottomRight;
		[Export ("bottomRight")]
		CGPoint BottomRight { get; }

		// @property (readonly) NSString * _Nullable messageString;
		[NullAllowed, Export ("messageString")]
		string MessageString { get; }

		// @property (readonly) CIQRCodeDescriptor * _Nullable symbolDescriptor __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[NullAllowed, Export ("symbolDescriptor")]
		CIQRCodeDescriptor SymbolDescriptor { get; }
	}

	// @interface CITextFeature : CIFeature
	[iOS (9,0)]
	[BaseType (typeof(CIFeature))]
	interface CITextFeature
	{
		// @property (readonly) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @property (readonly) CGPoint topLeft;
		[Export ("topLeft")]
		CGPoint TopLeft { get; }

		// @property (readonly) CGPoint topRight;
		[Export ("topRight")]
		CGPoint TopRight { get; }

		// @property (readonly) CGPoint bottomLeft;
		[Export ("bottomLeft")]
		CGPoint BottomLeft { get; }

		// @property (readonly) CGPoint bottomRight;
		[Export ("bottomRight")]
		CGPoint BottomRight { get; }

		// @property (readonly) NSArray * _Nullable subFeatures;
		[NullAllowed, Export ("subFeatures")]
		[Verify (StronglyTypedNSArray)]
		NSObject[] SubFeatures { get; }
	}

	// @interface CIImageProvider (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_CIImageProvider
	{
		// +(CIImage * _Nonnull)imageWithImageProvider:(id _Nonnull)p size:(size_t)width :(size_t)height format:(CIFormat)f colorSpace:(CGColorSpaceRef _Nullable)cs options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("imageWithImageProvider:size::format:colorSpace:options:")]
		unsafe CIImage ImageWithImageProvider (NSObject p, nuint width, nuint height, int f, [NullAllowed] CGColorSpaceRef* cs, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nonnull)initWithImageProvider:(id _Nonnull)p size:(size_t)width :(size_t)height format:(CIFormat)f colorSpace:(CGColorSpaceRef _Nullable)cs options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithImageProvider:size::format:colorSpace:options:")]
		unsafe IntPtr Constructor (NSObject p, nuint width, nuint height, int f, [NullAllowed] CGColorSpaceRef* cs, [NullAllowed] NSDictionary<NSString, NSObject> options);
	}

	// @interface CIImageProvider (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_CIImageProvider
	{
		// -(void)provideImageData:(void * _Nonnull)data bytesPerRow:(size_t)rowbytes origin:(size_t)x :(size_t)y size:(size_t)width :(size_t)height userInfo:(id _Nullable)info;
		[Export ("provideImageData:bytesPerRow:origin::size::userInfo:")]
		unsafe void ProvideImageData (void* data, nuint rowbytes, nuint x, nuint y, nuint width, nuint height, [NullAllowed] NSObject info);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CIImageOption _Nonnull kCIImageProviderTileSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIImageProviderTileSize", "__Internal")]
		NSString kCIImageProviderTileSize { get; }

		// extern const CIImageOption _Nonnull kCIImageProviderUserInfo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCIImageProviderUserInfo", "__Internal")]
		NSString kCIImageProviderUserInfo { get; }
	}

	// @interface CIImageProcessorKernel : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface CIImageProcessorKernel
	{
		// +(int)processWithInputs:(NSArray<id<CIImageProcessorInput>> * _Nullable)inputs arguments:(NSDictionary<NSString *,id> * _Nullable)arguments output:(id<CIImageProcessorOutput> _Nonnull)output error:(NSError * _Nullable * _Nullable)error;
		[Static]
		[Export ("processWithInputs:arguments:output:error:")]
		int ProcessWithInputs ([NullAllowed] CIImageProcessorInput[] inputs, [NullAllowed] NSDictionary<NSString, NSObject> arguments, CIImageProcessorOutput output, [NullAllowed] out NSError error);

		// +(CGRect)roiForInput:(int)input arguments:(NSDictionary<NSString *,id> * _Nullable)arguments outputRect:(CGRect)outputRect;
		[Static]
		[Export ("roiForInput:arguments:outputRect:")]
		CGRect RoiForInput (int input, [NullAllowed] NSDictionary<NSString, NSObject> arguments, CGRect outputRect);

		// +(CIFormat)formatForInputAtIndex:(int)input;
		[Static]
		[Export ("formatForInputAtIndex:")]
		int FormatForInputAtIndex (int input);

		// @property (readonly, class) CIFormat outputFormat;
		[Static]
		[Export ("outputFormat")]
		int OutputFormat { get; }

		// @property (readonly, class) _Bool outputIsOpaque __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Static]
		[Export ("outputIsOpaque")]
		bool OutputIsOpaque { get; }

		// @property (readonly, class) _Bool synchronizeInputs;
		[Static]
		[Export ("synchronizeInputs")]
		bool SynchronizeInputs { get; }

		// +(CIImage * _Nullable)applyWithExtent:(CGRect)extent inputs:(NSArray<CIImage *> * _Nullable)inputs arguments:(NSDictionary<NSString *,id> * _Nullable)args error:(NSError * _Nullable * _Nullable)error;
		[Static]
		[Export ("applyWithExtent:inputs:arguments:error:")]
		[return: NullAllowed]
		CIImage ApplyWithExtent (CGRect extent, [NullAllowed] CIImage[] inputs, [NullAllowed] NSDictionary<NSString, NSObject> args, [NullAllowed] out NSError error);
	}

	// @protocol CIImageProcessorInput
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (10,0)]
	[Protocol]
	interface CIImageProcessorInput
	{
		// @required @property (readonly, nonatomic) CGRect region;
		[Abstract]
		[Export ("region")]
		CGRect Region { get; }

		// @required @property (readonly, nonatomic) size_t bytesPerRow;
		[Abstract]
		[Export ("bytesPerRow")]
		nuint BytesPerRow { get; }

		// @required @property (readonly, nonatomic) CIFormat format;
		[Abstract]
		[Export ("format")]
		int Format { get; }

		// @required @property (readonly, nonatomic) const void * _Nonnull baseAddress __attribute__((objc_returns_inner_pointer));
		[Abstract]
		[Export ("baseAddress")]
		unsafe void* BaseAddress { get; }

		// @required @property (readonly, nonatomic) IOSurfaceRef _Nonnull surface;
		[Abstract]
		[Export ("surface")]
		unsafe IOSurfaceRef* Surface { get; }

		// @required @property (readonly, nonatomic) CVPixelBufferRef _Nullable pixelBuffer;
		[Abstract]
		[NullAllowed, Export ("pixelBuffer")]
		unsafe CVPixelBufferRef* PixelBuffer { get; }

		// @required @property (readonly, nonatomic) id<MTLTexture> _Nullable metalTexture;
		[Abstract]
		[NullAllowed, Export ("metalTexture")]
		MTLTexture MetalTexture { get; }
	}

	// @protocol CIImageProcessorOutput
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (10,0)]
	[Protocol]
	interface CIImageProcessorOutput
	{
		// @required @property (readonly, nonatomic) CGRect region;
		[Abstract]
		[Export ("region")]
		CGRect Region { get; }

		// @required @property (readonly, nonatomic) size_t bytesPerRow;
		[Abstract]
		[Export ("bytesPerRow")]
		nuint BytesPerRow { get; }

		// @required @property (readonly, nonatomic) CIFormat format;
		[Abstract]
		[Export ("format")]
		int Format { get; }

		// @required @property (readonly, nonatomic) void * _Nonnull baseAddress __attribute__((objc_returns_inner_pointer));
		[Abstract]
		[Export ("baseAddress")]
		unsafe void* BaseAddress { get; }

		// @required @property (readonly, nonatomic) IOSurfaceRef _Nonnull surface;
		[Abstract]
		[Export ("surface")]
		unsafe IOSurfaceRef* Surface { get; }

		// @required @property (readonly, nonatomic) CVPixelBufferRef _Nullable pixelBuffer;
		[Abstract]
		[NullAllowed, Export ("pixelBuffer")]
		unsafe CVPixelBufferRef* PixelBuffer { get; }

		// @required @property (readonly, nonatomic) id<MTLTexture> _Nullable metalTexture;
		[Abstract]
		[NullAllowed, Export ("metalTexture")]
		MTLTexture MetalTexture { get; }

		// @required @property (readonly, nonatomic) id<MTLCommandBuffer> _Nullable metalCommandBuffer;
		[Abstract]
		[NullAllowed, Export ("metalCommandBuffer")]
		MTLCommandBuffer MetalCommandBuffer { get; }
	}

	// @interface CIImageAccumulator : NSObject
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface CIImageAccumulator
	{
		// +(instancetype _Nullable)imageAccumulatorWithExtent:(CGRect)extent format:(CIFormat)format;
		[Static]
		[Export ("imageAccumulatorWithExtent:format:")]
		[return: NullAllowed]
		CIImageAccumulator ImageAccumulatorWithExtent (CGRect extent, int format);

		// +(instancetype _Nullable)imageAccumulatorWithExtent:(CGRect)extent format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("imageAccumulatorWithExtent:format:colorSpace:")]
		[return: NullAllowed]
		unsafe CIImageAccumulator ImageAccumulatorWithExtent (CGRect extent, int format, CGColorSpaceRef* colorSpace);

		// -(instancetype _Nullable)initWithExtent:(CGRect)extent format:(CIFormat)format;
		[Export ("initWithExtent:format:")]
		IntPtr Constructor (CGRect extent, int format);

		// -(instancetype _Nullable)initWithExtent:(CGRect)extent format:(CIFormat)format colorSpace:(CGColorSpaceRef _Nonnull)colorSpace __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("initWithExtent:format:colorSpace:")]
		unsafe IntPtr Constructor (CGRect extent, int format, CGColorSpaceRef* colorSpace);

		// @property (readonly) CGRect extent;
		[Export ("extent")]
		CGRect Extent { get; }

		// @property (readonly) CIFormat format;
		[Export ("format")]
		int Format { get; }

		// -(CIImage * _Nonnull)image;
		// -(void)setImage:(CIImage * _Nonnull)image;
		[Export ("image")]
		[Verify (MethodToProperty)]
		CIImage Image { get; set; }

		// -(void)setImage:(CIImage * _Nonnull)image dirtyRect:(CGRect)dirtyRect;
		[Export ("setImage:dirtyRect:")]
		void SetImage (CIImage image, CGRect dirtyRect);

		// -(void)clear;
		[Export ("clear")]
		void Clear ();
	}

	// @interface CIFilterShape : NSObject <NSCopying>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface CIFilterShape : INSCopying
	{
		// +(instancetype _Nonnull)shapeWithRect:(CGRect)r;
		[Static]
		[Export ("shapeWithRect:")]
		CIFilterShape ShapeWithRect (CGRect r);

		// -(instancetype _Nonnull)initWithRect:(CGRect)r;
		[Export ("initWithRect:")]
		IntPtr Constructor (CGRect r);

		// -(CIFilterShape * _Nonnull)transformBy:(CGAffineTransform)m interior:(int)flag;
		[Export ("transformBy:interior:")]
		CIFilterShape TransformBy (CGAffineTransform m, int flag);

		// -(CIFilterShape * _Nonnull)insetByX:(int)dx Y:(int)dy;
		[Export ("insetByX:Y:")]
		CIFilterShape InsetByX (int dx, int dy);

		// -(CIFilterShape * _Nonnull)unionWith:(CIFilterShape * _Nonnull)s2;
		[Export ("unionWith:")]
		CIFilterShape UnionWith (CIFilterShape s2);

		// -(CIFilterShape * _Nonnull)unionWithRect:(CGRect)r;
		[Export ("unionWithRect:")]
		CIFilterShape UnionWithRect (CGRect r);

		// -(CIFilterShape * _Nonnull)intersectWith:(CIFilterShape * _Nonnull)s2;
		[Export ("intersectWith:")]
		CIFilterShape IntersectWith (CIFilterShape s2);

		// -(CIFilterShape * _Nonnull)intersectWithRect:(CGRect)r;
		[Export ("intersectWithRect:")]
		CIFilterShape IntersectWithRect (CGRect r);

		// @property (readonly) CGRect extent;
		[Export ("extent")]
		CGRect Extent { get; }
	}

	// @interface CISampler : NSObject <NSCopying>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface CISampler : INSCopying
	{
		// +(instancetype _Nonnull)samplerWithImage:(CIImage * _Nonnull)im;
		[Static]
		[Export ("samplerWithImage:")]
		CISampler SamplerWithImage (CIImage im);

		// +(instancetype _Nonnull)samplerWithImage:(CIImage * _Nonnull)im keysAndValues:(id)key0, ... __attribute__((sentinel(0, 1)));
		[Static, Internal]
		[Export ("samplerWithImage:keysAndValues:", IsVariadic = true)]
		CISampler SamplerWithImage (CIImage im, NSObject key0, IntPtr varArgs);

		// +(instancetype _Nonnull)samplerWithImage:(CIImage * _Nonnull)im options:(NSDictionary * _Nullable)dict;
		[Static]
		[Export ("samplerWithImage:options:")]
		CISampler SamplerWithImage (CIImage im, [NullAllowed] NSDictionary dict);

		// -(instancetype _Nonnull)initWithImage:(CIImage * _Nonnull)im;
		[Export ("initWithImage:")]
		IntPtr Constructor (CIImage im);

		// -(instancetype _Nonnull)initWithImage:(CIImage * _Nonnull)im keysAndValues:(id)key0, ...;
		[Internal]
		[Export ("initWithImage:keysAndValues:", IsVariadic = true)]
		IntPtr Constructor (CIImage im, NSObject key0, IntPtr varArgs);

		// -(instancetype _Nonnull)initWithImage:(CIImage * _Nonnull)im options:(NSDictionary * _Nullable)dict __attribute__((objc_designated_initializer));
		[Export ("initWithImage:options:")]
		[DesignatedInitializer]
		IntPtr Constructor (CIImage im, [NullAllowed] NSDictionary dict);

		// @property (readonly) CIFilterShape * _Nonnull definition;
		[Export ("definition")]
		CIFilterShape Definition { get; }

		// @property (readonly) CGRect extent;
		[Export ("extent")]
		CGRect Extent { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull kCISamplerAffineMatrix __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerAffineMatrix", "__Internal")]
		NSString kCISamplerAffineMatrix { get; }

		// extern NSString *const _Nonnull kCISamplerWrapMode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerWrapMode", "__Internal")]
		NSString kCISamplerWrapMode { get; }

		// extern NSString *const _Nonnull kCISamplerFilterMode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerFilterMode", "__Internal")]
		NSString kCISamplerFilterMode { get; }

		// extern NSString *const _Nonnull kCISamplerWrapBlack __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerWrapBlack", "__Internal")]
		NSString kCISamplerWrapBlack { get; }

		// extern NSString *const _Nonnull kCISamplerWrapClamp __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerWrapClamp", "__Internal")]
		NSString kCISamplerWrapClamp { get; }

		// extern NSString *const _Nonnull kCISamplerFilterNearest __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerFilterNearest", "__Internal")]
		NSString kCISamplerFilterNearest { get; }

		// extern NSString *const _Nonnull kCISamplerFilterLinear __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerFilterLinear", "__Internal")]
		NSString kCISamplerFilterLinear { get; }

		// extern NSString *const _Nonnull kCISamplerColorSpace __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("kCISamplerColorSpace", "__Internal")]
		NSString kCISamplerColorSpace { get; }
	}

	// @interface CIRAWFilter (CIFilter)
	[Category]
	[BaseType (typeof(CIFilter))]
	interface CIFilter_CIRAWFilter
	{
		// +(CIFilter *)filterWithImageURL:(NSURL *)url options:(NSDictionary<CIRAWFilterOption,id> *)options __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("filterWithImageURL:options:")]
		CIFilter FilterWithImageURL (NSUrl url, NSDictionary<NSString, NSObject> options);

		// +(CIFilter *)filterWithImageData:(NSData *)data options:(NSDictionary<CIRAWFilterOption,id> *)options __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("filterWithImageData:options:")]
		CIFilter FilterWithImageData (NSData data, NSDictionary<NSString, NSObject> options);

		// +(NSArray<NSString *> *)supportedRawCameraModels __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Static]
		[Export ("supportedRawCameraModels")]
		string[] SupportedRawCameraModels { get; }
	}

	[Static]
	partial interface Constants
	{
		// extern const CIRAWFilterOption kCIInputAllowDraftModeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputAllowDraftModeKey", "__Internal")]
		NSString kCIInputAllowDraftModeKey { get; }

		// extern const CIRAWFilterOption kCIInputDecoderVersionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputDecoderVersionKey", "__Internal")]
		NSString kCIInputDecoderVersionKey { get; }

		// extern const CIRAWFilterOption kCISupportedDecoderVersionsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCISupportedDecoderVersionsKey", "__Internal")]
		NSString kCISupportedDecoderVersionsKey { get; }

		// extern const CIRAWFilterOption kCIInputBaselineExposureKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputBaselineExposureKey", "__Internal")]
		NSString kCIInputBaselineExposureKey { get; }

		// extern const CIRAWFilterOption kCIInputBoostKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputBoostKey", "__Internal")]
		NSString kCIInputBoostKey { get; }

		// extern const CIRAWFilterOption kCIInputBoostShadowAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputBoostShadowAmountKey", "__Internal")]
		NSString kCIInputBoostShadowAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputDisableGamutMapKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputDisableGamutMapKey", "__Internal")]
		NSString kCIInputDisableGamutMapKey { get; }

		// extern const CIRAWFilterOption kCIInputNeutralChromaticityXKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNeutralChromaticityXKey", "__Internal")]
		NSString kCIInputNeutralChromaticityXKey { get; }

		// extern const CIRAWFilterOption kCIInputNeutralChromaticityYKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNeutralChromaticityYKey", "__Internal")]
		NSString kCIInputNeutralChromaticityYKey { get; }

		// extern const CIRAWFilterOption kCIInputNeutralTemperatureKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNeutralTemperatureKey", "__Internal")]
		NSString kCIInputNeutralTemperatureKey { get; }

		// extern const CIRAWFilterOption kCIInputNeutralTintKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNeutralTintKey", "__Internal")]
		NSString kCIInputNeutralTintKey { get; }

		// extern const CIRAWFilterOption kCIInputNeutralLocationKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNeutralLocationKey", "__Internal")]
		NSString kCIInputNeutralLocationKey { get; }

		// extern const CIRAWFilterOption kCIInputScaleFactorKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputScaleFactorKey", "__Internal")]
		NSString kCIInputScaleFactorKey { get; }

		// extern const CIRAWFilterOption kCIInputIgnoreImageOrientationKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputIgnoreImageOrientationKey", "__Internal")]
		NSString kCIInputIgnoreImageOrientationKey { get; }

		// extern const CIRAWFilterOption kCIInputImageOrientationKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputImageOrientationKey", "__Internal")]
		NSString kCIInputImageOrientationKey { get; }

		// extern const CIRAWFilterOption kCIInputEnableSharpeningKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputEnableSharpeningKey", "__Internal")]
		NSString kCIInputEnableSharpeningKey { get; }

		// extern const CIRAWFilterOption kCIInputEnableChromaticNoiseTrackingKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputEnableChromaticNoiseTrackingKey", "__Internal")]
		NSString kCIInputEnableChromaticNoiseTrackingKey { get; }

		// extern const CIRAWFilterOption kCIInputNoiseReductionAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNoiseReductionAmountKey", "__Internal")]
		NSString kCIInputNoiseReductionAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputMoireAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("kCIInputMoireAmountKey", "__Internal")]
		NSString kCIInputMoireAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputEnableVendorLensCorrectionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputEnableVendorLensCorrectionKey", "__Internal")]
		NSString kCIInputEnableVendorLensCorrectionKey { get; }

		// extern const CIRAWFilterOption kCIInputLuminanceNoiseReductionAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputLuminanceNoiseReductionAmountKey", "__Internal")]
		NSString kCIInputLuminanceNoiseReductionAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputColorNoiseReductionAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputColorNoiseReductionAmountKey", "__Internal")]
		NSString kCIInputColorNoiseReductionAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputNoiseReductionSharpnessAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNoiseReductionSharpnessAmountKey", "__Internal")]
		NSString kCIInputNoiseReductionSharpnessAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputNoiseReductionContrastAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNoiseReductionContrastAmountKey", "__Internal")]
		NSString kCIInputNoiseReductionContrastAmountKey { get; }

		// extern const CIRAWFilterOption kCIInputNoiseReductionDetailAmountKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputNoiseReductionDetailAmountKey", "__Internal")]
		NSString kCIInputNoiseReductionDetailAmountKey { get; }

		// extern NSString *const kCIInputEnableEDRModeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("kCIInputEnableEDRModeKey", "__Internal")]
		NSString kCIInputEnableEDRModeKey { get; }

		// extern const CIRAWFilterOption kCIInputLinearSpaceFilter __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIInputLinearSpaceFilter", "__Internal")]
		NSString kCIInputLinearSpaceFilter { get; }

		// extern const CIRAWFilterOption kCIOutputNativeSizeKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIOutputNativeSizeKey", "__Internal")]
		NSString kCIOutputNativeSizeKey { get; }

		// extern const CIRAWFilterOption kCIActiveKeys __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("kCIActiveKeys", "__Internal")]
		NSString kCIActiveKeys { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyAllocSize __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("IOSurfacePropertyKeyAllocSize", "__Internal")]
		NSString IOSurfacePropertyKeyAllocSize { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyWidth __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyWidth", "__Internal")]
		NSString IOSurfacePropertyKeyWidth { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyHeight __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyHeight", "__Internal")]
		NSString IOSurfacePropertyKeyHeight { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyBytesPerRow __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyBytesPerRow", "__Internal")]
		NSString IOSurfacePropertyKeyBytesPerRow { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyBytesPerElement __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyBytesPerElement", "__Internal")]
		NSString IOSurfacePropertyKeyBytesPerElement { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyElementWidth __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyElementWidth", "__Internal")]
		NSString IOSurfacePropertyKeyElementWidth { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyElementHeight __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyElementHeight", "__Internal")]
		NSString IOSurfacePropertyKeyElementHeight { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyOffset __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyOffset", "__Internal")]
		NSString IOSurfacePropertyKeyOffset { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneInfo __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneInfo", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneInfo { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneWidth __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneWidth", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneWidth { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneHeight __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneHeight", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneHeight { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneBytesPerRow __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneBytesPerRow", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneBytesPerRow { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneOffset __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneOffset", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneOffset { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneSize __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneSize", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneSize { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneBase __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneBase", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneBase { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneBytesPerElement __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneBytesPerElement", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneBytesPerElement { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneElementWidth __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneElementWidth", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneElementWidth { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPlaneElementHeight __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPlaneElementHeight", "__Internal")]
		NSString IOSurfacePropertyKeyPlaneElementHeight { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyCacheMode __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyCacheMode", "__Internal")]
		NSString IOSurfacePropertyKeyCacheMode { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPixelFormat __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPixelFormat", "__Internal")]
		NSString IOSurfacePropertyKeyPixelFormat { get; }

		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyKeyPixelSizeCastingAllowed __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("IOSurfacePropertyKeyPixelSizeCastingAllowed", "__Internal")]
		NSString IOSurfacePropertyKeyPixelSizeCastingAllowed { get; }
	}

	// @interface IOSurface : NSObject <NSSecureCoding>
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface IOSurface : INSSecureCoding
	{
		// -(instancetype _Nullable)initWithProperties:(NSDictionary<IOSurfacePropertyKey,id> * _Nonnull)properties;
		[Export ("initWithProperties:")]
		IntPtr Constructor (NSDictionary<NSString, NSObject> properties);

		// -(kern_return_t)lockWithOptions:(IOSurfaceLockOptions)options seed:(uint32_t * _Nullable)seed;
		[Export ("lockWithOptions:seed:")]
		unsafe int LockWithOptions (IOSurfaceLockOptions options, [NullAllowed] uint* seed);

		// -(kern_return_t)unlockWithOptions:(IOSurfaceLockOptions)options seed:(uint32_t * _Nullable)seed;
		[Export ("unlockWithOptions:seed:")]
		unsafe int UnlockWithOptions (IOSurfaceLockOptions options, [NullAllowed] uint* seed);

		// @property (readonly) NSInteger allocationSize;
		[Export ("allocationSize")]
		nint AllocationSize { get; }

		// @property (readonly) NSInteger width;
		[Export ("width")]
		nint Width { get; }

		// @property (readonly) NSInteger height;
		[Export ("height")]
		nint Height { get; }

		// @property (readonly) void * _Nonnull baseAddress __attribute__((objc_returns_inner_pointer));
		[Export ("baseAddress")]
		unsafe void* BaseAddress { get; }

		// @property (readonly) OSType pixelFormat;
		[Export ("pixelFormat")]
		uint PixelFormat { get; }

		// @property (readonly) NSInteger bytesPerRow;
		[Export ("bytesPerRow")]
		nint BytesPerRow { get; }

		// @property (readonly) NSInteger bytesPerElement;
		[Export ("bytesPerElement")]
		nint BytesPerElement { get; }

		// @property (readonly) NSInteger elementWidth;
		[Export ("elementWidth")]
		nint ElementWidth { get; }

		// @property (readonly) NSInteger elementHeight;
		[Export ("elementHeight")]
		nint ElementHeight { get; }

		// @property (readonly) uint32_t seed;
		[Export ("seed")]
		uint Seed { get; }

		// @property (readonly) NSUInteger planeCount;
		[Export ("planeCount")]
		nuint PlaneCount { get; }

		// -(NSInteger)widthOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("widthOfPlaneAtIndex:")]
		nint WidthOfPlaneAtIndex (nuint planeIndex);

		// -(NSInteger)heightOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("heightOfPlaneAtIndex:")]
		nint HeightOfPlaneAtIndex (nuint planeIndex);

		// -(NSInteger)bytesPerRowOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("bytesPerRowOfPlaneAtIndex:")]
		nint BytesPerRowOfPlaneAtIndex (nuint planeIndex);

		// -(NSInteger)bytesPerElementOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("bytesPerElementOfPlaneAtIndex:")]
		nint BytesPerElementOfPlaneAtIndex (nuint planeIndex);

		// -(NSInteger)elementWidthOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("elementWidthOfPlaneAtIndex:")]
		nint ElementWidthOfPlaneAtIndex (nuint planeIndex);

		// -(NSInteger)elementHeightOfPlaneAtIndex:(NSUInteger)planeIndex;
		[Export ("elementHeightOfPlaneAtIndex:")]
		nint ElementHeightOfPlaneAtIndex (nuint planeIndex);

		// -(void * _Nonnull)baseAddressOfPlaneAtIndex:(NSUInteger)planeIndex __attribute__((objc_returns_inner_pointer));
		[Export ("baseAddressOfPlaneAtIndex:")]
		unsafe void* BaseAddressOfPlaneAtIndex (nuint planeIndex);

		// -(void)setAttachment:(id _Nonnull)anObject forKey:(NSString * _Nonnull)key;
		[Export ("setAttachment:forKey:")]
		void SetAttachment (NSObject anObject, string key);

		// -(id _Nullable)attachmentForKey:(NSString * _Nonnull)key;
		[Export ("attachmentForKey:")]
		[return: NullAllowed]
		NSObject AttachmentForKey (string key);

		// -(void)removeAttachmentForKey:(NSString * _Nonnull)key;
		[Export ("removeAttachmentForKey:")]
		void RemoveAttachmentForKey (string key);

		// -(void)removeAllAttachments;
		[Export ("removeAllAttachments")]
		void RemoveAllAttachments ();

		// @property (readonly, getter = isInUse) int inUse;
		[Export ("inUse")]
		int InUse { [Bind ("isInUse")] get; }

		// -(void)incrementUseCount;
		[Export ("incrementUseCount")]
		void IncrementUseCount ();

		// -(void)decrementUseCount;
		[Export ("decrementUseCount")]
		void DecrementUseCount ();

		// @property (readonly) int32_t localUseCount;
		[Export ("localUseCount")]
		int LocalUseCount { get; }

		// @property (readonly) int allowsPixelSizeCasting;
		[Export ("allowsPixelSizeCasting")]
		int AllowsPixelSizeCasting { get; }

		// -(kern_return_t)setPurgeable:(IOSurfacePurgeabilityState)newState oldState:(IOSurfacePurgeabilityState * _Nullable)oldState __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("setPurgeable:oldState:")]
		unsafe int SetPurgeable (IOSurfacePurgeabilityState newState, [NullAllowed] IOSurfacePurgeabilityState* oldState);
	}

	[Static]
	partial interface Constants
	{
		// extern IOSurfacePropertyKey _Nonnull IOSurfacePropertyAllocSizeKey __attribute__((availability(ios, introduced=10.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 10, 0)]
		[Deprecated (PlatformName.iOS, 12, 0)]
		[Field ("IOSurfacePropertyAllocSizeKey", "__Internal")]
		NSString IOSurfacePropertyAllocSizeKey { get; }
	}

	// @interface CIRenderDestination : NSObject
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface CIRenderDestination
	{
		// -(instancetype _Nonnull)initWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
		[Export ("initWithPixelBuffer:")]
		unsafe IntPtr Constructor (CVPixelBufferRef* pixelBuffer);

		// -(instancetype _Nonnull)initWithIOSurface:(IOSurface * _Nonnull)surface;
		[Export ("initWithIOSurface:")]
		IntPtr Constructor (IOSurface surface);

		// -(instancetype _Nonnull)initWithMTLTexture:(id<MTLTexture> _Nonnull)texture commandBuffer:(id<MTLCommandBuffer> _Nullable)commandBuffer;
		[Export ("initWithMTLTexture:commandBuffer:")]
		IntPtr Constructor (MTLTexture texture, [NullAllowed] MTLCommandBuffer commandBuffer);

		// -(instancetype _Nonnull)initWithWidth:(NSUInteger)width height:(NSUInteger)height pixelFormat:(MTLPixelFormat)pixelFormat commandBuffer:(id<MTLCommandBuffer> _Nullable)commandBuffer mtlTextureProvider:(id<MTLTexture>  _Nonnull (^ _Nullable)(void))block;
		[Export ("initWithWidth:height:pixelFormat:commandBuffer:mtlTextureProvider:")]
		IntPtr Constructor (nuint width, nuint height, MTLPixelFormat pixelFormat, [NullAllowed] MTLCommandBuffer commandBuffer, [NullAllowed] Func<MTLTexture> block);

		// -(instancetype _Nonnull)initWithGLTexture:(unsigned int)texture target:(unsigned int)target width:(NSUInteger)width height:(NSUInteger)height;
		[Export ("initWithGLTexture:target:width:height:")]
		IntPtr Constructor (uint texture, uint target, nuint width, nuint height);

		// -(instancetype _Nonnull)initWithBitmapData:(void * _Nonnull)data width:(NSUInteger)width height:(NSUInteger)height bytesPerRow:(NSUInteger)bytesPerRow format:(CIFormat)format;
		[Export ("initWithBitmapData:width:height:bytesPerRow:format:")]
		unsafe IntPtr Constructor (void* data, nuint width, nuint height, nuint bytesPerRow, int format);

		// @property (readonly) NSUInteger width;
		[Export ("width")]
		nuint Width { get; }

		// @property (readonly) NSUInteger height;
		[Export ("height")]
		nuint Height { get; }

		// @property CIRenderDestinationAlphaMode alphaMode;
		[Export ("alphaMode", ArgumentSemantic.Assign)]
		CIRenderDestinationAlphaMode AlphaMode { get; set; }

		// @property (getter = isFlipped) int flipped;
		[Export ("flipped")]
		int Flipped { [Bind ("isFlipped")] get; set; }

		// @property (getter = isDithered) int dithered;
		[Export ("dithered")]
		int Dithered { [Bind ("isDithered")] get; set; }

		// @property (getter = isClamped) int clamped;
		[Export ("clamped")]
		int Clamped { [Bind ("isClamped")] get; set; }

		// @property (nonatomic) CGColorSpaceRef _Nullable colorSpace;
		[NullAllowed, Export ("colorSpace", ArgumentSemantic.Assign)]
		unsafe CGColorSpaceRef* ColorSpace { get; set; }

		// @property (retain, nonatomic) CIBlendKernel * _Nullable blendKernel;
		[NullAllowed, Export ("blendKernel", ArgumentSemantic.Retain)]
		CIBlendKernel BlendKernel { get; set; }

		// @property int blendsInDestinationColorSpace;
		[Export ("blendsInDestinationColorSpace")]
		int BlendsInDestinationColorSpace { get; set; }
	}

	// @interface CIRenderInfo : NSObject
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface CIRenderInfo
	{
		// @property (readonly) NSTimeInterval kernelExecutionTime;
		[Export ("kernelExecutionTime")]
		double KernelExecutionTime { get; }

		// @property (readonly) NSInteger passCount;
		[Export ("passCount")]
		nint PassCount { get; }

		// @property (readonly) NSInteger pixelsProcessed;
		[Export ("pixelsProcessed")]
		nint PixelsProcessed { get; }
	}

	// @interface CIRenderTask : NSObject
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface CIRenderTask
	{
		// -(CIRenderInfo * _Nullable)waitUntilCompletedAndReturnError:(NSError * _Nullable * _Nullable)error;
		[Export ("waitUntilCompletedAndReturnError:")]
		[return: NullAllowed]
		CIRenderInfo WaitUntilCompletedAndReturnError ([NullAllowed] out NSError error);
	}

	// @interface CIRenderDestination (CIContext)
	[Category]
	[BaseType (typeof(CIContext))]
	interface CIContext_CIRenderDestination
	{
		// -(CIRenderTask * _Nullable)startTaskToRender:(CIImage * _Nonnull)image fromRect:(CGRect)fromRect toDestination:(CIRenderDestination * _Nonnull)destination atPoint:(CGPoint)atPoint error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("startTaskToRender:fromRect:toDestination:atPoint:error:")]
		[return: NullAllowed]
		CIRenderTask StartTaskToRender (CIImage image, CGRect fromRect, CIRenderDestination destination, CGPoint atPoint, [NullAllowed] out NSError error);

		// -(CIRenderTask * _Nullable)startTaskToRender:(CIImage * _Nonnull)image toDestination:(CIRenderDestination * _Nonnull)destination error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("startTaskToRender:toDestination:error:")]
		[return: NullAllowed]
		CIRenderTask StartTaskToRender (CIImage image, CIRenderDestination destination, [NullAllowed] out NSError error);

		// -(int)prepareRender:(CIImage * _Nonnull)image fromRect:(CGRect)fromRect toDestination:(CIRenderDestination * _Nonnull)destination atPoint:(CGPoint)atPoint error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("prepareRender:fromRect:toDestination:atPoint:error:")]
		int PrepareRender (CIImage image, CGRect fromRect, CIRenderDestination destination, CGPoint atPoint, [NullAllowed] out NSError error);

		// -(CIRenderTask * _Nullable)startTaskToClear:(CIRenderDestination * _Nonnull)destination error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("startTaskToClear:error:")]
		[return: NullAllowed]
		CIRenderTask StartTaskToClear (CIRenderDestination destination, [NullAllowed] out NSError error);
	}

	// @interface CIBarcodeDescriptor : NSObject <NSSecureCoding, NSCopying>
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface CIBarcodeDescriptor : INSSecureCoding, INSCopying
	{
	}

	// @interface CIQRCodeDescriptor : CIBarcodeDescriptor
	[iOS (11,0)]
	[BaseType (typeof(CIBarcodeDescriptor))]
	interface CIQRCodeDescriptor
	{
		// @property (readonly) NSData * _Nonnull errorCorrectedPayload;
		[Export ("errorCorrectedPayload")]
		NSData ErrorCorrectedPayload { get; }

		// @property (readonly) NSInteger symbolVersion;
		[Export ("symbolVersion")]
		nint SymbolVersion { get; }

		// @property (readonly) uint8_t maskPattern;
		[Export ("maskPattern")]
		byte MaskPattern { get; }

		// @property (readonly) CIQRCodeErrorCorrectionLevel errorCorrectionLevel;
		[Export ("errorCorrectionLevel")]
		CIQRCodeErrorCorrectionLevel ErrorCorrectionLevel { get; }

		// -(instancetype _Nullable)initWithPayload:(NSData * _Nonnull)errorCorrectedPayload symbolVersion:(NSInteger)symbolVersion maskPattern:(uint8_t)maskPattern errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
		[Export ("initWithPayload:symbolVersion:maskPattern:errorCorrectionLevel:")]
		IntPtr Constructor (NSData errorCorrectedPayload, nint symbolVersion, byte maskPattern, CIQRCodeErrorCorrectionLevel errorCorrectionLevel);

		// +(instancetype _Nullable)descriptorWithPayload:(NSData * _Nonnull)errorCorrectedPayload symbolVersion:(NSInteger)symbolVersion maskPattern:(uint8_t)maskPattern errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
		[Static]
		[Export ("descriptorWithPayload:symbolVersion:maskPattern:errorCorrectionLevel:")]
		[return: NullAllowed]
		CIQRCodeDescriptor DescriptorWithPayload (NSData errorCorrectedPayload, nint symbolVersion, byte maskPattern, CIQRCodeErrorCorrectionLevel errorCorrectionLevel);
	}

	// @interface CIAztecCodeDescriptor : CIBarcodeDescriptor
	[iOS (11,0)]
	[BaseType (typeof(CIBarcodeDescriptor))]
	interface CIAztecCodeDescriptor
	{
		// @property (readonly) NSData * _Nonnull errorCorrectedPayload;
		[Export ("errorCorrectedPayload")]
		NSData ErrorCorrectedPayload { get; }

		// @property (readonly) int isCompact;
		[Export ("isCompact")]
		int IsCompact { get; }

		// @property (readonly) NSInteger layerCount;
		[Export ("layerCount")]
		nint LayerCount { get; }

		// @property (readonly) NSInteger dataCodewordCount;
		[Export ("dataCodewordCount")]
		nint DataCodewordCount { get; }

		// -(instancetype _Nullable)initWithPayload:(NSData * _Nonnull)errorCorrectedPayload isCompact:(int)isCompact layerCount:(NSInteger)layerCount dataCodewordCount:(NSInteger)dataCodewordCount;
		[Export ("initWithPayload:isCompact:layerCount:dataCodewordCount:")]
		IntPtr Constructor (NSData errorCorrectedPayload, int isCompact, nint layerCount, nint dataCodewordCount);

		// +(instancetype _Nullable)descriptorWithPayload:(NSData * _Nonnull)errorCorrectedPayload isCompact:(int)isCompact layerCount:(NSInteger)layerCount dataCodewordCount:(NSInteger)dataCodewordCount;
		[Static]
		[Export ("descriptorWithPayload:isCompact:layerCount:dataCodewordCount:")]
		[return: NullAllowed]
		CIAztecCodeDescriptor DescriptorWithPayload (NSData errorCorrectedPayload, int isCompact, nint layerCount, nint dataCodewordCount);
	}

	// @interface CIPDF417CodeDescriptor : CIBarcodeDescriptor
	[iOS (11,0)]
	[BaseType (typeof(CIBarcodeDescriptor))]
	interface CIPDF417CodeDescriptor
	{
		// @property (readonly) NSData * _Nonnull errorCorrectedPayload;
		[Export ("errorCorrectedPayload")]
		NSData ErrorCorrectedPayload { get; }

		// @property (readonly) int isCompact;
		[Export ("isCompact")]
		int IsCompact { get; }

		// @property (readonly) NSInteger rowCount;
		[Export ("rowCount")]
		nint RowCount { get; }

		// @property (readonly) NSInteger columnCount;
		[Export ("columnCount")]
		nint ColumnCount { get; }

		// -(instancetype _Nullable)initWithPayload:(NSData * _Nonnull)errorCorrectedPayload isCompact:(int)isCompact rowCount:(NSInteger)rowCount columnCount:(NSInteger)columnCount;
		[Export ("initWithPayload:isCompact:rowCount:columnCount:")]
		IntPtr Constructor (NSData errorCorrectedPayload, int isCompact, nint rowCount, nint columnCount);

		// +(instancetype _Nullable)descriptorWithPayload:(NSData * _Nonnull)errorCorrectedPayload isCompact:(int)isCompact rowCount:(NSInteger)rowCount columnCount:(NSInteger)columnCount;
		[Static]
		[Export ("descriptorWithPayload:isCompact:rowCount:columnCount:")]
		[return: NullAllowed]
		CIPdf417CodeDescriptor DescriptorWithPayload (NSData errorCorrectedPayload, int isCompact, nint rowCount, nint columnCount);
	}

	// @interface CIDataMatrixCodeDescriptor : CIBarcodeDescriptor
	[iOS (11,0)]
	[BaseType (typeof(CIBarcodeDescriptor))]
	interface CIDataMatrixCodeDescriptor
	{
		// @property (readonly) NSData * _Nonnull errorCorrectedPayload;
		[Export ("errorCorrectedPayload")]
		NSData ErrorCorrectedPayload { get; }

		// @property (readonly) NSInteger rowCount;
		[Export ("rowCount")]
		nint RowCount { get; }

		// @property (readonly) NSInteger columnCount;
		[Export ("columnCount")]
		nint ColumnCount { get; }

		// @property (readonly) CIDataMatrixCodeECCVersion eccVersion;
		[Export ("eccVersion")]
		CIDataMatrixCodeECCVersion EccVersion { get; }

		// -(instancetype _Nullable)initWithPayload:(NSData * _Nonnull)errorCorrectedPayload rowCount:(NSInteger)rowCount columnCount:(NSInteger)columnCount eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
		[Export ("initWithPayload:rowCount:columnCount:eccVersion:")]
		IntPtr Constructor (NSData errorCorrectedPayload, nint rowCount, nint columnCount, CIDataMatrixCodeECCVersion eccVersion);

		// +(instancetype _Nullable)descriptorWithPayload:(NSData * _Nonnull)errorCorrectedPayload rowCount:(NSInteger)rowCount columnCount:(NSInteger)columnCount eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
		[Static]
		[Export ("descriptorWithPayload:rowCount:columnCount:eccVersion:")]
		[return: NullAllowed]
		CIDataMatrixCodeDescriptor DescriptorWithPayload (NSData errorCorrectedPayload, nint rowCount, nint columnCount, CIDataMatrixCodeECCVersion eccVersion);
	}

	// @interface CIBarcodeDescriptor (NSUserActivity)
	[Category]
	[BaseType (typeof(NSUserActivity))]
	interface NSUserActivity_CIBarcodeDescriptor
	{
		// @property (readonly, copy, nonatomic) CIBarcodeDescriptor * _Nullable detectedBarcodeDescriptor __attribute__((availability(macos, introduced=10.13.4))) __attribute__((availability(ios, introduced=11.3))) __attribute__((availability(tvos, introduced=11.3)));
		[TV (11, 3), Mac (10, 13, 4), iOS (11, 3)]
		[NullAllowed, Export ("detectedBarcodeDescriptor", ArgumentSemantic.Copy)]
		CIBarcodeDescriptor DetectedBarcodeDescriptor { get; }
	}

	// @interface UIColor : NSObject <NSSecureCoding, NSCopying>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIColor : INSSecureCoding, INSCopying
	{
		// +(UIColor * _Nonnull)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
		[Static]
		[Export ("colorWithWhite:alpha:")]
		UIColor ColorWithWhite (nfloat white, nfloat alpha);

		// +(UIColor * _Nonnull)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
		[Static]
		[Export ("colorWithHue:saturation:brightness:alpha:")]
		UIColor ColorWithHue (nfloat hue, nfloat saturation, nfloat brightness, nfloat alpha);

		// +(UIColor * _Nonnull)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
		[Static]
		[Export ("colorWithRed:green:blue:alpha:")]
		UIColor ColorWithRed (nfloat red, nfloat green, nfloat blue, nfloat alpha);

		// +(UIColor * _Nonnull)colorWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("colorWithDisplayP3Red:green:blue:alpha:")]
		UIColor ColorWithDisplayP3Red (nfloat displayP3Red, nfloat green, nfloat blue, nfloat alpha);

		// +(UIColor * _Nonnull)colorWithCGColor:(CGColorRef _Nonnull)cgColor;
		[Static]
		[Export ("colorWithCGColor:")]
		unsafe UIColor ColorWithCGColor (CGColorRef* cgColor);

		// +(UIColor * _Nonnull)colorWithPatternImage:(UIImage * _Nonnull)image;
		[Static]
		[Export ("colorWithPatternImage:")]
		UIColor ColorWithPatternImage (UIImage image);

		// +(UIColor * _Nonnull)colorWithCIColor:(CIColor * _Nonnull)ciColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("colorWithCIColor:")]
		UIColor ColorWithCIColor (CIColor ciColor);

		// -(UIColor * _Nonnull)initWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
		[Export ("initWithWhite:alpha:")]
		IntPtr Constructor (nfloat white, nfloat alpha);

		// -(UIColor * _Nonnull)initWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
		[Export ("initWithHue:saturation:brightness:alpha:")]
		IntPtr Constructor (nfloat hue, nfloat saturation, nfloat brightness, nfloat alpha);

		// -(UIColor * _Nonnull)initWithPatternImage:(UIImage * _Nonnull)image;
		[Export ("initWithPatternImage:")]
		IntPtr Constructor (UIImage image);

		// -(UIColor * _Nonnull)initWithCIColor:(CIColor * _Nonnull)ciColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCIColor:")]
		IntPtr Constructor (CIColor ciColor);

		// @property (readonly, nonatomic, class) UIColor * _Nonnull blackColor;
		[Static]
		[Export ("blackColor")]
		UIColor BlackColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull darkGrayColor;
		[Static]
		[Export ("darkGrayColor")]
		UIColor DarkGrayColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull lightGrayColor;
		[Static]
		[Export ("lightGrayColor")]
		UIColor LightGrayColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull whiteColor;
		[Static]
		[Export ("whiteColor")]
		UIColor WhiteColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull grayColor;
		[Static]
		[Export ("grayColor")]
		UIColor GrayColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull redColor;
		[Static]
		[Export ("redColor")]
		UIColor RedColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull greenColor;
		[Static]
		[Export ("greenColor")]
		UIColor GreenColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull blueColor;
		[Static]
		[Export ("blueColor")]
		UIColor BlueColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull cyanColor;
		[Static]
		[Export ("cyanColor")]
		UIColor CyanColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull yellowColor;
		[Static]
		[Export ("yellowColor")]
		UIColor YellowColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull magentaColor;
		[Static]
		[Export ("magentaColor")]
		UIColor MagentaColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull orangeColor;
		[Static]
		[Export ("orangeColor")]
		UIColor OrangeColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull purpleColor;
		[Static]
		[Export ("purpleColor")]
		UIColor PurpleColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull brownColor;
		[Static]
		[Export ("brownColor")]
		UIColor BrownColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull clearColor;
		[Static]
		[Export ("clearColor")]
		UIColor ClearColor { get; }

		// -(void)set;
		[Export ("set")]
		void Set ();

		// -(void)setFill;
		[Export ("setFill")]
		void SetFill ();

		// -(void)setStroke;
		[Export ("setStroke")]
		void SetStroke ();

		// -(int)getWhite:(CGFloat * _Nullable)white alpha:(CGFloat * _Nullable)alpha __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("getWhite:alpha:")]
		unsafe int GetWhite ([NullAllowed] nfloat* white, [NullAllowed] nfloat* alpha);

		// -(int)getHue:(CGFloat * _Nullable)hue saturation:(CGFloat * _Nullable)saturation brightness:(CGFloat * _Nullable)brightness alpha:(CGFloat * _Nullable)alpha __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("getHue:saturation:brightness:alpha:")]
		unsafe int GetHue ([NullAllowed] nfloat* hue, [NullAllowed] nfloat* saturation, [NullAllowed] nfloat* brightness, [NullAllowed] nfloat* alpha);

		// -(int)getRed:(CGFloat * _Nullable)red green:(CGFloat * _Nullable)green blue:(CGFloat * _Nullable)blue alpha:(CGFloat * _Nullable)alpha __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("getRed:green:blue:alpha:")]
		unsafe int GetRed ([NullAllowed] nfloat* red, [NullAllowed] nfloat* green, [NullAllowed] nfloat* blue, [NullAllowed] nfloat* alpha);

		// -(UIColor * _Nonnull)colorWithAlphaComponent:(CGFloat)alpha;
		[Export ("colorWithAlphaComponent:")]
		UIColor ColorWithAlphaComponent (nfloat alpha);

		// @property (readonly, nonatomic) CGColorRef _Nonnull CGColor;
		[Export ("CGColor")]
		unsafe CGColorRef* CGColor { get; }

		// @property (readonly, nonatomic) CIColor * _Nonnull CIColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("CIColor")]
		CIColor CIColor { get; }
	}

	// @interface UINSItemProvider (UIColor) <NSItemProviderReading, NSItemProviderWriting>
	[Category]
	[BaseType (typeof(UIColor))]
	interface UIColor_UINSItemProvider : INSItemProviderReading, INSItemProviderWriting
	{
	}

	// @interface UIKitAdditions (CIColor)
	[Category]
	[BaseType (typeof(CIColor))]
	interface CIColor_UIKitAdditions
	{
		// -(instancetype _Nonnull)initWithColor:(UIColor * _Nonnull)color __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithColor:")]
		IntPtr Constructor (UIColor color);
	}

	// @interface UIColorNamedColors (UIColor)
	[Category]
	[BaseType (typeof(UIColor))]
	interface UIColor_UIColorNamedColors
	{
		// +(UIColor * _Nullable)colorNamed:(NSString * _Nonnull)name __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("colorNamed:")]
		[return: NullAllowed]
		UIColor ColorNamed (string name);

		// +(UIColor * _Nullable)colorNamed:(NSString * _Nonnull)name inBundle:(NSBundle * _Nullable)bundle compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("colorNamed:inBundle:compatibleWithTraitCollection:")]
		[return: NullAllowed]
		UIColor ColorNamed (string name, [NullAllowed] NSBundle bundle, [NullAllowed] UITraitCollection traitCollection);
	}

	// @interface DynamicColors (UIColor)
	[Category]
	[BaseType (typeof(UIColor))]
	interface UIColor_DynamicColors
	{
		// +(UIColor * _Nonnull)colorWithDynamicProvider:(UIColor * _Nonnull (^ _Nonnull)(UITraitCollection * _Nonnull))dynamicProvider __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Static]
		[Export ("colorWithDynamicProvider:")]
		UIColor ColorWithDynamicProvider (Func<UITraitCollection, UIColor> dynamicProvider);

		// -(UIColor * _Nonnull)initWithDynamicProvider:(UIColor * _Nonnull (^ _Nonnull)(UITraitCollection * _Nonnull))dynamicProvider __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Export ("initWithDynamicProvider:")]
		IntPtr Constructor (Func<UITraitCollection, UIColor> dynamicProvider);

		// -(UIColor * _Nonnull)resolvedColorWithTraitCollection:(UITraitCollection * _Nonnull)traitCollection __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Export ("resolvedColorWithTraitCollection:")]
		UIColor ResolvedColorWithTraitCollection (UITraitCollection traitCollection);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIFontDescriptorSystemDesign _Nonnull UIFontDescriptorSystemDesignDefault __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=5.2))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5, 2), TV (13, 0), iOS (13, 0)]
		[Field ("UIFontDescriptorSystemDesignDefault", "__Internal")]
		NSString UIFontDescriptorSystemDesignDefault { get; }

		// extern const UIFontDescriptorSystemDesign _Nonnull UIFontDescriptorSystemDesignRounded __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=5.2))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5, 2), TV (13, 0), iOS (13, 0)]
		[Field ("UIFontDescriptorSystemDesignRounded", "__Internal")]
		NSString UIFontDescriptorSystemDesignRounded { get; }

		// extern const UIFontDescriptorSystemDesign _Nonnull UIFontDescriptorSystemDesignSerif __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Field ("UIFontDescriptorSystemDesignSerif", "__Internal")]
		NSString UIFontDescriptorSystemDesignSerif { get; }

		// extern const UIFontDescriptorSystemDesign _Nonnull UIFontDescriptorSystemDesignMonospaced __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Field ("UIFontDescriptorSystemDesignMonospaced", "__Internal")]
		NSString UIFontDescriptorSystemDesignMonospaced { get; }
	}

	// @interface UIFontDescriptor : NSObject <NSCopying, NSSecureCoding>
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UIFontDescriptor : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic) NSString * _Nonnull postscriptName;
		[Export ("postscriptName")]
		string PostscriptName { get; }

		// @property (readonly, nonatomic) CGFloat pointSize;
		[Export ("pointSize")]
		nfloat PointSize { get; }

		// @property (readonly, nonatomic) CGAffineTransform matrix;
		[Export ("matrix")]
		CGAffineTransform Matrix { get; }

		// @property (readonly, nonatomic) UIFontDescriptorSymbolicTraits symbolicTraits;
		[Export ("symbolicTraits")]
		UIFontDescriptorSymbolicTraits SymbolicTraits { get; }

		// -(id _Nullable)objectForKey:(UIFontDescriptorAttributeName _Nonnull)anAttribute;
		[Export ("objectForKey:")]
		[return: NullAllowed]
		NSObject ObjectForKey (string anAttribute);

		// @property (readonly, nonatomic) NSDictionary<UIFontDescriptorAttributeName,id> * _Nonnull fontAttributes;
		[Export ("fontAttributes")]
		NSDictionary<NSString, NSObject> FontAttributes { get; }

		// -(NSArray<UIFontDescriptor *> * _Nonnull)matchingFontDescriptorsWithMandatoryKeys:(NSSet<UIFontDescriptorAttributeName> * _Nullable)mandatoryKeys;
		[Export ("matchingFontDescriptorsWithMandatoryKeys:")]
		UIFontDescriptor[] MatchingFontDescriptorsWithMandatoryKeys ([NullAllowed] NSSet<NSString> mandatoryKeys);

		// +(UIFontDescriptor * _Nonnull)fontDescriptorWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName,id> * _Nonnull)attributes;
		[Static]
		[Export ("fontDescriptorWithFontAttributes:")]
		UIFontDescriptor FontDescriptorWithFontAttributes (NSDictionary<NSString, NSObject> attributes);

		// +(UIFontDescriptor * _Nonnull)fontDescriptorWithName:(NSString * _Nonnull)fontName size:(CGFloat)size;
		[Static]
		[Export ("fontDescriptorWithName:size:")]
		UIFontDescriptor FontDescriptorWithName (string fontName, nfloat size);

		// +(UIFontDescriptor * _Nonnull)fontDescriptorWithName:(NSString * _Nonnull)fontName matrix:(CGAffineTransform)matrix;
		[Static]
		[Export ("fontDescriptorWithName:matrix:")]
		UIFontDescriptor FontDescriptorWithName (string fontName, CGAffineTransform matrix);

		// +(UIFontDescriptor * _Nonnull)preferredFontDescriptorWithTextStyle:(UIFontTextStyle _Nonnull)style;
		[Static]
		[Export ("preferredFontDescriptorWithTextStyle:")]
		UIFontDescriptor PreferredFontDescriptorWithTextStyle (string style);

		// +(UIFontDescriptor * _Nonnull)preferredFontDescriptorWithTextStyle:(UIFontTextStyle _Nonnull)style compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, iOS (10,0)]
		[Static]
		[Export ("preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:")]
		UIFontDescriptor PreferredFontDescriptorWithTextStyle (string style, [NullAllowed] UITraitCollection traitCollection);

		// -(instancetype _Nonnull)initWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName,id> * _Nonnull)attributes __attribute__((objc_designated_initializer));
		[Export ("initWithFontAttributes:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSDictionary<NSString, NSObject> attributes);

		// -(UIFontDescriptor * _Nonnull)fontDescriptorByAddingAttributes:(NSDictionary<UIFontDescriptorAttributeName,id> * _Nonnull)attributes;
		[Export ("fontDescriptorByAddingAttributes:")]
		UIFontDescriptor FontDescriptorByAddingAttributes (NSDictionary<NSString, NSObject> attributes);

		// -(UIFontDescriptor * _Nonnull)fontDescriptorWithSize:(CGFloat)newPointSize;
		[Export ("fontDescriptorWithSize:")]
		UIFontDescriptor FontDescriptorWithSize (nfloat newPointSize);

		// -(UIFontDescriptor * _Nonnull)fontDescriptorWithMatrix:(CGAffineTransform)matrix;
		[Export ("fontDescriptorWithMatrix:")]
		UIFontDescriptor FontDescriptorWithMatrix (CGAffineTransform matrix);

		// -(UIFontDescriptor * _Nonnull)fontDescriptorWithFace:(NSString * _Nonnull)newFace;
		[Export ("fontDescriptorWithFace:")]
		UIFontDescriptor FontDescriptorWithFace (string newFace);

		// -(UIFontDescriptor * _Nonnull)fontDescriptorWithFamily:(NSString * _Nonnull)newFamily;
		[Export ("fontDescriptorWithFamily:")]
		UIFontDescriptor FontDescriptorWithFamily (string newFamily);

		// -(UIFontDescriptor * _Nullable)fontDescriptorWithSymbolicTraits:(UIFontDescriptorSymbolicTraits)symbolicTraits;
		[Export ("fontDescriptorWithSymbolicTraits:")]
		[return: NullAllowed]
		UIFontDescriptor FontDescriptorWithSymbolicTraits (UIFontDescriptorSymbolicTraits symbolicTraits);

		// -(UIFontDescriptor * _Nullable)fontDescriptorWithDesign:(UIFontDescriptorSystemDesign _Nonnull)design __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=5.2))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5,2), TV (13,0), iOS (13,0)]
		[Export ("fontDescriptorWithDesign:")]
		[return: NullAllowed]
		UIFontDescriptor FontDescriptorWithDesign (string design);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorFamilyAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorFamilyAttribute", "__Internal")]
		NSString UIFontDescriptorFamilyAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorNameAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorNameAttribute", "__Internal")]
		NSString UIFontDescriptorNameAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorFaceAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorFaceAttribute", "__Internal")]
		NSString UIFontDescriptorFaceAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorSizeAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorSizeAttribute", "__Internal")]
		NSString UIFontDescriptorSizeAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorVisibleNameAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorVisibleNameAttribute", "__Internal")]
		NSString UIFontDescriptorVisibleNameAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorMatrixAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorMatrixAttribute", "__Internal")]
		NSString UIFontDescriptorMatrixAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorCharacterSetAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorCharacterSetAttribute", "__Internal")]
		NSString UIFontDescriptorCharacterSetAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorCascadeListAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorCascadeListAttribute", "__Internal")]
		NSString UIFontDescriptorCascadeListAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorTraitsAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorTraitsAttribute", "__Internal")]
		NSString UIFontDescriptorTraitsAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorFixedAdvanceAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorFixedAdvanceAttribute", "__Internal")]
		NSString UIFontDescriptorFixedAdvanceAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorFeatureSettingsAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorFeatureSettingsAttribute", "__Internal")]
		NSString UIFontDescriptorFeatureSettingsAttribute { get; }

		// extern const UIFontDescriptorAttributeName _Nonnull UIFontDescriptorTextStyleAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontDescriptorTextStyleAttribute", "__Internal")]
		NSString UIFontDescriptorTextStyleAttribute { get; }

		// extern const UIFontDescriptorTraitKey _Nonnull UIFontSymbolicTrait __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontSymbolicTrait", "__Internal")]
		NSString UIFontSymbolicTrait { get; }

		// extern const UIFontDescriptorTraitKey _Nonnull UIFontWeightTrait __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontWeightTrait", "__Internal")]
		NSString UIFontWeightTrait { get; }

		// extern const UIFontDescriptorTraitKey _Nonnull UIFontWidthTrait __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontWidthTrait", "__Internal")]
		NSString UIFontWidthTrait { get; }

		// extern const UIFontDescriptorTraitKey _Nonnull UIFontSlantTrait __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontSlantTrait", "__Internal")]
		NSString UIFontSlantTrait { get; }

		// extern const UIFontWeight UIFontWeightUltraLight __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightUltraLight", "__Internal")]
		double UIFontWeightUltraLight { get; }

		// extern const UIFontWeight UIFontWeightThin __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightThin", "__Internal")]
		double UIFontWeightThin { get; }

		// extern const UIFontWeight UIFontWeightLight __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightLight", "__Internal")]
		double UIFontWeightLight { get; }

		// extern const UIFontWeight UIFontWeightRegular __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightRegular", "__Internal")]
		double UIFontWeightRegular { get; }

		// extern const UIFontWeight UIFontWeightMedium __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightMedium", "__Internal")]
		double UIFontWeightMedium { get; }

		// extern const UIFontWeight UIFontWeightSemibold __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightSemibold", "__Internal")]
		double UIFontWeightSemibold { get; }

		// extern const UIFontWeight UIFontWeightBold __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightBold", "__Internal")]
		double UIFontWeightBold { get; }

		// extern const UIFontWeight UIFontWeightHeavy __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightHeavy", "__Internal")]
		double UIFontWeightHeavy { get; }

		// extern const UIFontWeight UIFontWeightBlack __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[Field ("UIFontWeightBlack", "__Internal")]
		double UIFontWeightBlack { get; }

		// extern const UIFontDescriptorFeatureKey _Nonnull UIFontFeatureTypeIdentifierKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontFeatureTypeIdentifierKey", "__Internal")]
		NSString UIFontFeatureTypeIdentifierKey { get; }

		// extern const UIFontDescriptorFeatureKey _Nonnull UIFontFeatureSelectorIdentifierKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontFeatureSelectorIdentifierKey", "__Internal")]
		NSString UIFontFeatureSelectorIdentifierKey { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleLargeTitle __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (5, 0), NoTV, iOS (11, 0)]
		[Field ("UIFontTextStyleLargeTitle", "__Internal")]
		NSString UIFontTextStyleLargeTitle { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleTitle1 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFontTextStyleTitle1", "__Internal")]
		NSString UIFontTextStyleTitle1 { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleTitle2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFontTextStyleTitle2", "__Internal")]
		NSString UIFontTextStyleTitle2 { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleTitle3 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFontTextStyleTitle3", "__Internal")]
		NSString UIFontTextStyleTitle3 { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleHeadline __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleHeadline", "__Internal")]
		NSString UIFontTextStyleHeadline { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleSubheadline __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleSubheadline", "__Internal")]
		NSString UIFontTextStyleSubheadline { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleBody __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleBody", "__Internal")]
		NSString UIFontTextStyleBody { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleCallout __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFontTextStyleCallout", "__Internal")]
		NSString UIFontTextStyleCallout { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleFootnote __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleFootnote", "__Internal")]
		NSString UIFontTextStyleFootnote { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleCaption1 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleCaption1", "__Internal")]
		NSString UIFontTextStyleCaption1 { get; }

		// extern const UIFontTextStyle _Nonnull UIFontTextStyleCaption2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIFontTextStyleCaption2", "__Internal")]
		NSString UIFontTextStyleCaption2 { get; }
	}

	// @interface UIFont : NSObject <NSCopying>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIFont : INSCopying
	{
		// +(UIFont * _Nonnull)preferredFontForTextStyle:(UIFontTextStyle _Nonnull)style __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("preferredFontForTextStyle:")]
		UIFont PreferredFontForTextStyle (string style);

		// +(UIFont * _Nonnull)preferredFontForTextStyle:(UIFontTextStyle _Nonnull)style compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, iOS (10,0)]
		[Static]
		[Export ("preferredFontForTextStyle:compatibleWithTraitCollection:")]
		UIFont PreferredFontForTextStyle (string style, [NullAllowed] UITraitCollection traitCollection);

		// +(UIFont * _Nullable)fontWithName:(NSString * _Nonnull)fontName size:(CGFloat)fontSize;
		[Static]
		[Export ("fontWithName:size:")]
		[return: NullAllowed]
		UIFont FontWithName (string fontName, nfloat fontSize);

		// @property (readonly, nonatomic, class) NSArray<NSString *> * _Nonnull familyNames;
		[Static]
		[Export ("familyNames")]
		string[] FamilyNames { get; }

		// +(NSArray<NSString *> * _Nonnull)fontNamesForFamilyName:(NSString * _Nonnull)familyName;
		[Static]
		[Export ("fontNamesForFamilyName:")]
		string[] FontNamesForFamilyName (string familyName);

		// +(UIFont * _Nonnull)systemFontOfSize:(CGFloat)fontSize;
		[Static]
		[Export ("systemFontOfSize:")]
		UIFont SystemFontOfSize (nfloat fontSize);

		// +(UIFont * _Nonnull)boldSystemFontOfSize:(CGFloat)fontSize;
		[Static]
		[Export ("boldSystemFontOfSize:")]
		UIFont BoldSystemFontOfSize (nfloat fontSize);

		// +(UIFont * _Nonnull)italicSystemFontOfSize:(CGFloat)fontSize;
		[Static]
		[Export ("italicSystemFontOfSize:")]
		UIFont ItalicSystemFontOfSize (nfloat fontSize);

		// +(UIFont * _Nonnull)systemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios, introduced=8.2)));
		[iOS (8,2)]
		[Static]
		[Export ("systemFontOfSize:weight:")]
		UIFont SystemFontOfSize (nfloat fontSize, double weight);

		// +(UIFont * _Nonnull)monospacedDigitSystemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("monospacedDigitSystemFontOfSize:weight:")]
		UIFont MonospacedDigitSystemFontOfSize (nfloat fontSize, double weight);

		// +(UIFont * _Nonnull)monospacedSystemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Static]
		[Export ("monospacedSystemFontOfSize:weight:")]
		UIFont MonospacedSystemFontOfSize (nfloat fontSize, double weight);

		// @property (readonly, nonatomic, strong) NSString * _Nonnull familyName;
		[Export ("familyName", ArgumentSemantic.Strong)]
		string FamilyName { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull fontName;
		[Export ("fontName", ArgumentSemantic.Strong)]
		string FontName { get; }

		// @property (readonly, nonatomic) CGFloat pointSize;
		[Export ("pointSize")]
		nfloat PointSize { get; }

		// @property (readonly, nonatomic) CGFloat ascender;
		[Export ("ascender")]
		nfloat Ascender { get; }

		// @property (readonly, nonatomic) CGFloat descender;
		[Export ("descender")]
		nfloat Descender { get; }

		// @property (readonly, nonatomic) CGFloat capHeight;
		[Export ("capHeight")]
		nfloat CapHeight { get; }

		// @property (readonly, nonatomic) CGFloat xHeight;
		[Export ("xHeight")]
		nfloat XHeight { get; }

		// @property (readonly, nonatomic) CGFloat lineHeight __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("lineHeight")]
		nfloat LineHeight { get; }

		// @property (readonly, nonatomic) CGFloat leading;
		[Export ("leading")]
		nfloat Leading { get; }

		// -(UIFont * _Nonnull)fontWithSize:(CGFloat)fontSize;
		[Export ("fontWithSize:")]
		UIFont FontWithSize (nfloat fontSize);

		// +(UIFont * _Nonnull)fontWithDescriptor:(UIFontDescriptor * _Nonnull)descriptor size:(CGFloat)pointSize __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("fontWithDescriptor:size:")]
		UIFont FontWithDescriptor (UIFontDescriptor descriptor, nfloat pointSize);

		// @property (readonly, nonatomic) UIFontDescriptor * _Nonnull fontDescriptor __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("fontDescriptor")]
		UIFontDescriptor FontDescriptor { get; }
	}

	// @interface UIColorSystemColors (UIColor)
	[Category]
	[BaseType (typeof(UIColor))]
	interface UIColor_UIColorSystemColors
	{
		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemRedColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemRedColor")]
		UIColor SystemRedColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGreenColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemGreenColor")]
		UIColor SystemGreenColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemBlueColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemBlueColor")]
		UIColor SystemBlueColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemOrangeColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemOrangeColor")]
		UIColor SystemOrangeColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemYellowColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemYellowColor")]
		UIColor SystemYellowColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemPinkColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemPinkColor")]
		UIColor SystemPinkColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemPurpleColor __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (9, 0)]
		[Static]
		[Export ("systemPurpleColor")]
		UIColor SystemPurpleColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemTealColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemTealColor")]
		UIColor SystemTealColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemIndigoColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("systemIndigoColor")]
		UIColor SystemIndigoColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGrayColor __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=9.0))) __attribute__((availability(watchos, unavailable)));
		[TV (9, 0), NoWatch, iOS (7, 0)]
		[Static]
		[Export ("systemGrayColor")]
		UIColor SystemGrayColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGray2Color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGray2Color")]
		UIColor SystemGray2Color { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGray3Color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGray3Color")]
		UIColor SystemGray3Color { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGray4Color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGray4Color")]
		UIColor SystemGray4Color { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGray5Color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGray5Color")]
		UIColor SystemGray5Color { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGray6Color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGray6Color")]
		UIColor SystemGray6Color { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull labelColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("labelColor")]
		UIColor LabelColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull secondaryLabelColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("secondaryLabelColor")]
		UIColor SecondaryLabelColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull tertiaryLabelColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("tertiaryLabelColor")]
		UIColor TertiaryLabelColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull quaternaryLabelColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("quaternaryLabelColor")]
		UIColor QuaternaryLabelColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull linkColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("linkColor")]
		UIColor LinkColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull placeholderTextColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("placeholderTextColor")]
		UIColor PlaceholderTextColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull separatorColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("separatorColor")]
		UIColor SeparatorColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull opaqueSeparatorColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("opaqueSeparatorColor")]
		UIColor OpaqueSeparatorColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemBackgroundColor")]
		UIColor SystemBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull secondarySystemBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("secondarySystemBackgroundColor")]
		UIColor SecondarySystemBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull tertiarySystemBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("tertiarySystemBackgroundColor")]
		UIColor TertiarySystemBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemGroupedBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemGroupedBackgroundColor")]
		UIColor SystemGroupedBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull secondarySystemGroupedBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("secondarySystemGroupedBackgroundColor")]
		UIColor SecondarySystemGroupedBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull tertiarySystemGroupedBackgroundColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("tertiarySystemGroupedBackgroundColor")]
		UIColor TertiarySystemGroupedBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull systemFillColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("systemFillColor")]
		UIColor SystemFillColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull secondarySystemFillColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("secondarySystemFillColor")]
		UIColor SecondarySystemFillColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull tertiarySystemFillColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("tertiarySystemFillColor")]
		UIColor TertiarySystemFillColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull quaternarySystemFillColor __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Static]
		[Export ("quaternarySystemFillColor")]
		UIColor QuaternarySystemFillColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull lightTextColor __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("lightTextColor")]
		UIColor LightTextColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull darkTextColor __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("darkTextColor")]
		UIColor DarkTextColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull groupTableViewBackgroundColor __attribute__((availability(ios, introduced=2.0, deprecated=13.0))) __attribute__((availability(tvos, introduced=13.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Introduced (PlatformName.TvOS, 13, 0)]
		[Deprecated (PlatformName.TvOS, 13, 0)]
		[Static]
		[Export ("groupTableViewBackgroundColor")]
		UIColor GroupTableViewBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull viewFlipsideBackgroundColor __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Static]
		[Export ("viewFlipsideBackgroundColor")]
		UIColor ViewFlipsideBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull scrollViewTexturedBackgroundColor __attribute__((availability(ios, introduced=3.2, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Static]
		[Export ("scrollViewTexturedBackgroundColor")]
		UIColor ScrollViewTexturedBackgroundColor { get; }

		// @property (readonly, nonatomic, class) UIColor * _Nonnull underPageBackgroundColor __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Static]
		[Export ("underPageBackgroundColor")]
		UIColor UnderPageBackgroundColor { get; }
	}

	// @interface UIFontSystemFonts (UIFont)
	[Category]
	[BaseType (typeof(UIFont))]
	interface UIFont_UIFontSystemFonts
	{
		// @property (readonly, nonatomic, class) CGFloat labelFontSize __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("labelFontSize")]
		nfloat LabelFontSize { get; }

		// @property (readonly, nonatomic, class) CGFloat buttonFontSize __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("buttonFontSize")]
		nfloat ButtonFontSize { get; }

		// @property (readonly, nonatomic, class) CGFloat smallSystemFontSize __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("smallSystemFontSize")]
		nfloat SmallSystemFontSize { get; }

		// @property (readonly, nonatomic, class) CGFloat systemFontSize __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Static]
		[Export ("systemFontSize")]
		nfloat SystemFontSize { get; }
	}

	// @protocol UIAppearanceContainer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAppearanceContainer
	{
	}

	// @protocol UIAppearance <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAppearance
	{
		// @required +(instancetype _Nonnull)appearance;
		[Static, Abstract]
		[Export ("appearance")]
		UIAppearance Appearance ();

		// @required +(instancetype _Nonnull)appearanceWhenContainedIn:(Class<UIAppearanceContainer> _Nullable)ContainerClass, ... __attribute__((sentinel(0, 1))) __attribute__((availability(ios, introduced=5.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Static, Internal, Abstract]
		[Export ("appearanceWhenContainedIn:", IsVariadic = true)]
		UIAppearance AppearanceWhenContainedIn ([NullAllowed] UIAppearanceContainer ContainerClass, IntPtr varArgs);

		// @required +(instancetype _Nonnull)appearanceWhenContainedInInstancesOfClasses:(NSArray<Class<UIAppearanceContainer>> * _Nonnull)containerTypes __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static, Abstract]
		[Export ("appearanceWhenContainedInInstancesOfClasses:")]
		UIAppearance AppearanceWhenContainedInInstancesOfClasses (UIAppearanceContainer[] containerTypes);

		// @required +(instancetype _Nonnull)appearanceForTraitCollection:(UITraitCollection * _Nonnull)trait __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Static, Abstract]
		[Export ("appearanceForTraitCollection:")]
		UIAppearance AppearanceForTraitCollection (UITraitCollection trait);

		// @required +(instancetype _Nonnull)appearanceForTraitCollection:(UITraitCollection * _Nonnull)trait whenContainedIn:(Class<UIAppearanceContainer> _Nullable)ContainerClass, ... __attribute__((sentinel(0, 1))) __attribute__((availability(ios, introduced=8.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Static, Internal, Abstract]
		[Export ("appearanceForTraitCollection:whenContainedIn:", IsVariadic = true)]
		UIAppearance AppearanceForTraitCollection (UITraitCollection trait, [NullAllowed] UIAppearanceContainer ContainerClass, IntPtr varArgs);

		// @required +(instancetype _Nonnull)appearanceForTraitCollection:(UITraitCollection * _Nonnull)trait whenContainedInInstancesOfClasses:(NSArray<Class<UIAppearanceContainer>> * _Nonnull)containerTypes __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static, Abstract]
		[Export ("appearanceForTraitCollection:whenContainedInInstancesOfClasses:")]
		UIAppearance AppearanceForTraitCollection (UITraitCollection trait, UIAppearanceContainer[] containerTypes);
	}

	// @protocol UIDynamicItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIDynamicItem
	{
		// @required @property (readwrite, nonatomic) CGPoint center;
		[Abstract]
		[Export ("center", ArgumentSemantic.Assign)]
		CGPoint Center { get; set; }

		// @required @property (readonly, nonatomic) CGRect bounds;
		[Abstract]
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @required @property (readwrite, nonatomic) CGAffineTransform transform;
		[Abstract]
		[Export ("transform", ArgumentSemantic.Assign)]
		CGAffineTransform Transform { get; set; }

		// @optional @property (readonly, nonatomic) UIDynamicItemCollisionBoundsType collisionBoundsType __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("collisionBoundsType")]
		UIDynamicItemCollisionBoundsType CollisionBoundsType { get; }

		// @optional @property (readonly, nonatomic) UIBezierPath * _Nonnull collisionBoundingPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("collisionBoundingPath")]
		UIBezierPath CollisionBoundingPath { get; }
	}

	// @interface UIDynamicItemGroup : NSObject <UIDynamicItem>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIDynamicItemGroup : IUIDynamicItem
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray<id<UIDynamicItem>> * _Nonnull)items;
		[Export ("initWithItems:")]
		IntPtr Constructor (UIDynamicItem[] items);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }
	}

	// @interface UIDynamicBehavior : NSObject
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UIDynamicBehavior
	{
		// -(void)addChildBehavior:(UIDynamicBehavior * _Nonnull)behavior;
		[Export ("addChildBehavior:")]
		void AddChildBehavior (UIDynamicBehavior behavior);

		// -(void)removeChildBehavior:(UIDynamicBehavior * _Nonnull)behavior;
		[Export ("removeChildBehavior:")]
		void RemoveChildBehavior (UIDynamicBehavior behavior);

		// @property (readonly, copy, nonatomic) NSArray<__kindof UIDynamicBehavior *> * _Nonnull childBehaviors;
		[Export ("childBehaviors", ArgumentSemantic.Copy)]
		UIDynamicBehavior[] ChildBehaviors { get; }

		// @property (copy, nonatomic) void (^ _Nullable)(void) action;
		[NullAllowed, Export ("action", ArgumentSemantic.Copy)]
		Action Action { get; set; }

		// -(void)willMoveToAnimator:(UIDynamicAnimator * _Nullable)dynamicAnimator;
		[Export ("willMoveToAnimator:")]
		void WillMoveToAnimator ([NullAllowed] UIDynamicAnimator dynamicAnimator);

		// @property (readonly, nonatomic) UIDynamicAnimator * _Nullable dynamicAnimator;
		[NullAllowed, Export ("dynamicAnimator")]
		UIDynamicAnimator DynamicAnimator { get; }
	}

	// @interface NSLayoutConstraint : NSObject
	[TV (9,0), Mac (10,7), iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface NSLayoutConstraint
	{
		// +(NSArray<NSLayoutConstraint *> * _Nonnull)constraintsWithVisualFormat:(NSString * _Nonnull)format options:(NSLayoutFormatOptions)opts metrics:(NSDictionary<NSString *,id> * _Nullable)metrics views:(NSDictionary<NSString *,id> * _Nonnull)views __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, introduced=9.0)));
		[TV (9,0), Mac (10,7), iOS (6,0)]
		[Static]
		[Export ("constraintsWithVisualFormat:options:metrics:views:")]
		NSLayoutConstraint[] ConstraintsWithVisualFormat (string format, NSLayoutFormatOptions opts, [NullAllowed] NSDictionary<NSString, NSObject> metrics, NSDictionary<NSString, NSObject> views);

		// +(instancetype _Nonnull)constraintWithItem:(id _Nonnull)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(id _Nullable)view2 attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, introduced=9.0)));
		[TV (9,0), Mac (10,7), iOS (6,0)]
		[Static]
		[Export ("constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:")]
		NSLayoutConstraint ConstraintWithItem (NSObject view1, NSLayoutAttribute attr1, NSLayoutRelation relation, [NullAllowed] NSObject view2, NSLayoutAttribute attr2, nfloat multiplier, nfloat c);

		// @property UILayoutPriority priority;
		[Export ("priority")]
		float Priority { get; set; }

		// @property int shouldBeArchived;
		[Export ("shouldBeArchived")]
		int ShouldBeArchived { get; set; }

		// @property (readonly, assign) id _Nullable firstItem;
		[NullAllowed, Export ("firstItem", ArgumentSemantic.Assign)]
		NSObject FirstItem { get; }

		// @property (readonly, assign) id _Nullable secondItem;
		[NullAllowed, Export ("secondItem", ArgumentSemantic.Assign)]
		NSObject SecondItem { get; }

		// @property (readonly) NSLayoutAttribute firstAttribute;
		[Export ("firstAttribute")]
		NSLayoutAttribute FirstAttribute { get; }

		// @property (readonly) NSLayoutAttribute secondAttribute;
		[Export ("secondAttribute")]
		NSLayoutAttribute SecondAttribute { get; }

		// @property (readonly, copy) NSLayoutAnchor * _Nonnull firstAnchor __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[Export ("firstAnchor", ArgumentSemantic.Copy)]
		NSLayoutAnchor`1 FirstAnchor { get; }

		// @property (readonly, copy) NSLayoutAnchor * _Nullable secondAnchor __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0)));
		[Mac (10, 12), iOS (10, 0)]
		[NullAllowed, Export ("secondAnchor", ArgumentSemantic.Copy)]
		NSLayoutAnchor`1 SecondAnchor { get; }

		// @property (readonly) NSLayoutRelation relation;
		[Export ("relation")]
		NSLayoutRelation Relation { get; }

		// @property (readonly) CGFloat multiplier;
		[Export ("multiplier")]
		nfloat Multiplier { get; }

		// @property CGFloat constant;
		[Export ("constant")]
		nfloat Constant { get; set; }

		// @property (getter = isActive) int active __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10, 10), iOS (8, 0)]
		[Export ("active")]
		int Active { [Bind ("isActive")] get; set; }

		// +(void)activateConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10,10), iOS (8,0)]
		[Static]
		[Export ("activateConstraints:")]
		void ActivateConstraints (NSLayoutConstraint[] constraints);

		// +(void)deactivateConstraints:(NSArray<NSLayoutConstraint *> * _Nonnull)constraints __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=8.0)));
		[Mac (10,10), iOS (8,0)]
		[Static]
		[Export ("deactivateConstraints:")]
		void DeactivateConstraints (NSLayoutConstraint[] constraints);
	}

	// @interface NSIdentifier (NSLayoutConstraint)
	[Category]
	[BaseType (typeof(NSLayoutConstraint))]
	interface NSLayoutConstraint_NSIdentifier
	{
		// @property (copy) NSString * _Nullable identifier __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 7), iOS (7, 0)]
		[NullAllowed, Export ("identifier")]
		string Identifier { get; set; }
	}

	// @protocol UILayoutSupport <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UILayoutSupport
	{
		// @required @property (readonly, nonatomic) CGFloat length;
		[Abstract]
		[Export ("length")]
		nfloat Length { get; }

		// @required @property (readonly, strong) NSLayoutYAxisAnchor * _Nonnull topAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Abstract]
		[Export ("topAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor TopAnchor { get; }

		// @required @property (readonly, strong) NSLayoutYAxisAnchor * _Nonnull bottomAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Abstract]
		[Export ("bottomAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor BottomAnchor { get; }

		// @required @property (readonly, strong) NSLayoutDimension * _Nonnull heightAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Abstract]
		[Export ("heightAnchor", ArgumentSemantic.Strong)]
		NSLayoutDimension HeightAnchor { get; }
	}

	// @interface UIDevice : NSObject
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIDevice
	{
		// @property (readonly, nonatomic, class) UIDevice * _Nonnull currentDevice;
		[Static]
		[Export ("currentDevice")]
		UIDevice CurrentDevice { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull name;
		[Export ("name", ArgumentSemantic.Strong)]
		string Name { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull model;
		[Export ("model", ArgumentSemantic.Strong)]
		string Model { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull localizedModel;
		[Export ("localizedModel", ArgumentSemantic.Strong)]
		string LocalizedModel { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull systemName;
		[Export ("systemName", ArgumentSemantic.Strong)]
		string SystemName { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull systemVersion;
		[Export ("systemVersion", ArgumentSemantic.Strong)]
		string SystemVersion { get; }

		// @property (readonly, nonatomic) UIDeviceOrientation orientation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("orientation")]
		UIDeviceOrientation Orientation { get; }

		// @property (readonly, nonatomic, strong) NSUUID * _Nullable identifierForVendor __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("identifierForVendor", ArgumentSemantic.Strong)]
		NSUuid IdentifierForVendor { get; }

		// @property (readonly, getter = isGeneratingDeviceOrientationNotifications, nonatomic) int generatesDeviceOrientationNotifications __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("generatesDeviceOrientationNotifications")]
		int GeneratesDeviceOrientationNotifications { [Bind ("isGeneratingDeviceOrientationNotifications")] get; }

		// -(void)beginGeneratingDeviceOrientationNotifications __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("beginGeneratingDeviceOrientationNotifications")]
		void BeginGeneratingDeviceOrientationNotifications ();

		// -(void)endGeneratingDeviceOrientationNotifications __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("endGeneratingDeviceOrientationNotifications")]
		void EndGeneratingDeviceOrientationNotifications ();

		// @property (getter = isBatteryMonitoringEnabled, nonatomic) int batteryMonitoringEnabled __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("batteryMonitoringEnabled")]
		int BatteryMonitoringEnabled { [Bind ("isBatteryMonitoringEnabled")] get; set; }

		// @property (readonly, nonatomic) UIDeviceBatteryState batteryState __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("batteryState")]
		UIDeviceBatteryState BatteryState { get; }

		// @property (readonly, nonatomic) float batteryLevel __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("batteryLevel")]
		float BatteryLevel { get; }

		// @property (getter = isProximityMonitoringEnabled, nonatomic) int proximityMonitoringEnabled __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("proximityMonitoringEnabled")]
		int ProximityMonitoringEnabled { [Bind ("isProximityMonitoringEnabled")] get; set; }

		// @property (readonly, nonatomic) int proximityState __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("proximityState")]
		int ProximityState { get; }

		// @property (readonly, getter = isMultitaskingSupported, nonatomic) int multitaskingSupported __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("multitaskingSupported")]
		int MultitaskingSupported { [Bind ("isMultitaskingSupported")] get; }

		// @property (readonly, nonatomic) UIUserInterfaceIdiom userInterfaceIdiom __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("userInterfaceIdiom")]
		UIUserInterfaceIdiom UserInterfaceIdiom { get; }

		// -(void)playInputClick __attribute__((availability(ios, introduced=4.2)));
		[iOS (4,2)]
		[Export ("playInputClick")]
		void PlayInputClick ();
	}

	// @protocol UIInputViewAudioFeedback <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIInputViewAudioFeedback
	{
		// @optional @property (readonly, nonatomic) int enableInputClicksWhenVisible;
		[Export ("enableInputClicksWhenVisible")]
		int EnableInputClicksWhenVisible { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIDeviceOrientationDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIDeviceOrientationDidChangeNotification", "__Internal")]
		NSString UIDeviceOrientationDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIDeviceBatteryStateDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UIDeviceBatteryStateDidChangeNotification", "__Internal")]
		NSString UIDeviceBatteryStateDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIDeviceBatteryLevelDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UIDeviceBatteryLevelDidChangeNotification", "__Internal")]
		NSString UIDeviceBatteryLevelDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIDeviceProximityStateDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UIDeviceProximityStateDidChangeNotification", "__Internal")]
		NSString UIDeviceProximityStateDidChangeNotification { get; }
	}

	// @interface UITouch : NSObject
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UITouch
	{
		// @property (readonly, nonatomic) NSTimeInterval timestamp;
		[Export ("timestamp")]
		double Timestamp { get; }

		// @property (readonly, nonatomic) UITouchPhase phase;
		[Export ("phase")]
		UITouchPhase Phase { get; }

		// @property (readonly, nonatomic) NSUInteger tapCount;
		[Export ("tapCount")]
		nuint TapCount { get; }

		// @property (readonly, nonatomic) UITouchType type __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("type")]
		UITouchType Type { get; }

		// @property (readonly, nonatomic) CGFloat majorRadius __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("majorRadius")]
		nfloat MajorRadius { get; }

		// @property (readonly, nonatomic) CGFloat majorRadiusTolerance __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("majorRadiusTolerance")]
		nfloat MajorRadiusTolerance { get; }

		// @property (readonly, nonatomic, strong) UIWindow * _Nullable window;
		[NullAllowed, Export ("window", ArgumentSemantic.Strong)]
		UIWindow Window { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nullable view;
		[NullAllowed, Export ("view", ArgumentSemantic.Strong)]
		UIView View { get; }

		// @property (readonly, copy, nonatomic) NSArray<UIGestureRecognizer *> * _Nullable gestureRecognizers __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[NullAllowed, Export ("gestureRecognizers", ArgumentSemantic.Copy)]
		UIGestureRecognizer[] GestureRecognizers { get; }

		// -(CGPoint)locationInView:(UIView * _Nullable)view;
		[Export ("locationInView:")]
		CGPoint LocationInView ([NullAllowed] UIView view);

		// -(CGPoint)previousLocationInView:(UIView * _Nullable)view;
		[Export ("previousLocationInView:")]
		CGPoint PreviousLocationInView ([NullAllowed] UIView view);

		// -(CGPoint)preciseLocationInView:(UIView * _Nullable)view __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("preciseLocationInView:")]
		CGPoint PreciseLocationInView ([NullAllowed] UIView view);

		// -(CGPoint)precisePreviousLocationInView:(UIView * _Nullable)view __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("precisePreviousLocationInView:")]
		CGPoint PrecisePreviousLocationInView ([NullAllowed] UIView view);

		// @property (readonly, nonatomic) CGFloat force __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("force")]
		nfloat Force { get; }

		// @property (readonly, nonatomic) CGFloat maximumPossibleForce __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("maximumPossibleForce")]
		nfloat MaximumPossibleForce { get; }

		// -(CGFloat)azimuthAngleInView:(UIView * _Nullable)view __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("azimuthAngleInView:")]
		nfloat AzimuthAngleInView ([NullAllowed] UIView view);

		// -(CGVector)azimuthUnitVectorInView:(UIView * _Nullable)view __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("azimuthUnitVectorInView:")]
		CGVector AzimuthUnitVectorInView ([NullAllowed] UIView view);

		// @property (readonly, nonatomic) CGFloat altitudeAngle __attribute__((availability(ios, introduced=9.1)));
		[iOS (9, 1)]
		[Export ("altitudeAngle")]
		nfloat AltitudeAngle { get; }

		// @property (readonly, nonatomic) NSNumber * _Nullable estimationUpdateIndex __attribute__((availability(ios, introduced=9.1)));
		[iOS (9, 1)]
		[NullAllowed, Export ("estimationUpdateIndex")]
		NSNumber EstimationUpdateIndex { get; }

		// @property (readonly, nonatomic) UITouchProperties estimatedProperties __attribute__((availability(ios, introduced=9.1)));
		[iOS (9, 1)]
		[Export ("estimatedProperties")]
		UITouchProperties EstimatedProperties { get; }

		// @property (readonly, nonatomic) UITouchProperties estimatedPropertiesExpectingUpdates __attribute__((availability(ios, introduced=9.1)));
		[iOS (9, 1)]
		[Export ("estimatedPropertiesExpectingUpdates")]
		UITouchProperties EstimatedPropertiesExpectingUpdates { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryUnspecified __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UIContentSizeCategoryUnspecified", "__Internal")]
		NSString UIContentSizeCategoryUnspecified { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryExtraSmall __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryExtraSmall", "__Internal")]
		NSString UIContentSizeCategoryExtraSmall { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategorySmall __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategorySmall", "__Internal")]
		NSString UIContentSizeCategorySmall { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryMedium __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryMedium", "__Internal")]
		NSString UIContentSizeCategoryMedium { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryLarge", "__Internal")]
		NSString UIContentSizeCategoryLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryExtraLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryExtraExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryExtraExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryExtraExtraLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryExtraExtraExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryExtraExtraExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryExtraExtraExtraLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryAccessibilityMedium __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryAccessibilityMedium", "__Internal")]
		NSString UIContentSizeCategoryAccessibilityMedium { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryAccessibilityLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryAccessibilityLarge", "__Internal")]
		NSString UIContentSizeCategoryAccessibilityLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryAccessibilityExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryAccessibilityExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryAccessibilityExtraLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryAccessibilityExtraExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryAccessibilityExtraExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryAccessibilityExtraExtraLarge { get; }

		// extern const UIContentSizeCategory _Nonnull UIContentSizeCategoryAccessibilityExtraExtraExtraLarge __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryAccessibilityExtraExtraExtraLarge", "__Internal")]
		NSString UIContentSizeCategoryAccessibilityExtraExtraExtraLarge { get; }

		// extern const NSNotificationName _Nonnull UIContentSizeCategoryDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryDidChangeNotification", "__Internal")]
		NSString UIContentSizeCategoryDidChangeNotification { get; }

		// extern NSString *const _Nonnull UIContentSizeCategoryNewValueKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIContentSizeCategoryNewValueKey", "__Internal")]
		NSString UIContentSizeCategoryNewValueKey { get; }
	}

	// @interface UITraitCollection : NSObject <NSCopying, NSSecureCoding>
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UITraitCollection : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(int)containsTraitsInCollection:(UITraitCollection * _Nullable)trait;
		[Export ("containsTraitsInCollection:")]
		int ContainsTraitsInCollection ([NullAllowed] UITraitCollection trait);

		// +(UITraitCollection * _Nonnull)traitCollectionWithTraitsFromCollections:(NSArray<UITraitCollection *> * _Nonnull)traitCollections;
		[Static]
		[Export ("traitCollectionWithTraitsFromCollections:")]
		UITraitCollection TraitCollectionWithTraitsFromCollections (UITraitCollection[] traitCollections);

		// +(UITraitCollection * _Nonnull)traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom)idiom;
		[Static]
		[Export ("traitCollectionWithUserInterfaceIdiom:")]
		UITraitCollection TraitCollectionWithUserInterfaceIdiom (UIUserInterfaceIdiom idiom);

		// @property (readonly, nonatomic) UIUserInterfaceIdiom userInterfaceIdiom;
		[Export ("userInterfaceIdiom")]
		UIUserInterfaceIdiom UserInterfaceIdiom { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithUserInterfaceStyle:(UIUserInterfaceStyle)userInterfaceStyle __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, unavailable)));
		[TV (10,0), NoWatch, iOS (12,0)]
		[Static]
		[Export ("traitCollectionWithUserInterfaceStyle:")]
		UITraitCollection TraitCollectionWithUserInterfaceStyle (UIUserInterfaceStyle userInterfaceStyle);

		// @property (readonly, nonatomic) UIUserInterfaceStyle userInterfaceStyle __attribute__((availability(tvos, introduced=10.0))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, unavailable)));
		[TV (10, 0), NoWatch, iOS (12, 0)]
		[Export ("userInterfaceStyle")]
		UIUserInterfaceStyle UserInterfaceStyle { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithLayoutDirection:(UITraitEnvironmentLayoutDirection)layoutDirection __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("traitCollectionWithLayoutDirection:")]
		UITraitCollection TraitCollectionWithLayoutDirection (UITraitEnvironmentLayoutDirection layoutDirection);

		// @property (readonly, nonatomic) UITraitEnvironmentLayoutDirection layoutDirection __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("layoutDirection")]
		UITraitEnvironmentLayoutDirection LayoutDirection { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithDisplayScale:(CGFloat)scale;
		[Static]
		[Export ("traitCollectionWithDisplayScale:")]
		UITraitCollection TraitCollectionWithDisplayScale (nfloat scale);

		// @property (readonly, nonatomic) CGFloat displayScale;
		[Export ("displayScale")]
		nfloat DisplayScale { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass)horizontalSizeClass;
		[Static]
		[Export ("traitCollectionWithHorizontalSizeClass:")]
		UITraitCollection TraitCollectionWithHorizontalSizeClass (UIUserInterfaceSizeClass horizontalSizeClass);

		// @property (readonly, nonatomic) UIUserInterfaceSizeClass horizontalSizeClass;
		[Export ("horizontalSizeClass")]
		UIUserInterfaceSizeClass HorizontalSizeClass { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass)verticalSizeClass;
		[Static]
		[Export ("traitCollectionWithVerticalSizeClass:")]
		UITraitCollection TraitCollectionWithVerticalSizeClass (UIUserInterfaceSizeClass verticalSizeClass);

		// @property (readonly, nonatomic) UIUserInterfaceSizeClass verticalSizeClass;
		[Export ("verticalSizeClass")]
		UIUserInterfaceSizeClass VerticalSizeClass { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithForceTouchCapability:(UIForceTouchCapability)capability __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("traitCollectionWithForceTouchCapability:")]
		UITraitCollection TraitCollectionWithForceTouchCapability (UIForceTouchCapability capability);

		// @property (readonly, nonatomic) UIForceTouchCapability forceTouchCapability __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("forceTouchCapability")]
		UIForceTouchCapability ForceTouchCapability { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithPreferredContentSizeCategory:(UIContentSizeCategory _Nonnull)preferredContentSizeCategory __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("traitCollectionWithPreferredContentSizeCategory:")]
		UITraitCollection TraitCollectionWithPreferredContentSizeCategory (string preferredContentSizeCategory);

		// @property (readonly, copy, nonatomic) UIContentSizeCategory _Nonnull preferredContentSizeCategory __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("preferredContentSizeCategory")]
		string PreferredContentSizeCategory { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithDisplayGamut:(UIDisplayGamut)displayGamut __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("traitCollectionWithDisplayGamut:")]
		UITraitCollection TraitCollectionWithDisplayGamut (UIDisplayGamut displayGamut);

		// @property (readonly, nonatomic) UIDisplayGamut displayGamut __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("displayGamut")]
		UIDisplayGamut DisplayGamut { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithAccessibilityContrast:(UIAccessibilityContrast)accessibilityContrast __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Static]
		[Export ("traitCollectionWithAccessibilityContrast:")]
		UITraitCollection TraitCollectionWithAccessibilityContrast (UIAccessibilityContrast accessibilityContrast);

		// @property (readonly, nonatomic) UIAccessibilityContrast accessibilityContrast __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Export ("accessibilityContrast")]
		UIAccessibilityContrast AccessibilityContrast { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithUserInterfaceLevel:(UIUserInterfaceLevel)userInterfaceLevel __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Static]
		[Export ("traitCollectionWithUserInterfaceLevel:")]
		UITraitCollection TraitCollectionWithUserInterfaceLevel (UIUserInterfaceLevel userInterfaceLevel);

		// @property (readonly, nonatomic) UIUserInterfaceLevel userInterfaceLevel __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Export ("userInterfaceLevel")]
		UIUserInterfaceLevel UserInterfaceLevel { get; }

		// +(UITraitCollection * _Nonnull)traitCollectionWithLegibilityWeight:(UILegibilityWeight)legibilityWeight __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("traitCollectionWithLegibilityWeight:")]
		UITraitCollection TraitCollectionWithLegibilityWeight (UILegibilityWeight legibilityWeight);

		// @property (readonly, nonatomic) UILegibilityWeight legibilityWeight __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("legibilityWeight")]
		UILegibilityWeight LegibilityWeight { get; }
	}

	// @protocol UITraitEnvironment <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITraitEnvironment
	{
		// @required @property (readonly, nonatomic) UITraitCollection * _Nonnull traitCollection __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Abstract]
		[Export ("traitCollection")]
		UITraitCollection TraitCollection { get; }

		// @required -(void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("traitCollectionDidChange:")]
		void TraitCollectionDidChange ([NullAllowed] UITraitCollection previousTraitCollection);
	}

	// @interface CurrentTraitCollection (UITraitCollection)
	[Category]
	[BaseType (typeof(UITraitCollection))]
	interface UITraitCollection_CurrentTraitCollection
	{
		// @property (nonatomic, strong, class) UITraitCollection * _Nonnull currentTraitCollection __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Static]
		[Export ("currentTraitCollection", ArgumentSemantic.Strong)]
		UITraitCollection CurrentTraitCollection { get; set; }

		// -(void)performAsCurrentTraitCollection:(void (^ _Nonnull)(void))actions __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Export ("performAsCurrentTraitCollection:")]
		void PerformAsCurrentTraitCollection (Action actions);
	}

	// @interface DynamicAppearance (UITraitCollection)
	[Category]
	[BaseType (typeof(UITraitCollection))]
	interface UITraitCollection_DynamicAppearance
	{
		// -(int)hasDifferentColorAppearanceComparedToTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13,0), NoWatch, iOS (13,0)]
		[Export ("hasDifferentColorAppearanceComparedToTraitCollection:")]
		int HasDifferentColorAppearanceComparedToTraitCollection ([NullAllowed] UITraitCollection traitCollection);
	}

	// @interface ImageConfiguration (UITraitCollection)
	[Category]
	[BaseType (typeof(UITraitCollection))]
	interface UITraitCollection_ImageConfiguration
	{
		// @property (readonly, nonatomic, strong) UIImageConfiguration * _Nonnull imageConfiguration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("imageConfiguration", ArgumentSemantic.Strong)]
		UIImageConfiguration ImageConfiguration { get; }
	}

	// @interface UILayoutGuide : NSObject <NSCoding>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UILayoutGuide : INSCoding
	{
		// @property (readonly, nonatomic) CGRect layoutFrame;
		[Export ("layoutFrame")]
		CGRect LayoutFrame { get; }

		// @property (nonatomic, weak) UIView * _Nullable owningView;
		[NullAllowed, Export ("owningView", ArgumentSemantic.Weak)]
		UIView OwningView { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull identifier;
		[Export ("identifier")]
		string Identifier { get; set; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull leadingAnchor;
		[Export ("leadingAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor LeadingAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull trailingAnchor;
		[Export ("trailingAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor TrailingAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull leftAnchor;
		[Export ("leftAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor LeftAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull rightAnchor;
		[Export ("rightAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor RightAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull topAnchor;
		[Export ("topAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor TopAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull bottomAnchor;
		[Export ("bottomAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor BottomAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutDimension * _Nonnull widthAnchor;
		[Export ("widthAnchor", ArgumentSemantic.Strong)]
		NSLayoutDimension WidthAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutDimension * _Nonnull heightAnchor;
		[Export ("heightAnchor", ArgumentSemantic.Strong)]
		NSLayoutDimension HeightAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull centerXAnchor;
		[Export ("centerXAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor CenterXAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull centerYAnchor;
		[Export ("centerYAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor CenterYAnchor { get; }
	}

	// @interface UIFocusGuide : UILayoutGuide
	[iOS (9,0)]
	[BaseType (typeof(UILayoutGuide))]
	interface UIFocusGuide
	{
		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (copy, nonatomic) NSArray<id<UIFocusEnvironment>> * _Null_unspecified preferredFocusEnvironments __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("preferredFocusEnvironments", ArgumentSemantic.Copy)]
		UIFocusEnvironment[] PreferredFocusEnvironments { get; set; }

		// @property (nonatomic, weak) UIView * _Nullable preferredFocusedView __attribute__((availability(ios, introduced=9.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[NullAllowed, Export ("preferredFocusedView", ArgumentSemantic.Weak)]
		UIView PreferredFocusedView { get; set; }
	}

	// @protocol UIFocusAnimationContext <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIFocusAnimationContext
	{
		// @required @property (readonly, nonatomic) NSTimeInterval duration;
		[Abstract]
		[Export ("duration")]
		double Duration { get; }
	}

	// @interface UIFocusAnimationCoordinator : NSObject
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIFocusAnimationCoordinator
	{
		// -(void)addCoordinatedAnimations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(void))completion;
		[Export ("addCoordinatedAnimations:completion:")]
		void AddCoordinatedAnimations ([NullAllowed] Action animations, [NullAllowed] Action completion);

		// -(void)addCoordinatedFocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> _Nonnull))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("addCoordinatedFocusingAnimations:completion:")]
		void AddCoordinatedFocusingAnimations ([NullAllowed] Action<UIFocusAnimationContext> animations, [NullAllowed] Action completion);

		// -(void)addCoordinatedUnfocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> _Nonnull))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("addCoordinatedUnfocusingAnimations:completion:")]
		void AddCoordinatedUnfocusingAnimations ([NullAllowed] Action<UIFocusAnimationContext> animations, [NullAllowed] Action completion);
	}

	// @protocol UIFocusEnvironment <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (9,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIFocusEnvironment
	{
		// @required @property (readonly, copy, nonatomic) NSArray<id<UIFocusEnvironment>> * _Nonnull preferredFocusEnvironments;
		[Abstract]
		[Export ("preferredFocusEnvironments", ArgumentSemantic.Copy)]
		UIFocusEnvironment[] PreferredFocusEnvironments { get; }

		// @required @property (readonly, nonatomic, weak) id<UIFocusEnvironment> _Nullable parentFocusEnvironment __attribute__((swift_name("parentFocusEnvironment"))) __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12, 0), iOS (12, 0)]
		[Abstract]
		[NullAllowed, Export ("parentFocusEnvironment", ArgumentSemantic.Weak)]
		UIFocusEnvironment ParentFocusEnvironment { get; }

		// @required @property (readonly, nonatomic) id<UIFocusItemContainer> _Nullable focusItemContainer __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12, 0), iOS (12, 0)]
		[Abstract]
		[NullAllowed, Export ("focusItemContainer")]
		UIFocusItemContainer FocusItemContainer { get; }

		// @required -(void)setNeedsFocusUpdate;
		[Abstract]
		[Export ("setNeedsFocusUpdate")]
		void SetNeedsFocusUpdate ();

		// @required -(void)updateFocusIfNeeded;
		[Abstract]
		[Export ("updateFocusIfNeeded")]
		void UpdateFocusIfNeeded ();

		// @required -(int)shouldUpdateFocusInContext:(UIFocusUpdateContext * _Nonnull)context;
		[Abstract]
		[Export ("shouldUpdateFocusInContext:")]
		int ShouldUpdateFocusInContext (UIFocusUpdateContext context);

		// @required -(void)didUpdateFocusInContext:(UIFocusUpdateContext * _Nonnull)context withAnimationCoordinator:(UIFocusAnimationCoordinator * _Nonnull)coordinator;
		[Abstract]
		[Export ("didUpdateFocusInContext:withAnimationCoordinator:")]
		void DidUpdateFocusInContext (UIFocusUpdateContext context, UIFocusAnimationCoordinator coordinator);

		// @optional -(UIFocusSoundIdentifier _Nullable)soundIdentifierForFocusUpdateInContext:(UIFocusUpdateContext * _Nonnull)context __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11,0), NoWatch, NoiOS]
		[Export ("soundIdentifierForFocusUpdateInContext:")]
		[return: NullAllowed]
		string SoundIdentifierForFocusUpdateInContext (UIFocusUpdateContext context);

		// @optional @property (readonly, nonatomic, weak) UIView * _Nullable preferredFocusedView __attribute__((availability(ios, introduced=9.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[NullAllowed, Export ("preferredFocusedView", ArgumentSemantic.Weak)]
		UIView PreferredFocusedView { get; }
	}

	// @protocol UIFocusItem <UIFocusEnvironment>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (10,0)]
	[Protocol]
	interface UIFocusItem : IUIFocusEnvironment
	{
		// @required @property (readonly, nonatomic) int canBecomeFocused;
		[Abstract]
		[Export ("canBecomeFocused")]
		int CanBecomeFocused { get; }

		// @required @property (readonly, nonatomic) CGRect frame __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12, 0), iOS (12, 0)]
		[Abstract]
		[Export ("frame")]
		CGRect Frame { get; }

		// @optional -(void)didHintFocusMovement:(UIFocusMovementHint * _Nonnull)hint __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("didHintFocusMovement:")]
		void DidHintFocusMovement (UIFocusMovementHint hint);
	}

	// @protocol UIFocusItemContainer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (12,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIFocusItemContainer
	{
		// @required @property (readonly, nonatomic) id<UICoordinateSpace> _Nonnull coordinateSpace;
		[Abstract]
		[Export ("coordinateSpace")]
		UICoordinateSpace CoordinateSpace { get; }

		// @required -(NSArray<id<UIFocusItem>> * _Nonnull)focusItemsInRect:(CGRect)rect;
		[Abstract]
		[Export ("focusItemsInRect:")]
		UIFocusItem[] FocusItemsInRect (CGRect rect);
	}

	// @protocol UIFocusItemScrollableContainer <UIFocusItemContainer>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (12,0)]
	[Protocol]
	interface UIFocusItemScrollableContainer : IUIFocusItemContainer
	{
		// @required @property (readwrite, nonatomic) CGPoint contentOffset;
		[Abstract]
		[Export ("contentOffset", ArgumentSemantic.Assign)]
		CGPoint ContentOffset { get; set; }

		// @required @property (readonly, nonatomic) CGSize contentSize;
		[Abstract]
		[Export ("contentSize")]
		CGSize ContentSize { get; }

		// @required @property (readonly, nonatomic) CGSize visibleSize;
		[Abstract]
		[Export ("visibleSize")]
		CGSize VisibleSize { get; }
	}

	// @interface UIFocusUpdateContext : NSObject
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIFocusUpdateContext
	{
		// @property (readonly, nonatomic, weak) id<UIFocusItem> _Nullable previouslyFocusedItem __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("previouslyFocusedItem", ArgumentSemantic.Weak)]
		UIFocusItem PreviouslyFocusedItem { get; }

		// @property (readonly, nonatomic, weak) id<UIFocusItem> _Nullable nextFocusedItem __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("nextFocusedItem", ArgumentSemantic.Weak)]
		UIFocusItem NextFocusedItem { get; }

		// @property (readonly, nonatomic, weak) UIView * _Nullable previouslyFocusedView;
		[NullAllowed, Export ("previouslyFocusedView", ArgumentSemantic.Weak)]
		UIView PreviouslyFocusedView { get; }

		// @property (readonly, nonatomic, weak) UIView * _Nullable nextFocusedView;
		[NullAllowed, Export ("nextFocusedView", ArgumentSemantic.Weak)]
		UIView NextFocusedView { get; }

		// @property (readonly, assign, nonatomic) UIFocusHeading focusHeading;
		[Export ("focusHeading", ArgumentSemantic.Assign)]
		UIFocusHeading FocusHeading { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIFocusDidUpdateNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Field ("UIFocusDidUpdateNotification", "__Internal")]
		NSString UIFocusDidUpdateNotification { get; }

		// extern const NSNotificationName _Nonnull UIFocusMovementDidFailNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Field ("UIFocusMovementDidFailNotification", "__Internal")]
		NSString UIFocusMovementDidFailNotification { get; }

		// extern NSString *const _Nonnull UIFocusUpdateContextKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Field ("UIFocusUpdateContextKey", "__Internal")]
		NSString UIFocusUpdateContextKey { get; }

		// extern NSString *const _Nonnull UIFocusUpdateAnimationCoordinatorKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Field ("UIFocusUpdateAnimationCoordinatorKey", "__Internal")]
		NSString UIFocusUpdateAnimationCoordinatorKey { get; }

		// extern const UIFocusSoundIdentifier _Nonnull UIFocusSoundIdentifierNone __attribute__((visibility("default"))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, NoiOS]
		[Field ("UIFocusSoundIdentifierNone", "__Internal")]
		NSString UIFocusSoundIdentifierNone { get; }

		// extern const UIFocusSoundIdentifier _Nonnull UIFocusSoundIdentifierDefault __attribute__((visibility("default"))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, NoiOS]
		[Field ("UIFocusSoundIdentifierDefault", "__Internal")]
		NSString UIFocusSoundIdentifierDefault { get; }
	}

	// @protocol UICoordinateSpace <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UICoordinateSpace
	{
		// @required -(CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id<UICoordinateSpace> _Nonnull)coordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("convertPoint:toCoordinateSpace:")]
		CGPoint ConvertPoint (CGPoint point, UICoordinateSpace coordinateSpace);

		// @required -(CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id<UICoordinateSpace> _Nonnull)coordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("convertPoint:fromCoordinateSpace:")]
		CGPoint ConvertPoint (CGPoint point, UICoordinateSpace coordinateSpace);

		// @required -(CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id<UICoordinateSpace> _Nonnull)coordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("convertRect:toCoordinateSpace:")]
		CGRect ConvertRect (CGRect rect, UICoordinateSpace coordinateSpace);

		// @required -(CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id<UICoordinateSpace> _Nonnull)coordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("convertRect:fromCoordinateSpace:")]
		CGRect ConvertRect (CGRect rect, UICoordinateSpace coordinateSpace);

		// @required @property (readonly, nonatomic) CGRect bounds __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Abstract]
		[Export ("bounds")]
		CGRect Bounds { get; }
	}

	// @interface UIView : UIResponder <NSCoding, UIAppearance, UIAppearanceContainer, UIDynamicItem, UITraitEnvironment, UICoordinateSpace, UIFocusItem, UIFocusItemContainer, CALayerDelegate>
	[iOS (2,0)]
	[BaseType (typeof(UIResponder))]
	interface UIView : INSCoding, IUIAppearance, IUIAppearanceContainer, IUIDynamicItem, IUITraitEnvironment, IUICoordinateSpace, IUIFocusItem, IUIFocusItemContainer, ICALayerDelegate
	{
		// @property (readonly, nonatomic, class) Class _Nonnull layerClass;
		[Static]
		[Export ("layerClass")]
		Class LayerClass { get; }

		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (getter = isUserInteractionEnabled, nonatomic) int userInteractionEnabled;
		[Export ("userInteractionEnabled")]
		int UserInteractionEnabled { [Bind ("isUserInteractionEnabled")] get; set; }

		// @property (nonatomic) NSInteger tag;
		[Export ("tag")]
		nint Tag { get; set; }

		// @property (readonly, nonatomic, strong) CALayer * _Nonnull layer;
		[Export ("layer", ArgumentSemantic.Strong)]
		CALayer Layer { get; }

		// @property (readonly, nonatomic) int canBecomeFocused __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("canBecomeFocused")]
		int CanBecomeFocused { get; }

		// @property (readonly, getter = isFocused, nonatomic) int focused __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("focused")]
		int Focused { [Bind ("isFocused")] get; }

		// @property (nonatomic) UISemanticContentAttribute semanticContentAttribute __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("semanticContentAttribute", ArgumentSemantic.Assign)]
		UISemanticContentAttribute SemanticContentAttribute { get; set; }

		// +(UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("userInterfaceLayoutDirectionForSemanticContentAttribute:")]
		UIUserInterfaceLayoutDirection UserInterfaceLayoutDirectionForSemanticContentAttribute (UISemanticContentAttribute attribute);

		// +(UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("userInterfaceLayoutDirectionForSemanticContentAttribute:relativeToLayoutDirection:")]
		UIUserInterfaceLayoutDirection UserInterfaceLayoutDirectionForSemanticContentAttribute (UISemanticContentAttribute semanticContentAttribute, UIUserInterfaceLayoutDirection layoutDirection);

		// @property (readonly, nonatomic) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("effectiveUserInterfaceLayoutDirection")]
		UIUserInterfaceLayoutDirection EffectiveUserInterfaceLayoutDirection { get; }
	}

	// @interface UIViewGeometry (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewGeometry
	{
		// @property (nonatomic) CGRect frame;
		[Export ("frame", ArgumentSemantic.Assign)]
		CGRect Frame { get; set; }

		// @property (nonatomic) CGRect bounds;
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; set; }

		// @property (nonatomic) CGPoint center;
		[Export ("center", ArgumentSemantic.Assign)]
		CGPoint Center { get; set; }

		// @property (nonatomic) CGAffineTransform transform;
		[Export ("transform", ArgumentSemantic.Assign)]
		CGAffineTransform Transform { get; set; }

		// @property (nonatomic) CATransform3D transform3D __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(tvos, introduced=12.0)));
		[TV (12, 0), iOS (12, 0)]
		[Export ("transform3D", ArgumentSemantic.Assign)]
		CATransform3D Transform3D { get; set; }

		// @property (nonatomic) CGFloat contentScaleFactor __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("contentScaleFactor")]
		nfloat ContentScaleFactor { get; set; }

		// @property (getter = isMultipleTouchEnabled, nonatomic) int multipleTouchEnabled __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("multipleTouchEnabled")]
		int MultipleTouchEnabled { [Bind ("isMultipleTouchEnabled")] get; set; }

		// @property (getter = isExclusiveTouch, nonatomic) int exclusiveTouch __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("exclusiveTouch")]
		int ExclusiveTouch { [Bind ("isExclusiveTouch")] get; set; }

		// -(UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event;
		[Export ("hitTest:withEvent:")]
		[return: NullAllowed]
		UIView HitTest (CGPoint point, [NullAllowed] UIEvent @event);

		// -(int)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event;
		[Export ("pointInside:withEvent:")]
		int PointInside (CGPoint point, [NullAllowed] UIEvent @event);

		// -(CGPoint)convertPoint:(CGPoint)point toView:(UIView * _Nullable)view;
		[Export ("convertPoint:toView:")]
		CGPoint ConvertPoint (CGPoint point, [NullAllowed] UIView view);

		// -(CGPoint)convertPoint:(CGPoint)point fromView:(UIView * _Nullable)view;
		[Export ("convertPoint:fromView:")]
		CGPoint ConvertPoint (CGPoint point, [NullAllowed] UIView view);

		// -(CGRect)convertRect:(CGRect)rect toView:(UIView * _Nullable)view;
		[Export ("convertRect:toView:")]
		CGRect ConvertRect (CGRect rect, [NullAllowed] UIView view);

		// -(CGRect)convertRect:(CGRect)rect fromView:(UIView * _Nullable)view;
		[Export ("convertRect:fromView:")]
		CGRect ConvertRect (CGRect rect, [NullAllowed] UIView view);

		// @property (nonatomic) int autoresizesSubviews;
		[Export ("autoresizesSubviews")]
		int AutoresizesSubviews { get; set; }

		// @property (nonatomic) UIViewAutoresizing autoresizingMask;
		[Export ("autoresizingMask", ArgumentSemantic.Assign)]
		UIViewAutoresizing AutoresizingMask { get; set; }

		// -(CGSize)sizeThatFits:(CGSize)size;
		[Export ("sizeThatFits:")]
		CGSize SizeThatFits (CGSize size);

		// -(void)sizeToFit;
		[Export ("sizeToFit")]
		void SizeToFit ();
	}

	// @interface UIViewHierarchy (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewHierarchy
	{
		// @property (readonly, nonatomic) UIView * _Nullable superview;
		[NullAllowed, Export ("superview")]
		UIView Superview { get; }

		// @property (readonly, copy, nonatomic) NSArray<__kindof UIView *> * _Nonnull subviews;
		[Export ("subviews", ArgumentSemantic.Copy)]
		UIView[] Subviews { get; }

		// @property (readonly, nonatomic) UIWindow * _Nullable window;
		[NullAllowed, Export ("window")]
		UIWindow Window { get; }

		// -(void)removeFromSuperview;
		[Export ("removeFromSuperview")]
		void RemoveFromSuperview ();

		// -(void)insertSubview:(UIView * _Nonnull)view atIndex:(NSInteger)index;
		[Export ("insertSubview:atIndex:")]
		void InsertSubview (UIView view, nint index);

		// -(void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;
		[Export ("exchangeSubviewAtIndex:withSubviewAtIndex:")]
		void ExchangeSubviewAtIndex (nint index1, nint index2);

		// -(void)addSubview:(UIView * _Nonnull)view;
		[Export ("addSubview:")]
		void AddSubview (UIView view);

		// -(void)insertSubview:(UIView * _Nonnull)view belowSubview:(UIView * _Nonnull)siblingSubview;
		[Export ("insertSubview:belowSubview:")]
		void InsertSubview (UIView view, UIView siblingSubview);

		// -(void)insertSubview:(UIView * _Nonnull)view aboveSubview:(UIView * _Nonnull)siblingSubview;
		[Export ("insertSubview:aboveSubview:")]
		void InsertSubview (UIView view, UIView siblingSubview);

		// -(void)bringSubviewToFront:(UIView * _Nonnull)view;
		[Export ("bringSubviewToFront:")]
		void BringSubviewToFront (UIView view);

		// -(void)sendSubviewToBack:(UIView * _Nonnull)view;
		[Export ("sendSubviewToBack:")]
		void SendSubviewToBack (UIView view);

		// -(void)didAddSubview:(UIView * _Nonnull)subview;
		[Export ("didAddSubview:")]
		void DidAddSubview (UIView subview);

		// -(void)willRemoveSubview:(UIView * _Nonnull)subview;
		[Export ("willRemoveSubview:")]
		void WillRemoveSubview (UIView subview);

		// -(void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
		[Export ("willMoveToSuperview:")]
		void WillMoveToSuperview ([NullAllowed] UIView newSuperview);

		// -(void)didMoveToSuperview;
		[Export ("didMoveToSuperview")]
		void DidMoveToSuperview ();

		// -(void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
		[Export ("willMoveToWindow:")]
		void WillMoveToWindow ([NullAllowed] UIWindow newWindow);

		// -(void)didMoveToWindow;
		[Export ("didMoveToWindow")]
		void DidMoveToWindow ();

		// -(int)isDescendantOfView:(UIView * _Nonnull)view;
		[Export ("isDescendantOfView:")]
		int IsDescendantOfView (UIView view);

		// -(__kindof UIView * _Nullable)viewWithTag:(NSInteger)tag;
		[Export ("viewWithTag:")]
		UIView ViewWithTag (nint tag);

		// -(void)setNeedsLayout;
		[Export ("setNeedsLayout")]
		void SetNeedsLayout ();

		// -(void)layoutIfNeeded;
		[Export ("layoutIfNeeded")]
		void LayoutIfNeeded ();

		// -(void)layoutSubviews;
		[Export ("layoutSubviews")]
		void LayoutSubviews ();

		// @property (nonatomic) UIEdgeInsets layoutMargins __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("layoutMargins", ArgumentSemantic.Assign)]
		UIEdgeInsets LayoutMargins { get; set; }

		// @property (nonatomic) NSDirectionalEdgeInsets directionalLayoutMargins __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("directionalLayoutMargins", ArgumentSemantic.Assign)]
		NSDirectionalEdgeInsets DirectionalLayoutMargins { get; set; }

		// @property (nonatomic) int preservesSuperviewLayoutMargins __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("preservesSuperviewLayoutMargins")]
		int PreservesSuperviewLayoutMargins { get; set; }

		// @property (nonatomic) int insetsLayoutMarginsFromSafeArea __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("insetsLayoutMarginsFromSafeArea")]
		int InsetsLayoutMarginsFromSafeArea { get; set; }

		// -(void)layoutMarginsDidChange __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("layoutMarginsDidChange")]
		void LayoutMarginsDidChange ();

		// @property (readonly, nonatomic) UIEdgeInsets safeAreaInsets __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("safeAreaInsets")]
		UIEdgeInsets SafeAreaInsets { get; }

		// -(void)safeAreaInsetsDidChange __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("safeAreaInsetsDidChange")]
		void SafeAreaInsetsDidChange ();

		// @property (readonly, strong) UILayoutGuide * _Nonnull layoutMarginsGuide __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("layoutMarginsGuide", ArgumentSemantic.Strong)]
		UILayoutGuide LayoutMarginsGuide { get; }

		// @property (readonly, nonatomic, strong) UILayoutGuide * _Nonnull readableContentGuide __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("readableContentGuide", ArgumentSemantic.Strong)]
		UILayoutGuide ReadableContentGuide { get; }

		// @property (readonly, nonatomic, strong) UILayoutGuide * _Nonnull safeAreaLayoutGuide __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("safeAreaLayoutGuide", ArgumentSemantic.Strong)]
		UILayoutGuide SafeAreaLayoutGuide { get; }
	}

	// @interface UIViewRendering (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewRendering
	{
		// -(void)drawRect:(CGRect)rect;
		[Export ("drawRect:")]
		void DrawRect (CGRect rect);

		// -(void)setNeedsDisplay;
		[Export ("setNeedsDisplay")]
		void SetNeedsDisplay ();

		// -(void)setNeedsDisplayInRect:(CGRect)rect;
		[Export ("setNeedsDisplayInRect:")]
		void SetNeedsDisplayInRect (CGRect rect);

		// @property (nonatomic) int clipsToBounds;
		[Export ("clipsToBounds")]
		int ClipsToBounds { get; set; }

		// @property (copy, nonatomic) UIColor * _Nullable backgroundColor __attribute__((annotate("ui_appearance_selector")));
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (nonatomic) CGFloat alpha;
		[Export ("alpha")]
		nfloat Alpha { get; set; }

		// @property (getter = isOpaque, nonatomic) int opaque;
		[Export ("opaque")]
		int Opaque { [Bind ("isOpaque")] get; set; }

		// @property (nonatomic) int clearsContextBeforeDrawing;
		[Export ("clearsContextBeforeDrawing")]
		int ClearsContextBeforeDrawing { get; set; }

		// @property (getter = isHidden, nonatomic) int hidden;
		[Export ("hidden")]
		int Hidden { [Bind ("isHidden")] get; set; }

		// @property (nonatomic) UIViewContentMode contentMode;
		[Export ("contentMode", ArgumentSemantic.Assign)]
		UIViewContentMode ContentMode { get; set; }

		// @property (nonatomic) CGRect contentStretch __attribute__((availability(ios, introduced=3.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("contentStretch", ArgumentSemantic.Assign)]
		CGRect ContentStretch { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable maskView __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("maskView", ArgumentSemantic.Strong)]
		UIView MaskView { get; set; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("tintAdjustmentMode", ArgumentSemantic.Assign)]
		UIViewTintAdjustmentMode TintAdjustmentMode { get; set; }

		// -(void)tintColorDidChange __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tintColorDidChange")]
		void TintColorDidChange ();
	}

	// @interface UIViewAnimation (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewAnimation
	{
		// +(void)setAnimationsEnabled:(int)enabled;
		[Static]
		[Export ("setAnimationsEnabled:")]
		void SetAnimationsEnabled (int enabled);

		// @property (readonly, nonatomic, class) int areAnimationsEnabled;
		[Static]
		[Export ("areAnimationsEnabled")]
		int AreAnimationsEnabled { get; }

		// +(void)performWithoutAnimation:(void (^ _Nonnull)(void))actionsWithoutAnimation __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("performWithoutAnimation:")]
		void PerformWithoutAnimation (Action actionsWithoutAnimation);

		// @property (readonly, nonatomic, class) NSTimeInterval inheritedAnimationDuration __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Static]
		[Export ("inheritedAnimationDuration")]
		double InheritedAnimationDuration { get; }
	}

	// @interface UIViewAnimationWithBlocks (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewAnimationWithBlocks
	{
		// +(void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("animateWithDuration:delay:options:animations:completion:")]
		void AnimateWithDuration (double duration, double delay, UIViewAnimationOptions options, Action animations, [NullAllowed] Action<int> completion);

		// +(void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("animateWithDuration:animations:completion:")]
		void AnimateWithDuration (double duration, Action animations, [NullAllowed] Action<int> completion);

		// +(void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ _Nonnull)(void))animations __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("animateWithDuration:animations:")]
		void AnimateWithDuration (double duration, Action animations);

		// +(void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:")]
		void AnimateWithDuration (double duration, double delay, nfloat dampingRatio, nfloat velocity, UIViewAnimationOptions options, Action animations, [NullAllowed] Action<int> completion);

		// +(void)transitionWithView:(UIView * _Nonnull)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("transitionWithView:duration:options:animations:completion:")]
		void TransitionWithView (UIView view, double duration, UIViewAnimationOptions options, [NullAllowed] Action animations, [NullAllowed] Action<int> completion);

		// +(void)transitionFromView:(UIView * _Nonnull)fromView toView:(UIView * _Nonnull)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("transitionFromView:toView:duration:options:completion:")]
		void TransitionFromView (UIView fromView, UIView toView, double duration, UIViewAnimationOptions options, [NullAllowed] Action<int> completion);

		// +(void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<__kindof UIView *> * _Nonnull)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("performSystemAnimation:onViews:options:animations:completion:")]
		void PerformSystemAnimation (UISystemAnimation animation, UIView[] views, UIViewAnimationOptions options, [NullAllowed] Action parallelAnimations, [NullAllowed] Action<int> completion);

		// +(void)modifyAnimationsWithRepeatCount:(CGFloat)count autoreverses:(int)autoreverses animations:(void (^ _Nonnull)(void))animations __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(tvos, introduced=12.0)));
		[TV (12,0), iOS (12,0)]
		[Static]
		[Export ("modifyAnimationsWithRepeatCount:autoreverses:animations:")]
		void ModifyAnimationsWithRepeatCount (nfloat count, int autoreverses, Action animations);
	}

	// @interface UIViewKeyframeAnimations (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewKeyframeAnimations
	{
		// +(void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("animateKeyframesWithDuration:delay:options:animations:completion:")]
		void AnimateKeyframesWithDuration (double duration, double delay, UIViewKeyframeAnimationOptions options, Action animations, [NullAllowed] Action<int> completion);

		// +(void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^ _Nonnull)(void))animations __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("addKeyframeWithRelativeStartTime:relativeDuration:animations:")]
		void AddKeyframeWithRelativeStartTime (double frameStartTime, double frameDuration, Action animations);
	}

	// @interface UIViewGestureRecognizers (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewGestureRecognizers
	{
		// @property (copy, nonatomic) NSArray<__kindof UIGestureRecognizer *> * _Nullable gestureRecognizers __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[NullAllowed, Export ("gestureRecognizers", ArgumentSemantic.Copy)]
		UIGestureRecognizer[] GestureRecognizers { get; set; }

		// -(void)addGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("addGestureRecognizer:")]
		void AddGestureRecognizer (UIGestureRecognizer gestureRecognizer);

		// -(void)removeGestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("removeGestureRecognizer:")]
		void RemoveGestureRecognizer (UIGestureRecognizer gestureRecognizer);

		// -(int)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("gestureRecognizerShouldBegin:")]
		int GestureRecognizerShouldBegin (UIGestureRecognizer gestureRecognizer);
	}

	// @interface UIViewMotionEffects (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewMotionEffects
	{
		// -(void)addMotionEffect:(UIMotionEffect * _Nonnull)effect __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("addMotionEffect:")]
		void AddMotionEffect (UIMotionEffect effect);

		// -(void)removeMotionEffect:(UIMotionEffect * _Nonnull)effect __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("removeMotionEffect:")]
		void RemoveMotionEffect (UIMotionEffect effect);

		// @property (copy, nonatomic) NSArray<__kindof UIMotionEffect *> * _Nonnull motionEffects __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("motionEffects", ArgumentSemantic.Copy)]
		UIMotionEffect[] MotionEffects { get; set; }
	}

	// @interface UIConstraintBasedLayoutInstallingConstraints (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedLayoutInstallingConstraints
	{
		// @property (readonly, nonatomic) NSArray<__kindof NSLayoutConstraint *> * _Nonnull constraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("constraints")]
		NSLayoutConstraint[] Constraints { get; }

		// -(void)addConstraint:(NSLayoutConstraint * _Nonnull)constraint __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("addConstraint:")]
		void AddConstraint (NSLayoutConstraint constraint);

		// -(void)addConstraints:(NSArray<__kindof NSLayoutConstraint *> * _Nonnull)constraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("addConstraints:")]
		void AddConstraints (NSLayoutConstraint[] constraints);

		// -(void)removeConstraint:(NSLayoutConstraint * _Nonnull)constraint __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("removeConstraint:")]
		void RemoveConstraint (NSLayoutConstraint constraint);

		// -(void)removeConstraints:(NSArray<__kindof NSLayoutConstraint *> * _Nonnull)constraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("removeConstraints:")]
		void RemoveConstraints (NSLayoutConstraint[] constraints);
	}

	// @interface UIConstraintBasedLayoutCoreMethods (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedLayoutCoreMethods
	{
		// -(void)updateConstraintsIfNeeded __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("updateConstraintsIfNeeded")]
		void UpdateConstraintsIfNeeded ();

		// -(void)updateConstraints __attribute__((availability(ios, introduced=6.0))) __attribute__((objc_requires_super));
		[iOS (6,0)]
		[Export ("updateConstraints")]
		[RequiresSuper]
		void UpdateConstraints ();

		// -(int)needsUpdateConstraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("needsUpdateConstraints")]
		[Verify (MethodToProperty)]
		int NeedsUpdateConstraints { get; }

		// -(void)setNeedsUpdateConstraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("setNeedsUpdateConstraints")]
		void SetNeedsUpdateConstraints ();
	}

	// @interface UIConstraintBasedCompatibility (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedCompatibility
	{
		// @property (nonatomic) int translatesAutoresizingMaskIntoConstraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("translatesAutoresizingMaskIntoConstraints")]
		int TranslatesAutoresizingMaskIntoConstraints { get; set; }

		// @property (readonly, nonatomic, class) int requiresConstraintBasedLayout __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Static]
		[Export ("requiresConstraintBasedLayout")]
		int RequiresConstraintBasedLayout { get; }
	}

	// @interface UIConstraintBasedLayoutLayering (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedLayoutLayering
	{
		// -(CGRect)alignmentRectForFrame:(CGRect)frame __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("alignmentRectForFrame:")]
		CGRect AlignmentRectForFrame (CGRect frame);

		// -(CGRect)frameForAlignmentRect:(CGRect)alignmentRect __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("frameForAlignmentRect:")]
		CGRect FrameForAlignmentRect (CGRect alignmentRect);

		// @property (readonly, nonatomic) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("alignmentRectInsets")]
		UIEdgeInsets AlignmentRectInsets { get; }

		// -(UIView * _Nonnull)viewForBaselineLayout __attribute__((availability(ios, introduced=6.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 6, 0, message: "Override -viewForFirstBaselineLayout or -viewForLastBaselineLayout as appropriate, instead")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Override -viewForFirstBaselineLayout or -viewForLastBaselineLayout as appropriate, instead")]
		[NoTV]
		[Export ("viewForBaselineLayout")]
		[Verify (MethodToProperty)]
		UIView ViewForBaselineLayout { get; }

		// @property (readonly, strong) UIView * _Nonnull viewForFirstBaselineLayout __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("viewForFirstBaselineLayout", ArgumentSemantic.Strong)]
		UIView ViewForFirstBaselineLayout { get; }

		// @property (readonly, strong) UIView * _Nonnull viewForLastBaselineLayout __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("viewForLastBaselineLayout", ArgumentSemantic.Strong)]
		UIView ViewForLastBaselineLayout { get; }

		// @property (readonly, nonatomic) CGSize intrinsicContentSize __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("intrinsicContentSize")]
		CGSize IntrinsicContentSize { get; }

		// -(void)invalidateIntrinsicContentSize __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("invalidateIntrinsicContentSize")]
		void InvalidateIntrinsicContentSize ();

		// -(UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("contentHuggingPriorityForAxis:")]
		float ContentHuggingPriorityForAxis (UILayoutConstraintAxis axis);

		// -(void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("setContentHuggingPriority:forAxis:")]
		void SetContentHuggingPriority (float priority, UILayoutConstraintAxis axis);

		// -(UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("contentCompressionResistancePriorityForAxis:")]
		float ContentCompressionResistancePriorityForAxis (UILayoutConstraintAxis axis);

		// -(void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("setContentCompressionResistancePriority:forAxis:")]
		void SetContentCompressionResistancePriority (float priority, UILayoutConstraintAxis axis);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CGFloat UIViewNoIntrinsicMetric __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIViewNoIntrinsicMetric", "__Internal")]
		nfloat UIViewNoIntrinsicMetric { get; }

		// extern const CGSize UILayoutFittingCompressedSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UILayoutFittingCompressedSize", "__Internal")]
		CGSize UILayoutFittingCompressedSize { get; }

		// extern const CGSize UILayoutFittingExpandedSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UILayoutFittingExpandedSize", "__Internal")]
		CGSize UILayoutFittingExpandedSize { get; }
	}

	// @interface UIConstraintBasedLayoutFittingSize (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedLayoutFittingSize
	{
		// -(CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("systemLayoutSizeFittingSize:")]
		CGSize SystemLayoutSizeFittingSize (CGSize targetSize);

		// -(CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:")]
		CGSize SystemLayoutSizeFittingSize (CGSize targetSize, float horizontalFittingPriority, float verticalFittingPriority);
	}

	// @interface UILayoutGuideSupport (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UILayoutGuideSupport
	{
		// @property (readonly, copy, nonatomic) NSArray<__kindof UILayoutGuide *> * _Nonnull layoutGuides __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("layoutGuides", ArgumentSemantic.Copy)]
		UILayoutGuide[] LayoutGuides { get; }

		// -(void)addLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("addLayoutGuide:")]
		void AddLayoutGuide (UILayoutGuide layoutGuide);

		// -(void)removeLayoutGuide:(UILayoutGuide * _Nonnull)layoutGuide __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("removeLayoutGuide:")]
		void RemoveLayoutGuide (UILayoutGuide layoutGuide);
	}

	// @interface UIViewLayoutConstraintCreation (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIViewLayoutConstraintCreation
	{
		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull leadingAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("leadingAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor LeadingAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull trailingAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("trailingAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor TrailingAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull leftAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("leftAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor LeftAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull rightAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("rightAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor RightAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull topAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("topAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor TopAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull bottomAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("bottomAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor BottomAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutDimension * _Nonnull widthAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("widthAnchor", ArgumentSemantic.Strong)]
		NSLayoutDimension WidthAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutDimension * _Nonnull heightAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("heightAnchor", ArgumentSemantic.Strong)]
		NSLayoutDimension HeightAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutXAxisAnchor * _Nonnull centerXAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("centerXAnchor", ArgumentSemantic.Strong)]
		NSLayoutXAxisAnchor CenterXAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull centerYAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("centerYAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor CenterYAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull firstBaselineAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("firstBaselineAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor FirstBaselineAnchor { get; }

		// @property (readonly, nonatomic, strong) NSLayoutYAxisAnchor * _Nonnull lastBaselineAnchor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("lastBaselineAnchor", ArgumentSemantic.Strong)]
		NSLayoutYAxisAnchor LastBaselineAnchor { get; }
	}

	// @interface UIConstraintBasedLayoutDebugging (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIConstraintBasedLayoutDebugging
	{
		// -(NSArray<__kindof NSLayoutConstraint *> * _Nonnull)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("constraintsAffectingLayoutForAxis:")]
		NSLayoutConstraint[] ConstraintsAffectingLayoutForAxis (UILayoutConstraintAxis axis);

		// @property (readonly, nonatomic) int hasAmbiguousLayout __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("hasAmbiguousLayout")]
		int HasAmbiguousLayout { get; }

		// -(void)exerciseAmbiguityInLayout __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("exerciseAmbiguityInLayout")]
		void ExerciseAmbiguityInLayout ();
	}

	// @interface UIConstraintBasedLayoutDebugging (UILayoutGuide)
	[Category]
	[BaseType (typeof(UILayoutGuide))]
	interface UILayoutGuide_UIConstraintBasedLayoutDebugging
	{
		// -(NSArray<__kindof NSLayoutConstraint *> * _Nonnull)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("constraintsAffectingLayoutForAxis:")]
		NSLayoutConstraint[] ConstraintsAffectingLayoutForAxis (UILayoutConstraintAxis axis);

		// @property (readonly, nonatomic) int hasAmbiguousLayout __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("hasAmbiguousLayout")]
		int HasAmbiguousLayout { get; }
	}

	// @interface UIStateRestoration (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIStateRestoration
	{
		// @property (copy, nonatomic) NSString * _Nullable restorationIdentifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("restorationIdentifier")]
		string RestorationIdentifier { get; set; }

		// -(void)encodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("encodeRestorableStateWithCoder:")]
		void EncodeRestorableStateWithCoder (NSCoder coder);

		// -(void)decodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("decodeRestorableStateWithCoder:")]
		void DecodeRestorableStateWithCoder (NSCoder coder);
	}

	// @interface UISnapshotting (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UISnapshotting
	{
		// -(UIView * _Nullable)snapshotViewAfterScreenUpdates:(int)afterUpdates __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("snapshotViewAfterScreenUpdates:")]
		[return: NullAllowed]
		UIView SnapshotViewAfterScreenUpdates (int afterUpdates);

		// -(UIView * _Nullable)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(int)afterUpdates withCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:")]
		[return: NullAllowed]
		UIView ResizableSnapshotViewFromRect (CGRect rect, int afterUpdates, UIEdgeInsets capInsets);

		// -(int)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(int)afterUpdates __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("drawViewHierarchyInRect:afterScreenUpdates:")]
		int DrawViewHierarchyInRect (CGRect rect, int afterUpdates);
	}

	// @interface DeprecatedAnimations (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_DeprecatedAnimations
	{
		// +(void)beginAnimations:(NSString * _Nullable)animationID context:(void * _Nullable)context __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("beginAnimations:context:")]
		unsafe void BeginAnimations ([NullAllowed] string animationID, [NullAllowed] void* context);

		// +(void)commitAnimations __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("commitAnimations")]
		void CommitAnimations ();

		// +(void)setAnimationDelegate:(id _Nullable)delegate __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationDelegate:")]
		void SetAnimationDelegate ([NullAllowed] NSObject @delegate);

		// +(void)setAnimationWillStartSelector:(SEL _Nullable)selector __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationWillStartSelector:")]
		void SetAnimationWillStartSelector ([NullAllowed] Selector selector);

		// +(void)setAnimationDidStopSelector:(SEL _Nullable)selector __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationDidStopSelector:")]
		void SetAnimationDidStopSelector ([NullAllowed] Selector selector);

		// +(void)setAnimationDuration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationDuration:")]
		void SetAnimationDuration (double duration);

		// +(void)setAnimationDelay:(NSTimeInterval)delay __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationDelay:")]
		void SetAnimationDelay (double delay);

		// +(void)setAnimationStartDate:(NSDate * _Nonnull)startDate __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationStartDate:")]
		void SetAnimationStartDate (NSDate startDate);

		// +(void)setAnimationCurve:(UIViewAnimationCurve)curve __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationCurve:")]
		void SetAnimationCurve (UIViewAnimationCurve curve);

		// +(void)setAnimationRepeatCount:(float)repeatCount __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationRepeatCount:")]
		void SetAnimationRepeatCount (float repeatCount);

		// +(void)setAnimationRepeatAutoreverses:(int)repeatAutoreverses __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationRepeatAutoreverses:")]
		void SetAnimationRepeatAutoreverses (int repeatAutoreverses);

		// +(void)setAnimationBeginsFromCurrentState:(int)fromCurrentState __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationBeginsFromCurrentState:")]
		void SetAnimationBeginsFromCurrentState (int fromCurrentState);

		// +(void)setAnimationTransition:(UIViewAnimationTransition)transition forView:(UIView * _Nonnull)view cache:(int)cache __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the block-based animation API instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the block-based animation API instead")]
		[Static]
		[Export ("setAnimationTransition:forView:cache:")]
		void SetAnimationTransition (UIViewAnimationTransition transition, UIView view, int cache);
	}

	// @interface UserInterfaceStyle (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UserInterfaceStyle
	{
		// @property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Export ("overrideUserInterfaceStyle", ArgumentSemantic.Assign)]
		UIUserInterfaceStyle OverrideUserInterfaceStyle { get; set; }
	}

	// @interface UIPickerView : UIView <NSCoding>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIPickerView : INSCoding
	{
		[Wrap ("WeakDataSource")]
		[NullAllowed]
		UIPickerViewDataSource DataSource { get; set; }

		// @property (nonatomic, weak) id<UIPickerViewDataSource> _Nullable dataSource;
		[NullAllowed, Export ("dataSource", ArgumentSemantic.Weak)]
		NSObject WeakDataSource { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPickerViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPickerViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic) int showsSelectionIndicator __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "This property has no effect on iOS 7 and later.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "This property has no effect on iOS 7 and later.")]
		[Export ("showsSelectionIndicator")]
		int ShowsSelectionIndicator { get; set; }

		// @property (readonly, nonatomic) NSInteger numberOfComponents;
		[Export ("numberOfComponents")]
		nint NumberOfComponents { get; }

		// -(NSInteger)numberOfRowsInComponent:(NSInteger)component;
		[Export ("numberOfRowsInComponent:")]
		nint NumberOfRowsInComponent (nint component);

		// -(CGSize)rowSizeForComponent:(NSInteger)component;
		[Export ("rowSizeForComponent:")]
		CGSize RowSizeForComponent (nint component);

		// -(UIView * _Nullable)viewForRow:(NSInteger)row forComponent:(NSInteger)component;
		[Export ("viewForRow:forComponent:")]
		[return: NullAllowed]
		UIView ViewForRow (nint row, nint component);

		// -(void)reloadAllComponents;
		[Export ("reloadAllComponents")]
		void ReloadAllComponents ();

		// -(void)reloadComponent:(NSInteger)component;
		[Export ("reloadComponent:")]
		void ReloadComponent (nint component);

		// -(void)selectRow:(NSInteger)row inComponent:(NSInteger)component animated:(int)animated;
		[Export ("selectRow:inComponent:animated:")]
		void SelectRow (nint row, nint component, int animated);

		// -(NSInteger)selectedRowInComponent:(NSInteger)component;
		[Export ("selectedRowInComponent:")]
		nint SelectedRowInComponent (nint component);
	}

	// @protocol UIPickerViewDataSource <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPickerViewDataSource
	{
		// @required -(NSInteger)numberOfComponentsInPickerView:(UIPickerView * _Nonnull)pickerView;
		[Abstract]
		[Export ("numberOfComponentsInPickerView:")]
		nint NumberOfComponentsInPickerView (UIPickerView pickerView);

		// @required -(NSInteger)pickerView:(UIPickerView * _Nonnull)pickerView numberOfRowsInComponent:(NSInteger)component;
		[Abstract]
		[Export ("pickerView:numberOfRowsInComponent:")]
		nint PickerView (UIPickerView pickerView, nint component);
	}

	// @protocol UIPickerViewDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPickerViewDelegate
	{
		// @optional -(CGFloat)pickerView:(UIPickerView * _Nonnull)pickerView widthForComponent:(NSInteger)component __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pickerView:widthForComponent:")]
		nfloat PickerView (UIPickerView pickerView, nint component);

		// @optional -(CGFloat)pickerView:(UIPickerView * _Nonnull)pickerView rowHeightForComponent:(NSInteger)component __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pickerView:rowHeightForComponent:")]
		nfloat PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pickerView:titleForRow:forComponent:")]
		[return: NullAllowed]
		string PickerView (UIPickerView pickerView, nint row, nint component);

		// @optional -(NSAttributedString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView attributedTitleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6,0)]
		[Export ("pickerView:attributedTitleForRow:forComponent:")]
		[return: NullAllowed]
		NSAttributedString PickerView (UIPickerView pickerView, nint row, nint component);

		// @optional -(UIView * _Nonnull)pickerView:(UIPickerView * _Nonnull)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(UIView * _Nullable)view __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pickerView:viewForRow:forComponent:reusingView:")]
		UIView PickerView (UIPickerView pickerView, nint row, nint component, [NullAllowed] UIView view);

		// @optional -(void)pickerView:(UIPickerView * _Nonnull)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pickerView:didSelectRow:inComponent:")]
		void PickerView (UIPickerView pickerView, nint row, nint component);
	}

	// @interface UIControl : UIView
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIControl
	{
		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (getter = isSelected, nonatomic) int selected;
		[Export ("selected")]
		int Selected { [Bind ("isSelected")] get; set; }

		// @property (getter = isHighlighted, nonatomic) int highlighted;
		[Export ("highlighted")]
		int Highlighted { [Bind ("isHighlighted")] get; set; }

		// @property (nonatomic) UIControlContentVerticalAlignment contentVerticalAlignment;
		[Export ("contentVerticalAlignment", ArgumentSemantic.Assign)]
		UIControlContentVerticalAlignment ContentVerticalAlignment { get; set; }

		// @property (nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment;
		[Export ("contentHorizontalAlignment", ArgumentSemantic.Assign)]
		UIControlContentHorizontalAlignment ContentHorizontalAlignment { get; set; }

		// @property (readonly, nonatomic) UIControlContentHorizontalAlignment effectiveContentHorizontalAlignment;
		[Export ("effectiveContentHorizontalAlignment")]
		UIControlContentHorizontalAlignment EffectiveContentHorizontalAlignment { get; }

		// @property (readonly, nonatomic) UIControlState state;
		[Export ("state")]
		UIControlState State { get; }

		// @property (readonly, getter = isTracking, nonatomic) int tracking;
		[Export ("tracking")]
		int Tracking { [Bind ("isTracking")] get; }

		// @property (readonly, getter = isTouchInside, nonatomic) int touchInside;
		[Export ("touchInside")]
		int TouchInside { [Bind ("isTouchInside")] get; }

		// -(int)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event;
		[Export ("beginTrackingWithTouch:withEvent:")]
		int BeginTrackingWithTouch (UITouch touch, [NullAllowed] UIEvent @event);

		// -(int)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event;
		[Export ("continueTrackingWithTouch:withEvent:")]
		int ContinueTrackingWithTouch (UITouch touch, [NullAllowed] UIEvent @event);

		// -(void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
		[Export ("endTrackingWithTouch:withEvent:")]
		void EndTrackingWithTouch ([NullAllowed] UITouch touch, [NullAllowed] UIEvent @event);

		// -(void)cancelTrackingWithEvent:(UIEvent * _Nullable)event;
		[Export ("cancelTrackingWithEvent:")]
		void CancelTrackingWithEvent ([NullAllowed] UIEvent @event);

		// -(void)addTarget:(id _Nullable)target action:(SEL _Nonnull)action forControlEvents:(UIControlEvents)controlEvents;
		[Export ("addTarget:action:forControlEvents:")]
		void AddTarget ([NullAllowed] NSObject target, Selector action, UIControlEvents controlEvents);

		// -(void)removeTarget:(id _Nullable)target action:(SEL _Nullable)action forControlEvents:(UIControlEvents)controlEvents;
		[Export ("removeTarget:action:forControlEvents:")]
		void RemoveTarget ([NullAllowed] NSObject target, [NullAllowed] Selector action, UIControlEvents controlEvents);

		// @property (readonly, nonatomic) NSSet * _Nonnull allTargets;
		[Export ("allTargets")]
		NSSet AllTargets { get; }

		// @property (readonly, nonatomic) UIControlEvents allControlEvents;
		[Export ("allControlEvents")]
		UIControlEvents AllControlEvents { get; }

		// -(NSArray<NSString *> * _Nullable)actionsForTarget:(id _Nullable)target forControlEvent:(UIControlEvents)controlEvent;
		[Export ("actionsForTarget:forControlEvent:")]
		[return: NullAllowed]
		string[] ActionsForTarget ([NullAllowed] NSObject target, UIControlEvents controlEvent);

		// -(void)sendAction:(SEL _Nonnull)action to:(id _Nullable)target forEvent:(UIEvent * _Nullable)event;
		[Export ("sendAction:to:forEvent:")]
		void SendAction (Selector action, [NullAllowed] NSObject target, [NullAllowed] UIEvent @event);

		// -(void)sendActionsForControlEvents:(UIControlEvents)controlEvents;
		[Export ("sendActionsForControlEvents:")]
		void SendActionsForControlEvents (UIControlEvents controlEvents);
	}

	// @interface UIRefreshControl : UIControl
	[NoTV, iOS (6,0)]
	[BaseType (typeof(UIControl))]
	interface UIRefreshControl
	{
		// @property (readonly, getter = isRefreshing, nonatomic) int refreshing;
		[Export ("refreshing")]
		int Refreshing { [Bind ("isRefreshing")] get; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic, strong) NSAttributedString * _Nullable attributedTitle __attribute__((annotate("ui_appearance_selector")));
		[NullAllowed, Export ("attributedTitle", ArgumentSemantic.Strong)]
		NSAttributedString AttributedTitle { get; set; }

		// -(void)beginRefreshing __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("beginRefreshing")]
		void BeginRefreshing ();

		// -(void)endRefreshing __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("endRefreshing")]
		void EndRefreshing ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIScrollViewDecelerationRate UIScrollViewDecelerationRateNormal __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UIScrollViewDecelerationRateNormal", "__Internal")]
		double UIScrollViewDecelerationRateNormal { get; }

		// extern const UIScrollViewDecelerationRate UIScrollViewDecelerationRateFast __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UIScrollViewDecelerationRateFast", "__Internal")]
		double UIScrollViewDecelerationRateFast { get; }
	}

	// @interface UIScrollView : UIView <NSCoding, UIFocusItemScrollableContainer>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIScrollView : INSCoding, IUIFocusItemScrollableContainer
	{
		// @property (nonatomic) CGPoint contentOffset;
		[Export ("contentOffset", ArgumentSemantic.Assign)]
		CGPoint ContentOffset { get; set; }

		// @property (nonatomic) CGSize contentSize;
		[Export ("contentSize", ArgumentSemantic.Assign)]
		CGSize ContentSize { get; set; }

		// @property (nonatomic) UIEdgeInsets contentInset;
		[Export ("contentInset", ArgumentSemantic.Assign)]
		UIEdgeInsets ContentInset { get; set; }

		// @property (readonly, nonatomic) UIEdgeInsets adjustedContentInset __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("adjustedContentInset")]
		UIEdgeInsets AdjustedContentInset { get; }

		// -(void)adjustedContentInsetDidChange __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((objc_requires_super));
		[TV (11,0), iOS (11,0)]
		[Export ("adjustedContentInsetDidChange")]
		[RequiresSuper]
		void AdjustedContentInsetDidChange ();

		// @property (nonatomic) UIScrollViewContentInsetAdjustmentBehavior contentInsetAdjustmentBehavior __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("contentInsetAdjustmentBehavior", ArgumentSemantic.Assign)]
		UIScrollViewContentInsetAdjustmentBehavior ContentInsetAdjustmentBehavior { get; set; }

		// @property (nonatomic) int automaticallyAdjustsScrollIndicatorInsets __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("automaticallyAdjustsScrollIndicatorInsets")]
		int AutomaticallyAdjustsScrollIndicatorInsets { get; set; }

		// @property (readonly, nonatomic, strong) UILayoutGuide * _Nonnull contentLayoutGuide __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("contentLayoutGuide", ArgumentSemantic.Strong)]
		UILayoutGuide ContentLayoutGuide { get; }

		// @property (readonly, nonatomic, strong) UILayoutGuide * _Nonnull frameLayoutGuide __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("frameLayoutGuide", ArgumentSemantic.Strong)]
		UILayoutGuide FrameLayoutGuide { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIScrollViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIScrollViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isDirectionalLockEnabled, nonatomic) int directionalLockEnabled;
		[Export ("directionalLockEnabled")]
		int DirectionalLockEnabled { [Bind ("isDirectionalLockEnabled")] get; set; }

		// @property (nonatomic) int bounces;
		[Export ("bounces")]
		int Bounces { get; set; }

		// @property (nonatomic) int alwaysBounceVertical;
		[Export ("alwaysBounceVertical")]
		int AlwaysBounceVertical { get; set; }

		// @property (nonatomic) int alwaysBounceHorizontal;
		[Export ("alwaysBounceHorizontal")]
		int AlwaysBounceHorizontal { get; set; }

		// @property (getter = isPagingEnabled, nonatomic) int pagingEnabled __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pagingEnabled")]
		int PagingEnabled { [Bind ("isPagingEnabled")] get; set; }

		// @property (getter = isScrollEnabled, nonatomic) int scrollEnabled;
		[Export ("scrollEnabled")]
		int ScrollEnabled { [Bind ("isScrollEnabled")] get; set; }

		// @property (nonatomic) int showsVerticalScrollIndicator;
		[Export ("showsVerticalScrollIndicator")]
		int ShowsVerticalScrollIndicator { get; set; }

		// @property (nonatomic) int showsHorizontalScrollIndicator;
		[Export ("showsHorizontalScrollIndicator")]
		int ShowsHorizontalScrollIndicator { get; set; }

		// @property (nonatomic) UIScrollViewIndicatorStyle indicatorStyle;
		[Export ("indicatorStyle", ArgumentSemantic.Assign)]
		UIScrollViewIndicatorStyle IndicatorStyle { get; set; }

		// @property (nonatomic) UIEdgeInsets verticalScrollIndicatorInsets __attribute__((availability(ios, introduced=11.1))) __attribute__((availability(tvos, introduced=11.1)));
		[TV (11, 1), iOS (11, 1)]
		[Export ("verticalScrollIndicatorInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets VerticalScrollIndicatorInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets horizontalScrollIndicatorInsets __attribute__((availability(ios, introduced=11.1))) __attribute__((availability(tvos, introduced=11.1)));
		[TV (11, 1), iOS (11, 1)]
		[Export ("horizontalScrollIndicatorInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets HorizontalScrollIndicatorInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets scrollIndicatorInsets;
		[Export ("scrollIndicatorInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets ScrollIndicatorInsets { get; set; }

		// @property (nonatomic) UIScrollViewDecelerationRate decelerationRate __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("decelerationRate")]
		double DecelerationRate { get; set; }

		// @property (nonatomic) UIScrollViewIndexDisplayMode indexDisplayMode __attribute__((availability(tvos, introduced=10.2)));
		[TV (10, 2)]
		[Export ("indexDisplayMode", ArgumentSemantic.Assign)]
		UIScrollViewIndexDisplayMode IndexDisplayMode { get; set; }

		// -(void)setContentOffset:(CGPoint)contentOffset animated:(int)animated;
		[Export ("setContentOffset:animated:")]
		void SetContentOffset (CGPoint contentOffset, int animated);

		// -(void)scrollRectToVisible:(CGRect)rect animated:(int)animated;
		[Export ("scrollRectToVisible:animated:")]
		void ScrollRectToVisible (CGRect rect, int animated);

		// -(void)flashScrollIndicators;
		[Export ("flashScrollIndicators")]
		void FlashScrollIndicators ();

		// @property (readonly, getter = isTracking, nonatomic) int tracking;
		[Export ("tracking")]
		int Tracking { [Bind ("isTracking")] get; }

		// @property (readonly, getter = isDragging, nonatomic) int dragging;
		[Export ("dragging")]
		int Dragging { [Bind ("isDragging")] get; }

		// @property (readonly, getter = isDecelerating, nonatomic) int decelerating;
		[Export ("decelerating")]
		int Decelerating { [Bind ("isDecelerating")] get; }

		// @property (nonatomic) int delaysContentTouches;
		[Export ("delaysContentTouches")]
		int DelaysContentTouches { get; set; }

		// @property (nonatomic) int canCancelContentTouches;
		[Export ("canCancelContentTouches")]
		int CanCancelContentTouches { get; set; }

		// -(int)touchesShouldBegin:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event inContentView:(UIView * _Nonnull)view;
		[Export ("touchesShouldBegin:withEvent:inContentView:")]
		int TouchesShouldBegin (NSSet<UITouch> touches, [NullAllowed] UIEvent @event, UIView view);

		// -(int)touchesShouldCancelInContentView:(UIView * _Nonnull)view;
		[Export ("touchesShouldCancelInContentView:")]
		int TouchesShouldCancelInContentView (UIView view);

		// @property (nonatomic) CGFloat minimumZoomScale;
		[Export ("minimumZoomScale")]
		nfloat MinimumZoomScale { get; set; }

		// @property (nonatomic) CGFloat maximumZoomScale;
		[Export ("maximumZoomScale")]
		nfloat MaximumZoomScale { get; set; }

		// @property (nonatomic) CGFloat zoomScale __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("zoomScale")]
		nfloat ZoomScale { get; set; }

		// -(void)setZoomScale:(CGFloat)scale animated:(int)animated __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("setZoomScale:animated:")]
		void SetZoomScale (nfloat scale, int animated);

		// -(void)zoomToRect:(CGRect)rect animated:(int)animated __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("zoomToRect:animated:")]
		void ZoomToRect (CGRect rect, int animated);

		// @property (nonatomic) int bouncesZoom;
		[Export ("bouncesZoom")]
		int BouncesZoom { get; set; }

		// @property (readonly, getter = isZooming, nonatomic) int zooming;
		[Export ("zooming")]
		int Zooming { [Bind ("isZooming")] get; }

		// @property (readonly, getter = isZoomBouncing, nonatomic) int zoomBouncing;
		[Export ("zoomBouncing")]
		int ZoomBouncing { [Bind ("isZoomBouncing")] get; }

		// @property (nonatomic) int scrollsToTop __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("scrollsToTop")]
		int ScrollsToTop { get; set; }

		// @property (readonly, nonatomic) UIPanGestureRecognizer * _Nonnull panGestureRecognizer __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("panGestureRecognizer")]
		UIPanGestureRecognizer PanGestureRecognizer { get; }

		// @property (readonly, nonatomic) UIPinchGestureRecognizer * _Nullable pinchGestureRecognizer __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("pinchGestureRecognizer")]
		UIPinchGestureRecognizer PinchGestureRecognizer { get; }

		// @property (readonly, nonatomic) UIGestureRecognizer * _Nonnull directionalPressGestureRecognizer __attribute__((availability(tvos, introduced=9.0, deprecated=11.0)));
		[Introduced (PlatformName.TvOS, 9, 0, message: "Configuring the panGestureRecognizer for indirect scrolling automatically supports directional presses now, so this property is no longer useful.")]
		[Deprecated (PlatformName.TvOS, 11, 0, message: "Configuring the panGestureRecognizer for indirect scrolling automatically supports directional presses now, so this property is no longer useful.")]
		[Export ("directionalPressGestureRecognizer")]
		UIGestureRecognizer DirectionalPressGestureRecognizer { get; }

		// @property (nonatomic) UIScrollViewKeyboardDismissMode keyboardDismissMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("keyboardDismissMode", ArgumentSemantic.Assign)]
		UIScrollViewKeyboardDismissMode KeyboardDismissMode { get; set; }

		// @property (nonatomic, strong) UIRefreshControl * _Nullable refreshControl __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (10, 0)]
		[NullAllowed, Export ("refreshControl", ArgumentSemantic.Strong)]
		UIRefreshControl RefreshControl { get; set; }
	}

	// @protocol UIScrollViewDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIScrollViewDelegate
	{
		// @optional -(void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewDidScroll:")]
		void ScrollViewDidScroll (UIScrollView scrollView);

		// @optional -(void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("scrollViewDidZoom:")]
		void ScrollViewDidZoom (UIScrollView scrollView);

		// @optional -(void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewWillBeginDragging:")]
		void ScrollViewWillBeginDragging (UIScrollView scrollView);

		// @optional -(void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("scrollViewWillEndDragging:withVelocity:targetContentOffset:")]
		unsafe void ScrollViewWillEndDragging (UIScrollView scrollView, CGPoint velocity, CGPoint* targetContentOffset);

		// @optional -(void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(int)decelerate;
		[Export ("scrollViewDidEndDragging:willDecelerate:")]
		void ScrollViewDidEndDragging (UIScrollView scrollView, int decelerate);

		// @optional -(void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewWillBeginDecelerating:")]
		void ScrollViewWillBeginDecelerating (UIScrollView scrollView);

		// @optional -(void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewDidEndDecelerating:")]
		void ScrollViewDidEndDecelerating (UIScrollView scrollView);

		// @optional -(void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewDidEndScrollingAnimation:")]
		void ScrollViewDidEndScrollingAnimation (UIScrollView scrollView);

		// @optional -(UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView;
		[Export ("viewForZoomingInScrollView:")]
		[return: NullAllowed]
		UIView ViewForZoomingInScrollView (UIScrollView scrollView);

		// @optional -(void)scrollViewWillBeginZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("scrollViewWillBeginZooming:withView:")]
		void ScrollViewWillBeginZooming (UIScrollView scrollView, [NullAllowed] UIView view);

		// @optional -(void)scrollViewDidEndZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view atScale:(CGFloat)scale;
		[Export ("scrollViewDidEndZooming:withView:atScale:")]
		void ScrollViewDidEndZooming (UIScrollView scrollView, [NullAllowed] UIView view, nfloat scale);

		// @optional -(int)scrollViewShouldScrollToTop:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewShouldScrollToTop:")]
		int ScrollViewShouldScrollToTop (UIScrollView scrollView);

		// @optional -(void)scrollViewDidScrollToTop:(UIScrollView * _Nonnull)scrollView;
		[Export ("scrollViewDidScrollToTop:")]
		void ScrollViewDidScrollToTop (UIScrollView scrollView);

		// @optional -(void)scrollViewDidChangeAdjustedContentInset:(UIScrollView * _Nonnull)scrollView __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("scrollViewDidChangeAdjustedContentInset:")]
		void ScrollViewDidChangeAdjustedContentInset (UIScrollView scrollView);
	}

	// @protocol UIPickerViewAccessibilityDelegate <UIPickerViewDelegate>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	interface UIPickerViewAccessibilityDelegate : IUIPickerViewDelegate
	{
		// @optional -(NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityLabelForComponent:(NSInteger)component;
		[Export ("pickerView:accessibilityLabelForComponent:")]
		[return: NullAllowed]
		string PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityHintForComponent:(NSInteger)component;
		[Export ("pickerView:accessibilityHintForComponent:")]
		[return: NullAllowed]
		string PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSArray<NSString *> * _Nonnull)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityUserInputLabelsForComponent:(NSInteger)component __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("pickerView:accessibilityUserInputLabelsForComponent:")]
		string[] PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSAttributedString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityAttributedLabelForComponent:(NSInteger)component __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("pickerView:accessibilityAttributedLabelForComponent:")]
		[return: NullAllowed]
		NSAttributedString PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSAttributedString * _Nullable)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityAttributedHintForComponent:(NSInteger)component __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("pickerView:accessibilityAttributedHintForComponent:")]
		[return: NullAllowed]
		NSAttributedString PickerView (UIPickerView pickerView, nint component);

		// @optional -(NSArray<NSAttributedString *> * _Nonnull)pickerView:(UIPickerView * _Nonnull)pickerView accessibilityAttributedUserInputLabelsForComponent:(NSInteger)component __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("pickerView:accessibilityAttributedUserInputLabelsForComponent:")]
		NSAttributedString[] PickerView (UIPickerView pickerView, nint component);
	}

	// @protocol UIScrollViewAccessibilityDelegate <UIScrollViewDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface UIScrollViewAccessibilityDelegate : IUIScrollViewDelegate
	{
		// @optional -(NSString * _Nullable)accessibilityScrollStatusForScrollView:(UIScrollView * _Nonnull)scrollView;
		[Export ("accessibilityScrollStatusForScrollView:")]
		[return: NullAllowed]
		string AccessibilityScrollStatusForScrollView (UIScrollView scrollView);

		// @optional -(NSAttributedString * _Nullable)accessibilityAttributedScrollStatusForScrollView:(UIScrollView * _Nonnull)scrollView __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("accessibilityAttributedScrollStatusForScrollView:")]
		[return: NullAllowed]
		NSAttributedString AccessibilityAttributedScrollStatusForScrollView (UIScrollView scrollView);
	}

	// @interface UIAccessibilityInvertColors (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIAccessibilityInvertColors
	{
		// @property (nonatomic) int accessibilityIgnoresInvertColors __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("accessibilityIgnoresInvertColors")]
		int AccessibilityIgnoresInvertColors { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern UIAccessibilityTraits UIAccessibilityTraitNone __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitNone", "__Internal")]
		ulong UIAccessibilityTraitNone { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitButton __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitButton", "__Internal")]
		ulong UIAccessibilityTraitButton { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitLink __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitLink", "__Internal")]
		ulong UIAccessibilityTraitLink { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitHeader __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityTraitHeader", "__Internal")]
		ulong UIAccessibilityTraitHeader { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitSearchField __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitSearchField", "__Internal")]
		ulong UIAccessibilityTraitSearchField { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitImage __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitImage", "__Internal")]
		ulong UIAccessibilityTraitImage { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitSelected __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitSelected", "__Internal")]
		ulong UIAccessibilityTraitSelected { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitPlaysSound __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitPlaysSound", "__Internal")]
		ulong UIAccessibilityTraitPlaysSound { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitKeyboardKey __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitKeyboardKey", "__Internal")]
		ulong UIAccessibilityTraitKeyboardKey { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitStaticText __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitStaticText", "__Internal")]
		ulong UIAccessibilityTraitStaticText { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitSummaryElement __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitSummaryElement", "__Internal")]
		ulong UIAccessibilityTraitSummaryElement { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitNotEnabled __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitNotEnabled", "__Internal")]
		ulong UIAccessibilityTraitNotEnabled { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitUpdatesFrequently __attribute__((visibility("default")));
		[Field ("UIAccessibilityTraitUpdatesFrequently", "__Internal")]
		ulong UIAccessibilityTraitUpdatesFrequently { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitStartsMediaSession __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIAccessibilityTraitStartsMediaSession", "__Internal")]
		ulong UIAccessibilityTraitStartsMediaSession { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitAdjustable __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIAccessibilityTraitAdjustable", "__Internal")]
		ulong UIAccessibilityTraitAdjustable { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitAllowsDirectInteraction __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIAccessibilityTraitAllowsDirectInteraction", "__Internal")]
		ulong UIAccessibilityTraitAllowsDirectInteraction { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitCausesPageTurn __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIAccessibilityTraitCausesPageTurn", "__Internal")]
		ulong UIAccessibilityTraitCausesPageTurn { get; }

		// extern UIAccessibilityTraits UIAccessibilityTraitTabBar __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UIAccessibilityTraitTabBar", "__Internal")]
		ulong UIAccessibilityTraitTabBar { get; }

		// extern UIAccessibilityNotifications UIAccessibilityScreenChangedNotification __attribute__((visibility("default")));
		[Field ("UIAccessibilityScreenChangedNotification", "__Internal")]
		uint UIAccessibilityScreenChangedNotification { get; }

		// extern UIAccessibilityNotifications UIAccessibilityLayoutChangedNotification __attribute__((visibility("default")));
		[Field ("UIAccessibilityLayoutChangedNotification", "__Internal")]
		uint UIAccessibilityLayoutChangedNotification { get; }

		// extern UIAccessibilityNotifications UIAccessibilityAnnouncementNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIAccessibilityAnnouncementNotification", "__Internal")]
		uint UIAccessibilityAnnouncementNotification { get; }

		// extern UIAccessibilityNotifications UIAccessibilityPageScrolledNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.2)));
		[iOS (4, 2)]
		[Field ("UIAccessibilityPageScrolledNotification", "__Internal")]
		uint UIAccessibilityPageScrolledNotification { get; }

		// extern UIAccessibilityNotifications UIAccessibilityPauseAssistiveTechnologyNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityPauseAssistiveTechnologyNotification", "__Internal")]
		uint UIAccessibilityPauseAssistiveTechnologyNotification { get; }

		// extern UIAccessibilityNotifications UIAccessibilityResumeAssistiveTechnologyNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityResumeAssistiveTechnologyNotification", "__Internal")]
		uint UIAccessibilityResumeAssistiveTechnologyNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityAnnouncementDidFinishNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityAnnouncementDidFinishNotification", "__Internal")]
		NSString UIAccessibilityAnnouncementDidFinishNotification { get; }

		// extern NSString *const _Nonnull UIAccessibilityAnnouncementKeyStringValue __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityAnnouncementKeyStringValue", "__Internal")]
		NSString UIAccessibilityAnnouncementKeyStringValue { get; }

		// extern NSString *const _Nonnull UIAccessibilityAnnouncementKeyWasSuccessful __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityAnnouncementKeyWasSuccessful", "__Internal")]
		NSString UIAccessibilityAnnouncementKeyWasSuccessful { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityElementFocusedNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityElementFocusedNotification", "__Internal")]
		NSString UIAccessibilityElementFocusedNotification { get; }

		// extern NSString *const _Nonnull UIAccessibilityFocusedElementKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityFocusedElementKey", "__Internal")]
		NSString UIAccessibilityFocusedElementKey { get; }

		// extern NSString *const _Nonnull UIAccessibilityUnfocusedElementKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityUnfocusedElementKey", "__Internal")]
		NSString UIAccessibilityUnfocusedElementKey { get; }

		// extern NSString *const _Nonnull UIAccessibilityAssistiveTechnologyKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityAssistiveTechnologyKey", "__Internal")]
		NSString UIAccessibilityAssistiveTechnologyKey { get; }

		// extern const UIAccessibilityAssistiveTechnologyIdentifier _Nonnull UIAccessibilityNotificationSwitchControlIdentifier __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityNotificationSwitchControlIdentifier", "__Internal")]
		NSString UIAccessibilityNotificationSwitchControlIdentifier { get; }

		// extern const UIAccessibilityAssistiveTechnologyIdentifier _Nonnull UIAccessibilityNotificationVoiceOverIdentifier __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityNotificationVoiceOverIdentifier", "__Internal")]
		NSString UIAccessibilityNotificationVoiceOverIdentifier { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextWordProcessing __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextWordProcessing", "__Internal")]
		NSString UIAccessibilityTextualContextWordProcessing { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextNarrative __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextNarrative", "__Internal")]
		NSString UIAccessibilityTextualContextNarrative { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextMessaging __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextMessaging", "__Internal")]
		NSString UIAccessibilityTextualContextMessaging { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextSpreadsheet __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextSpreadsheet", "__Internal")]
		NSString UIAccessibilityTextualContextSpreadsheet { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextFileSystem __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextFileSystem", "__Internal")]
		NSString UIAccessibilityTextualContextFileSystem { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextSourceCode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextSourceCode", "__Internal")]
		NSString UIAccessibilityTextualContextSourceCode { get; }

		// extern const UIAccessibilityTextualContext _Nonnull UIAccessibilityTextualContextConsole __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextualContextConsole", "__Internal")]
		NSString UIAccessibilityTextualContextConsole { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributePunctuation __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIAccessibilitySpeechAttributePunctuation", "__Internal")]
		NSString UIAccessibilitySpeechAttributePunctuation { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributeLanguage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIAccessibilitySpeechAttributeLanguage", "__Internal")]
		NSString UIAccessibilitySpeechAttributeLanguage { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributePitch __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIAccessibilitySpeechAttributePitch", "__Internal")]
		NSString UIAccessibilitySpeechAttributePitch { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributeQueueAnnouncement __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UIAccessibilitySpeechAttributeQueueAnnouncement", "__Internal")]
		NSString UIAccessibilitySpeechAttributeQueueAnnouncement { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributeIPANotation __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UIAccessibilitySpeechAttributeIPANotation", "__Internal")]
		NSString UIAccessibilitySpeechAttributeIPANotation { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilitySpeechAttributeSpellOut __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIAccessibilitySpeechAttributeSpellOut", "__Internal")]
		NSString UIAccessibilitySpeechAttributeSpellOut { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilityTextAttributeHeadingLevel __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UIAccessibilityTextAttributeHeadingLevel", "__Internal")]
		NSString UIAccessibilityTextAttributeHeadingLevel { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilityTextAttributeCustom __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UIAccessibilityTextAttributeCustom", "__Internal")]
		NSString UIAccessibilityTextAttributeCustom { get; }

		// extern const NSAttributedStringKey _Nonnull UIAccessibilityTextAttributeContext __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityTextAttributeContext", "__Internal")]
		NSString UIAccessibilityTextAttributeContext { get; }
	}

	// @interface UIAccessibilityContainer (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibilityContainer
	{
		// -(NSInteger)accessibilityElementCount;
		[Export ("accessibilityElementCount")]
		[Verify (MethodToProperty)]
		nint AccessibilityElementCount { get; }

		// -(id _Nullable)accessibilityElementAtIndex:(NSInteger)index;
		[Export ("accessibilityElementAtIndex:")]
		[return: NullAllowed]
		NSObject AccessibilityElementAtIndex (nint index);

		// -(NSInteger)indexOfAccessibilityElement:(id _Nonnull)element;
		[Export ("indexOfAccessibilityElement:")]
		nint IndexOfAccessibilityElement (NSObject element);

		// @property (nonatomic, strong) NSArray * _Nullable accessibilityElements __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("accessibilityElements", ArgumentSemantic.Strong)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] AccessibilityElements { get; set; }

		// @property (nonatomic) UIAccessibilityContainerType accessibilityContainerType __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("accessibilityContainerType", ArgumentSemantic.Assign)]
		UIAccessibilityContainerType AccessibilityContainerType { get; set; }
	}

	// @protocol UIAccessibilityContainerDataTableCell <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityContainerDataTableCell
	{
		// @required -(NSRange)accessibilityRowRange;
		[Abstract]
		[Export ("accessibilityRowRange")]
		[Verify (MethodToProperty)]
		NSRange AccessibilityRowRange { get; }

		// @required -(NSRange)accessibilityColumnRange;
		[Abstract]
		[Export ("accessibilityColumnRange")]
		[Verify (MethodToProperty)]
		NSRange AccessibilityColumnRange { get; }
	}

	// @protocol UIAccessibilityContainerDataTable <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityContainerDataTable
	{
		// @required -(id<UIAccessibilityContainerDataTableCell> _Nullable)accessibilityDataTableCellElementForRow:(NSUInteger)row column:(NSUInteger)column;
		[Abstract]
		[Export ("accessibilityDataTableCellElementForRow:column:")]
		[return: NullAllowed]
		UIAccessibilityContainerDataTableCell AccessibilityDataTableCellElementForRow (nuint row, nuint column);

		// @required -(NSUInteger)accessibilityRowCount;
		[Abstract]
		[Export ("accessibilityRowCount")]
		[Verify (MethodToProperty)]
		nuint AccessibilityRowCount { get; }

		// @required -(NSUInteger)accessibilityColumnCount;
		[Abstract]
		[Export ("accessibilityColumnCount")]
		[Verify (MethodToProperty)]
		nuint AccessibilityColumnCount { get; }

		// @optional -(NSArray<id<UIAccessibilityContainerDataTableCell>> * _Nullable)accessibilityHeaderElementsForRow:(NSUInteger)row;
		[Export ("accessibilityHeaderElementsForRow:")]
		[return: NullAllowed]
		UIAccessibilityContainerDataTableCell[] AccessibilityHeaderElementsForRow (nuint row);

		// @optional -(NSArray<id<UIAccessibilityContainerDataTableCell>> * _Nullable)accessibilityHeaderElementsForColumn:(NSUInteger)column;
		[Export ("accessibilityHeaderElementsForColumn:")]
		[return: NullAllowed]
		UIAccessibilityContainerDataTableCell[] AccessibilityHeaderElementsForColumn (nuint column);
	}

	// @interface UIAccessibilityCustomAction : NSObject
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityCustomAction
	{
		// -(instancetype _Nonnull)initWithName:(NSString * _Nonnull)name target:(id _Nullable)target selector:(SEL _Nonnull)selector;
		[Export ("initWithName:target:selector:")]
		IntPtr Constructor (string name, [NullAllowed] NSObject target, Selector selector);

		// -(instancetype _Nonnull)initWithAttributedName:(NSAttributedString * _Nonnull)attributedName target:(id _Nullable)target selector:(SEL _Nonnull)selector __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("initWithAttributedName:target:selector:")]
		IntPtr Constructor (NSAttributedString attributedName, [NullAllowed] NSObject target, Selector selector);

		// -(instancetype _Nonnull)initWithName:(NSString * _Nonnull)name actionHandler:(UIAccessibilityCustomActionHandler _Nonnull)actionHandler __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13,0), iOS (13,0)]
		[Export ("initWithName:actionHandler:")]
		IntPtr Constructor (string name, UIAccessibilityCustomActionHandler actionHandler);

		// -(instancetype _Nonnull)initWithAttributedName:(NSAttributedString * _Nonnull)attributedName actionHandler:(UIAccessibilityCustomActionHandler _Nonnull)actionHandler __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13,0), iOS (13,0)]
		[Export ("initWithAttributedName:actionHandler:")]
		IntPtr Constructor (NSAttributedString attributedName, UIAccessibilityCustomActionHandler actionHandler);

		// @property (copy, nonatomic) NSString * _Nonnull name;
		[Export ("name")]
		string Name { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nonnull attributedName __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("attributedName", ArgumentSemantic.Copy)]
		NSAttributedString AttributedName { get; set; }

		// @property (nonatomic, weak) id _Nullable target;
		[NullAllowed, Export ("target", ArgumentSemantic.Weak)]
		NSObject Target { get; set; }

		// @property (assign, nonatomic) SEL _Nonnull selector;
		[Export ("selector", ArgumentSemantic.Assign)]
		Selector Selector { get; set; }

		// @property (copy, nonatomic) UIAccessibilityCustomActionHandler _Nullable actionHandler __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("actionHandler", ArgumentSemantic.Copy)]
		UIAccessibilityCustomActionHandler ActionHandler { get; set; }
	}

	// typedef int (^UIAccessibilityCustomActionHandler)(UIAccessibilityCustomAction * _Nonnull);
	delegate int UIAccessibilityCustomActionHandler (UIAccessibilityCustomAction arg0);

	// @interface UITextInputPasswordRules : NSObject <NSSecureCoding, NSCopying>
	[iOS (12,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITextInputPasswordRules : INSSecureCoding, INSCopying
	{
		// @property (readonly, nonatomic) NSString * _Nonnull passwordRulesDescriptor;
		[Export ("passwordRulesDescriptor")]
		string PasswordRulesDescriptor { get; }

		// +(instancetype _Nonnull)passwordRulesWithDescriptor:(NSString * _Nonnull)passwordRulesDescriptor;
		[Static]
		[Export ("passwordRulesWithDescriptor:")]
		UITextInputPasswordRules PasswordRulesWithDescriptor (string passwordRulesDescriptor);
	}

	// @protocol UITextInputTraits <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITextInputTraits
	{
		// @optional @property (nonatomic) UITextAutocapitalizationType autocapitalizationType;
		[Export ("autocapitalizationType", ArgumentSemantic.Assign)]
		UITextAutocapitalizationType AutocapitalizationType { get; set; }

		// @optional @property (nonatomic) UITextAutocorrectionType autocorrectionType;
		[Export ("autocorrectionType", ArgumentSemantic.Assign)]
		UITextAutocorrectionType AutocorrectionType { get; set; }

		// @optional @property (nonatomic) UITextSpellCheckingType spellCheckingType __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("spellCheckingType", ArgumentSemantic.Assign)]
		UITextSpellCheckingType SpellCheckingType { get; set; }

		// @optional @property (nonatomic) UITextSmartQuotesType smartQuotesType __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("smartQuotesType", ArgumentSemantic.Assign)]
		UITextSmartQuotesType SmartQuotesType { get; set; }

		// @optional @property (nonatomic) UITextSmartDashesType smartDashesType __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("smartDashesType", ArgumentSemantic.Assign)]
		UITextSmartDashesType SmartDashesType { get; set; }

		// @optional @property (nonatomic) UITextSmartInsertDeleteType smartInsertDeleteType __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("smartInsertDeleteType", ArgumentSemantic.Assign)]
		UITextSmartInsertDeleteType SmartInsertDeleteType { get; set; }

		// @optional @property (nonatomic) UIKeyboardType keyboardType;
		[Export ("keyboardType", ArgumentSemantic.Assign)]
		UIKeyboardType KeyboardType { get; set; }

		// @optional @property (nonatomic) UIKeyboardAppearance keyboardAppearance;
		[Export ("keyboardAppearance", ArgumentSemantic.Assign)]
		UIKeyboardAppearance KeyboardAppearance { get; set; }

		// @optional @property (nonatomic) UIReturnKeyType returnKeyType;
		[Export ("returnKeyType", ArgumentSemantic.Assign)]
		UIReturnKeyType ReturnKeyType { get; set; }

		// @optional @property (nonatomic) int enablesReturnKeyAutomatically;
		[Export ("enablesReturnKeyAutomatically")]
		int EnablesReturnKeyAutomatically { get; set; }

		// @optional @property (getter = isSecureTextEntry, nonatomic) int secureTextEntry;
		[Export ("secureTextEntry")]
		int SecureTextEntry { [Bind ("isSecureTextEntry")] get; set; }

		// @optional @property (copy, nonatomic) UITextContentType _Null_unspecified textContentType __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("textContentType")]
		string TextContentType { get; set; }

		// @optional @property (copy, nonatomic) UITextInputPasswordRules * _Nullable passwordRules __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[NullAllowed, Export ("passwordRules", ArgumentSemantic.Copy)]
		UITextInputPasswordRules PasswordRules { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UITextContentType _Nonnull UITextContentTypeName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeName", "__Internal")]
		NSString UITextContentTypeName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeNamePrefix __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeNamePrefix", "__Internal")]
		NSString UITextContentTypeNamePrefix { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeGivenName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeGivenName", "__Internal")]
		NSString UITextContentTypeGivenName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeMiddleName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeMiddleName", "__Internal")]
		NSString UITextContentTypeMiddleName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeFamilyName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeFamilyName", "__Internal")]
		NSString UITextContentTypeFamilyName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeNameSuffix __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeNameSuffix", "__Internal")]
		NSString UITextContentTypeNameSuffix { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeNickname __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeNickname", "__Internal")]
		NSString UITextContentTypeNickname { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeJobTitle __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeJobTitle", "__Internal")]
		NSString UITextContentTypeJobTitle { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeOrganizationName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeOrganizationName", "__Internal")]
		NSString UITextContentTypeOrganizationName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeLocation __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeLocation", "__Internal")]
		NSString UITextContentTypeLocation { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeFullStreetAddress __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeFullStreetAddress", "__Internal")]
		NSString UITextContentTypeFullStreetAddress { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeStreetAddressLine1 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeStreetAddressLine1", "__Internal")]
		NSString UITextContentTypeStreetAddressLine1 { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeStreetAddressLine2 __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeStreetAddressLine2", "__Internal")]
		NSString UITextContentTypeStreetAddressLine2 { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeAddressCity __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeAddressCity", "__Internal")]
		NSString UITextContentTypeAddressCity { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeAddressState __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeAddressState", "__Internal")]
		NSString UITextContentTypeAddressState { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeAddressCityAndState __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeAddressCityAndState", "__Internal")]
		NSString UITextContentTypeAddressCityAndState { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeSublocality __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeSublocality", "__Internal")]
		NSString UITextContentTypeSublocality { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeCountryName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeCountryName", "__Internal")]
		NSString UITextContentTypeCountryName { get; }

		// extern const UITextContentType _Nonnull UITextContentTypePostalCode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypePostalCode", "__Internal")]
		NSString UITextContentTypePostalCode { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeTelephoneNumber __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeTelephoneNumber", "__Internal")]
		NSString UITextContentTypeTelephoneNumber { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeEmailAddress __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeEmailAddress", "__Internal")]
		NSString UITextContentTypeEmailAddress { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeURL __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeURL", "__Internal")]
		NSString UITextContentTypeURL { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeCreditCardNumber __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextContentTypeCreditCardNumber", "__Internal")]
		NSString UITextContentTypeCreditCardNumber { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeUsername __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UITextContentTypeUsername", "__Internal")]
		NSString UITextContentTypeUsername { get; }

		// extern const UITextContentType _Nonnull UITextContentTypePassword __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UITextContentTypePassword", "__Internal")]
		NSString UITextContentTypePassword { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeNewPassword __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("UITextContentTypeNewPassword", "__Internal")]
		NSString UITextContentTypeNewPassword { get; }

		// extern const UITextContentType _Nonnull UITextContentTypeOneTimeCode __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Field ("UITextContentTypeOneTimeCode", "__Internal")]
		NSString UITextContentTypeOneTimeCode { get; }
	}

	// @protocol UIKeyInput <UITextInputTraits>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIKeyInput : IUITextInputTraits
	{
		// @required @property (readonly, nonatomic) int hasText;
		[Abstract]
		[Export ("hasText")]
		int HasText { get; }

		// @required -(void)insertText:(NSString * _Nonnull)text;
		[Abstract]
		[Export ("insertText:")]
		void InsertText (string text);

		// @required -(void)deleteBackward;
		[Abstract]
		[Export ("deleteBackward")]
		void DeleteBackward ();
	}

	// @interface UIDictationPhrase : NSObject
	[iOS (5,1)]
	[BaseType (typeof(NSObject))]
	interface UIDictationPhrase
	{
		// @property (readonly, nonatomic) NSString * _Nonnull text;
		[Export ("text")]
		string Text { get; }

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nullable alternativeInterpretations;
		[NullAllowed, Export ("alternativeInterpretations")]
		string[] AlternativeInterpretations { get; }
	}

	// @interface UITextInputAssistantItem : NSObject
	[NoWatch, NoTV, iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UITextInputAssistantItem
	{
		// @property (assign, readwrite, nonatomic) int allowsHidingShortcuts;
		[Export ("allowsHidingShortcuts")]
		int AllowsHidingShortcuts { get; set; }

		// @property (readwrite, copy, nonatomic) NSArray<UIBarButtonItemGroup *> * _Nonnull leadingBarButtonGroups;
		[Export ("leadingBarButtonGroups", ArgumentSemantic.Copy)]
		UIBarButtonItemGroup[] LeadingBarButtonGroups { get; set; }

		// @property (readwrite, copy, nonatomic) NSArray<UIBarButtonItemGroup *> * _Nonnull trailingBarButtonGroups;
		[Export ("trailingBarButtonGroups", ArgumentSemantic.Copy)]
		UIBarButtonItemGroup[] TrailingBarButtonGroups { get; set; }
	}

	// @interface UITextPlaceholder : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UITextPlaceholder
	{
		// @property (readonly, nonatomic) NSArray<UITextSelectionRect *> * _Nonnull rects;
		[Export ("rects")]
		UITextSelectionRect[] Rects { get; }
	}

	// @protocol UITextInput <UIKeyInput>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UITextInput : IUIKeyInput
	{
		// @required -(NSString * _Nullable)textInRange:(UITextRange * _Nonnull)range;
		[Abstract]
		[Export ("textInRange:")]
		[return: NullAllowed]
		string TextInRange (UITextRange range);

		// @required -(void)replaceRange:(UITextRange * _Nonnull)range withText:(NSString * _Nonnull)text;
		[Abstract]
		[Export ("replaceRange:withText:")]
		void ReplaceRange (UITextRange range, string text);

		// @required @property (readwrite, copy) UITextRange * _Nullable selectedTextRange;
		[Abstract]
		[NullAllowed, Export ("selectedTextRange", ArgumentSemantic.Copy)]
		UITextRange SelectedTextRange { get; set; }

		// @required @property (readonly, nonatomic) UITextRange * _Nullable markedTextRange;
		[Abstract]
		[NullAllowed, Export ("markedTextRange")]
		UITextRange MarkedTextRange { get; }

		// @required @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nullable markedTextStyle;
		[Abstract]
		[NullAllowed, Export ("markedTextStyle", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> MarkedTextStyle { get; set; }

		// @required -(void)setMarkedText:(NSString * _Nullable)markedText selectedRange:(NSRange)selectedRange;
		[Abstract]
		[Export ("setMarkedText:selectedRange:")]
		void SetMarkedText ([NullAllowed] string markedText, NSRange selectedRange);

		// @required -(void)unmarkText;
		[Abstract]
		[Export ("unmarkText")]
		void UnmarkText ();

		// @required @property (readonly, nonatomic) UITextPosition * _Nonnull beginningOfDocument;
		[Abstract]
		[Export ("beginningOfDocument")]
		UITextPosition BeginningOfDocument { get; }

		// @required @property (readonly, nonatomic) UITextPosition * _Nonnull endOfDocument;
		[Abstract]
		[Export ("endOfDocument")]
		UITextPosition EndOfDocument { get; }

		// @required -(UITextRange * _Nullable)textRangeFromPosition:(UITextPosition * _Nonnull)fromPosition toPosition:(UITextPosition * _Nonnull)toPosition;
		[Abstract]
		[Export ("textRangeFromPosition:toPosition:")]
		[return: NullAllowed]
		UITextRange TextRangeFromPosition (UITextPosition fromPosition, UITextPosition toPosition);

		// @required -(UITextPosition * _Nullable)positionFromPosition:(UITextPosition * _Nonnull)position offset:(NSInteger)offset;
		[Abstract]
		[Export ("positionFromPosition:offset:")]
		[return: NullAllowed]
		UITextPosition PositionFromPosition (UITextPosition position, nint offset);

		// @required -(UITextPosition * _Nullable)positionFromPosition:(UITextPosition * _Nonnull)position inDirection:(UITextLayoutDirection)direction offset:(NSInteger)offset;
		[Abstract]
		[Export ("positionFromPosition:inDirection:offset:")]
		[return: NullAllowed]
		UITextPosition PositionFromPosition (UITextPosition position, UITextLayoutDirection direction, nint offset);

		// @required -(NSComparisonResult)comparePosition:(UITextPosition * _Nonnull)position toPosition:(UITextPosition * _Nonnull)other;
		[Abstract]
		[Export ("comparePosition:toPosition:")]
		NSComparisonResult ComparePosition (UITextPosition position, UITextPosition other);

		// @required -(NSInteger)offsetFromPosition:(UITextPosition * _Nonnull)from toPosition:(UITextPosition * _Nonnull)toPosition;
		[Abstract]
		[Export ("offsetFromPosition:toPosition:")]
		nint OffsetFromPosition (UITextPosition from, UITextPosition toPosition);

		[Wrap ("WeakInputDelegate"), Abstract]
		[NullAllowed]
		UITextInputDelegate InputDelegate { get; set; }

		// @required @property (nonatomic, weak) id<UITextInputDelegate> _Nullable inputDelegate;
		[Abstract]
		[NullAllowed, Export ("inputDelegate", ArgumentSemantic.Weak)]
		NSObject WeakInputDelegate { get; set; }

		// @required @property (readonly, nonatomic) id<UITextInputTokenizer> _Nonnull tokenizer;
		[Abstract]
		[Export ("tokenizer")]
		UITextInputTokenizer Tokenizer { get; }

		// @required -(UITextPosition * _Nullable)positionWithinRange:(UITextRange * _Nonnull)range farthestInDirection:(UITextLayoutDirection)direction;
		[Abstract]
		[Export ("positionWithinRange:farthestInDirection:")]
		[return: NullAllowed]
		UITextPosition PositionWithinRange (UITextRange range, UITextLayoutDirection direction);

		// @required -(UITextRange * _Nullable)characterRangeByExtendingPosition:(UITextPosition * _Nonnull)position inDirection:(UITextLayoutDirection)direction;
		[Abstract]
		[Export ("characterRangeByExtendingPosition:inDirection:")]
		[return: NullAllowed]
		UITextRange CharacterRangeByExtendingPosition (UITextPosition position, UITextLayoutDirection direction);

		// @required -(NSWritingDirection)baseWritingDirectionForPosition:(UITextPosition * _Nonnull)position inDirection:(UITextStorageDirection)direction;
		[Abstract]
		[Export ("baseWritingDirectionForPosition:inDirection:")]
		NSWritingDirection BaseWritingDirectionForPosition (UITextPosition position, UITextStorageDirection direction);

		// @required -(void)setBaseWritingDirection:(NSWritingDirection)writingDirection forRange:(UITextRange * _Nonnull)range;
		[Abstract]
		[Export ("setBaseWritingDirection:forRange:")]
		void SetBaseWritingDirection (NSWritingDirection writingDirection, UITextRange range);

		// @required -(CGRect)firstRectForRange:(UITextRange * _Nonnull)range;
		[Abstract]
		[Export ("firstRectForRange:")]
		CGRect FirstRectForRange (UITextRange range);

		// @required -(CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position;
		[Abstract]
		[Export ("caretRectForPosition:")]
		CGRect CaretRectForPosition (UITextPosition position);

		// @required -(NSArray<UITextSelectionRect *> * _Nonnull)selectionRectsForRange:(UITextRange * _Nonnull)range __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Abstract]
		[Export ("selectionRectsForRange:")]
		UITextSelectionRect[] SelectionRectsForRange (UITextRange range);

		// @required -(UITextPosition * _Nullable)closestPositionToPoint:(CGPoint)point;
		[Abstract]
		[Export ("closestPositionToPoint:")]
		[return: NullAllowed]
		UITextPosition ClosestPositionToPoint (CGPoint point);

		// @required -(UITextPosition * _Nullable)closestPositionToPoint:(CGPoint)point withinRange:(UITextRange * _Nonnull)range;
		[Abstract]
		[Export ("closestPositionToPoint:withinRange:")]
		[return: NullAllowed]
		UITextPosition ClosestPositionToPoint (CGPoint point, UITextRange range);

		// @required -(UITextRange * _Nullable)characterRangeAtPoint:(CGPoint)point;
		[Abstract]
		[Export ("characterRangeAtPoint:")]
		[return: NullAllowed]
		UITextRange CharacterRangeAtPoint (CGPoint point);

		// @optional -(int)shouldChangeTextInRange:(UITextRange * _Nonnull)range replacementText:(NSString * _Nonnull)text __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("shouldChangeTextInRange:replacementText:")]
		int ShouldChangeTextInRange (UITextRange range, string text);

		// @optional -(NSDictionary<NSAttributedStringKey,id> * _Nullable)textStylingAtPosition:(UITextPosition * _Nonnull)position inDirection:(UITextStorageDirection)direction;
		[Export ("textStylingAtPosition:inDirection:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> TextStylingAtPosition (UITextPosition position, UITextStorageDirection direction);

		// @optional -(UITextPosition * _Nullable)positionWithinRange:(UITextRange * _Nonnull)range atCharacterOffset:(NSInteger)offset;
		[Export ("positionWithinRange:atCharacterOffset:")]
		[return: NullAllowed]
		UITextPosition PositionWithinRange (UITextRange range, nint offset);

		// @optional -(NSInteger)characterOffsetOfPosition:(UITextPosition * _Nonnull)position withinRange:(UITextRange * _Nonnull)range;
		[Export ("characterOffsetOfPosition:withinRange:")]
		nint CharacterOffsetOfPosition (UITextPosition position, UITextRange range);

		// @optional @property (readonly, nonatomic) __kindof UIView * _Nonnull textInputView;
		[Export ("textInputView")]
		UIView TextInputView { get; }

		// @optional @property (nonatomic) UITextStorageDirection selectionAffinity;
		[Export ("selectionAffinity", ArgumentSemantic.Assign)]
		UITextStorageDirection SelectionAffinity { get; set; }

		// @optional -(void)insertDictationResult:(NSArray<UIDictationPhrase *> * _Nonnull)dictationResult;
		[Export ("insertDictationResult:")]
		void InsertDictationResult (UIDictationPhrase[] dictationResult);

		// @optional -(void)dictationRecordingDidEnd;
		[Export ("dictationRecordingDidEnd")]
		void DictationRecordingDidEnd ();

		// @optional -(void)dictationRecognitionFailed;
		[Export ("dictationRecognitionFailed")]
		void DictationRecognitionFailed ();

		// @optional @property (readonly, nonatomic) id _Nonnull insertDictationResultPlaceholder;
		[Export ("insertDictationResultPlaceholder")]
		NSObject InsertDictationResultPlaceholder { get; }

		// @optional -(CGRect)frameForDictationResultPlaceholder:(id _Nonnull)placeholder;
		[Export ("frameForDictationResultPlaceholder:")]
		CGRect FrameForDictationResultPlaceholder (NSObject placeholder);

		// @optional -(void)removeDictationResultPlaceholder:(id _Nonnull)placeholder willInsertResult:(int)willInsertResult;
		[Export ("removeDictationResultPlaceholder:willInsertResult:")]
		void RemoveDictationResultPlaceholder (NSObject placeholder, int willInsertResult);

		// @optional -(void)insertText:(NSString * _Nonnull)text alternatives:(NSArray<NSString *> * _Nonnull)alternatives style:(UITextAlternativeStyle)style;
		[Export ("insertText:alternatives:style:")]
		void InsertText (string text, string[] alternatives, UITextAlternativeStyle style);

		// @optional -(void)setAttributedMarkedText:(NSAttributedString * _Nullable)markedText selectedRange:(NSRange)selectedRange;
		[Export ("setAttributedMarkedText:selectedRange:")]
		void SetAttributedMarkedText ([NullAllowed] NSAttributedString markedText, NSRange selectedRange);

		// @optional -(UITextPlaceholder * _Nonnull)insertTextPlaceholderWithSize:(CGSize)size;
		[Export ("insertTextPlaceholderWithSize:")]
		UITextPlaceholder InsertTextPlaceholderWithSize (CGSize size);

		// @optional -(void)removeTextPlaceholder:(UITextPlaceholder * _Nonnull)textPlaceholder;
		[Export ("removeTextPlaceholder:")]
		void RemoveTextPlaceholder (UITextPlaceholder textPlaceholder);

		// @optional -(void)beginFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("beginFloatingCursorAtPoint:")]
		void BeginFloatingCursorAtPoint (CGPoint point);

		// @optional -(void)updateFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("updateFloatingCursorAtPoint:")]
		void UpdateFloatingCursorAtPoint (CGPoint point);

		// @optional -(void)endFloatingCursor __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("endFloatingCursor")]
		void EndFloatingCursor ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UITextInputTextBackgroundColorKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Field ("UITextInputTextBackgroundColorKey", "__Internal")]
		NSString UITextInputTextBackgroundColorKey { get; }

		// extern NSString *const _Nonnull UITextInputTextColorKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Field ("UITextInputTextColorKey", "__Internal")]
		NSString UITextInputTextColorKey { get; }

		// extern NSString *const _Nonnull UITextInputTextFontKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Field ("UITextInputTextFontKey", "__Internal")]
		NSString UITextInputTextFontKey { get; }
	}

	// @interface UITextPosition : NSObject
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UITextPosition
	{
	}

	// @interface UITextRange : NSObject
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UITextRange
	{
		// @property (readonly, getter = isEmpty, nonatomic) int empty;
		[Export ("empty")]
		int Empty { [Bind ("isEmpty")] get; }

		// @property (readonly, nonatomic) UITextPosition * _Nonnull start;
		[Export ("start")]
		UITextPosition Start { get; }

		// @property (readonly, nonatomic) UITextPosition * _Nonnull end;
		[Export ("end")]
		UITextPosition End { get; }
	}

	// @interface UITextSelectionRect : NSObject
	[iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface UITextSelectionRect
	{
		// @property (readonly, nonatomic) CGRect rect;
		[Export ("rect")]
		CGRect Rect { get; }

		// @property (readonly, nonatomic) NSWritingDirection writingDirection;
		[Export ("writingDirection")]
		NSWritingDirection WritingDirection { get; }

		// @property (readonly, nonatomic) int containsStart;
		[Export ("containsStart")]
		int ContainsStart { get; }

		// @property (readonly, nonatomic) int containsEnd;
		[Export ("containsEnd")]
		int ContainsEnd { get; }

		// @property (readonly, nonatomic) int isVertical;
		[Export ("isVertical")]
		int IsVertical { get; }
	}

	// @protocol UITextInputDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextInputDelegate
	{
		// @required -(void)selectionWillChange:(id<UITextInput> _Nullable)textInput;
		[Abstract]
		[Export ("selectionWillChange:")]
		void SelectionWillChange ([NullAllowed] UITextInput textInput);

		// @required -(void)selectionDidChange:(id<UITextInput> _Nullable)textInput;
		[Abstract]
		[Export ("selectionDidChange:")]
		void SelectionDidChange ([NullAllowed] UITextInput textInput);

		// @required -(void)textWillChange:(id<UITextInput> _Nullable)textInput;
		[Abstract]
		[Export ("textWillChange:")]
		void TextWillChange ([NullAllowed] UITextInput textInput);

		// @required -(void)textDidChange:(id<UITextInput> _Nullable)textInput;
		[Abstract]
		[Export ("textDidChange:")]
		void TextDidChange ([NullAllowed] UITextInput textInput);
	}

	// @protocol UITextInputTokenizer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITextInputTokenizer
	{
		// @required -(UITextRange * _Nullable)rangeEnclosingPosition:(UITextPosition * _Nonnull)position withGranularity:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
		[Abstract]
		[Export ("rangeEnclosingPosition:withGranularity:inDirection:")]
		[return: NullAllowed]
		UITextRange RangeEnclosingPosition (UITextPosition position, UITextGranularity granularity, nint direction);

		// @required -(int)isPosition:(UITextPosition * _Nonnull)position atBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
		[Abstract]
		[Export ("isPosition:atBoundary:inDirection:")]
		int IsPosition (UITextPosition position, UITextGranularity granularity, nint direction);

		// @required -(UITextPosition * _Nullable)positionFromPosition:(UITextPosition * _Nonnull)position toBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
		[Abstract]
		[Export ("positionFromPosition:toBoundary:inDirection:")]
		[return: NullAllowed]
		UITextPosition PositionFromPosition (UITextPosition position, UITextGranularity granularity, nint direction);

		// @required -(int)isPosition:(UITextPosition * _Nonnull)position withinTextUnit:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
		[Abstract]
		[Export ("isPosition:withinTextUnit:inDirection:")]
		int IsPosition (UITextPosition position, UITextGranularity granularity, nint direction);
	}

	// @interface UITextInputStringTokenizer : NSObject <UITextInputTokenizer>
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UITextInputStringTokenizer : IUITextInputTokenizer
	{
		// -(instancetype _Nonnull)initWithTextInput:(UIResponder<UITextInput> * _Nonnull)textInput;
		[Export ("initWithTextInput:")]
		IntPtr Constructor (UITextInput textInput);
	}

	// @interface UITextInputMode : NSObject <NSSecureCoding>
	[iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UITextInputMode : INSSecureCoding
	{
		// @property (readonly, nonatomic, strong) NSString * _Nullable primaryLanguage;
		[NullAllowed, Export ("primaryLanguage", ArgumentSemantic.Strong)]
		string PrimaryLanguage { get; }

		// +(UITextInputMode * _Nullable)currentInputMode __attribute__((availability(ios, introduced=4.2, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 2)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Static]
		[NullAllowed, Export ("currentInputMode")]
		[Verify (MethodToProperty)]
		UITextInputMode CurrentInputMode { get; }

		// @property (readonly, nonatomic, class) NSArray<UITextInputMode *> * _Nonnull activeInputModes;
		[Static]
		[Export ("activeInputModes")]
		UITextInputMode[] ActiveInputModes { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UITextInputCurrentInputModeDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.2)));
		[iOS (4, 2)]
		[Field ("UITextInputCurrentInputModeDidChangeNotification", "__Internal")]
		NSString UITextInputCurrentInputModeDidChangeNotification { get; }
	}

	// typedef UIAccessibilityCustomRotorItemResult * _Nullable (^UIAccessibilityCustomRotorSearch)(UIAccessibilityCustomRotorSearchPredicate * _Nonnull);
	delegate UIAccessibilityCustomRotorItemResult UIAccessibilityCustomRotorSearch (UIAccessibilityCustomRotorSearchPredicate arg0);

	// @interface UIAccessibilityCustomRotor (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibilityCustomRotor
	{
		// @property (retain, nonatomic) NSArray<UIAccessibilityCustomRotor *> * _Nullable accessibilityCustomRotors __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("accessibilityCustomRotors", ArgumentSemantic.Retain)]
		UIAccessibilityCustomRotor[] AccessibilityCustomRotors { get; set; }
	}

	// @interface UIAccessibilityCustomRotorSearchPredicate : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityCustomRotorSearchPredicate
	{
		// @property (retain, nonatomic) UIAccessibilityCustomRotorItemResult * _Nonnull currentItem;
		[Export ("currentItem", ArgumentSemantic.Retain)]
		UIAccessibilityCustomRotorItemResult CurrentItem { get; set; }

		// @property (nonatomic) UIAccessibilityCustomRotorDirection searchDirection;
		[Export ("searchDirection", ArgumentSemantic.Assign)]
		UIAccessibilityCustomRotorDirection SearchDirection { get; set; }
	}

	// @interface UIAccessibilityCustomRotor : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityCustomRotor
	{
		// -(instancetype _Nonnull)initWithName:(NSString * _Nonnull)name itemSearchBlock:(UIAccessibilityCustomRotorSearch _Nonnull)itemSearchBlock;
		[Export ("initWithName:itemSearchBlock:")]
		IntPtr Constructor (string name, UIAccessibilityCustomRotorSearch itemSearchBlock);

		// -(instancetype _Nonnull)initWithAttributedName:(NSAttributedString * _Nonnull)attributedName itemSearchBlock:(UIAccessibilityCustomRotorSearch _Nonnull)itemSearchBlock __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("initWithAttributedName:itemSearchBlock:")]
		IntPtr Constructor (NSAttributedString attributedName, UIAccessibilityCustomRotorSearch itemSearchBlock);

		// -(instancetype _Nonnull)initWithSystemType:(UIAccessibilityCustomSystemRotorType)type itemSearchBlock:(UIAccessibilityCustomRotorSearch _Nonnull)itemSearchBlock __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("initWithSystemType:itemSearchBlock:")]
		IntPtr Constructor (UIAccessibilityCustomSystemRotorType type, UIAccessibilityCustomRotorSearch itemSearchBlock);

		// @property (copy, nonatomic) NSString * _Nonnull name;
		[Export ("name")]
		string Name { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nonnull attributedName __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("attributedName", ArgumentSemantic.Copy)]
		NSAttributedString AttributedName { get; set; }

		// @property (copy, nonatomic) UIAccessibilityCustomRotorSearch _Nonnull itemSearchBlock;
		[Export ("itemSearchBlock", ArgumentSemantic.Copy)]
		UIAccessibilityCustomRotorSearch ItemSearchBlock { get; set; }

		// @property (readonly, nonatomic) UIAccessibilityCustomSystemRotorType systemRotorType __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("systemRotorType")]
		UIAccessibilityCustomSystemRotorType SystemRotorType { get; }
	}

	// @interface UIAccessibilityCustomRotorItemResult : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityCustomRotorItemResult
	{
		// -(instancetype _Nonnull)initWithTargetElement:(id<NSObject> _Nonnull)targetElement targetRange:(UITextRange * _Nullable)targetRange;
		[Export ("initWithTargetElement:targetRange:")]
		IntPtr Constructor (NSObject targetElement, [NullAllowed] UITextRange targetRange);

		// @property (nonatomic, weak) id<NSObject> _Nullable targetElement;
		[NullAllowed, Export ("targetElement", ArgumentSemantic.Weak)]
		NSObject TargetElement { get; set; }

		// @property (retain, nonatomic) UITextRange * _Nullable targetRange;
		[NullAllowed, Export ("targetRange", ArgumentSemantic.Retain)]
		UITextRange TargetRange { get; set; }
	}

	// @interface UIKitAdditions (NSItemProvider)
	[Category]
	[BaseType (typeof(NSItemProvider))]
	interface NSItemProvider_UIKitAdditions
	{
		// @property (copy, nonatomic) NSData * _Nullable teamData __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("teamData", ArgumentSemantic.Copy)]
		NSData TeamData { get; set; }

		// @property (nonatomic) CGSize preferredPresentationSize __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("preferredPresentationSize", ArgumentSemantic.Assign)]
		CGSize PreferredPresentationSize { get; set; }

		// @property (nonatomic) UIPreferredPresentationStyle preferredPresentationStyle;
		[Export ("preferredPresentationStyle", ArgumentSemantic.Assign)]
		UIPreferredPresentationStyle PreferredPresentationStyle { get; set; }
	}

	// @protocol UIItemProviderPresentationSizeProviding <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIItemProviderPresentationSizeProviding
	{
		// @required @property (readonly, nonatomic) CGSize preferredPresentationSizeForItemProvider;
		[Abstract]
		[Export ("preferredPresentationSizeForItemProvider")]
		CGSize PreferredPresentationSizeForItemProvider { get; }
	}

	// @protocol NSTextAttachmentContainer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSTextAttachmentContainer
	{
		// @required -(UIImage * _Nullable)imageForBounds:(CGRect)imageBounds textContainer:(NSTextContainer * _Nullable)textContainer characterIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Abstract]
		[Export ("imageForBounds:textContainer:characterIndex:")]
		[return: NullAllowed]
		UIImage ImageForBounds (CGRect imageBounds, [NullAllowed] NSTextContainer textContainer, nuint charIndex);

		// @required -(CGRect)attachmentBoundsForTextContainer:(NSTextContainer * _Nullable)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Abstract]
		[Export ("attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")]
		CGRect AttachmentBoundsForTextContainer ([NullAllowed] NSTextContainer textContainer, CGRect lineFrag, CGPoint position, nuint charIndex);
	}

	// @interface NSTextAttachment : NSObject <NSTextAttachmentContainer, NSSecureCoding>
	[Mac (10,0), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSTextAttachment : INSTextAttachmentContainer, INSSecureCoding
	{
		// -(instancetype _Nonnull)initWithData:(NSData * _Nullable)contentData ofType:(NSString * _Nullable)uti __attribute__((objc_designated_initializer)) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("initWithData:ofType:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] NSData contentData, [NullAllowed] string uti);

		// @property (copy, nonatomic) NSData * _Nullable contents __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[NullAllowed, Export ("contents", ArgumentSemantic.Copy)]
		NSData Contents { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable fileType __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[NullAllowed, Export ("fileType")]
		string FileType { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable image __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[NullAllowed, Export ("image", ArgumentSemantic.Strong)]
		UIImage Image { get; set; }

		// @property (nonatomic) CGRect bounds __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; set; }

		// @property (nonatomic, strong) NSFileWrapper * _Nullable fileWrapper;
		[NullAllowed, Export ("fileWrapper", ArgumentSemantic.Strong)]
		NSFileWrapper FileWrapper { get; set; }
	}

	// @interface NSAttributedStringAttachmentConveniences (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSAttributedStringAttachmentConveniences
	{
		// +(NSAttributedString * _Nonnull)attributedStringWithAttachment:(NSTextAttachment * _Nonnull)attachment __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Static]
		[Export ("attributedStringWithAttachment:")]
		NSAttributedString AttributedStringWithAttachment (NSTextAttachment attachment);
	}

	// @interface UIImage : NSObject <NSSecureCoding>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIImage : INSSecureCoding
	{
		// +(UIImage * _Nullable)systemImageNamed:(NSString * _Nonnull)name __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("systemImageNamed:")]
		[return: NullAllowed]
		UIImage SystemImageNamed (string name);

		// +(UIImage * _Nullable)systemImageNamed:(NSString * _Nonnull)name withConfiguration:(UIImageConfiguration * _Nullable)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("systemImageNamed:withConfiguration:")]
		[return: NullAllowed]
		UIImage SystemImageNamed (string name, [NullAllowed] UIImageConfiguration configuration);

		// +(UIImage * _Nullable)systemImageNamed:(NSString * _Nonnull)name compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("systemImageNamed:compatibleWithTraitCollection:")]
		[return: NullAllowed]
		UIImage SystemImageNamed (string name, [NullAllowed] UITraitCollection traitCollection);

		// +(UIImage * _Nullable)imageNamed:(NSString * _Nonnull)name;
		[Static]
		[Export ("imageNamed:")]
		[return: NullAllowed]
		UIImage ImageNamed (string name);

		// +(UIImage * _Nullable)imageNamed:(NSString * _Nonnull)name inBundle:(NSBundle * _Nullable)bundle withConfiguration:(UIImageConfiguration * _Nullable)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("imageNamed:inBundle:withConfiguration:")]
		[return: NullAllowed]
		UIImage ImageNamed (string name, [NullAllowed] NSBundle bundle, [NullAllowed] UIImageConfiguration configuration);

		// +(UIImage * _Nullable)imageNamed:(NSString * _Nonnull)name inBundle:(NSBundle * _Nullable)bundle compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Static]
		[Export ("imageNamed:inBundle:compatibleWithTraitCollection:")]
		[return: NullAllowed]
		UIImage ImageNamed (string name, [NullAllowed] NSBundle bundle, [NullAllowed] UITraitCollection traitCollection);

		// +(UIImage * _Nullable)imageWithContentsOfFile:(NSString * _Nonnull)path;
		[Static]
		[Export ("imageWithContentsOfFile:")]
		[return: NullAllowed]
		UIImage ImageWithContentsOfFile (string path);

		// +(UIImage * _Nullable)imageWithData:(NSData * _Nonnull)data;
		[Static]
		[Export ("imageWithData:")]
		[return: NullAllowed]
		UIImage ImageWithData (NSData data);

		// +(UIImage * _Nullable)imageWithData:(NSData * _Nonnull)data scale:(CGFloat)scale __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("imageWithData:scale:")]
		[return: NullAllowed]
		UIImage ImageWithData (NSData data, nfloat scale);

		// +(UIImage * _Nonnull)imageWithCGImage:(CGImageRef _Nonnull)cgImage;
		[Static]
		[Export ("imageWithCGImage:")]
		unsafe UIImage ImageWithCGImage (CGImageRef* cgImage);

		// +(UIImage * _Nonnull)imageWithCGImage:(CGImageRef _Nonnull)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("imageWithCGImage:scale:orientation:")]
		unsafe UIImage ImageWithCGImage (CGImageRef* cgImage, nfloat scale, UIImageOrientation orientation);

		// +(UIImage * _Nonnull)imageWithCIImage:(CIImage * _Nonnull)ciImage __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("imageWithCIImage:")]
		UIImage ImageWithCIImage (CIImage ciImage);

		// +(UIImage * _Nonnull)imageWithCIImage:(CIImage * _Nonnull)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("imageWithCIImage:scale:orientation:")]
		UIImage ImageWithCIImage (CIImage ciImage, nfloat scale, UIImageOrientation orientation);

		// -(instancetype _Nullable)initWithContentsOfFile:(NSString * _Nonnull)path;
		[Export ("initWithContentsOfFile:")]
		IntPtr Constructor (string path);

		// -(instancetype _Nullable)initWithData:(NSData * _Nonnull)data;
		[Export ("initWithData:")]
		IntPtr Constructor (NSData data);

		// -(instancetype _Nullable)initWithData:(NSData * _Nonnull)data scale:(CGFloat)scale __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("initWithData:scale:")]
		IntPtr Constructor (NSData data, nfloat scale);

		// -(instancetype _Nonnull)initWithCGImage:(CGImageRef _Nonnull)cgImage;
		[Export ("initWithCGImage:")]
		unsafe IntPtr Constructor (CGImageRef* cgImage);

		// -(instancetype _Nonnull)initWithCGImage:(CGImageRef _Nonnull)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("initWithCGImage:scale:orientation:")]
		unsafe IntPtr Constructor (CGImageRef* cgImage, nfloat scale, UIImageOrientation orientation);

		// -(instancetype _Nonnull)initWithCIImage:(CIImage * _Nonnull)ciImage __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithCIImage:")]
		IntPtr Constructor (CIImage ciImage);

		// -(instancetype _Nonnull)initWithCIImage:(CIImage * _Nonnull)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("initWithCIImage:scale:orientation:")]
		IntPtr Constructor (CIImage ciImage, nfloat scale, UIImageOrientation orientation);

		// @property (readonly, nonatomic) CGSize size;
		[Export ("size")]
		CGSize Size { get; }

		// @property (readonly, nonatomic) CGImageRef _Nullable CGImage;
		[NullAllowed, Export ("CGImage")]
		unsafe CGImageRef* CGImage { get; }

		// @property (readonly, nonatomic) CIImage * _Nullable CIImage __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("CIImage")]
		CIImage CIImage { get; }

		// @property (readonly, nonatomic) UIImageOrientation imageOrientation;
		[Export ("imageOrientation")]
		UIImageOrientation ImageOrientation { get; }

		// @property (readonly, nonatomic) CGFloat scale __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("scale")]
		nfloat Scale { get; }

		// @property (readonly, getter = isSymbolImage, nonatomic) int symbolImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("symbolImage")]
		int SymbolImage { [Bind ("isSymbolImage")] get; }

		// +(UIImage * _Nullable)animatedImageNamed:(NSString * _Nonnull)name duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("animatedImageNamed:duration:")]
		[return: NullAllowed]
		UIImage AnimatedImageNamed (string name, double duration);

		// +(UIImage * _Nullable)animatedResizableImageNamed:(NSString * _Nonnull)name capInsets:(UIEdgeInsets)capInsets duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("animatedResizableImageNamed:capInsets:duration:")]
		[return: NullAllowed]
		UIImage AnimatedResizableImageNamed (string name, UIEdgeInsets capInsets, double duration);

		// +(UIImage * _Nullable)animatedResizableImageNamed:(NSString * _Nonnull)name capInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("animatedResizableImageNamed:capInsets:resizingMode:duration:")]
		[return: NullAllowed]
		UIImage AnimatedResizableImageNamed (string name, UIEdgeInsets capInsets, UIImageResizingMode resizingMode, double duration);

		// +(UIImage * _Nullable)animatedImageWithImages:(NSArray<UIImage *> * _Nonnull)images duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Static]
		[Export ("animatedImageWithImages:duration:")]
		[return: NullAllowed]
		UIImage AnimatedImageWithImages (UIImage[] images, double duration);

		// @property (readonly, nonatomic) NSArray<UIImage *> * _Nullable images __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("images")]
		UIImage[] Images { get; }

		// @property (readonly, nonatomic) NSTimeInterval duration __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("duration")]
		double Duration { get; }

		// -(void)drawAtPoint:(CGPoint)point;
		[Export ("drawAtPoint:")]
		void DrawAtPoint (CGPoint point);

		// -(void)drawAtPoint:(CGPoint)point blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
		[Export ("drawAtPoint:blendMode:alpha:")]
		void DrawAtPoint (CGPoint point, CGBlendMode blendMode, nfloat alpha);

		// -(void)drawInRect:(CGRect)rect;
		[Export ("drawInRect:")]
		void DrawInRect (CGRect rect);

		// -(void)drawInRect:(CGRect)rect blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
		[Export ("drawInRect:blendMode:alpha:")]
		void DrawInRect (CGRect rect, CGBlendMode blendMode, nfloat alpha);

		// -(void)drawAsPatternInRect:(CGRect)rect;
		[Export ("drawAsPatternInRect:")]
		void DrawAsPatternInRect (CGRect rect);

		// -(UIImage * _Nonnull)resizableImageWithCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("resizableImageWithCapInsets:")]
		UIImage ResizableImageWithCapInsets (UIEdgeInsets capInsets);

		// -(UIImage * _Nonnull)resizableImageWithCapInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("resizableImageWithCapInsets:resizingMode:")]
		UIImage ResizableImageWithCapInsets (UIEdgeInsets capInsets, UIImageResizingMode resizingMode);

		// @property (readonly, nonatomic) UIEdgeInsets capInsets __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("capInsets")]
		UIEdgeInsets CapInsets { get; }

		// @property (readonly, nonatomic) UIImageResizingMode resizingMode __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("resizingMode")]
		UIImageResizingMode ResizingMode { get; }

		// -(UIImage * _Nonnull)imageWithAlignmentRectInsets:(UIEdgeInsets)alignmentInsets __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("imageWithAlignmentRectInsets:")]
		UIImage ImageWithAlignmentRectInsets (UIEdgeInsets alignmentInsets);

		// @property (readonly, nonatomic) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("alignmentRectInsets")]
		UIEdgeInsets AlignmentRectInsets { get; }

		// -(UIImage * _Nonnull)imageWithRenderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("imageWithRenderingMode:")]
		UIImage ImageWithRenderingMode (UIImageRenderingMode renderingMode);

		// @property (readonly, nonatomic) UIImageRenderingMode renderingMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("renderingMode")]
		UIImageRenderingMode RenderingMode { get; }

		// @property (readonly, nonatomic) UIGraphicsImageRendererFormat * _Nonnull imageRendererFormat __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("imageRendererFormat")]
		UIGraphicsImageRendererFormat ImageRendererFormat { get; }

		// @property (readonly, copy, nonatomic) UITraitCollection * _Nonnull traitCollection __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("traitCollection", ArgumentSemantic.Copy)]
		UITraitCollection TraitCollection { get; }

		// @property (readonly, nonatomic) UIImageAsset * _Nullable imageAsset __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("imageAsset")]
		UIImageAsset ImageAsset { get; }

		// -(UIImage * _Nonnull)imageFlippedForRightToLeftLayoutDirection __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("imageFlippedForRightToLeftLayoutDirection")]
		[Verify (MethodToProperty)]
		UIImage ImageFlippedForRightToLeftLayoutDirection { get; }

		// @property (readonly, nonatomic) int flipsForRightToLeftLayoutDirection __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("flipsForRightToLeftLayoutDirection")]
		int FlipsForRightToLeftLayoutDirection { get; }

		// -(UIImage * _Nonnull)imageWithHorizontallyFlippedOrientation __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("imageWithHorizontallyFlippedOrientation")]
		[Verify (MethodToProperty)]
		UIImage ImageWithHorizontallyFlippedOrientation { get; }

		// @property (readonly, nonatomic) CGFloat baselineOffsetFromBottom __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((swift_private));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("baselineOffsetFromBottom")]
		nfloat BaselineOffsetFromBottom { get; }

		// @property (readonly, nonatomic) int hasBaseline __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((swift_private));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("hasBaseline")]
		int HasBaseline { get; }

		// -(UIImage * _Nonnull)imageWithBaselineOffsetFromBottom:(CGFloat)baselineOffset __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("imageWithBaselineOffsetFromBottom:")]
		UIImage ImageWithBaselineOffsetFromBottom (nfloat baselineOffset);

		// -(UIImage * _Nonnull)imageWithoutBaseline __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("imageWithoutBaseline")]
		[Verify (MethodToProperty)]
		UIImage ImageWithoutBaseline { get; }

		// @property (readonly, copy, nonatomic) __kindof UIImageConfiguration * _Nullable configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Export ("configuration", ArgumentSemantic.Copy)]
		UIImageConfiguration Configuration { get; }

		// -(UIImage * _Nonnull)imageWithConfiguration:(UIImageConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("imageWithConfiguration:")]
		UIImage ImageWithConfiguration (UIImageConfiguration configuration);

		// @property (readonly, copy, nonatomic) UIImageSymbolConfiguration * _Nullable symbolConfiguration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("symbolConfiguration", ArgumentSemantic.Copy)]
		UIImageSymbolConfiguration SymbolConfiguration { get; }

		// -(UIImage * _Nullable)imageByApplyingSymbolConfiguration:(UIImageSymbolConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("imageByApplyingSymbolConfiguration:")]
		[return: NullAllowed]
		UIImage ImageByApplyingSymbolConfiguration (UIImageSymbolConfiguration configuration);

		// -(UIImage * _Nonnull)imageWithTintColor:(UIColor * _Nonnull)color __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("imageWithTintColor:")]
		UIImage ImageWithTintColor (UIColor color);

		// -(UIImage * _Nonnull)imageWithTintColor:(UIColor * _Nonnull)color renderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("imageWithTintColor:renderingMode:")]
		UIImage ImageWithTintColor (UIColor color, UIImageRenderingMode renderingMode);
	}

	// @interface PreconfiguredSystemImages (UIImage)
	[Category]
	[BaseType (typeof(UIImage))]
	interface UIImage_PreconfiguredSystemImages
	{
		// @property (readonly, strong, class) UIImage * _Nonnull actionsImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Static]
		[Export ("actionsImage", ArgumentSemantic.Strong)]
		UIImage ActionsImage { get; }

		// @property (readonly, strong, class) UIImage * _Nonnull addImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Static]
		[Export ("addImage", ArgumentSemantic.Strong)]
		UIImage AddImage { get; }

		// @property (readonly, strong, class) UIImage * _Nonnull removeImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Static]
		[Export ("removeImage", ArgumentSemantic.Strong)]
		UIImage RemoveImage { get; }

		// @property (readonly, strong, class) UIImage * _Nonnull checkmarkImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Static]
		[Export ("checkmarkImage", ArgumentSemantic.Strong)]
		UIImage CheckmarkImage { get; }

		// @property (readonly, strong, class) UIImage * _Nonnull strokedCheckmarkImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[Static]
		[Export ("strokedCheckmarkImage", ArgumentSemantic.Strong)]
		UIImage StrokedCheckmarkImage { get; }
	}

	// @interface NSItemProvider (UIImage) <NSItemProviderReading, NSItemProviderWriting, UIItemProviderPresentationSizeProviding>
	[Category]
	[BaseType (typeof(UIImage))]
	interface UIImage_NSItemProvider : INSItemProviderReading, INSItemProviderWriting, IUIItemProviderPresentationSizeProviding
	{
	}

	// @interface UIImage (NSTextAttachment)
	[Category]
	[BaseType (typeof(NSTextAttachment))]
	interface NSTextAttachment_UIImage
	{
		// +(NSTextAttachment * _Nonnull)textAttachmentWithImage:(UIImage * _Nonnull)image __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13,0), iOS (13,0)]
		[Static]
		[Export ("textAttachmentWithImage:")]
		NSTextAttachment TextAttachmentWithImage (UIImage image);
	}

	// @interface UIImageDeprecated (UIImage)
	[Category]
	[BaseType (typeof(UIImage))]
	interface UIImage_UIImageDeprecated
	{
		// -(UIImage * _Nonnull)stretchableImageWithLeftCapWidth:(NSInteger)leftCapWidth topCapHeight:(NSInteger)topCapHeight __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("stretchableImageWithLeftCapWidth:topCapHeight:")]
		UIImage StretchableImageWithLeftCapWidth (nint leftCapWidth, nint topCapHeight);

		// @property (readonly, nonatomic) NSInteger leftCapWidth __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("leftCapWidth")]
		nint LeftCapWidth { get; }

		// @property (readonly, nonatomic) NSInteger topCapHeight __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("topCapHeight")]
		nint TopCapHeight { get; }
	}

	// @interface UIKitAdditions (CIImage)
	[Category]
	[BaseType (typeof(CIImage))]
	interface CIImage_UIKitAdditions
	{
		// -(instancetype _Nullable)initWithImage:(UIImage * _Nonnull)image __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithImage:")]
		IntPtr Constructor (UIImage image);

		// -(instancetype _Nullable)initWithImage:(UIImage * _Nonnull)image options:(NSDictionary<CIImageOption,id> * _Nullable)options __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithImage:options:")]
		IntPtr Constructor (UIImage image, [NullAllowed] NSDictionary<NSString, NSObject> options);
	}

	// @interface UIBarItem : NSObject <NSCoding, UIAppearance>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIBarItem : INSCoding, IUIAppearance
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Strong)]
		UIImage Image { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable landscapeImagePhone __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[NullAllowed, Export ("landscapeImagePhone", ArgumentSemantic.Strong)]
		UIImage LandscapeImagePhone { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable largeContentSizeImage __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[NullAllowed, Export ("largeContentSizeImage", ArgumentSemantic.Strong)]
		UIImage LargeContentSizeImage { get; set; }

		// @property (nonatomic) UIEdgeInsets imageInsets;
		[Export ("imageInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets ImageInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets landscapeImagePhoneInsets __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Export ("landscapeImagePhoneInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets LandscapeImagePhoneInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets largeContentSizeImageInsets __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("largeContentSizeImageInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets LargeContentSizeImageInsets { get; set; }

		// @property (nonatomic) NSInteger tag;
		[Export ("tag")]
		nint Tag { get; set; }

		// -(void)setTitleTextAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attributes forState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setTitleTextAttributes:forState:")]
		void SetTitleTextAttributes ([NullAllowed] NSDictionary<NSString, NSObject> attributes, UIControlState state);

		// -(NSDictionary<NSAttributedStringKey,id> * _Nullable)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("titleTextAttributesForState:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> TitleTextAttributesForState (UIControlState state);
	}

	// @protocol UIAccessibilityIdentification <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityIdentification
	{
		// @required @property (copy, nonatomic) NSString * _Nullable accessibilityIdentifier __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Abstract]
		[NullAllowed, Export ("accessibilityIdentifier")]
		string AccessibilityIdentifier { get; set; }
	}

	// @interface UIAccessibility (UIView) <UIAccessibilityIdentification>
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIAccessibility : IUIAccessibilityIdentification
	{
	}

	// @interface UIAccessibility (UIBarItem) <UIAccessibilityIdentification>
	[Category]
	[BaseType (typeof(UIBarItem))]
	interface UIBarItem_UIAccessibility : IUIAccessibilityIdentification
	{
	}

	// @interface UIAccessibility (UIImage) <UIAccessibilityIdentification>
	[Category]
	[BaseType (typeof(UIImage))]
	interface UIImage_UIAccessibility : IUIAccessibilityIdentification
	{
	}

	// @interface UIAccessibilityElement : UIResponder <UIAccessibilityIdentification>
	[iOS (3,0)]
	[BaseType (typeof(UIResponder))]
	interface UIAccessibilityElement : IUIAccessibilityIdentification
	{
		// -(instancetype _Nonnull)initWithAccessibilityContainer:(id _Nonnull)container;
		[Export ("initWithAccessibilityContainer:")]
		IntPtr Constructor (NSObject container);

		// @property (nonatomic, weak) id _Nullable accessibilityContainer;
		[NullAllowed, Export ("accessibilityContainer", ArgumentSemantic.Weak)]
		NSObject AccessibilityContainer { get; set; }

		// @property (assign, nonatomic) int isAccessibilityElement;
		[Export ("isAccessibilityElement")]
		int IsAccessibilityElement { get; set; }

		// @property (nonatomic, strong) NSString * _Nullable accessibilityLabel;
		[NullAllowed, Export ("accessibilityLabel", ArgumentSemantic.Strong)]
		string AccessibilityLabel { get; set; }

		// @property (nonatomic, strong) NSString * _Nullable accessibilityHint;
		[NullAllowed, Export ("accessibilityHint", ArgumentSemantic.Strong)]
		string AccessibilityHint { get; set; }

		// @property (nonatomic, strong) NSString * _Nullable accessibilityValue;
		[NullAllowed, Export ("accessibilityValue", ArgumentSemantic.Strong)]
		string AccessibilityValue { get; set; }

		// @property (assign, nonatomic) CGRect accessibilityFrame;
		[Export ("accessibilityFrame", ArgumentSemantic.Assign)]
		CGRect AccessibilityFrame { get; set; }

		// @property (assign, nonatomic) UIAccessibilityTraits accessibilityTraits;
		[Export ("accessibilityTraits")]
		ulong AccessibilityTraits { get; set; }

		// @property (assign, nonatomic) CGRect accessibilityFrameInContainerSpace __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("accessibilityFrameInContainerSpace", ArgumentSemantic.Assign)]
		CGRect AccessibilityFrameInContainerSpace { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSErrorDomain _Nonnull UIGuidedAccessErrorDomain __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=12.2)));
		[iOS (12, 2)]
		[Field ("UIGuidedAccessErrorDomain", "__Internal")]
		NSString UIGuidedAccessErrorDomain { get; }
	}

	// @protocol UIGuidedAccessRestrictionDelegate <NSObject>
	[iOS (7,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIGuidedAccessRestrictionDelegate
	{
		// @required @property (readonly, nonatomic) NSArray<NSString *> * _Nullable guidedAccessRestrictionIdentifiers;
		[Abstract]
		[NullAllowed, Export ("guidedAccessRestrictionIdentifiers")]
		string[] GuidedAccessRestrictionIdentifiers { get; }

		// @required -(void)guidedAccessRestrictionWithIdentifier:(NSString * _Nonnull)restrictionIdentifier didChangeState:(UIGuidedAccessRestrictionState)newRestrictionState;
		[Abstract]
		[Export ("guidedAccessRestrictionWithIdentifier:didChangeState:")]
		void GuidedAccessRestrictionWithIdentifier (string restrictionIdentifier, UIGuidedAccessRestrictionState newRestrictionState);

		// @required -(NSString * _Nullable)textForGuidedAccessRestrictionWithIdentifier:(NSString * _Nonnull)restrictionIdentifier;
		[Abstract]
		[Export ("textForGuidedAccessRestrictionWithIdentifier:")]
		[return: NullAllowed]
		string TextForGuidedAccessRestrictionWithIdentifier (string restrictionIdentifier);

		// @optional -(NSString * _Nullable)detailTextForGuidedAccessRestrictionWithIdentifier:(NSString * _Nonnull)restrictionIdentifier;
		[Export ("detailTextForGuidedAccessRestrictionWithIdentifier:")]
		[return: NullAllowed]
		string DetailTextForGuidedAccessRestrictionWithIdentifier (string restrictionIdentifier);
	}

	// @interface UIAccessibilityLocationDescriptor : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIAccessibilityLocationDescriptor
	{
		// -(instancetype _Nonnull)initWithName:(NSString * _Nonnull)name view:(UIView * _Nonnull)view;
		[Export ("initWithName:view:")]
		IntPtr Constructor (string name, UIView view);

		// -(instancetype _Nonnull)initWithName:(NSString * _Nonnull)name point:(CGPoint)point inView:(UIView * _Nonnull)view;
		[Export ("initWithName:point:inView:")]
		IntPtr Constructor (string name, CGPoint point, UIView view);

		// -(instancetype _Nonnull)initWithAttributedName:(NSAttributedString * _Nonnull)attributedName point:(CGPoint)point inView:(UIView * _Nonnull)view __attribute__((objc_designated_initializer));
		[Export ("initWithAttributedName:point:inView:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSAttributedString attributedName, CGPoint point, UIView view);

		// @property (readonly, nonatomic, weak) UIView * _Nullable view;
		[NullAllowed, Export ("view", ArgumentSemantic.Weak)]
		UIView View { get; }

		// @property (readonly, nonatomic) CGPoint point;
		[Export ("point")]
		CGPoint Point { get; }

		// @property (readonly, nonatomic, strong) NSString * _Nonnull name;
		[Export ("name", ArgumentSemantic.Strong)]
		string Name { get; }

		// @property (readonly, nonatomic, strong) NSAttributedString * _Nonnull attributedName;
		[Export ("attributedName", ArgumentSemantic.Strong)]
		NSAttributedString AttributedName { get; }
	}

	// @interface UIAccessibility (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibility
	{
		// @property (nonatomic) int isAccessibilityElement;
		[Export ("isAccessibilityElement")]
		int IsAccessibilityElement { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable accessibilityLabel;
		[NullAllowed, Export ("accessibilityLabel")]
		string AccessibilityLabel { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable accessibilityAttributedLabel __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[NullAllowed, Export ("accessibilityAttributedLabel", ArgumentSemantic.Copy)]
		NSAttributedString AccessibilityAttributedLabel { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable accessibilityHint;
		[NullAllowed, Export ("accessibilityHint")]
		string AccessibilityHint { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable accessibilityAttributedHint __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[NullAllowed, Export ("accessibilityAttributedHint", ArgumentSemantic.Copy)]
		NSAttributedString AccessibilityAttributedHint { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable accessibilityValue;
		[NullAllowed, Export ("accessibilityValue")]
		string AccessibilityValue { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable accessibilityAttributedValue __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[NullAllowed, Export ("accessibilityAttributedValue", ArgumentSemantic.Copy)]
		NSAttributedString AccessibilityAttributedValue { get; set; }

		// @property (nonatomic) UIAccessibilityTraits accessibilityTraits;
		[Export ("accessibilityTraits")]
		ulong AccessibilityTraits { get; set; }

		// @property (nonatomic) CGRect accessibilityFrame;
		[Export ("accessibilityFrame", ArgumentSemantic.Assign)]
		CGRect AccessibilityFrame { get; set; }

		// @property (copy, nonatomic) UIBezierPath * _Nullable accessibilityPath __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("accessibilityPath", ArgumentSemantic.Copy)]
		UIBezierPath AccessibilityPath { get; set; }

		// @property (nonatomic) CGPoint accessibilityActivationPoint __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("accessibilityActivationPoint", ArgumentSemantic.Assign)]
		CGPoint AccessibilityActivationPoint { get; set; }

		// @property (nonatomic, strong) NSString * _Nullable accessibilityLanguage;
		[NullAllowed, Export ("accessibilityLanguage", ArgumentSemantic.Strong)]
		string AccessibilityLanguage { get; set; }

		// @property (nonatomic) int accessibilityElementsHidden __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("accessibilityElementsHidden")]
		int AccessibilityElementsHidden { get; set; }

		// @property (nonatomic) int accessibilityViewIsModal __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("accessibilityViewIsModal")]
		int AccessibilityViewIsModal { get; set; }

		// @property (nonatomic) int shouldGroupAccessibilityChildren __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("shouldGroupAccessibilityChildren")]
		int ShouldGroupAccessibilityChildren { get; set; }

		// @property (nonatomic) UIAccessibilityNavigationStyle accessibilityNavigationStyle __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("accessibilityNavigationStyle", ArgumentSemantic.Assign)]
		UIAccessibilityNavigationStyle AccessibilityNavigationStyle { get; set; }

		// @property (nonatomic) int accessibilityRespondsToUserInteraction __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("accessibilityRespondsToUserInteraction")]
		int AccessibilityRespondsToUserInteraction { get; set; }

		// @property (nonatomic, strong) NSArray<NSString *> * _Null_unspecified accessibilityUserInputLabels __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("accessibilityUserInputLabels", ArgumentSemantic.Strong)]
		string[] AccessibilityUserInputLabels { get; set; }

		// @property (copy, nonatomic) NSArray<NSAttributedString *> * _Null_unspecified accessibilityAttributedUserInputLabels __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("accessibilityAttributedUserInputLabels", ArgumentSemantic.Copy)]
		NSAttributedString[] AccessibilityAttributedUserInputLabels { get; set; }

		// @property (copy, nonatomic) NSArray * _Nullable accessibilityHeaderElements __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0)));
		[TV (9, 0), NoWatch, NoiOS]
		[NullAllowed, Export ("accessibilityHeaderElements", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] AccessibilityHeaderElements { get; set; }

		// @property (nonatomic, strong) UIAccessibilityTextualContext _Nullable accessibilityTextualContext __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("accessibilityTextualContext", ArgumentSemantic.Strong)]
		string AccessibilityTextualContext { get; set; }
	}

	// @interface UIAccessibilityFocus (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibilityFocus
	{
		// -(void)accessibilityElementDidBecomeFocused __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("accessibilityElementDidBecomeFocused")]
		void AccessibilityElementDidBecomeFocused ();

		// -(void)accessibilityElementDidLoseFocus __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("accessibilityElementDidLoseFocus")]
		void AccessibilityElementDidLoseFocus ();

		// -(int)accessibilityElementIsFocused __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("accessibilityElementIsFocused")]
		[Verify (MethodToProperty)]
		int AccessibilityElementIsFocused { get; }

		// -(NSSet<UIAccessibilityAssistiveTechnologyIdentifier> * _Nullable)accessibilityAssistiveTechnologyFocusedIdentifiers __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("accessibilityAssistiveTechnologyFocusedIdentifiers")]
		[Verify (MethodToProperty)]
		NSSet<NSString> AccessibilityAssistiveTechnologyFocusedIdentifiers { get; }
	}

	// @interface UIAccessibilityAction (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibilityAction
	{
		// -(int)accessibilityActivate __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("accessibilityActivate")]
		[Verify (MethodToProperty)]
		int AccessibilityActivate { get; }

		// -(void)accessibilityIncrement __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("accessibilityIncrement")]
		void AccessibilityIncrement ();

		// -(void)accessibilityDecrement __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("accessibilityDecrement")]
		void AccessibilityDecrement ();

		// -(int)accessibilityScroll:(UIAccessibilityScrollDirection)direction __attribute__((availability(ios, introduced=4.2)));
		[iOS (4,2)]
		[Export ("accessibilityScroll:")]
		int AccessibilityScroll (UIAccessibilityScrollDirection direction);

		// -(int)accessibilityPerformEscape __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("accessibilityPerformEscape")]
		[Verify (MethodToProperty)]
		int AccessibilityPerformEscape { get; }

		// -(int)accessibilityPerformMagicTap __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("accessibilityPerformMagicTap")]
		[Verify (MethodToProperty)]
		int AccessibilityPerformMagicTap { get; }

		// @property (nonatomic, strong) NSArray<UIAccessibilityCustomAction *> * _Nullable accessibilityCustomActions __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("accessibilityCustomActions", ArgumentSemantic.Strong)]
		UIAccessibilityCustomAction[] AccessibilityCustomActions { get; set; }
	}

	// @protocol UIAccessibilityReadingContent
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIAccessibilityReadingContent
	{
		// @required -(NSInteger)accessibilityLineNumberForPoint:(CGPoint)point __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Abstract]
		[Export ("accessibilityLineNumberForPoint:")]
		nint AccessibilityLineNumberForPoint (CGPoint point);

		// @required -(NSString * _Nullable)accessibilityContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Abstract]
		[Export ("accessibilityContentForLineNumber:")]
		[return: NullAllowed]
		string AccessibilityContentForLineNumber (nint lineNumber);

		// @required -(CGRect)accessibilityFrameForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Abstract]
		[Export ("accessibilityFrameForLineNumber:")]
		CGRect AccessibilityFrameForLineNumber (nint lineNumber);

		// @required -(NSString * _Nullable)accessibilityPageContent __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Abstract]
		[NullAllowed, Export ("accessibilityPageContent")]
		[Verify (MethodToProperty)]
		string AccessibilityPageContent { get; }

		// @optional -(NSAttributedString * _Nullable)accessibilityAttributedContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("accessibilityAttributedContentForLineNumber:")]
		[return: NullAllowed]
		NSAttributedString AccessibilityAttributedContentForLineNumber (nint lineNumber);

		// @optional -(NSAttributedString * _Nullable)accessibilityAttributedPageContent __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[NullAllowed, Export ("accessibilityAttributedPageContent")]
		[Verify (MethodToProperty)]
		NSAttributedString AccessibilityAttributedPageContent { get; }
	}

	// @interface UIAccessibilityDragging (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UIAccessibilityDragging
	{
		// @property (copy, nonatomic) NSArray<UIAccessibilityLocationDescriptor *> * _Nullable accessibilityDragSourceDescriptors __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("accessibilityDragSourceDescriptors", ArgumentSemantic.Copy)]
		UIAccessibilityLocationDescriptor[] AccessibilityDragSourceDescriptors { get; set; }

		// @property (copy, nonatomic) NSArray<UIAccessibilityLocationDescriptor *> * _Nullable accessibilityDropPointDescriptors __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("accessibilityDropPointDescriptors", ArgumentSemantic.Copy)]
		UIAccessibilityLocationDescriptor[] AccessibilityDropPointDescriptors { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UIAccessibilityVoiceOverStatusChanged __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=11.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=11.0)));
		[Introduced (PlatformName.iOS, 4, 0)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 11, 0)]
		[Field ("UIAccessibilityVoiceOverStatusChanged", "__Internal")]
		NSString UIAccessibilityVoiceOverStatusChanged { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityVoiceOverStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Field ("UIAccessibilityVoiceOverStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityVoiceOverStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityMonoAudioStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIAccessibilityMonoAudioStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityMonoAudioStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityClosedCaptioningStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIAccessibilityClosedCaptioningStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityClosedCaptioningStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityInvertColorsStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityInvertColorsStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityInvertColorsStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityGuidedAccessStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIAccessibilityGuidedAccessStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityGuidedAccessStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityBoldTextStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityBoldTextStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityBoldTextStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityGrayscaleStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityGrayscaleStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityGrayscaleStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityReduceTransparencyStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityReduceTransparencyStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityReduceTransparencyStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityReduceMotionStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityReduceMotionStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityReduceMotionStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityVideoAutoplayStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityVideoAutoplayStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityVideoAutoplayStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityDarkerSystemColorsStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilityDarkerSystemColorsStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityDarkerSystemColorsStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilitySwitchControlStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilitySwitchControlStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilitySwitchControlStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilitySpeakSelectionStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilitySpeakSelectionStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilitySpeakSelectionStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilitySpeakScreenStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIAccessibilitySpeakScreenStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilitySpeakScreenStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityShakeToUndoDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIAccessibilityShakeToUndoDidChangeNotification", "__Internal")]
		NSString UIAccessibilityShakeToUndoDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityAssistiveTouchStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UIAccessibilityAssistiveTouchStatusDidChangeNotification", "__Internal")]
		NSString UIAccessibilityAssistiveTouchStatusDidChangeNotification { get; }

		// extern NSString *const _Nonnull UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Field ("UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification", "__Internal")]
		NSString UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIAccessibilityOnOffSwitchLabelsDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIAccessibilityOnOffSwitchLabelsDidChangeNotification", "__Internal")]
		NSString UIAccessibilityOnOffSwitchLabelsDidChangeNotification { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIAccessibilityHearingDevicePairedEarDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (10, 0)]
		[Field ("UIAccessibilityHearingDevicePairedEarDidChangeNotification", "__Internal")]
		NSString UIAccessibilityHearingDevicePairedEarDidChangeNotification { get; }
	}

	// @interface UIImageView : UIView
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIImageView
	{
		// -(instancetype _Nonnull)initWithImage:(UIImage * _Nullable)image;
		[Export ("initWithImage:")]
		IntPtr Constructor ([NullAllowed] UIImage image);

		// -(instancetype _Nonnull)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("initWithImage:highlightedImage:")]
		IntPtr Constructor ([NullAllowed] UIImage image, [NullAllowed] UIImage highlightedImage);

		// @property (nonatomic, strong) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Strong)]
		UIImage Image { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable highlightedImage __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("highlightedImage", ArgumentSemantic.Strong)]
		UIImage HighlightedImage { get; set; }

		// @property (nonatomic, strong) UIImageSymbolConfiguration * _Nullable preferredSymbolConfiguration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("preferredSymbolConfiguration", ArgumentSemantic.Strong)]
		UIImageSymbolConfiguration PreferredSymbolConfiguration { get; set; }

		// @property (getter = isUserInteractionEnabled, nonatomic) int userInteractionEnabled;
		[Export ("userInteractionEnabled")]
		int UserInteractionEnabled { [Bind ("isUserInteractionEnabled")] get; set; }

		// @property (getter = isHighlighted, nonatomic) int highlighted __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("highlighted")]
		int Highlighted { [Bind ("isHighlighted")] get; set; }

		// @property (copy, nonatomic) NSArray<UIImage *> * _Nullable animationImages;
		[NullAllowed, Export ("animationImages", ArgumentSemantic.Copy)]
		UIImage[] AnimationImages { get; set; }

		// @property (copy, nonatomic) NSArray<UIImage *> * _Nullable highlightedAnimationImages __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("highlightedAnimationImages", ArgumentSemantic.Copy)]
		UIImage[] HighlightedAnimationImages { get; set; }

		// @property (nonatomic) NSTimeInterval animationDuration;
		[Export ("animationDuration")]
		double AnimationDuration { get; set; }

		// @property (nonatomic) NSInteger animationRepeatCount;
		[Export ("animationRepeatCount")]
		nint AnimationRepeatCount { get; set; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// -(void)startAnimating;
		[Export ("startAnimating")]
		void StartAnimating ();

		// -(void)stopAnimating;
		[Export ("stopAnimating")]
		void StopAnimating ();

		// @property (readonly, getter = isAnimating, nonatomic) int animating;
		[Export ("animating")]
		int Animating { [Bind ("isAnimating")] get; }

		// @property (nonatomic) int adjustsImageWhenAncestorFocused __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0)));
		[TV (9, 0), NoWatch, NoiOS]
		[Export ("adjustsImageWhenAncestorFocused")]
		int AdjustsImageWhenAncestorFocused { get; set; }

		// @property (readonly, strong) UILayoutGuide * _Nonnull focusedFrameGuide __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=9.0)));
		[TV (9, 0), NoWatch, NoiOS]
		[Export ("focusedFrameGuide", ArgumentSemantic.Strong)]
		UILayoutGuide FocusedFrameGuide { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nonnull overlayContentView __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), NoWatch, NoiOS]
		[Export ("overlayContentView", ArgumentSemantic.Strong)]
		UIView OverlayContentView { get; }

		// @property (nonatomic) int masksFocusEffectToContents __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), NoWatch, NoiOS]
		[Export ("masksFocusEffectToContents")]
		int MasksFocusEffectToContents { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSTextTabOptionKey _Nonnull NSTabColumnTerminatorsAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSTabColumnTerminatorsAttributeName", "__Internal")]
		NSString NSTabColumnTerminatorsAttributeName { get; }
	}

	// @interface NSTextTab : NSObject <NSCopying, NSCoding, NSSecureCoding>
	[Mac (10,0), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSTextTab : INSCopying, INSCoding, INSSecureCoding
	{
		// +(NSCharacterSet * _Nonnull)columnTerminatorsForLocale:(NSLocale * _Nullable)aLocale __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Static]
		[Export ("columnTerminatorsForLocale:")]
		NSCharacterSet ColumnTerminatorsForLocale ([NullAllowed] NSLocale aLocale);

		// -(instancetype _Nonnull)initWithTextAlignment:(NSTextAlignment)alignment location:(CGFloat)loc options:(NSDictionary<NSTextTabOptionKey,id> * _Nonnull)options __attribute__((objc_designated_initializer));
		[Export ("initWithTextAlignment:location:options:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSTextAlignment alignment, nfloat loc, NSDictionary<NSString, NSObject> options);

		// @property (readonly, nonatomic) NSTextAlignment alignment;
		[Export ("alignment")]
		NSTextAlignment Alignment { get; }

		// @property (readonly, nonatomic) CGFloat location;
		[Export ("location")]
		nfloat Location { get; }

		// @property (readonly, nonatomic) NSDictionary<NSTextTabOptionKey,id> * _Nonnull options;
		[Export ("options")]
		NSDictionary<NSString, NSObject> Options { get; }
	}

	// @interface NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
	[Mac (10,0), iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface NSParagraphStyle : INSCopying, INSMutableCopying, INSSecureCoding
	{
		// @property (readonly, copy, nonatomic, class) NSParagraphStyle * _Nonnull defaultParagraphStyle;
		[Static]
		[Export ("defaultParagraphStyle", ArgumentSemantic.Copy)]
		NSParagraphStyle DefaultParagraphStyle { get; }

		// +(NSWritingDirection)defaultWritingDirectionForLanguage:(NSString * _Nullable)languageName;
		[Static]
		[Export ("defaultWritingDirectionForLanguage:")]
		NSWritingDirection DefaultWritingDirectionForLanguage ([NullAllowed] string languageName);

		// @property (readonly, nonatomic) CGFloat lineSpacing;
		[Export ("lineSpacing")]
		nfloat LineSpacing { get; }

		// @property (readonly, nonatomic) CGFloat paragraphSpacing;
		[Export ("paragraphSpacing")]
		nfloat ParagraphSpacing { get; }

		// @property (readonly, nonatomic) NSTextAlignment alignment;
		[Export ("alignment")]
		NSTextAlignment Alignment { get; }

		// @property (readonly, nonatomic) CGFloat headIndent;
		[Export ("headIndent")]
		nfloat HeadIndent { get; }

		// @property (readonly, nonatomic) CGFloat tailIndent;
		[Export ("tailIndent")]
		nfloat TailIndent { get; }

		// @property (readonly, nonatomic) CGFloat firstLineHeadIndent;
		[Export ("firstLineHeadIndent")]
		nfloat FirstLineHeadIndent { get; }

		// @property (readonly, nonatomic) CGFloat minimumLineHeight;
		[Export ("minimumLineHeight")]
		nfloat MinimumLineHeight { get; }

		// @property (readonly, nonatomic) CGFloat maximumLineHeight;
		[Export ("maximumLineHeight")]
		nfloat MaximumLineHeight { get; }

		// @property (readonly, nonatomic) NSLineBreakMode lineBreakMode;
		[Export ("lineBreakMode")]
		NSLineBreakMode LineBreakMode { get; }

		// @property (readonly, nonatomic) NSWritingDirection baseWritingDirection;
		[Export ("baseWritingDirection")]
		NSWritingDirection BaseWritingDirection { get; }

		// @property (readonly, nonatomic) CGFloat lineHeightMultiple;
		[Export ("lineHeightMultiple")]
		nfloat LineHeightMultiple { get; }

		// @property (readonly, nonatomic) CGFloat paragraphSpacingBefore;
		[Export ("paragraphSpacingBefore")]
		nfloat ParagraphSpacingBefore { get; }

		// @property (readonly, nonatomic) float hyphenationFactor;
		[Export ("hyphenationFactor")]
		float HyphenationFactor { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSTextTab *> * _Nonnull tabStops __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Export ("tabStops", ArgumentSemantic.Copy)]
		NSTextTab[] TabStops { get; }

		// @property (readonly, nonatomic) CGFloat defaultTabInterval __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Export ("defaultTabInterval")]
		nfloat DefaultTabInterval { get; }

		// @property (readonly, nonatomic) int allowsDefaultTighteningForTruncation __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Export ("allowsDefaultTighteningForTruncation")]
		int AllowsDefaultTighteningForTruncation { get; }
	}

	// @interface NSMutableParagraphStyle : NSParagraphStyle
	[Mac (10,0), iOS (6,0)]
	[BaseType (typeof(NSParagraphStyle))]
	interface NSMutableParagraphStyle
	{
		// @property (nonatomic) CGFloat lineSpacing;
		[Export ("lineSpacing")]
		nfloat LineSpacing { get; set; }

		// @property (nonatomic) CGFloat paragraphSpacing;
		[Export ("paragraphSpacing")]
		nfloat ParagraphSpacing { get; set; }

		// @property (nonatomic) NSTextAlignment alignment;
		[Export ("alignment", ArgumentSemantic.Assign)]
		NSTextAlignment Alignment { get; set; }

		// @property (nonatomic) CGFloat firstLineHeadIndent;
		[Export ("firstLineHeadIndent")]
		nfloat FirstLineHeadIndent { get; set; }

		// @property (nonatomic) CGFloat headIndent;
		[Export ("headIndent")]
		nfloat HeadIndent { get; set; }

		// @property (nonatomic) CGFloat tailIndent;
		[Export ("tailIndent")]
		nfloat TailIndent { get; set; }

		// @property (nonatomic) NSLineBreakMode lineBreakMode;
		[Export ("lineBreakMode", ArgumentSemantic.Assign)]
		NSLineBreakMode LineBreakMode { get; set; }

		// @property (nonatomic) CGFloat minimumLineHeight;
		[Export ("minimumLineHeight")]
		nfloat MinimumLineHeight { get; set; }

		// @property (nonatomic) CGFloat maximumLineHeight;
		[Export ("maximumLineHeight")]
		nfloat MaximumLineHeight { get; set; }

		// @property (nonatomic) NSWritingDirection baseWritingDirection;
		[Export ("baseWritingDirection", ArgumentSemantic.Assign)]
		NSWritingDirection BaseWritingDirection { get; set; }

		// @property (nonatomic) CGFloat lineHeightMultiple;
		[Export ("lineHeightMultiple")]
		nfloat LineHeightMultiple { get; set; }

		// @property (nonatomic) CGFloat paragraphSpacingBefore;
		[Export ("paragraphSpacingBefore")]
		nfloat ParagraphSpacingBefore { get; set; }

		// @property (nonatomic) float hyphenationFactor;
		[Export ("hyphenationFactor")]
		float HyphenationFactor { get; set; }

		// @property (copy, nonatomic) NSArray<NSTextTab *> * _Null_unspecified tabStops __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Export ("tabStops", ArgumentSemantic.Copy)]
		NSTextTab[] TabStops { get; set; }

		// @property (nonatomic) CGFloat defaultTabInterval __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Export ("defaultTabInterval")]
		nfloat DefaultTabInterval { get; set; }

		// @property (nonatomic) int allowsDefaultTighteningForTruncation __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 11), iOS (9, 0)]
		[Export ("allowsDefaultTighteningForTruncation")]
		int AllowsDefaultTighteningForTruncation { get; set; }

		// -(void)addTabStop:(NSTextTab * _Nonnull)anObject __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("addTabStop:")]
		void AddTabStop (NSTextTab anObject);

		// -(void)removeTabStop:(NSTextTab * _Nonnull)anObject __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("removeTabStop:")]
		void RemoveTabStop (NSTextTab anObject);

		// -(void)setParagraphStyle:(NSParagraphStyle * _Nonnull)obj __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("setParagraphStyle:")]
		void SetParagraphStyle (NSParagraphStyle obj);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const UITextAttributeFont __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Field ("UITextAttributeFont", "__Internal")]
		NSString UITextAttributeFont { get; }

		// extern NSString *const UITextAttributeTextColor __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Field ("UITextAttributeTextColor", "__Internal")]
		NSString UITextAttributeTextColor { get; }

		// extern NSString *const UITextAttributeTextShadowColor __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Use NSShadowAttributeName with an NSShadow instance as the value")]
		[Deprecated (PlatformName.iOS, 7, 0, message: "Use NSShadowAttributeName with an NSShadow instance as the value")]
		[NoTV]
		[Field ("UITextAttributeTextShadowColor", "__Internal")]
		NSString UITextAttributeTextShadowColor { get; }

		// extern NSString *const UITextAttributeTextShadowOffset __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Use NSShadowAttributeName with an NSShadow instance as the value")]
		[Deprecated (PlatformName.iOS, 7, 0, message: "Use NSShadowAttributeName with an NSShadow instance as the value")]
		[NoTV]
		[Field ("UITextAttributeTextShadowOffset", "__Internal")]
		NSString UITextAttributeTextShadowOffset { get; }
	}

	// @interface UIStringDrawing (NSString)
	[Category]
	[BaseType (typeof(NSString))]
	interface NSString_UIStringDrawing
	{
		// -(CGSize)sizeWithFont:(UIFont *)font __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("sizeWithFont:")]
		CGSize SizeWithFont (UIFont font);

		// -(CGSize)sizeWithFont:(UIFont *)font forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("sizeWithFont:forWidth:lineBreakMode:")]
		CGSize SizeWithFont (UIFont font, nfloat width, NSLineBreakMode lineBreakMode);

		// -(CGSize)drawAtPoint:(CGPoint)point withFont:(UIFont *)font __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawAtPoint:withFont:")]
		CGSize DrawAtPoint (CGPoint point, UIFont font);

		// -(CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawAtPoint:forWidth:withFont:lineBreakMode:")]
		CGSize DrawAtPoint (CGPoint point, nfloat width, UIFont font, NSLineBreakMode lineBreakMode);

		// -(CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("sizeWithFont:constrainedToSize:")]
		CGSize SizeWithFont (UIFont font, CGSize size);

		// -(CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("sizeWithFont:constrainedToSize:lineBreakMode:")]
		CGSize SizeWithFont (UIFont font, CGSize size, NSLineBreakMode lineBreakMode);

		// -(CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawInRect:withFont:")]
		CGSize DrawInRect (CGRect rect, UIFont font);

		// -(CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawInRect:withFont:lineBreakMode:")]
		CGSize DrawInRect (CGRect rect, UIFont font, NSLineBreakMode lineBreakMode);

		// -(CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode alignment:(NSTextAlignment)alignment __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawInRect:withFont:lineBreakMode:alignment:")]
		CGSize DrawInRect (CGRect rect, UIFont font, NSLineBreakMode lineBreakMode, NSTextAlignment alignment);

		// -(CGSize)sizeWithFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:")]
		unsafe CGSize SizeWithFont (UIFont font, nfloat minFontSize, nfloat* actualFontSize, nfloat width, NSLineBreakMode lineBreakMode);

		// -(CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font fontSize:(CGFloat)fontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:")]
		CGSize DrawAtPoint (CGPoint point, nfloat width, UIFont font, nfloat fontSize, NSLineBreakMode lineBreakMode, UIBaselineAdjustment baselineAdjustment);

		// -(CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:")]
		unsafe CGSize DrawAtPoint (CGPoint point, nfloat width, UIFont font, nfloat minFontSize, nfloat* actualFontSize, NSLineBreakMode lineBreakMode, UIBaselineAdjustment baselineAdjustment);
	}

	// @protocol UISpringLoadedInteractionSupporting <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UISpringLoadedInteractionSupporting
	{
		// @required @property (getter = isSpringLoaded, assign, nonatomic) int springLoaded __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Abstract]
		[Export ("springLoaded")]
		int SpringLoaded { [Bind ("isSpringLoaded")] get; set; }
	}

	// @interface UIButton : UIControl <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UIButton : INSCoding
	{
		// +(instancetype _Nonnull)buttonWithType:(UIButtonType)buttonType;
		[Static]
		[Export ("buttonWithType:")]
		UIButton ButtonWithType (UIButtonType buttonType);

		// +(instancetype _Nonnull)systemButtonWithImage:(UIImage * _Nonnull)image target:(id _Nullable)target action:(SEL _Nullable)action __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Static]
		[Export ("systemButtonWithImage:target:action:")]
		UIButton SystemButtonWithImage (UIImage image, [NullAllowed] NSObject target, [NullAllowed] Selector action);

		// @property (nonatomic) UIEdgeInsets contentEdgeInsets __attribute__((annotate("ui_appearance_selector")));
		[Export ("contentEdgeInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets ContentEdgeInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets titleEdgeInsets;
		[Export ("titleEdgeInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets TitleEdgeInsets { get; set; }

		// @property (nonatomic) int reversesTitleShadowWhenHighlighted;
		[Export ("reversesTitleShadowWhenHighlighted")]
		int ReversesTitleShadowWhenHighlighted { get; set; }

		// @property (nonatomic) UIEdgeInsets imageEdgeInsets;
		[Export ("imageEdgeInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets ImageEdgeInsets { get; set; }

		// @property (nonatomic) int adjustsImageWhenHighlighted;
		[Export ("adjustsImageWhenHighlighted")]
		int AdjustsImageWhenHighlighted { get; set; }

		// @property (nonatomic) int adjustsImageWhenDisabled;
		[Export ("adjustsImageWhenDisabled")]
		int AdjustsImageWhenDisabled { get; set; }

		// @property (nonatomic) int showsTouchWhenHighlighted __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("showsTouchWhenHighlighted")]
		int ShowsTouchWhenHighlighted { get; set; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (readonly, nonatomic) UIButtonType buttonType;
		[Export ("buttonType")]
		UIButtonType ButtonType { get; }

		// -(void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
		[Export ("setTitle:forState:")]
		void SetTitle ([NullAllowed] string title, UIControlState state);

		// -(void)setTitleColor:(UIColor * _Nullable)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
		[Export ("setTitleColor:forState:")]
		void SetTitleColor ([NullAllowed] UIColor color, UIControlState state);

		// -(void)setTitleShadowColor:(UIColor * _Nullable)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
		[Export ("setTitleShadowColor:forState:")]
		void SetTitleShadowColor ([NullAllowed] UIColor color, UIControlState state);

		// -(void)setImage:(UIImage * _Nullable)image forState:(UIControlState)state;
		[Export ("setImage:forState:")]
		void SetImage ([NullAllowed] UIImage image, UIControlState state);

		// -(void)setBackgroundImage:(UIImage * _Nullable)image forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
		[Export ("setBackgroundImage:forState:")]
		void SetBackgroundImage ([NullAllowed] UIImage image, UIControlState state);

		// -(void)setPreferredSymbolConfiguration:(UIImageSymbolConfiguration * _Nullable)configuration forImageInState:(UIControlState)state __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("setPreferredSymbolConfiguration:forImageInState:")]
		void SetPreferredSymbolConfiguration ([NullAllowed] UIImageSymbolConfiguration configuration, UIControlState state);

		// -(void)setAttributedTitle:(NSAttributedString * _Nullable)title forState:(UIControlState)state __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("setAttributedTitle:forState:")]
		void SetAttributedTitle ([NullAllowed] NSAttributedString title, UIControlState state);

		// -(NSString * _Nullable)titleForState:(UIControlState)state;
		[Export ("titleForState:")]
		[return: NullAllowed]
		string TitleForState (UIControlState state);

		// -(UIColor * _Nullable)titleColorForState:(UIControlState)state;
		[Export ("titleColorForState:")]
		[return: NullAllowed]
		UIColor TitleColorForState (UIControlState state);

		// -(UIColor * _Nullable)titleShadowColorForState:(UIControlState)state;
		[Export ("titleShadowColorForState:")]
		[return: NullAllowed]
		UIColor TitleShadowColorForState (UIControlState state);

		// -(UIImage * _Nullable)imageForState:(UIControlState)state;
		[Export ("imageForState:")]
		[return: NullAllowed]
		UIImage ImageForState (UIControlState state);

		// -(UIImage * _Nullable)backgroundImageForState:(UIControlState)state;
		[Export ("backgroundImageForState:")]
		[return: NullAllowed]
		UIImage BackgroundImageForState (UIControlState state);

		// -(UIImageSymbolConfiguration * _Nullable)preferredSymbolConfigurationForImageInState:(UIControlState)state __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6,0), TV (13,0), iOS (13,0)]
		[Export ("preferredSymbolConfigurationForImageInState:")]
		[return: NullAllowed]
		UIImageSymbolConfiguration PreferredSymbolConfigurationForImageInState (UIControlState state);

		// -(NSAttributedString * _Nullable)attributedTitleForState:(UIControlState)state __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("attributedTitleForState:")]
		[return: NullAllowed]
		NSAttributedString AttributedTitleForState (UIControlState state);

		// @property (readonly, nonatomic, strong) NSString * _Nullable currentTitle;
		[NullAllowed, Export ("currentTitle", ArgumentSemantic.Strong)]
		string CurrentTitle { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nonnull currentTitleColor;
		[Export ("currentTitleColor", ArgumentSemantic.Strong)]
		UIColor CurrentTitleColor { get; }

		// @property (readonly, nonatomic, strong) UIColor * _Nullable currentTitleShadowColor;
		[NullAllowed, Export ("currentTitleShadowColor", ArgumentSemantic.Strong)]
		UIColor CurrentTitleShadowColor { get; }

		// @property (readonly, nonatomic, strong) UIImage * _Nullable currentImage;
		[NullAllowed, Export ("currentImage", ArgumentSemantic.Strong)]
		UIImage CurrentImage { get; }

		// @property (readonly, nonatomic, strong) UIImage * _Nullable currentBackgroundImage;
		[NullAllowed, Export ("currentBackgroundImage", ArgumentSemantic.Strong)]
		UIImage CurrentBackgroundImage { get; }

		// @property (readonly, nonatomic, strong) UIImageSymbolConfiguration * _Nullable currentPreferredSymbolConfiguration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0)));
		[Watch (6, 0), TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("currentPreferredSymbolConfiguration", ArgumentSemantic.Strong)]
		UIImageSymbolConfiguration CurrentPreferredSymbolConfiguration { get; }

		// @property (readonly, nonatomic, strong) NSAttributedString * _Nullable currentAttributedTitle __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("currentAttributedTitle", ArgumentSemantic.Strong)]
		NSAttributedString CurrentAttributedTitle { get; }

		// @property (readonly, nonatomic, strong) UILabel * _Nullable titleLabel __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("titleLabel", ArgumentSemantic.Strong)]
		UILabel TitleLabel { get; }

		// @property (readonly, nonatomic, strong) UIImageView * _Nullable imageView __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("imageView", ArgumentSemantic.Strong)]
		UIImageView ImageView { get; }

		// -(CGRect)backgroundRectForBounds:(CGRect)bounds;
		[Export ("backgroundRectForBounds:")]
		CGRect BackgroundRectForBounds (CGRect bounds);

		// -(CGRect)contentRectForBounds:(CGRect)bounds;
		[Export ("contentRectForBounds:")]
		CGRect ContentRectForBounds (CGRect bounds);

		// -(CGRect)titleRectForContentRect:(CGRect)contentRect;
		[Export ("titleRectForContentRect:")]
		CGRect TitleRectForContentRect (CGRect contentRect);

		// -(CGRect)imageRectForContentRect:(CGRect)contentRect;
		[Export ("imageRectForContentRect:")]
		CGRect ImageRectForContentRect (CGRect contentRect);
	}

	// @interface UIButtonDeprecated (UIButton)
	[Category]
	[BaseType (typeof(UIButton))]
	interface UIButton_UIButtonDeprecated
	{
		// @property (nonatomic, strong) UIFont * _Nonnull font __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("lineBreakMode", ArgumentSemantic.Assign)]
		NSLineBreakMode LineBreakMode { get; set; }

		// @property (nonatomic) CGSize titleShadowOffset __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("titleShadowOffset", ArgumentSemantic.Assign)]
		CGSize TitleShadowOffset { get; set; }
	}

	// @interface SpringLoading (UIButton) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UIButton))]
	interface UIButton_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @protocol UIAccessibilityContentSizeCategoryImageAdjusting <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[TV (11,0), iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIAccessibilityContentSizeCategoryImageAdjusting
	{
		// @required @property (nonatomic) int adjustsImageSizeForAccessibilityContentSizeCategory;
		[Abstract]
		[Export ("adjustsImageSizeForAccessibilityContentSizeCategory")]
		int AdjustsImageSizeForAccessibilityContentSizeCategory { get; set; }
	}

	// @interface UIAccessibilityContentSizeCategoryImageAdjusting (UIImageView) <UIAccessibilityContentSizeCategoryImageAdjusting>
	[Category]
	[BaseType (typeof(UIImageView))]
	interface UIImageView_UIAccessibilityContentSizeCategoryImageAdjusting : IUIAccessibilityContentSizeCategoryImageAdjusting
	{
	}

	// @interface UIAccessibilityContentSizeCategoryImageAdjusting (UIButton) <UIAccessibilityContentSizeCategoryImageAdjusting>
	[Category]
	[BaseType (typeof(UIButton))]
	interface UIButton_UIAccessibilityContentSizeCategoryImageAdjusting : IUIAccessibilityContentSizeCategoryImageAdjusting
	{
	}

	// @interface UIAccessibilityContentSizeCategoryImageAdjusting (NSTextAttachment) <UIAccessibilityContentSizeCategoryImageAdjusting>
	[Category]
	[BaseType (typeof(NSTextAttachment))]
	interface NSTextAttachment_UIAccessibilityContentSizeCategoryImageAdjusting : IUIAccessibilityContentSizeCategoryImageAdjusting
	{
	}

	// @interface UIActivityIndicatorView : UIView <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIActivityIndicatorView : INSCoding
	{
		// -(instancetype _Nonnull)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style __attribute__((objc_designated_initializer));
		[Export ("initWithActivityIndicatorStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIActivityIndicatorViewStyle style);

		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
		[Export ("activityIndicatorViewStyle", ArgumentSemantic.Assign)]
		UIActivityIndicatorViewStyle ActivityIndicatorViewStyle { get; set; }

		// @property (nonatomic) int hidesWhenStopped;
		[Export ("hidesWhenStopped")]
		int HidesWhenStopped { get; set; }

		// @property (readwrite, nonatomic, strong) UIColor * _Null_unspecified color __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[Export ("color", ArgumentSemantic.Strong)]
		UIColor Color { get; set; }

		// -(void)startAnimating;
		[Export ("startAnimating")]
		void StartAnimating ();

		// -(void)stopAnimating;
		[Export ("stopAnimating")]
		void StopAnimating ();

		// @property (readonly, getter = isAnimating, nonatomic) int animating;
		[Export ("animating")]
		int Animating { [Bind ("isAnimating")] get; }
	}

	// @protocol UIInteraction <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Watch (5,0), TV (13,0), iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIInteraction
	{
		// @required @property (readonly, nonatomic, weak) __kindof UIView * _Nullable view;
		[Abstract]
		[Export ("view", ArgumentSemantic.Weak)]
		UIView View { get; }

		// @required -(void)willMoveToView:(UIView * _Nullable)view;
		[Abstract]
		[Export ("willMoveToView:")]
		void WillMoveToView ([NullAllowed] UIView view);

		// @required -(void)didMoveToView:(UIView * _Nullable)view;
		[Abstract]
		[Export ("didMoveToView:")]
		void DidMoveToView ([NullAllowed] UIView view);
	}

	// @interface Interactions (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_Interactions
	{
		// -(void)addInteraction:(id<UIInteraction> _Nonnull)interaction __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5,0), TV (13,0), iOS (11,0)]
		[Export ("addInteraction:")]
		void AddInteraction (UIInteraction interaction);

		// -(void)removeInteraction:(id<UIInteraction> _Nonnull)interaction __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5,0), TV (13,0), iOS (11,0)]
		[Export ("removeInteraction:")]
		void RemoveInteraction (UIInteraction interaction);

		// @property (copy, nonatomic) NSArray<id<UIInteraction>> * _Nonnull interactions __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (5, 0), TV (13, 0), iOS (11, 0)]
		[Export ("interactions", ArgumentSemantic.Copy)]
		UIInteraction[] Interactions { get; set; }
	}

	// @interface UIDropInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDropInteraction : IUIInteraction
	{
		// -(instancetype _Nonnull)initWithDelegate:(id<UIDropInteractionDelegate> _Nonnull)delegate __attribute__((objc_designated_initializer));
		[Export ("initWithDelegate:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDropInteractionDelegate @delegate);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDropInteractionDelegate Delegate { get; }

		// @property (readonly, nonatomic, weak) id<UIDropInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; }

		// @property (assign, nonatomic) int allowsSimultaneousDropSessions;
		[Export ("allowsSimultaneousDropSessions")]
		int AllowsSimultaneousDropSessions { get; set; }
	}

	// @interface UIDropProposal : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDropProposal : INSCopying
	{
		// -(instancetype _Nonnull)initWithDropOperation:(UIDropOperation)operation __attribute__((objc_designated_initializer));
		[Export ("initWithDropOperation:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDropOperation operation);

		// @property (readonly, nonatomic) UIDropOperation operation;
		[Export ("operation")]
		UIDropOperation Operation { get; }

		// @property (getter = isPrecise, nonatomic) int precise;
		[Export ("precise")]
		int Precise { [Bind ("isPrecise")] get; set; }

		// @property (nonatomic) int prefersFullSizePreview;
		[Export ("prefersFullSizePreview")]
		int PrefersFullSizePreview { get; set; }
	}

	// @protocol UIDropInteractionDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDropInteractionDelegate
	{
		// @optional -(int)dropInteraction:(UIDropInteraction * _Nonnull)interaction canHandleSession:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:canHandleSession:")]
		int DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction sessionDidEnter:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:sessionDidEnter:")]
		void DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(UIDropProposal * _Nonnull)dropInteraction:(UIDropInteraction * _Nonnull)interaction sessionDidUpdate:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:sessionDidUpdate:")]
		UIDropProposal DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction sessionDidExit:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:sessionDidExit:")]
		void DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction performDrop:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:performDrop:")]
		void DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction concludeDrop:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:concludeDrop:")]
		void DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction sessionDidEnd:(id<UIDropSession> _Nonnull)session;
		[Export ("dropInteraction:sessionDidEnd:")]
		void DropInteraction (UIDropInteraction interaction, UIDropSession session);

		// @optional -(UITargetedDragPreview * _Nullable)dropInteraction:(UIDropInteraction * _Nonnull)interaction previewForDroppingItem:(UIDragItem * _Nonnull)item withDefault:(UITargetedDragPreview * _Nonnull)defaultPreview;
		[Export ("dropInteraction:previewForDroppingItem:withDefault:")]
		[return: NullAllowed]
		UITargetedDragPreview DropInteraction (UIDropInteraction interaction, UIDragItem item, UITargetedDragPreview defaultPreview);

		// @optional -(void)dropInteraction:(UIDropInteraction * _Nonnull)interaction item:(UIDragItem * _Nonnull)item willAnimateDropWithAnimator:(id<UIDragAnimating> _Nonnull)animator;
		[Export ("dropInteraction:item:willAnimateDropWithAnimator:")]
		void DropInteraction (UIDropInteraction interaction, UIDragItem item, UIDragAnimating animator);
	}

	// @protocol UIViewAnimating <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewAnimating
	{
		// @required @property (readonly, nonatomic) UIViewAnimatingState state;
		[Abstract]
		[Export ("state")]
		UIViewAnimatingState State { get; }

		// @required @property (readonly, getter = isRunning, nonatomic) int running;
		[Abstract]
		[Export ("running")]
		int Running { [Bind ("isRunning")] get; }

		// @required @property (getter = isReversed, nonatomic) int reversed;
		[Abstract]
		[Export ("reversed")]
		int Reversed { [Bind ("isReversed")] get; set; }

		// @required @property (nonatomic) CGFloat fractionComplete;
		[Abstract]
		[Export ("fractionComplete")]
		nfloat FractionComplete { get; set; }

		// @required -(void)startAnimation;
		[Abstract]
		[Export ("startAnimation")]
		void StartAnimation ();

		// @required -(void)startAnimationAfterDelay:(NSTimeInterval)delay;
		[Abstract]
		[Export ("startAnimationAfterDelay:")]
		void StartAnimationAfterDelay (double delay);

		// @required -(void)pauseAnimation;
		[Abstract]
		[Export ("pauseAnimation")]
		void PauseAnimation ();

		// @required -(void)stopAnimation:(int)withoutFinishing;
		[Abstract]
		[Export ("stopAnimation:")]
		void StopAnimation (int withoutFinishing);

		// @required -(void)finishAnimationAtPosition:(UIViewAnimatingPosition)finalPosition;
		[Abstract]
		[Export ("finishAnimationAtPosition:")]
		void FinishAnimationAtPosition (UIViewAnimatingPosition finalPosition);
	}

	// @protocol UIViewImplicitlyAnimating <UIViewAnimating>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIViewImplicitlyAnimating : IUIViewAnimating
	{
		// @optional -(void)addAnimations:(void (^ _Nonnull)(void))animation delayFactor:(CGFloat)delayFactor;
		[Export ("addAnimations:delayFactor:")]
		void AddAnimations (Action animation, nfloat delayFactor);

		// @optional -(void)addAnimations:(void (^ _Nonnull)(void))animation;
		[Export ("addAnimations:")]
		void AddAnimations (Action animation);

		// @optional -(void)addCompletion:(void (^ _Nonnull)(UIViewAnimatingPosition))completion;
		[Export ("addCompletion:")]
		void AddCompletion (Action<UIViewAnimatingPosition> completion);

		// @optional -(void)continueAnimationWithTimingParameters:(id<UITimingCurveProvider> _Nullable)parameters durationFactor:(CGFloat)durationFactor;
		[Export ("continueAnimationWithTimingParameters:durationFactor:")]
		void ContinueAnimationWithTimingParameters ([NullAllowed] UITimingCurveProvider parameters, nfloat durationFactor);
	}

	// @protocol UIDragAnimating <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIDragAnimating
	{
		// @required -(void)addAnimations:(void (^ _Nonnull)(void))animations;
		[Abstract]
		[Export ("addAnimations:")]
		void AddAnimations (Action animations);

		// @required -(void)addCompletion:(void (^ _Nonnull)(UIViewAnimatingPosition))completion;
		[Abstract]
		[Export ("addCompletion:")]
		void AddCompletion (Action<UIViewAnimatingPosition> completion);
	}

	// @interface UIDragInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDragInteraction : IUIInteraction
	{
		// -(instancetype _Nonnull)initWithDelegate:(id<UIDragInteractionDelegate> _Nonnull)delegate __attribute__((objc_designated_initializer));
		[Export ("initWithDelegate:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDragInteractionDelegate @delegate);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDragInteractionDelegate Delegate { get; }

		// @property (readonly, nonatomic, weak) id<UIDragInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; }

		// @property (nonatomic) int allowsSimultaneousRecognitionDuringLift;
		[Export ("allowsSimultaneousRecognitionDuringLift")]
		int AllowsSimultaneousRecognitionDuringLift { get; set; }

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (readonly, getter = isEnabledByDefault, nonatomic, class) int enabledByDefault;
		[Static]
		[Export ("enabledByDefault")]
		int EnabledByDefault { [Bind ("isEnabledByDefault")] get; }
	}

	// @protocol UIDragInteractionDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDragInteractionDelegate
	{
		// @required -(NSArray<UIDragItem *> * _Nonnull)dragInteraction:(UIDragInteraction * _Nonnull)interaction itemsForBeginningSession:(id<UIDragSession> _Nonnull)session;
		[Abstract]
		[Export ("dragInteraction:itemsForBeginningSession:")]
		UIDragItem[] DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(UITargetedDragPreview * _Nullable)dragInteraction:(UIDragInteraction * _Nonnull)interaction previewForLiftingItem:(UIDragItem * _Nonnull)item session:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:previewForLiftingItem:session:")]
		[return: NullAllowed]
		UITargetedDragPreview DragInteraction (UIDragInteraction interaction, UIDragItem item, UIDragSession session);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction willAnimateLiftWithAnimator:(id<UIDragAnimating> _Nonnull)animator session:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:willAnimateLiftWithAnimator:session:")]
		void DragInteraction (UIDragInteraction interaction, UIDragAnimating animator, UIDragSession session);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionWillBegin:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:sessionWillBegin:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(int)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionAllowsMoveOperation:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:sessionAllowsMoveOperation:")]
		int DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(int)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionIsRestrictedToDraggingApplication:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:sessionIsRestrictedToDraggingApplication:")]
		int DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(int)dragInteraction:(UIDragInteraction * _Nonnull)interaction prefersFullSizePreviewsForSession:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:prefersFullSizePreviewsForSession:")]
		int DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionDidMove:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:sessionDidMove:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction session:(id<UIDragSession> _Nonnull)session willEndWithOperation:(UIDropOperation)operation;
		[Export ("dragInteraction:session:willEndWithOperation:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session, UIDropOperation operation);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction session:(id<UIDragSession> _Nonnull)session didEndWithOperation:(UIDropOperation)operation;
		[Export ("dragInteraction:session:didEndWithOperation:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session, UIDropOperation operation);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionDidTransferItems:(id<UIDragSession> _Nonnull)session;
		[Export ("dragInteraction:sessionDidTransferItems:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session);

		// @optional -(NSArray<UIDragItem *> * _Nonnull)dragInteraction:(UIDragInteraction * _Nonnull)interaction itemsForAddingToSession:(id<UIDragSession> _Nonnull)session withTouchAtPoint:(CGPoint)point;
		[Export ("dragInteraction:itemsForAddingToSession:withTouchAtPoint:")]
		UIDragItem[] DragInteraction (UIDragInteraction interaction, UIDragSession session, CGPoint point);

		// @optional -(id<UIDragSession> _Nullable)dragInteraction:(UIDragInteraction * _Nonnull)interaction sessionForAddingItems:(NSArray<id<UIDragSession>> * _Nonnull)sessions withTouchAtPoint:(CGPoint)point;
		[Export ("dragInteraction:sessionForAddingItems:withTouchAtPoint:")]
		[return: NullAllowed]
		UIDragSession DragInteraction (UIDragInteraction interaction, UIDragSession[] sessions, CGPoint point);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction session:(id<UIDragSession> _Nonnull)session willAddItems:(NSArray<UIDragItem *> * _Nonnull)items forInteraction:(UIDragInteraction * _Nonnull)addingInteraction;
		[Export ("dragInteraction:session:willAddItems:forInteraction:")]
		void DragInteraction (UIDragInteraction interaction, UIDragSession session, UIDragItem[] items, UIDragInteraction addingInteraction);

		// @optional -(UITargetedDragPreview * _Nullable)dragInteraction:(UIDragInteraction * _Nonnull)interaction previewForCancellingItem:(UIDragItem * _Nonnull)item withDefault:(UITargetedDragPreview * _Nonnull)defaultPreview;
		[Export ("dragInteraction:previewForCancellingItem:withDefault:")]
		[return: NullAllowed]
		UITargetedDragPreview DragInteraction (UIDragInteraction interaction, UIDragItem item, UITargetedDragPreview defaultPreview);

		// @optional -(void)dragInteraction:(UIDragInteraction * _Nonnull)interaction item:(UIDragItem * _Nonnull)item willAnimateCancelWithAnimator:(id<UIDragAnimating> _Nonnull)animator;
		[Export ("dragInteraction:item:willAnimateCancelWithAnimator:")]
		void DragInteraction (UIDragInteraction interaction, UIDragItem item, UIDragAnimating animator);
	}

	// @protocol UITextDraggable <UITextInput>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UITextDraggable : IUITextInput
	{
		[Wrap ("WeakTextDragDelegate"), Abstract]
		[NullAllowed]
		UITextDragDelegate TextDragDelegate { get; set; }

		// @required @property (nonatomic, weak) id<UITextDragDelegate> _Nullable textDragDelegate;
		[Abstract]
		[NullAllowed, Export ("textDragDelegate", ArgumentSemantic.Weak)]
		NSObject WeakTextDragDelegate { get; set; }

		// @required @property (readonly, nonatomic) UIDragInteraction * _Nullable textDragInteraction;
		[Abstract]
		[NullAllowed, Export ("textDragInteraction")]
		UIDragInteraction TextDragInteraction { get; }

		// @required @property (readonly, getter = isTextDragActive, nonatomic) int textDragActive;
		[Abstract]
		[Export ("textDragActive")]
		int TextDragActive { [Bind ("isTextDragActive")] get; }

		// @required @property (nonatomic) UITextDragOptions textDragOptions;
		[Abstract]
		[Export ("textDragOptions", ArgumentSemantic.Assign)]
		UITextDragOptions TextDragOptions { get; set; }
	}

	// @protocol UITextDragDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextDragDelegate
	{
		// @optional -(NSArray<UIDragItem *> * _Nonnull)textDraggableView:(UIView<UITextDraggable> * _Nonnull)textDraggableView itemsForDrag:(id<UITextDragRequest> _Nonnull)dragRequest;
		[Export ("textDraggableView:itemsForDrag:")]
		UIDragItem[] TextDraggableView (UITextDraggable textDraggableView, UITextDragRequest dragRequest);

		// @optional -(UITargetedDragPreview * _Nullable)textDraggableView:(UIView<UITextDraggable> * _Nonnull)textDraggableView dragPreviewForLiftingItem:(UIDragItem * _Nonnull)item session:(id<UIDragSession> _Nonnull)session;
		[Export ("textDraggableView:dragPreviewForLiftingItem:session:")]
		[return: NullAllowed]
		UITargetedDragPreview TextDraggableView (UITextDraggable textDraggableView, UIDragItem item, UIDragSession session);

		// @optional -(void)textDraggableView:(UIView<UITextDraggable> * _Nonnull)textDraggableView willAnimateLiftWithAnimator:(id<UIDragAnimating> _Nonnull)animator session:(id<UIDragSession> _Nonnull)session;
		[Export ("textDraggableView:willAnimateLiftWithAnimator:session:")]
		void TextDraggableView (UITextDraggable textDraggableView, UIDragAnimating animator, UIDragSession session);

		// @optional -(void)textDraggableView:(UIView<UITextDraggable> * _Nonnull)textDraggableView dragSessionWillBegin:(id<UIDragSession> _Nonnull)session;
		[Export ("textDraggableView:dragSessionWillBegin:")]
		void TextDraggableView (UITextDraggable textDraggableView, UIDragSession session);

		// @optional -(void)textDraggableView:(UIView<UITextDraggable> * _Nonnull)textDraggableView dragSessionDidEnd:(id<UIDragSession> _Nonnull)session withOperation:(UIDropOperation)operation;
		[Export ("textDraggableView:dragSessionDidEnd:withOperation:")]
		void TextDraggableView (UITextDraggable textDraggableView, UIDragSession session, UIDropOperation operation);
	}

	// @protocol UITextDragRequest <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITextDragRequest
	{
		// @required @property (readonly, nonatomic) UITextRange * _Nonnull dragRange;
		[Abstract]
		[Export ("dragRange")]
		UITextRange DragRange { get; }

		// @required @property (readonly, nonatomic) NSArray<UIDragItem *> * _Nonnull suggestedItems;
		[Abstract]
		[Export ("suggestedItems")]
		UIDragItem[] SuggestedItems { get; }

		// @required @property (readonly, nonatomic) NSArray<UIDragItem *> * _Nonnull existingItems;
		[Abstract]
		[Export ("existingItems")]
		UIDragItem[] ExistingItems { get; }

		// @required @property (readonly, getter = isSelected, nonatomic) int selected;
		[Abstract]
		[Export ("selected")]
		int Selected { [Bind ("isSelected")] get; }

		// @required @property (readonly, nonatomic) id<UIDragSession> _Nonnull dragSession;
		[Abstract]
		[Export ("dragSession")]
		UIDragSession DragSession { get; }
	}

	// @interface UITextDropProposal : UIDropProposal <NSCopying>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIDropProposal))]
	interface UITextDropProposal : INSCopying
	{
		// @property (nonatomic) UITextDropAction dropAction;
		[Export ("dropAction", ArgumentSemantic.Assign)]
		UITextDropAction DropAction { get; set; }

		// @property (nonatomic) UITextDropProgressMode dropProgressMode;
		[Export ("dropProgressMode", ArgumentSemantic.Assign)]
		UITextDropProgressMode DropProgressMode { get; set; }

		// @property (nonatomic) int useFastSameViewOperations;
		[Export ("useFastSameViewOperations")]
		int UseFastSameViewOperations { get; set; }

		// @property (nonatomic) UITextDropPerformer dropPerformer;
		[Export ("dropPerformer", ArgumentSemantic.Assign)]
		UITextDropPerformer DropPerformer { get; set; }
	}

	// @interface UIPasteConfiguration : NSObject <NSSecureCoding, NSCopying>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface UIPasteConfiguration : INSSecureCoding, INSCopying
	{
		// @property (copy, nonatomic) NSArray<NSString *> * _Nonnull acceptableTypeIdentifiers;
		[Export ("acceptableTypeIdentifiers", ArgumentSemantic.Copy)]
		string[] AcceptableTypeIdentifiers { get; set; }

		// -(instancetype _Nonnull)initWithAcceptableTypeIdentifiers:(NSArray<NSString *> * _Nonnull)acceptableTypeIdentifiers;
		[Export ("initWithAcceptableTypeIdentifiers:")]
		IntPtr Constructor (string[] acceptableTypeIdentifiers);

		// -(void)addAcceptableTypeIdentifiers:(NSArray<NSString *> * _Nonnull)acceptableTypeIdentifiers;
		[Export ("addAcceptableTypeIdentifiers:")]
		void AddAcceptableTypeIdentifiers (string[] acceptableTypeIdentifiers);

		// -(instancetype _Nonnull)initWithTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading> _Nonnull)aClass;
		[Export ("initWithTypeIdentifiersForAcceptingClass:")]
		IntPtr Constructor (NSItemProviderReading aClass);

		// -(void)addTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading> _Nonnull)aClass;
		[Export ("addTypeIdentifiersForAcceptingClass:")]
		void AddTypeIdentifiersForAcceptingClass (NSItemProviderReading aClass);
	}

	// @protocol UITextPasteDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextPasteDelegate
	{
		// @optional -(void)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting> _Nonnull)textPasteConfigurationSupporting transformPasteItem:(id<UITextPasteItem> _Nonnull)item;
		[Export ("textPasteConfigurationSupporting:transformPasteItem:")]
		void TextPasteConfigurationSupporting (UITextPasteConfigurationSupporting textPasteConfigurationSupporting, UITextPasteItem item);

		// @optional -(NSAttributedString * _Nonnull)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting> _Nonnull)textPasteConfigurationSupporting combineItemAttributedStrings:(NSArray<NSAttributedString *> * _Nonnull)itemStrings forRange:(UITextRange * _Nonnull)textRange;
		[Export ("textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:")]
		NSAttributedString TextPasteConfigurationSupporting (UITextPasteConfigurationSupporting textPasteConfigurationSupporting, NSAttributedString[] itemStrings, UITextRange textRange);

		// @optional -(UITextRange * _Nonnull)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting> _Nonnull)textPasteConfigurationSupporting performPasteOfAttributedString:(NSAttributedString * _Nonnull)attributedString toRange:(UITextRange * _Nonnull)textRange;
		[Export ("textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:")]
		UITextRange TextPasteConfigurationSupporting (UITextPasteConfigurationSupporting textPasteConfigurationSupporting, NSAttributedString attributedString, UITextRange textRange);

		// @optional -(int)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting> _Nonnull)textPasteConfigurationSupporting shouldAnimatePasteOfAttributedString:(NSAttributedString * _Nonnull)attributedString toRange:(UITextRange * _Nonnull)textRange;
		[Export ("textPasteConfigurationSupporting:shouldAnimatePasteOfAttributedString:toRange:")]
		int TextPasteConfigurationSupporting (UITextPasteConfigurationSupporting textPasteConfigurationSupporting, NSAttributedString attributedString, UITextRange textRange);
	}

	// @protocol UITextPasteItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITextPasteItem
	{
		// @required @property (readonly, nonatomic) __kindof NSItemProvider * _Nonnull itemProvider;
		[Abstract]
		[Export ("itemProvider")]
		NSItemProvider ItemProvider { get; }

		// @required @property (readonly, nonatomic) id _Nullable localObject;
		[Abstract]
		[NullAllowed, Export ("localObject")]
		NSObject LocalObject { get; }

		// @required @property (readonly, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull defaultAttributes;
		[Abstract]
		[Export ("defaultAttributes")]
		NSDictionary<NSString, NSObject> DefaultAttributes { get; }

		// @required -(void)setStringResult:(NSString * _Nonnull)string;
		[Abstract]
		[Export ("setStringResult:")]
		void SetStringResult (string @string);

		// @required -(void)setAttributedStringResult:(NSAttributedString * _Nonnull)string;
		[Abstract]
		[Export ("setAttributedStringResult:")]
		void SetAttributedStringResult (NSAttributedString @string);

		// @required -(void)setAttachmentResult:(NSTextAttachment * _Nonnull)textAttachment;
		[Abstract]
		[Export ("setAttachmentResult:")]
		void SetAttachmentResult (NSTextAttachment textAttachment);

		// @required -(void)setNoResult;
		[Abstract]
		[Export ("setNoResult")]
		void SetNoResult ();

		// @required -(void)setDefaultResult;
		[Abstract]
		[Export ("setDefaultResult")]
		void SetDefaultResult ();
	}

	// @protocol UITextPasteConfigurationSupporting <UIPasteConfigurationSupporting>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UITextPasteConfigurationSupporting : IUIPasteConfigurationSupporting
	{
		[Wrap ("WeakPasteDelegate"), Abstract]
		[NullAllowed]
		UITextPasteDelegate PasteDelegate { get; set; }

		// @required @property (nonatomic, weak) id<UITextPasteDelegate> _Nullable pasteDelegate;
		[Abstract]
		[NullAllowed, Export ("pasteDelegate", ArgumentSemantic.Weak)]
		NSObject WeakPasteDelegate { get; set; }
	}

	// @protocol UITextDroppable <UITextInput, UITextPasteConfigurationSupporting>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UITextDroppable : IUITextInput, IUITextPasteConfigurationSupporting
	{
		[Wrap ("WeakTextDropDelegate"), Abstract]
		[NullAllowed]
		UITextDropDelegate TextDropDelegate { get; set; }

		// @required @property (nonatomic, weak) id<UITextDropDelegate> _Nullable textDropDelegate;
		[Abstract]
		[NullAllowed, Export ("textDropDelegate", ArgumentSemantic.Weak)]
		NSObject WeakTextDropDelegate { get; set; }

		// @required @property (readonly, nonatomic) UIDropInteraction * _Nullable textDropInteraction;
		[Abstract]
		[NullAllowed, Export ("textDropInteraction")]
		UIDropInteraction TextDropInteraction { get; }

		// @required @property (readonly, getter = isTextDropActive, nonatomic) int textDropActive;
		[Abstract]
		[Export ("textDropActive")]
		int TextDropActive { [Bind ("isTextDropActive")] get; }
	}

	// @protocol UITextDropDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextDropDelegate
	{
		// @optional -(UITextDropEditability)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView willBecomeEditableForDrop:(id<UITextDropRequest> _Nonnull)drop;
		[Export ("textDroppableView:willBecomeEditableForDrop:")]
		UITextDropEditability TextDroppableView (UITextDroppable textDroppableView, UITextDropRequest drop);

		// @optional -(UITextDropProposal * _Nonnull)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView proposalForDrop:(id<UITextDropRequest> _Nonnull)drop;
		[Export ("textDroppableView:proposalForDrop:")]
		UITextDropProposal TextDroppableView (UITextDroppable textDroppableView, UITextDropRequest drop);

		// @optional -(void)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView willPerformDrop:(id<UITextDropRequest> _Nonnull)drop;
		[Export ("textDroppableView:willPerformDrop:")]
		void TextDroppableView (UITextDroppable textDroppableView, UITextDropRequest drop);

		// @optional -(UITargetedDragPreview * _Nullable)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView previewForDroppingAllItemsWithDefault:(UITargetedDragPreview * _Nonnull)defaultPreview;
		[Export ("textDroppableView:previewForDroppingAllItemsWithDefault:")]
		[return: NullAllowed]
		UITargetedDragPreview TextDroppableView (UITextDroppable textDroppableView, UITargetedDragPreview defaultPreview);

		// @optional -(void)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView dropSessionDidEnter:(id<UIDropSession> _Nonnull)session;
		[Export ("textDroppableView:dropSessionDidEnter:")]
		void TextDroppableView (UITextDroppable textDroppableView, UIDropSession session);

		// @optional -(void)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView dropSessionDidUpdate:(id<UIDropSession> _Nonnull)session;
		[Export ("textDroppableView:dropSessionDidUpdate:")]
		void TextDroppableView (UITextDroppable textDroppableView, UIDropSession session);

		// @optional -(void)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView dropSessionDidExit:(id<UIDropSession> _Nonnull)session;
		[Export ("textDroppableView:dropSessionDidExit:")]
		void TextDroppableView (UITextDroppable textDroppableView, UIDropSession session);

		// @optional -(void)textDroppableView:(UIView<UITextDroppable> * _Nonnull)textDroppableView dropSessionDidEnd:(id<UIDropSession> _Nonnull)session;
		[Export ("textDroppableView:dropSessionDidEnd:")]
		void TextDroppableView (UITextDroppable textDroppableView, UIDropSession session);
	}

	// @protocol UITextDropRequest <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITextDropRequest
	{
		// @required @property (readonly, nonatomic) UITextPosition * _Nonnull dropPosition;
		[Abstract]
		[Export ("dropPosition")]
		UITextPosition DropPosition { get; }

		// @required @property (readonly, nonatomic) UITextDropProposal * _Nonnull suggestedProposal;
		[Abstract]
		[Export ("suggestedProposal")]
		UITextDropProposal SuggestedProposal { get; }

		// @required @property (readonly, getter = isSameView, nonatomic) int sameView;
		[Abstract]
		[Export ("sameView")]
		int SameView { [Bind ("isSameView")] get; }

		// @required @property (readonly, nonatomic) id<UIDropSession> _Nonnull dropSession;
		[Abstract]
		[Export ("dropSession")]
		UIDropSession DropSession { get; }
	}

	// @protocol UIContentSizeCategoryAdjusting <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (10,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIContentSizeCategoryAdjusting
	{
		// @required @property (nonatomic) int adjustsFontForContentSizeCategory;
		[Abstract]
		[Export ("adjustsFontForContentSizeCategory")]
		int AdjustsFontForContentSizeCategory { get; set; }
	}

	// @interface UITextField : UIControl <UITextInput, NSCoding, UIContentSizeCategoryAdjusting>
	[iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UITextField : IUITextInput, INSCoding, IUIContentSizeCategoryAdjusting
	{
		// @property (copy, nonatomic) NSString * _Nullable text;
		[NullAllowed, Export ("text")]
		string Text { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable attributedText __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("attributedText", ArgumentSemantic.Copy)]
		NSAttributedString AttributedText { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable textColor;
		[NullAllowed, Export ("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; set; }

		// @property (nonatomic, strong) UIFont * _Nullable font;
		[NullAllowed, Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic) NSTextAlignment textAlignment;
		[Export ("textAlignment", ArgumentSemantic.Assign)]
		NSTextAlignment TextAlignment { get; set; }

		// @property (nonatomic) UITextBorderStyle borderStyle;
		[Export ("borderStyle", ArgumentSemantic.Assign)]
		UITextBorderStyle BorderStyle { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull defaultTextAttributes __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("defaultTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> DefaultTextAttributes { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable placeholder;
		[NullAllowed, Export ("placeholder")]
		string Placeholder { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable attributedPlaceholder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("attributedPlaceholder", ArgumentSemantic.Copy)]
		NSAttributedString AttributedPlaceholder { get; set; }

		// @property (nonatomic) int clearsOnBeginEditing;
		[Export ("clearsOnBeginEditing")]
		int ClearsOnBeginEditing { get; set; }

		// @property (nonatomic) int adjustsFontSizeToFitWidth;
		[Export ("adjustsFontSizeToFitWidth")]
		int AdjustsFontSizeToFitWidth { get; set; }

		// @property (nonatomic) CGFloat minimumFontSize;
		[Export ("minimumFontSize")]
		nfloat MinimumFontSize { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITextFieldDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITextFieldDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable background;
		[NullAllowed, Export ("background", ArgumentSemantic.Strong)]
		UIImage Background { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable disabledBackground;
		[NullAllowed, Export ("disabledBackground", ArgumentSemantic.Strong)]
		UIImage DisabledBackground { get; set; }

		// @property (readonly, getter = isEditing, nonatomic) int editing;
		[Export ("editing")]
		int Editing { [Bind ("isEditing")] get; }

		// @property (nonatomic) int allowsEditingTextAttributes __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("allowsEditingTextAttributes")]
		int AllowsEditingTextAttributes { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nullable typingAttributes __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("typingAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TypingAttributes { get; set; }

		// @property (nonatomic) UITextFieldViewMode clearButtonMode;
		[Export ("clearButtonMode", ArgumentSemantic.Assign)]
		UITextFieldViewMode ClearButtonMode { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable leftView;
		[NullAllowed, Export ("leftView", ArgumentSemantic.Strong)]
		UIView LeftView { get; set; }

		// @property (nonatomic) UITextFieldViewMode leftViewMode;
		[Export ("leftViewMode", ArgumentSemantic.Assign)]
		UITextFieldViewMode LeftViewMode { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable rightView;
		[NullAllowed, Export ("rightView", ArgumentSemantic.Strong)]
		UIView RightView { get; set; }

		// @property (nonatomic) UITextFieldViewMode rightViewMode;
		[Export ("rightViewMode", ArgumentSemantic.Assign)]
		UITextFieldViewMode RightViewMode { get; set; }

		// -(CGRect)borderRectForBounds:(CGRect)bounds;
		[Export ("borderRectForBounds:")]
		CGRect BorderRectForBounds (CGRect bounds);

		// -(CGRect)textRectForBounds:(CGRect)bounds;
		[Export ("textRectForBounds:")]
		CGRect TextRectForBounds (CGRect bounds);

		// -(CGRect)placeholderRectForBounds:(CGRect)bounds;
		[Export ("placeholderRectForBounds:")]
		CGRect PlaceholderRectForBounds (CGRect bounds);

		// -(CGRect)editingRectForBounds:(CGRect)bounds;
		[Export ("editingRectForBounds:")]
		CGRect EditingRectForBounds (CGRect bounds);

		// -(CGRect)clearButtonRectForBounds:(CGRect)bounds;
		[Export ("clearButtonRectForBounds:")]
		CGRect ClearButtonRectForBounds (CGRect bounds);

		// -(CGRect)leftViewRectForBounds:(CGRect)bounds;
		[Export ("leftViewRectForBounds:")]
		CGRect LeftViewRectForBounds (CGRect bounds);

		// -(CGRect)rightViewRectForBounds:(CGRect)bounds;
		[Export ("rightViewRectForBounds:")]
		CGRect RightViewRectForBounds (CGRect bounds);

		// -(void)drawTextInRect:(CGRect)rect;
		[Export ("drawTextInRect:")]
		void DrawTextInRect (CGRect rect);

		// -(void)drawPlaceholderInRect:(CGRect)rect;
		[Export ("drawPlaceholderInRect:")]
		void DrawPlaceholderInRect (CGRect rect);

		// @property (readwrite, strong) UIView * _Nullable inputView;
		[NullAllowed, Export ("inputView", ArgumentSemantic.Strong)]
		UIView InputView { get; set; }

		// @property (readwrite, strong) UIView * _Nullable inputAccessoryView;
		[NullAllowed, Export ("inputAccessoryView", ArgumentSemantic.Strong)]
		UIView InputAccessoryView { get; set; }

		// @property (nonatomic) int clearsOnInsertion __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("clearsOnInsertion")]
		int ClearsOnInsertion { get; set; }
	}

	// @interface  (UITextField) <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
	[Category]
	[BaseType (typeof(UITextField))]
	interface UITextField_ : IUITextDraggable, IUITextDroppable, IUITextPasteConfigurationSupporting
	{
	}

	// @interface UITextField (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UITextField
	{
		// -(int)endEditing:(int)force;
		[Export ("endEditing:")]
		int EndEditing (int force);
	}

	// @protocol UITextFieldDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextFieldDelegate
	{
		// @optional -(int)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField;
		[Export ("textFieldShouldBeginEditing:")]
		int TextFieldShouldBeginEditing (UITextField textField);

		// @optional -(void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
		[Export ("textFieldDidBeginEditing:")]
		void TextFieldDidBeginEditing (UITextField textField);

		// @optional -(int)textFieldShouldEndEditing:(UITextField * _Nonnull)textField;
		[Export ("textFieldShouldEndEditing:")]
		int TextFieldShouldEndEditing (UITextField textField);

		// @optional -(void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
		[Export ("textFieldDidEndEditing:")]
		void TextFieldDidEndEditing (UITextField textField);

		// @optional -(void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("textFieldDidEndEditing:reason:")]
		void TextFieldDidEndEditing (UITextField textField, UITextFieldDidEndEditingReason reason);

		// @optional -(int)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string;
		[Export ("textField:shouldChangeCharactersInRange:replacementString:")]
		int TextField (UITextField textField, NSRange range, string @string);

		// @optional -(void)textFieldDidChangeSelection:(UITextField * _Nonnull)textField __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13,0), iOS (13,0)]
		[Export ("textFieldDidChangeSelection:")]
		void TextFieldDidChangeSelection (UITextField textField);

		// @optional -(int)textFieldShouldClear:(UITextField * _Nonnull)textField;
		[Export ("textFieldShouldClear:")]
		int TextFieldShouldClear (UITextField textField);

		// @optional -(int)textFieldShouldReturn:(UITextField * _Nonnull)textField;
		[Export ("textFieldShouldReturn:")]
		int TextFieldShouldReturn (UITextField textField);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UITextFieldTextDidBeginEditingNotification __attribute__((visibility("default")));
		[Field ("UITextFieldTextDidBeginEditingNotification", "__Internal")]
		NSString UITextFieldTextDidBeginEditingNotification { get; }

		// extern const NSNotificationName _Nonnull UITextFieldTextDidEndEditingNotification __attribute__((visibility("default")));
		[Field ("UITextFieldTextDidEndEditingNotification", "__Internal")]
		NSString UITextFieldTextDidEndEditingNotification { get; }

		// extern const NSNotificationName _Nonnull UITextFieldTextDidChangeNotification __attribute__((visibility("default")));
		[Field ("UITextFieldTextDidChangeNotification", "__Internal")]
		NSString UITextFieldTextDidChangeNotification { get; }

		// extern NSString *const _Nonnull UITextFieldDidEndEditingReasonKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UITextFieldDidEndEditingReasonKey", "__Internal")]
		NSString UITextFieldDidEndEditingReasonKey { get; }
	}

	// @interface UIActionSheet : UIView
	[Introduced (PlatformName.iOS, 2, 0, message: "UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead")]
	[Deprecated (PlatformName.iOS, 8, 3, message: "UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead")]
	[NoTV]
	[BaseType (typeof(UIView))]
	interface UIActionSheet
	{
		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nullable)title delegate:(id<UIActionSheetDelegate> _Nullable)delegate cancelButtonTitle:(NSString * _Nullable)cancelButtonTitle destructiveButtonTitle:(NSString * _Nullable)destructiveButtonTitle otherButtonTitles:(NSString * _Nullable)otherButtonTitles, ... __attribute__((sentinel(0, 1))) __attribute__((availability(ios_app_extension, unavailable)));
		[Unavailable (PlatformName.iOSAppExtension)]
		[Internal]
		[Export ("initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:", IsVariadic = true)]
		IntPtr Constructor ([NullAllowed] string title, [NullAllowed] UIActionSheetDelegate @delegate, [NullAllowed] string cancelButtonTitle, [NullAllowed] string destructiveButtonTitle, [NullAllowed] string otherButtonTitles, IntPtr varArgs);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIActionSheetDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIActionSheetDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; set; }

		// @property (nonatomic) UIActionSheetStyle actionSheetStyle;
		[Export ("actionSheetStyle", ArgumentSemantic.Assign)]
		UIActionSheetStyle ActionSheetStyle { get; set; }

		// -(NSInteger)addButtonWithTitle:(NSString * _Nullable)title;
		[Export ("addButtonWithTitle:")]
		nint AddButtonWithTitle ([NullAllowed] string title);

		// -(NSString * _Nullable)buttonTitleAtIndex:(NSInteger)buttonIndex;
		[Export ("buttonTitleAtIndex:")]
		[return: NullAllowed]
		string ButtonTitleAtIndex (nint buttonIndex);

		// @property (readonly, nonatomic) NSInteger numberOfButtons;
		[Export ("numberOfButtons")]
		nint NumberOfButtons { get; }

		// @property (nonatomic) NSInteger cancelButtonIndex;
		[Export ("cancelButtonIndex")]
		nint CancelButtonIndex { get; set; }

		// @property (nonatomic) NSInteger destructiveButtonIndex;
		[Export ("destructiveButtonIndex")]
		nint DestructiveButtonIndex { get; set; }

		// @property (readonly, nonatomic) NSInteger firstOtherButtonIndex;
		[Export ("firstOtherButtonIndex")]
		nint FirstOtherButtonIndex { get; }

		// @property (readonly, getter = isVisible, nonatomic) int visible;
		[Export ("visible")]
		int Visible { [Bind ("isVisible")] get; }

		// -(void)showFromToolbar:(UIToolbar * _Nonnull)view;
		[Export ("showFromToolbar:")]
		void ShowFromToolbar (UIToolbar view);

		// -(void)showFromTabBar:(UITabBar * _Nonnull)view;
		[Export ("showFromTabBar:")]
		void ShowFromTabBar (UITabBar view);

		// -(void)showFromBarButtonItem:(UIBarButtonItem * _Nonnull)item animated:(int)animated __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("showFromBarButtonItem:animated:")]
		void ShowFromBarButtonItem (UIBarButtonItem item, int animated);

		// -(void)showFromRect:(CGRect)rect inView:(UIView * _Nonnull)view animated:(int)animated __attribute__((availability(ios, introduced=3.2)));
		[iOS (3,2)]
		[Export ("showFromRect:inView:animated:")]
		void ShowFromRect (CGRect rect, UIView view, int animated);

		// -(void)showInView:(UIView * _Nonnull)view;
		[Export ("showInView:")]
		void ShowInView (UIView view);

		// -(void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(int)animated;
		[Export ("dismissWithClickedButtonIndex:animated:")]
		void DismissWithClickedButtonIndex (nint buttonIndex, int animated);
	}

	// @protocol UIActionSheetDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIActionSheetDelegate
	{
		// @optional -(void)actionSheet:(UIActionSheet * _Nonnull)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("actionSheet:clickedButtonAtIndex:")]
		void ActionSheet (UIActionSheet actionSheet, nint buttonIndex);

		// @optional -(void)actionSheetCancel:(UIActionSheet * _Nonnull)actionSheet __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("actionSheetCancel:")]
		void ActionSheetCancel (UIActionSheet actionSheet);

		// @optional -(void)willPresentActionSheet:(UIActionSheet * _Nonnull)actionSheet __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("willPresentActionSheet:")]
		void WillPresentActionSheet (UIActionSheet actionSheet);

		// @optional -(void)didPresentActionSheet:(UIActionSheet * _Nonnull)actionSheet __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("didPresentActionSheet:")]
		void DidPresentActionSheet (UIActionSheet actionSheet);

		// @optional -(void)actionSheet:(UIActionSheet * _Nonnull)actionSheet willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("actionSheet:willDismissWithButtonIndex:")]
		void ActionSheet (UIActionSheet actionSheet, nint buttonIndex);

		// @optional -(void)actionSheet:(UIActionSheet * _Nonnull)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=8.3))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 8, 3, message: "Use UIAlertController instead.")]
		[NoTV]
		[Export ("actionSheet:didDismissWithButtonIndex:")]
		void ActionSheet (UIActionSheet actionSheet, nint buttonIndex);
	}

	// @interface UIAlertView : UIView
	[Introduced (PlatformName.iOS, 2, 0, message: "UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead")]
	[Deprecated (PlatformName.iOS, 9, 0, message: "UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead")]
	[NoTV]
	[BaseType (typeof(UIView))]
	interface UIAlertView
	{
		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message delegate:(id _Nullable)delegate cancelButtonTitle:(NSString * _Nullable)cancelButtonTitle otherButtonTitles:(NSString * _Nullable)otherButtonTitles, ... __attribute__((sentinel(0, 1))) __attribute__((availability(ios_app_extension, unavailable)));
		[Unavailable (PlatformName.iOSAppExtension)]
		[Internal]
		[Export ("initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:", IsVariadic = true)]
		IntPtr Constructor ([NullAllowed] string title, [NullAllowed] string message, [NullAllowed] NSObject @delegate, [NullAllowed] string cancelButtonTitle, [NullAllowed] string otherButtonTitles, IntPtr varArgs);

		// -(id _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSObject Delegate { get; set; }

		// @property (nonatomic, weak) id _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable message;
		[NullAllowed, Export ("message")]
		string Message { get; set; }

		// -(NSInteger)addButtonWithTitle:(NSString * _Nullable)title;
		[Export ("addButtonWithTitle:")]
		nint AddButtonWithTitle ([NullAllowed] string title);

		// -(NSString * _Nullable)buttonTitleAtIndex:(NSInteger)buttonIndex;
		[Export ("buttonTitleAtIndex:")]
		[return: NullAllowed]
		string ButtonTitleAtIndex (nint buttonIndex);

		// @property (readonly, nonatomic) NSInteger numberOfButtons;
		[Export ("numberOfButtons")]
		nint NumberOfButtons { get; }

		// @property (nonatomic) NSInteger cancelButtonIndex;
		[Export ("cancelButtonIndex")]
		nint CancelButtonIndex { get; set; }

		// @property (readonly, nonatomic) NSInteger firstOtherButtonIndex;
		[Export ("firstOtherButtonIndex")]
		nint FirstOtherButtonIndex { get; }

		// @property (readonly, getter = isVisible, nonatomic) int visible;
		[Export ("visible")]
		int Visible { [Bind ("isVisible")] get; }

		// -(void)show;
		[Export ("show")]
		void Show ();

		// -(void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(int)animated;
		[Export ("dismissWithClickedButtonIndex:animated:")]
		void DismissWithClickedButtonIndex (nint buttonIndex, int animated);

		// @property (assign, nonatomic) UIAlertViewStyle alertViewStyle __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("alertViewStyle", ArgumentSemantic.Assign)]
		UIAlertViewStyle AlertViewStyle { get; set; }

		// -(UITextField * _Nullable)textFieldAtIndex:(NSInteger)textFieldIndex __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("textFieldAtIndex:")]
		[return: NullAllowed]
		UITextField TextFieldAtIndex (nint textFieldIndex);
	}

	// @protocol UIAlertViewDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIAlertViewDelegate
	{
		// @optional -(void)alertView:(UIAlertView * _Nonnull)alertView clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("alertView:clickedButtonAtIndex:")]
		void AlertView (UIAlertView alertView, nint buttonIndex);

		// @optional -(void)alertViewCancel:(UIAlertView * _Nonnull)alertView __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("alertViewCancel:")]
		void AlertViewCancel (UIAlertView alertView);

		// @optional -(void)willPresentAlertView:(UIAlertView * _Nonnull)alertView __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("willPresentAlertView:")]
		void WillPresentAlertView (UIAlertView alertView);

		// @optional -(void)didPresentAlertView:(UIAlertView * _Nonnull)alertView __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("didPresentAlertView:")]
		void DidPresentAlertView (UIAlertView alertView);

		// @optional -(void)alertView:(UIAlertView * _Nonnull)alertView willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("alertView:willDismissWithButtonIndex:")]
		void AlertView (UIAlertView alertView, nint buttonIndex);

		// @optional -(void)alertView:(UIAlertView * _Nonnull)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("alertView:didDismissWithButtonIndex:")]
		void AlertView (UIAlertView alertView, nint buttonIndex);

		// @optional -(int)alertViewShouldEnableFirstOtherButton:(UIAlertView * _Nonnull)alertView __attribute__((availability(ios, introduced=2.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIAlertController instead.")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use UIAlertController instead.")]
		[Export ("alertViewShouldEnableFirstOtherButton:")]
		int AlertViewShouldEnableFirstOtherButton (UIAlertView alertView);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSErrorDomain UISceneErrorDomain __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneErrorDomain", "__Internal")]
		NSString UISceneErrorDomain { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSExceptionName _Nonnull UIApplicationInvalidInterfaceOrientationException __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIApplicationInvalidInterfaceOrientationException", "__Internal")]
		NSString UIApplicationInvalidInterfaceOrientationException { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIBackgroundTaskIdentifier UIBackgroundTaskInvalid __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIBackgroundTaskInvalid", "__Internal")]
		nuint UIBackgroundTaskInvalid { get; }

		// extern const NSTimeInterval UIMinimumKeepAliveTimeout __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=13.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Please use PushKit for VoIP applications.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use PushKit for VoIP applications.")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use PushKit for VoIP applications.")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use PushKit for VoIP applications.")]
		[Field ("UIMinimumKeepAliveTimeout", "__Internal")]
		double UIMinimumKeepAliveTimeout { get; }

		// extern const NSTimeInterval UIApplicationBackgroundFetchIntervalMinimum __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (7, 0)]
		[Field ("UIApplicationBackgroundFetchIntervalMinimum", "__Internal")]
		double UIApplicationBackgroundFetchIntervalMinimum { get; }

		// extern const NSTimeInterval UIApplicationBackgroundFetchIntervalNever __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (7, 0)]
		[Field ("UIApplicationBackgroundFetchIntervalNever", "__Internal")]
		double UIApplicationBackgroundFetchIntervalNever { get; }
	}

	// @interface UIApplication : UIResponder
	[iOS (2,0)]
	[BaseType (typeof(UIResponder))]
	interface UIApplication
	{
		// @property (readonly, nonatomic, class) UIApplication * _Nonnull sharedApplication __attribute__((availability(ios_app_extension, unavailable)));
		[Unavailable (PlatformName.iOSAppExtension)]
		[Static]
		[Export ("sharedApplication")]
		UIApplication SharedApplication { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIApplicationDelegate Delegate { get; set; }

		// @property (assign, nonatomic) id<UIApplicationDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// -(void)beginIgnoringInteractionEvents __attribute__((availability(ios, introduced=2.0, deprecated=13.0))) __attribute__((availability(ios_app_extension, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Unavailable (PlatformName.iOSAppExtension)]
		[Export ("beginIgnoringInteractionEvents")]
		void BeginIgnoringInteractionEvents ();

		// -(void)endIgnoringInteractionEvents __attribute__((availability(ios, introduced=2.0, deprecated=13.0))) __attribute__((availability(ios_app_extension, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Unavailable (PlatformName.iOSAppExtension)]
		[Export ("endIgnoringInteractionEvents")]
		void EndIgnoringInteractionEvents ();

		// @property (readonly, getter = isIgnoringInteractionEvents, nonatomic) int ignoringInteractionEvents __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use UIView's userInteractionEnabled property instead")]
		[Export ("ignoringInteractionEvents")]
		int IgnoringInteractionEvents { [Bind ("isIgnoringInteractionEvents")] get; }

		// @property (getter = isIdleTimerDisabled, nonatomic) int idleTimerDisabled;
		[Export ("idleTimerDisabled")]
		int IdleTimerDisabled { [Bind ("isIdleTimerDisabled")] get; set; }

		// -(int)openURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=2.0, deprecated=10.0))) __attribute__((availability(ios_app_extension, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[Unavailable (PlatformName.iOSAppExtension)]
		[Export ("openURL:")]
		int OpenURL (NSUrl url);

		// -(int)canOpenURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("canOpenURL:")]
		int CanOpenURL (NSUrl url);

		// -(void)openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenExternalURLOptionsKey,id> * _Nonnull)options completionHandler:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(ios_app_extension, unavailable)));
		[Unavailable (PlatformName.iOSAppExtension)]
		[iOS (10,0)]
		[Export ("openURL:options:completionHandler:")]
		void OpenURL (NSUrl url, NSDictionary<NSString, NSObject> options, [NullAllowed] Action<int> completion);

		// -(void)sendEvent:(UIEvent * _Nonnull)event;
		[Export ("sendEvent:")]
		void SendEvent (UIEvent @event);

		// @property (readonly, nonatomic) UIWindow * _Nullable keyWindow __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Should not be used for applications that support multiple scenes as it returns a key window across all connected scenes")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Should not be used for applications that support multiple scenes as it returns a key window across all connected scenes")]
		[NullAllowed, Export ("keyWindow")]
		UIWindow KeyWindow { get; }

		// @property (readonly, nonatomic) NSArray<__kindof UIWindow *> * _Nonnull windows;
		[Export ("windows")]
		UIWindow[] Windows { get; }

		// -(int)sendAction:(SEL _Nonnull)action to:(id _Nullable)target from:(id _Nullable)sender forEvent:(UIEvent * _Nullable)event;
		[Export ("sendAction:to:from:forEvent:")]
		int SendAction (Selector action, [NullAllowed] NSObject target, [NullAllowed] NSObject sender, [NullAllowed] UIEvent @event);

		// @property (getter = isNetworkActivityIndicatorVisible, nonatomic) int networkActivityIndicatorVisible __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Provide a custom network activity UI in your app if desired.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Provide a custom network activity UI in your app if desired.")]
		[NoTV]
		[Export ("networkActivityIndicatorVisible")]
		int NetworkActivityIndicatorVisible { [Bind ("isNetworkActivityIndicatorVisible")] get; set; }

		// @property (readonly, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[NoTV]
		[Export ("statusBarStyle")]
		UIStatusBarStyle StatusBarStyle { get; }

		// @property (readonly, getter = isStatusBarHidden, nonatomic) int statusBarHidden __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[NoTV]
		[Export ("statusBarHidden")]
		int StatusBarHidden { [Bind ("isStatusBarHidden")] get; }

		// @property (readonly, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the interfaceOrientation property of the window scene instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the interfaceOrientation property of the window scene instead.")]
		[NoTV]
		[Export ("statusBarOrientation")]
		UIInterfaceOrientation StatusBarOrientation { get; }

		// -(UIInterfaceOrientationMask)supportedInterfaceOrientationsForWindow:(UIWindow * _Nullable)window __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6,0)]
		[Export ("supportedInterfaceOrientationsForWindow:")]
		UIInterfaceOrientationMask SupportedInterfaceOrientationsForWindow ([NullAllowed] UIWindow window);

		// @property (readonly, nonatomic) NSTimeInterval statusBarOrientationAnimationDuration __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Export ("statusBarOrientationAnimationDuration")]
		double StatusBarOrientationAnimationDuration { get; }

		// @property (readonly, nonatomic) CGRect statusBarFrame __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use the statusBarManager property of the window scene instead.")]
		[NoTV]
		[Export ("statusBarFrame")]
		CGRect StatusBarFrame { get; }

		// @property (nonatomic) NSInteger applicationIconBadgeNumber;
		[Export ("applicationIconBadgeNumber")]
		nint ApplicationIconBadgeNumber { get; set; }

		// @property (nonatomic) int applicationSupportsShakeToEdit __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("applicationSupportsShakeToEdit")]
		int ApplicationSupportsShakeToEdit { get; set; }

		// @property (readonly, nonatomic) UIApplicationState applicationState __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("applicationState")]
		UIApplicationState ApplicationState { get; }

		// @property (readonly, nonatomic) NSTimeInterval backgroundTimeRemaining __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("backgroundTimeRemaining")]
		double BackgroundTimeRemaining { get; }

		// -(UIBackgroundTaskIdentifier)beginBackgroundTaskWithExpirationHandler:(void (^ _Nullable)(void))handler __attribute__((availability(ios, introduced=4.0))) __attribute__((objc_requires_super));
		[iOS (4,0)]
		[Export ("beginBackgroundTaskWithExpirationHandler:")]
		[RequiresSuper]
		nuint BeginBackgroundTaskWithExpirationHandler ([NullAllowed] Action handler);

		// -(UIBackgroundTaskIdentifier)beginBackgroundTaskWithName:(NSString * _Nullable)taskName expirationHandler:(void (^ _Nullable)(void))handler __attribute__((availability(ios, introduced=7.0))) __attribute__((objc_requires_super));
		[iOS (7,0)]
		[Export ("beginBackgroundTaskWithName:expirationHandler:")]
		[RequiresSuper]
		nuint BeginBackgroundTaskWithName ([NullAllowed] string taskName, [NullAllowed] Action handler);

		// -(void)endBackgroundTask:(UIBackgroundTaskIdentifier)identifier __attribute__((availability(ios, introduced=4.0))) __attribute__((objc_requires_super));
		[iOS (4,0)]
		[Export ("endBackgroundTask:")]
		[RequiresSuper]
		void EndBackgroundTask (nuint identifier);

		// -(void)setMinimumBackgroundFetchInterval:(NSTimeInterval)minimumBackgroundFetchInterval __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(tvos, introduced=11.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 7, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Introduced (PlatformName.TvOS, 11, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Export ("setMinimumBackgroundFetchInterval:")]
		void SetMinimumBackgroundFetchInterval (double minimumBackgroundFetchInterval);

		// @property (readonly, nonatomic) UIBackgroundRefreshStatus backgroundRefreshStatus __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (7, 0)]
		[Export ("backgroundRefreshStatus")]
		UIBackgroundRefreshStatus BackgroundRefreshStatus { get; }

		// @property (readonly, getter = isProtectedDataAvailable, nonatomic) int protectedDataAvailable __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("protectedDataAvailable")]
		int ProtectedDataAvailable { [Bind ("isProtectedDataAvailable")] get; }

		// @property (readonly, nonatomic) UIUserInterfaceLayoutDirection userInterfaceLayoutDirection __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("userInterfaceLayoutDirection")]
		UIUserInterfaceLayoutDirection UserInterfaceLayoutDirection { get; }

		// @property (readonly, nonatomic) UIContentSizeCategory _Nonnull preferredContentSizeCategory __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("preferredContentSizeCategory")]
		string PreferredContentSizeCategory { get; }

		// @property (readonly, nonatomic) NSSet<UIScene *> * _Nonnull connectedScenes __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("connectedScenes")]
		NSSet<UIScene> ConnectedScenes { get; }

		// @property (readonly, nonatomic) NSSet<UISceneSession *> * _Nonnull openSessions __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("openSessions")]
		NSSet<UISceneSession> OpenSessions { get; }

		// @property (readonly, nonatomic) int supportsMultipleScenes __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("supportsMultipleScenes")]
		int SupportsMultipleScenes { get; }

		// -(void)requestSceneSessionActivation:(UISceneSession * _Nullable)sceneSession userActivity:(NSUserActivity * _Nullable)userActivity options:(UISceneActivationRequestOptions * _Nullable)options errorHandler:(void (^ _Nullable)(NSError * _Nonnull))errorHandler __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("requestSceneSessionActivation:userActivity:options:errorHandler:")]
		void RequestSceneSessionActivation ([NullAllowed] UISceneSession sceneSession, [NullAllowed] NSUserActivity userActivity, [NullAllowed] UISceneActivationRequestOptions options, [NullAllowed] Action<NSError> errorHandler);

		// -(void)requestSceneSessionDestruction:(UISceneSession * _Nonnull)sceneSession options:(UISceneDestructionRequestOptions * _Nullable)options errorHandler:(void (^ _Nullable)(NSError * _Nonnull))errorHandler __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("requestSceneSessionDestruction:options:errorHandler:")]
		void RequestSceneSessionDestruction (UISceneSession sceneSession, [NullAllowed] UISceneDestructionRequestOptions options, [NullAllowed] Action<NSError> errorHandler);

		// -(void)requestSceneSessionRefresh:(UISceneSession * _Nonnull)sceneSession __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("requestSceneSessionRefresh:")]
		void RequestSceneSessionRefresh (UISceneSession sceneSession);
	}

	// @interface UIRemoteNotifications (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIRemoteNotifications
	{
		// -(void)registerForRemoteNotifications __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("registerForRemoteNotifications")]
		void RegisterForRemoteNotifications ();

		// -(void)unregisterForRemoteNotifications __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("unregisterForRemoteNotifications")]
		void UnregisterForRemoteNotifications ();

		// @property (readonly, getter = isRegisteredForRemoteNotifications, nonatomic) int registeredForRemoteNotifications __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("registeredForRemoteNotifications")]
		int RegisteredForRemoteNotifications { [Bind ("isRegisteredForRemoteNotifications")] get; }

		// -(void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types __attribute__((availability(ios, introduced=3.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Use -[UIApplication registerForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Use -[UIApplication registerForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]")]
		[NoTV]
		[Export ("registerForRemoteNotificationTypes:")]
		void RegisterForRemoteNotificationTypes (UIRemoteNotificationType types);

		// -(UIRemoteNotificationType)enabledRemoteNotificationTypes __attribute__((availability(ios, introduced=3.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Use -[UIApplication isRegisteredForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] to retrieve user-enabled remote notification and user notification settings")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Use -[UIApplication isRegisteredForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] to retrieve user-enabled remote notification and user notification settings")]
		[NoTV]
		[Export ("enabledRemoteNotificationTypes")]
		[Verify (MethodToProperty)]
		UIRemoteNotificationType EnabledRemoteNotificationTypes { get; }
	}

	// @interface UILocalNotifications (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UILocalNotifications
	{
		// -(void)presentLocalNotificationNow:(UILocalNotification * _Nonnull)notification __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]")]
		[NoTV]
		[Export ("presentLocalNotificationNow:")]
		void PresentLocalNotificationNow (UILocalNotification notification);

		// -(void)scheduleLocalNotification:(UILocalNotification * _Nonnull)notification __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]")]
		[NoTV]
		[Export ("scheduleLocalNotification:")]
		void ScheduleLocalNotification (UILocalNotification notification);

		// -(void)cancelLocalNotification:(UILocalNotification * _Nonnull)notification __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter removePendingNotificationRequestsWithIdentifiers:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter removePendingNotificationRequestsWithIdentifiers:]")]
		[NoTV]
		[Export ("cancelLocalNotification:")]
		void CancelLocalNotification (UILocalNotification notification);

		// -(void)cancelAllLocalNotifications __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter removeAllPendingNotificationRequests]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter removeAllPendingNotificationRequests]")]
		[NoTV]
		[Export ("cancelAllLocalNotifications")]
		void CancelAllLocalNotifications ();

		// @property (copy, nonatomic) NSArray<UILocalNotification *> * _Nullable scheduledLocalNotifications __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter getPendingNotificationRequestsWithCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter getPendingNotificationRequestsWithCompletionHandler:]")]
		[NoTV]
		[NullAllowed, Export ("scheduledLocalNotifications", ArgumentSemantic.Copy)]
		UILocalNotification[] ScheduledLocalNotifications { get; set; }
	}

	// @interface UIUserNotificationSettings (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIUserNotificationSettings
	{
		// -(void)registerUserNotificationSettings:(UIUserNotificationSettings * _Nonnull)notificationSettings __attribute__((availability(ios, introduced=8.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:] and -[UNUserNotificationCenter setNotificationCategories:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:] and -[UNUserNotificationCenter setNotificationCategories:]")]
		[NoTV]
		[Export ("registerUserNotificationSettings:")]
		void RegisterUserNotificationSettings (UIUserNotificationSettings notificationSettings);

		// @property (readonly, nonatomic) UIUserNotificationSettings * _Nullable currentUserNotificationSettings __attribute__((availability(ios, introduced=8.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] and -[UNUserNotificationCenter getNotificationCategoriesWithCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] and -[UNUserNotificationCenter getNotificationCategoriesWithCompletionHandler:]")]
		[NoTV]
		[NullAllowed, Export ("currentUserNotificationSettings")]
		UIUserNotificationSettings CurrentUserNotificationSettings { get; }
	}

	// @interface UIRemoteControlEvents (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIRemoteControlEvents
	{
		// -(void)beginReceivingRemoteControlEvents __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("beginReceivingRemoteControlEvents")]
		void BeginReceivingRemoteControlEvents ();

		// -(void)endReceivingRemoteControlEvents __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("endReceivingRemoteControlEvents")]
		void EndReceivingRemoteControlEvents ();
	}

	// @interface UINewsstand (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UINewsstand
	{
		// -(void)setNewsstandIconImage:(UIImage * _Nullable)image __attribute__((availability(ios, introduced=5.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Newsstand apps now behave like normal apps on SpringBoard")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Newsstand apps now behave like normal apps on SpringBoard")]
		[NoTV]
		[Export ("setNewsstandIconImage:")]
		void SetNewsstandIconImage ([NullAllowed] UIImage image);
	}

	// @interface UIShortcutItems (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIShortcutItems
	{
		// @property (copy, nonatomic) NSArray<UIApplicationShortcutItem *> * _Nullable shortcutItems __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[NullAllowed, Export ("shortcutItems", ArgumentSemantic.Copy)]
		UIApplicationShortcutItem[] ShortcutItems { get; set; }
	}

	// @interface UIAlternateApplicationIcons (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIAlternateApplicationIcons
	{
		// @property (readonly, nonatomic) int supportsAlternateIcons __attribute__((availability(macos_app_extension, unavailable))) __attribute__((availability(ios_app_extension, unavailable))) __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(tvos, introduced=10.2)));
		[Unavailable (PlatformName.MacOSXAppExtension)]
		[Unavailable (PlatformName.iOSAppExtension)]
		[TV (10, 2), iOS (10, 3)]
		[Export ("supportsAlternateIcons")]
		int SupportsAlternateIcons { get; }

		// -(void)setAlternateIconName:(NSString * _Nullable)alternateIconName completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler __attribute__((availability(macos_app_extension, unavailable))) __attribute__((availability(ios_app_extension, unavailable))) __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(tvos, introduced=10.2)));
		[Unavailable (PlatformName.MacOSXAppExtension)]
		[Unavailable (PlatformName.iOSAppExtension)]
		[TV (10,2), iOS (10,3)]
		[Export ("setAlternateIconName:completionHandler:")]
		void SetAlternateIconName ([NullAllowed] string alternateIconName, [NullAllowed] Action<NSError> completionHandler);

		// @property (readonly, nonatomic) NSString * _Nullable alternateIconName __attribute__((availability(macos_app_extension, unavailable))) __attribute__((availability(ios_app_extension, unavailable))) __attribute__((availability(ios, introduced=10.3))) __attribute__((availability(tvos, introduced=10.2)));
		[Unavailable (PlatformName.MacOSXAppExtension)]
		[Unavailable (PlatformName.iOSAppExtension)]
		[TV (10, 2), iOS (10, 3)]
		[NullAllowed, Export ("alternateIconName")]
		string AlternateIconName { get; }
	}

	// @interface UIStateRestoration (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIStateRestoration
	{
		// -(void)extendStateRestoration __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("extendStateRestoration")]
		void ExtendStateRestoration ();

		// -(void)completeStateRestoration __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("completeStateRestoration")]
		void CompleteStateRestoration ();

		// -(void)ignoreSnapshotOnNextApplicationLaunch __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("ignoreSnapshotOnNextApplicationLaunch")]
		void IgnoreSnapshotOnNextApplicationLaunch ();

		// +(void)registerObjectForStateRestoration:(id<UIStateRestoring> _Nonnull)object restorationIdentifier:(NSString * _Nonnull)restorationIdentifier __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Static]
		[Export ("registerObjectForStateRestoration:restorationIdentifier:")]
		void RegisterObjectForStateRestoration (UIStateRestoring @object, string restorationIdentifier);
	}

	// @protocol UIApplicationDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIApplicationDelegate
	{
		// @optional -(void)applicationDidFinishLaunching:(UIApplication * _Nonnull)application;
		[Export ("applicationDidFinishLaunching:")]
		void ApplicationDidFinishLaunching (UIApplication application);

		// @optional -(int)application:(UIApplication * _Nonnull)application willFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey,id> * _Nullable)launchOptions __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:willFinishLaunchingWithOptions:")]
		int Application (UIApplication application, [NullAllowed] NSDictionary<NSString, NSObject> launchOptions);

		// @optional -(int)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey,id> * _Nullable)launchOptions __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("application:didFinishLaunchingWithOptions:")]
		int Application (UIApplication application, [NullAllowed] NSDictionary<NSString, NSObject> launchOptions);

		// @optional -(void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
		[Export ("applicationDidBecomeActive:")]
		void ApplicationDidBecomeActive (UIApplication application);

		// @optional -(void)applicationWillResignActive:(UIApplication * _Nonnull)application;
		[Export ("applicationWillResignActive:")]
		void ApplicationWillResignActive (UIApplication application);

		// @optional -(int)application:(UIApplication * _Nonnull)application handleOpenURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Export ("application:handleOpenURL:")]
		int Application (UIApplication application, NSUrl url);

		// @optional -(int)application:(UIApplication * _Nonnull)application openURL:(NSURL * _Nonnull)url sourceApplication:(NSString * _Nullable)sourceApplication annotation:(id _Nonnull)annotation __attribute__((availability(ios, introduced=4.2, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 2)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Export ("application:openURL:sourceApplication:annotation:")]
		int Application (UIApplication application, NSUrl url, [NullAllowed] string sourceApplication, NSObject annotation);

		// @optional -(int)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> * _Nonnull)options __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("application:openURL:options:")]
		int Application (UIApplication app, NSUrl url, NSDictionary<NSString, NSObject> options);

		// @optional -(void)applicationDidReceiveMemoryWarning:(UIApplication * _Nonnull)application;
		[Export ("applicationDidReceiveMemoryWarning:")]
		void ApplicationDidReceiveMemoryWarning (UIApplication application);

		// @optional -(void)applicationWillTerminate:(UIApplication * _Nonnull)application;
		[Export ("applicationWillTerminate:")]
		void ApplicationWillTerminate (UIApplication application);

		// @optional -(void)applicationSignificantTimeChange:(UIApplication * _Nonnull)application;
		[Export ("applicationSignificantTimeChange:")]
		void ApplicationSignificantTimeChange (UIApplication application);

		// @optional -(void)application:(UIApplication * _Nonnull)application willChangeStatusBarOrientation:(UIInterfaceOrientation)newStatusBarOrientation duration:(NSTimeInterval)duration __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Export ("application:willChangeStatusBarOrientation:duration:")]
		void Application (UIApplication application, UIInterfaceOrientation newStatusBarOrientation, double duration);

		// @optional -(void)application:(UIApplication * _Nonnull)application didChangeStatusBarOrientation:(UIInterfaceOrientation)oldStatusBarOrientation __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Export ("application:didChangeStatusBarOrientation:")]
		void Application (UIApplication application, UIInterfaceOrientation oldStatusBarOrientation);

		// @optional -(void)application:(UIApplication * _Nonnull)application willChangeStatusBarFrame:(CGRect)newStatusBarFrame __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Export ("application:willChangeStatusBarFrame:")]
		void Application (UIApplication application, CGRect newStatusBarFrame);

		// @optional -(void)application:(UIApplication * _Nonnull)application didChangeStatusBarFrame:(CGRect)oldStatusBarFrame __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Export ("application:didChangeStatusBarFrame:")]
		void Application (UIApplication application, CGRect oldStatusBarFrame);

		// @optional -(void)application:(UIApplication * _Nonnull)application didRegisterUserNotificationSettings:(UIUserNotificationSettings * _Nonnull)notificationSettings __attribute__((availability(ios, introduced=8.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]")]
		[NoTV]
		[Export ("application:didRegisterUserNotificationSettings:")]
		void Application (UIApplication application, UIUserNotificationSettings notificationSettings);

		// @optional -(void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("application:didRegisterForRemoteNotificationsWithDeviceToken:")]
		void Application (UIApplication application, NSData deviceToken);

		// @optional -(void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("application:didFailToRegisterForRemoteNotificationsWithError:")]
		void Application (UIApplication application, NSError error);

		// @optional -(void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo __attribute__((availability(ios, introduced=3.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:] for user visible notifications and -[UIApplicationDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:] for silent remote notifications")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:] for user visible notifications and -[UIApplicationDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:] for silent remote notifications")]
		[Export ("application:didReceiveRemoteNotification:")]
		void Application (UIApplication application, NSDictionary userInfo);

		// @optional -(void)application:(UIApplication * _Nonnull)application didReceiveLocalNotification:(UILocalNotification * _Nonnull)notification __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Export ("application:didReceiveLocalNotification:")]
		void Application (UIApplication application, UILocalNotification notification);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleActionWithIdentifier:(NSString * _Nullable)identifier forLocalNotification:(UILocalNotification * _Nonnull)notification completionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(ios, introduced=8.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Export ("application:handleActionWithIdentifier:forLocalNotification:completionHandler:")]
		void Application (UIApplication application, [NullAllowed] string identifier, UILocalNotification notification, Action completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleActionWithIdentifier:(NSString * _Nullable)identifier forRemoteNotification:(NSDictionary * _Nonnull)userInfo withResponseInfo:(NSDictionary * _Nonnull)responseInfo completionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(ios, introduced=9.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 9, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Export ("application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:")]
		void Application (UIApplication application, [NullAllowed] string identifier, NSDictionary userInfo, NSDictionary responseInfo, Action completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleActionWithIdentifier:(NSString * _Nullable)identifier forRemoteNotification:(NSDictionary * _Nonnull)userInfo completionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(ios, introduced=8.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Export ("application:handleActionWithIdentifier:forRemoteNotification:completionHandler:")]
		void Application (UIApplication application, [NullAllowed] string identifier, NSDictionary userInfo, Action completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleActionWithIdentifier:(NSString * _Nullable)identifier forLocalNotification:(UILocalNotification * _Nonnull)notification withResponseInfo:(NSDictionary * _Nonnull)responseInfo completionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(ios, introduced=9.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 9, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Export ("application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:")]
		void Application (UIApplication application, [NullAllowed] string identifier, UILocalNotification notification, NSDictionary responseInfo, Action completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("application:didReceiveRemoteNotification:fetchCompletionHandler:")]
		void Application (UIApplication application, NSDictionary userInfo, Action<UIBackgroundFetchResult> completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application performFetchWithCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(tvos, introduced=11.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 7, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Introduced (PlatformName.TvOS, 11, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Use a BGAppRefreshTask in the BackgroundTasks framework instead")]
		[Export ("application:performFetchWithCompletionHandler:")]
		void Application (UIApplication application, Action<UIBackgroundFetchResult> completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application performActionForShortcutItem:(UIApplicationShortcutItem * _Nonnull)shortcutItem completionHandler:(void (^ _Nonnull)(int))completionHandler __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9,0)]
		[Export ("application:performActionForShortcutItem:completionHandler:")]
		void Application (UIApplication application, UIApplicationShortcutItem shortcutItem, Action<int> completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleEventsForBackgroundURLSession:(NSString * _Nonnull)identifier completionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("application:handleEventsForBackgroundURLSession:completionHandler:")]
		void Application (UIApplication application, string identifier, Action completionHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleWatchKitExtensionRequest:(NSDictionary * _Nullable)userInfo reply:(void (^ _Nonnull)(NSDictionary * _Nullable))reply __attribute__((availability(ios, introduced=8.2)));
		[iOS (8,2)]
		[Export ("application:handleWatchKitExtensionRequest:reply:")]
		void Application (UIApplication application, [NullAllowed] NSDictionary userInfo, Action<NSDictionary> reply);

		// @optional -(void)applicationShouldRequestHealthAuthorization:(UIApplication * _Nonnull)application __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("applicationShouldRequestHealthAuthorization:")]
		void ApplicationShouldRequestHealthAuthorization (UIApplication application);

		// @optional -(void)application:(UIApplication * _Nonnull)application handleIntent:(INIntent * _Nonnull)intent completionHandler:(void (^ _Nonnull)(INIntentResponse * _Nonnull))completionHandler __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("application:handleIntent:completionHandler:")]
		void Application (UIApplication application, INIntent intent, Action<INIntentResponse> completionHandler);

		// @optional -(void)applicationDidEnterBackground:(UIApplication * _Nonnull)application __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("applicationDidEnterBackground:")]
		void ApplicationDidEnterBackground (UIApplication application);

		// @optional -(void)applicationWillEnterForeground:(UIApplication * _Nonnull)application __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("applicationWillEnterForeground:")]
		void ApplicationWillEnterForeground (UIApplication application);

		// @optional -(void)applicationProtectedDataWillBecomeUnavailable:(UIApplication * _Nonnull)application __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("applicationProtectedDataWillBecomeUnavailable:")]
		void ApplicationProtectedDataWillBecomeUnavailable (UIApplication application);

		// @optional -(void)applicationProtectedDataDidBecomeAvailable:(UIApplication * _Nonnull)application __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("applicationProtectedDataDidBecomeAvailable:")]
		void ApplicationProtectedDataDidBecomeAvailable (UIApplication application);

		// @optional @property (nonatomic, strong) UIWindow * _Nullable window __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("window", ArgumentSemantic.Strong)]
		UIWindow Window { get; set; }

		// @optional -(UIInterfaceOrientationMask)application:(UIApplication * _Nonnull)application supportedInterfaceOrientationsForWindow:(UIWindow * _Nullable)window __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6,0)]
		[Export ("application:supportedInterfaceOrientationsForWindow:")]
		UIInterfaceOrientationMask Application (UIApplication application, [NullAllowed] UIWindow window);

		// @optional -(int)application:(UIApplication * _Nonnull)application shouldAllowExtensionPointIdentifier:(UIApplicationExtensionPointIdentifier _Nonnull)extensionPointIdentifier __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("application:shouldAllowExtensionPointIdentifier:")]
		int Application (UIApplication application, string extensionPointIdentifier);

		// @optional -(UIViewController * _Nullable)application:(UIApplication * _Nonnull)application viewControllerWithRestorationIdentifierPath:(NSArray<NSString *> * _Nonnull)identifierComponents coder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:viewControllerWithRestorationIdentifierPath:coder:")]
		[return: NullAllowed]
		UIViewController Application (UIApplication application, string[] identifierComponents, NSCoder coder);

		// @optional -(int)application:(UIApplication * _Nonnull)application shouldSaveApplicationState:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:shouldSaveApplicationState:")]
		int Application (UIApplication application, NSCoder coder);

		// @optional -(int)application:(UIApplication * _Nonnull)application shouldRestoreApplicationState:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:shouldRestoreApplicationState:")]
		int Application (UIApplication application, NSCoder coder);

		// @optional -(void)application:(UIApplication * _Nonnull)application willEncodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:willEncodeRestorableStateWithCoder:")]
		void Application (UIApplication application, NSCoder coder);

		// @optional -(void)application:(UIApplication * _Nonnull)application didDecodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("application:didDecodeRestorableStateWithCoder:")]
		void Application (UIApplication application, NSCoder coder);

		// @optional -(int)application:(UIApplication * _Nonnull)application willContinueUserActivityWithType:(NSString * _Nonnull)userActivityType __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("application:willContinueUserActivityWithType:")]
		int Application (UIApplication application, string userActivityType);

		// @optional -(int)application:(UIApplication * _Nonnull)application continueUserActivity:(NSUserActivity * _Nonnull)userActivity restorationHandler:(void (^ _Nonnull)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("application:continueUserActivity:restorationHandler:")]
		int Application (UIApplication application, NSUserActivity userActivity, Action<NSArray<UIUserActivityRestoring>> restorationHandler);

		// @optional -(void)application:(UIApplication * _Nonnull)application didFailToContinueUserActivityWithType:(NSString * _Nonnull)userActivityType error:(NSError * _Nonnull)error __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("application:didFailToContinueUserActivityWithType:error:")]
		void Application (UIApplication application, string userActivityType, NSError error);

		// @optional -(void)application:(UIApplication * _Nonnull)application didUpdateUserActivity:(NSUserActivity * _Nonnull)userActivity __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("application:didUpdateUserActivity:")]
		void Application (UIApplication application, NSUserActivity userActivity);

		// @optional -(void)application:(UIApplication * _Nonnull)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata * _Nonnull)cloudKitShareMetadata __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("application:userDidAcceptCloudKitShareWithMetadata:")]
		void Application (UIApplication application, CKShareMetadata cloudKitShareMetadata);

		// @optional -(UISceneConfiguration * _Nonnull)application:(UIApplication * _Nonnull)application configurationForConnectingSceneSession:(UISceneSession * _Nonnull)connectingSceneSession options:(UISceneConnectionOptions * _Nonnull)options __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("application:configurationForConnectingSceneSession:options:")]
		UISceneConfiguration Application (UIApplication application, UISceneSession connectingSceneSession, UISceneConnectionOptions options);

		// @optional -(void)application:(UIApplication * _Nonnull)application didDiscardSceneSessions:(NSSet<UISceneSession *> * _Nonnull)sceneSessions __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("application:didDiscardSceneSessions:")]
		void Application (UIApplication application, NSSet<UISceneSession> sceneSessions);
	}

	// @interface UIApplicationDeprecated (UIApplication)
	[Category]
	[BaseType (typeof(UIApplication))]
	interface UIApplication_UIApplicationDeprecated
	{
		// @property (getter = isProximitySensingEnabled, nonatomic) int proximitySensingEnabled __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("proximitySensingEnabled")]
		int ProximitySensingEnabled { [Bind ("isProximitySensingEnabled")] get; set; }

		// -(void)setStatusBarHidden:(int)hidden animated:(int)animated __attribute__((availability(ios, introduced=2.0, deprecated=3.2))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[Deprecated (PlatformName.iOS, 3, 2, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[NoTV]
		[Export ("setStatusBarHidden:animated:")]
		void SetStatusBarHidden (int hidden, int animated);

		// @property (readwrite, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later")]
		[NoTV]
		[Export ("statusBarOrientation", ArgumentSemantic.Assign)]
		UIInterfaceOrientation StatusBarOrientation { get; set; }

		// -(void)setStatusBarOrientation:(UIInterfaceOrientation)interfaceOrientation animated:(int)animated __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later")]
		[NoTV]
		[Export ("setStatusBarOrientation:animated:")]
		void SetStatusBarOrientation (UIInterfaceOrientation interfaceOrientation, int animated);

		// @property (readwrite, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use -[UIViewController preferredStatusBarStyle]")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use -[UIViewController preferredStatusBarStyle]")]
		[NoTV]
		[Export ("statusBarStyle", ArgumentSemantic.Assign)]
		UIStatusBarStyle StatusBarStyle { get; set; }

		// -(void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle animated:(int)animated __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use -[UIViewController preferredStatusBarStyle]")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use -[UIViewController preferredStatusBarStyle]")]
		[NoTV]
		[Export ("setStatusBarStyle:animated:")]
		void SetStatusBarStyle (UIStatusBarStyle statusBarStyle, int animated);

		// @property (getter = isStatusBarHidden, readwrite, nonatomic) int statusBarHidden __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[NoTV]
		[Export ("statusBarHidden")]
		int StatusBarHidden { [Bind ("isStatusBarHidden")] get; set; }

		// -(void)setStatusBarHidden:(int)hidden withAnimation:(UIStatusBarAnimation)animation __attribute__((availability(ios, introduced=3.2, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Use -[UIViewController prefersStatusBarHidden]")]
		[NoTV]
		[Export ("setStatusBarHidden:withAnimation:")]
		void SetStatusBarHidden (int hidden, UIStatusBarAnimation animation);

		// -(int)setKeepAliveTimeout:(NSTimeInterval)timeout handler:(void (^ _Nullable)(void))keepAliveHandler __attribute__((availability(ios, introduced=4.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Please use PushKit for VoIP applications instead of calling this method")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Please use PushKit for VoIP applications instead of calling this method")]
		[NoTV]
		[Export ("setKeepAliveTimeout:handler:")]
		int SetKeepAliveTimeout (double timeout, [NullAllowed] Action keepAliveHandler);

		// -(void)clearKeepAliveTimeout __attribute__((availability(ios, introduced=4.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Please use PushKit for VoIP applications instead of calling this method")]
		[Deprecated (PlatformName.iOS, 9, 0, message: "Please use PushKit for VoIP applications instead of calling this method")]
		[NoTV]
		[Export ("clearKeepAliveTimeout")]
		void ClearKeepAliveTimeout ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSRunLoopMode _Nonnull UITrackingRunLoopMode __attribute__((visibility("default")));
		[Field ("UITrackingRunLoopMode", "__Internal")]
		NSString UITrackingRunLoopMode { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidEnterBackgroundNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIApplicationDidEnterBackgroundNotification", "__Internal")]
		NSString UIApplicationDidEnterBackgroundNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationWillEnterForegroundNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIApplicationWillEnterForegroundNotification", "__Internal")]
		NSString UIApplicationWillEnterForegroundNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidFinishLaunchingNotification __attribute__((visibility("default")));
		[Field ("UIApplicationDidFinishLaunchingNotification", "__Internal")]
		NSString UIApplicationDidFinishLaunchingNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidBecomeActiveNotification __attribute__((visibility("default")));
		[Field ("UIApplicationDidBecomeActiveNotification", "__Internal")]
		NSString UIApplicationDidBecomeActiveNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationWillResignActiveNotification __attribute__((visibility("default")));
		[Field ("UIApplicationWillResignActiveNotification", "__Internal")]
		NSString UIApplicationWillResignActiveNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidReceiveMemoryWarningNotification __attribute__((visibility("default")));
		[Field ("UIApplicationDidReceiveMemoryWarningNotification", "__Internal")]
		NSString UIApplicationDidReceiveMemoryWarningNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationWillTerminateNotification __attribute__((visibility("default")));
		[Field ("UIApplicationWillTerminateNotification", "__Internal")]
		NSString UIApplicationWillTerminateNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationSignificantTimeChangeNotification __attribute__((visibility("default")));
		[Field ("UIApplicationSignificantTimeChangeNotification", "__Internal")]
		NSString UIApplicationSignificantTimeChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationWillChangeStatusBarOrientationNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationWillChangeStatusBarOrientationNotification", "__Internal")]
		NSString UIApplicationWillChangeStatusBarOrientationNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidChangeStatusBarOrientationNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationDidChangeStatusBarOrientationNotification", "__Internal")]
		NSString UIApplicationDidChangeStatusBarOrientationNotification { get; }

		// extern NSString *const _Nonnull UIApplicationStatusBarOrientationUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationStatusBarOrientationUserInfoKey", "__Internal")]
		NSString UIApplicationStatusBarOrientationUserInfoKey { get; }

		// extern const NSNotificationName _Nonnull UIApplicationWillChangeStatusBarFrameNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationWillChangeStatusBarFrameNotification", "__Internal")]
		NSString UIApplicationWillChangeStatusBarFrameNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationDidChangeStatusBarFrameNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationDidChangeStatusBarFrameNotification", "__Internal")]
		NSString UIApplicationDidChangeStatusBarFrameNotification { get; }

		// extern NSString *const _Nonnull UIApplicationStatusBarFrameUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=2.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use viewWillTransitionToSize:withTransitionCoordinator: instead.")]
		[NoTV]
		[Field ("UIApplicationStatusBarFrameUserInfoKey", "__Internal")]
		NSString UIApplicationStatusBarFrameUserInfoKey { get; }

		// extern const NSNotificationName _Nonnull UIApplicationBackgroundRefreshStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (7, 0)]
		[Field ("UIApplicationBackgroundRefreshStatusDidChangeNotification", "__Internal")]
		NSString UIApplicationBackgroundRefreshStatusDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIApplicationProtectedDataWillBecomeUnavailable __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIApplicationProtectedDataWillBecomeUnavailable", "__Internal")]
		NSString UIApplicationProtectedDataWillBecomeUnavailable { get; }

		// extern const NSNotificationName _Nonnull UIApplicationProtectedDataDidBecomeAvailable __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIApplicationProtectedDataDidBecomeAvailable", "__Internal")]
		NSString UIApplicationProtectedDataDidBecomeAvailable { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsURLKey __attribute__((visibility("default"))) __attribute__((swift_name("url"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UIApplicationLaunchOptionsURLKey", "__Internal")]
		NSString UIApplicationLaunchOptionsURLKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsSourceApplicationKey __attribute__((visibility("default"))) __attribute__((swift_name("sourceApplication"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UIApplicationLaunchOptionsSourceApplicationKey", "__Internal")]
		NSString UIApplicationLaunchOptionsSourceApplicationKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsRemoteNotificationKey __attribute__((visibility("default"))) __attribute__((swift_name("remoteNotification"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UIApplicationLaunchOptionsRemoteNotificationKey", "__Internal")]
		NSString UIApplicationLaunchOptionsRemoteNotificationKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsLocalNotificationKey __attribute__((visibility("default"))) __attribute__((swift_name("localNotification"))) __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]")]
		[NoTV]
		[Field ("UIApplicationLaunchOptionsLocalNotificationKey", "__Internal")]
		NSString UIApplicationLaunchOptionsLocalNotificationKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsAnnotationKey __attribute__((visibility("default"))) __attribute__((swift_name("annotation"))) __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Field ("UIApplicationLaunchOptionsAnnotationKey", "__Internal")]
		NSString UIApplicationLaunchOptionsAnnotationKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsLocationKey __attribute__((visibility("default"))) __attribute__((swift_name("location"))) __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Field ("UIApplicationLaunchOptionsLocationKey", "__Internal")]
		NSString UIApplicationLaunchOptionsLocationKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsNewsstandDownloadsKey __attribute__((visibility("default"))) __attribute__((swift_name("newsstandDownloads"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Field ("UIApplicationLaunchOptionsNewsstandDownloadsKey", "__Internal")]
		NSString UIApplicationLaunchOptionsNewsstandDownloadsKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsBluetoothCentralsKey __attribute__((visibility("default"))) __attribute__((swift_name("bluetoothCentrals"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIApplicationLaunchOptionsBluetoothCentralsKey", "__Internal")]
		NSString UIApplicationLaunchOptionsBluetoothCentralsKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsBluetoothPeripheralsKey __attribute__((visibility("default"))) __attribute__((swift_name("bluetoothPeripherals"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIApplicationLaunchOptionsBluetoothPeripheralsKey", "__Internal")]
		NSString UIApplicationLaunchOptionsBluetoothPeripheralsKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsShortcutItemKey __attribute__((visibility("default"))) __attribute__((swift_name("shortcutItem"))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[Field ("UIApplicationLaunchOptionsShortcutItemKey", "__Internal")]
		NSString UIApplicationLaunchOptionsShortcutItemKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsUserActivityDictionaryKey __attribute__((visibility("default"))) __attribute__((swift_name("userActivityDictionary"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIApplicationLaunchOptionsUserActivityDictionaryKey", "__Internal")]
		NSString UIApplicationLaunchOptionsUserActivityDictionaryKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsUserActivityTypeKey __attribute__((visibility("default"))) __attribute__((swift_name("userActivityType"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIApplicationLaunchOptionsUserActivityTypeKey", "__Internal")]
		NSString UIApplicationLaunchOptionsUserActivityTypeKey { get; }

		// extern const UIApplicationLaunchOptionsKey _Nonnull UIApplicationLaunchOptionsCloudKitShareMetadataKey __attribute__((visibility("default"))) __attribute__((swift_name("cloudKitShareMetadata"))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (10, 0)]
		[Field ("UIApplicationLaunchOptionsCloudKitShareMetadataKey", "__Internal")]
		NSString UIApplicationLaunchOptionsCloudKitShareMetadataKey { get; }

		// extern NSString *const _Nonnull UIApplicationOpenSettingsURLString __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIApplicationOpenSettingsURLString", "__Internal")]
		NSString UIApplicationOpenSettingsURLString { get; }

		// extern const UIApplicationOpenURLOptionsKey _Nonnull UIApplicationOpenURLOptionsSourceApplicationKey __attribute__((visibility("default"))) __attribute__((swift_name("sourceApplication"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIApplicationOpenURLOptionsSourceApplicationKey", "__Internal")]
		NSString UIApplicationOpenURLOptionsSourceApplicationKey { get; }

		// extern const UIApplicationOpenURLOptionsKey _Nonnull UIApplicationOpenURLOptionsAnnotationKey __attribute__((visibility("default"))) __attribute__((swift_name("annotation"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIApplicationOpenURLOptionsAnnotationKey", "__Internal")]
		NSString UIApplicationOpenURLOptionsAnnotationKey { get; }

		// extern const UIApplicationOpenURLOptionsKey _Nonnull UIApplicationOpenURLOptionsOpenInPlaceKey __attribute__((visibility("default"))) __attribute__((swift_name("openInPlace"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIApplicationOpenURLOptionsOpenInPlaceKey", "__Internal")]
		NSString UIApplicationOpenURLOptionsOpenInPlaceKey { get; }

		// extern const NSNotificationName _Nonnull UIApplicationUserDidTakeScreenshotNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIApplicationUserDidTakeScreenshotNotification", "__Internal")]
		NSString UIApplicationUserDidTakeScreenshotNotification { get; }

		// extern const UIApplicationExtensionPointIdentifier _Nonnull UIApplicationKeyboardExtensionPointIdentifier __attribute__((visibility("default"))) __attribute__((swift_name("keyboard"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIApplicationKeyboardExtensionPointIdentifier", "__Internal")]
		NSString UIApplicationKeyboardExtensionPointIdentifier { get; }

		// extern const UIApplicationOpenExternalURLOptionsKey _Nonnull UIApplicationOpenURLOptionUniversalLinksOnly __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UIApplicationOpenURLOptionUniversalLinksOnly", "__Internal")]
		NSString UIApplicationOpenURLOptionUniversalLinksOnly { get; }

		// extern NSString *const _Nonnull UIStateRestorationViewControllerStoryboardKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIStateRestorationViewControllerStoryboardKey", "__Internal")]
		NSString UIStateRestorationViewControllerStoryboardKey { get; }

		// extern NSString *const _Nonnull UIApplicationStateRestorationBundleVersionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIApplicationStateRestorationBundleVersionKey", "__Internal")]
		NSString UIApplicationStateRestorationBundleVersionKey { get; }

		// extern NSString *const _Nonnull UIApplicationStateRestorationUserInterfaceIdiomKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIApplicationStateRestorationUserInterfaceIdiomKey", "__Internal")]
		NSString UIApplicationStateRestorationUserInterfaceIdiomKey { get; }

		// extern NSString *const _Nonnull UIApplicationStateRestorationTimestampKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIApplicationStateRestorationTimestampKey", "__Internal")]
		NSString UIApplicationStateRestorationTimestampKey { get; }

		// extern NSString *const _Nonnull UIApplicationStateRestorationSystemVersionKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UIApplicationStateRestorationSystemVersionKey", "__Internal")]
		NSString UIApplicationStateRestorationSystemVersionKey { get; }
	}

	// @protocol UIViewControllerRestoration
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIViewControllerRestoration
	{
		// @required +(UIViewController * _Nullable)viewControllerWithRestorationIdentifierPath:(NSArray<NSString *> * _Nonnull)identifierComponents coder:(NSCoder * _Nonnull)coder;
		[Static, Abstract]
		[Export ("viewControllerWithRestorationIdentifierPath:coder:")]
		[return: NullAllowed]
		UIViewController Coder (string[] identifierComponents, NSCoder coder);
	}

	// @protocol UIDataSourceModelAssociation
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIDataSourceModelAssociation
	{
		// @required -(NSString * _Nullable)modelIdentifierForElementAtIndexPath:(NSIndexPath * _Nonnull)idx inView:(UIView * _Nonnull)view;
		[Abstract]
		[Export ("modelIdentifierForElementAtIndexPath:inView:")]
		[return: NullAllowed]
		string ModelIdentifierForElementAtIndexPath (NSIndexPath idx, UIView view);

		// @required -(NSIndexPath * _Nullable)indexPathForElementWithModelIdentifier:(NSString * _Nonnull)identifier inView:(UIView * _Nonnull)view;
		[Abstract]
		[Export ("indexPathForElementWithModelIdentifier:inView:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForElementWithModelIdentifier (string identifier, UIView view);
	}

	// @protocol UIStateRestoring <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIStateRestoring
	{
		// @optional @property (readonly, nonatomic) id<UIStateRestoring> _Nullable restorationParent;
		[NullAllowed, Export ("restorationParent")]
		UIStateRestoring RestorationParent { get; }

		// @optional @property (readonly, nonatomic) Class<UIObjectRestoration> _Nullable objectRestorationClass;
		[NullAllowed, Export ("objectRestorationClass")]
		UIObjectRestoration ObjectRestorationClass { get; }

		// @optional -(void)encodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
		[Export ("encodeRestorableStateWithCoder:")]
		void EncodeRestorableStateWithCoder (NSCoder coder);

		// @optional -(void)decodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder;
		[Export ("decodeRestorableStateWithCoder:")]
		void DecodeRestorableStateWithCoder (NSCoder coder);

		// @optional -(void)applicationFinishedRestoringState;
		[Export ("applicationFinishedRestoringState")]
		void ApplicationFinishedRestoringState ();
	}

	// @protocol UIObjectRestoration
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIObjectRestoration
	{
		// @required +(id<UIStateRestoring> _Nullable)objectWithRestorationIdentifierPath:(NSArray<NSString *> * _Nonnull)identifierComponents coder:(NSCoder * _Nonnull)coder;
		[Static, Abstract]
		[Export ("objectWithRestorationIdentifierPath:coder:")]
		[return: NullAllowed]
		UIStateRestoring Coder (string[] identifierComponents, NSCoder coder);
	}

	// @protocol UIContentContainer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIContentContainer
	{
		// @required @property (readonly, nonatomic) CGSize preferredContentSize __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Abstract]
		[Export ("preferredContentSize")]
		CGSize PreferredContentSize { get; }

		// @required -(void)preferredContentSizeDidChangeForChildContentContainer:(id<UIContentContainer> _Nonnull)container __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("preferredContentSizeDidChangeForChildContentContainer:")]
		void PreferredContentSizeDidChangeForChildContentContainer (UIContentContainer container);

		// @required -(void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id<UIContentContainer> _Nonnull)container __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("systemLayoutFittingSizeDidChangeForChildContentContainer:")]
		void SystemLayoutFittingSizeDidChangeForChildContentContainer (UIContentContainer container);

		// @required -(CGSize)sizeForChildContentContainer:(id<UIContentContainer> _Nonnull)container withParentContainerSize:(CGSize)parentSize __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("sizeForChildContentContainer:withParentContainerSize:")]
		CGSize SizeForChildContentContainer (UIContentContainer container, CGSize parentSize);

		// @required -(void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id<UIViewControllerTransitionCoordinator> _Nonnull)coordinator __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("viewWillTransitionToSize:withTransitionCoordinator:")]
		void ViewWillTransitionToSize (CGSize size, UIViewControllerTransitionCoordinator coordinator);

		// @required -(void)willTransitionToTraitCollection:(UITraitCollection * _Nonnull)newCollection withTransitionCoordinator:(id<UIViewControllerTransitionCoordinator> _Nonnull)coordinator __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("willTransitionToTraitCollection:withTransitionCoordinator:")]
		void WillTransitionToTraitCollection (UITraitCollection newCollection, UIViewControllerTransitionCoordinator coordinator);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIViewControllerShowDetailTargetDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UIViewControllerShowDetailTargetDidChangeNotification", "__Internal")]
		NSString UIViewControllerShowDetailTargetDidChangeNotification { get; }
	}

	// @interface UIViewController : UIResponder <NSCoding, UIAppearanceContainer, UITraitEnvironment, UIContentContainer, UIFocusEnvironment>
	[iOS (2,0)]
	[BaseType (typeof(UIResponder))]
	interface UIViewController : INSCoding, IUIAppearanceContainer, IUITraitEnvironment, IUIContentContainer, IUIFocusEnvironment
	{
		// -(instancetype _Nonnull)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil __attribute__((objc_designated_initializer));
		[Export ("initWithNibName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string nibNameOrNil, [NullAllowed] NSBundle nibBundleOrNil);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic, strong) UIView * _Null_unspecified view;
		[Export ("view", ArgumentSemantic.Strong)]
		UIView View { get; set; }

		// -(void)loadView;
		[Export ("loadView")]
		void LoadView ();

		// -(void)loadViewIfNeeded __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("loadViewIfNeeded")]
		void LoadViewIfNeeded ();

		// @property (readonly, nonatomic, strong) UIView * _Nullable viewIfLoaded __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("viewIfLoaded", ArgumentSemantic.Strong)]
		UIView ViewIfLoaded { get; }

		// -(void)viewWillUnload __attribute__((availability(ios, introduced=5.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("viewWillUnload")]
		void ViewWillUnload ();

		// -(void)viewDidUnload __attribute__((availability(ios, introduced=3.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("viewDidUnload")]
		void ViewDidUnload ();

		// -(void)viewDidLoad;
		[Export ("viewDidLoad")]
		void ViewDidLoad ();

		// @property (readonly, getter = isViewLoaded, nonatomic) int viewLoaded __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("viewLoaded")]
		int ViewLoaded { [Bind ("isViewLoaded")] get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable nibName;
		[NullAllowed, Export ("nibName")]
		string NibName { get; }

		// @property (readonly, nonatomic, strong) NSBundle * _Nullable nibBundle;
		[NullAllowed, Export ("nibBundle", ArgumentSemantic.Strong)]
		NSBundle NibBundle { get; }

		// @property (readonly, nonatomic, strong) UIStoryboard * _Nullable storyboard __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("storyboard", ArgumentSemantic.Strong)]
		UIStoryboard Storyboard { get; }

		// -(void)performSegueWithIdentifier:(NSString * _Nonnull)identifier sender:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("performSegueWithIdentifier:sender:")]
		void PerformSegueWithIdentifier (string identifier, [NullAllowed] NSObject sender);

		// -(int)shouldPerformSegueWithIdentifier:(NSString * _Nonnull)identifier sender:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("shouldPerformSegueWithIdentifier:sender:")]
		int ShouldPerformSegueWithIdentifier (string identifier, [NullAllowed] NSObject sender);

		// -(void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("prepareForSegue:sender:")]
		void PrepareForSegue (UIStoryboardSegue segue, [NullAllowed] NSObject sender);

		// -(int)canPerformUnwindSegueAction:(SEL _Nonnull)action fromViewController:(UIViewController * _Nonnull)fromViewController sender:(id _Nullable)sender __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13,0), iOS (13,0)]
		[Export ("canPerformUnwindSegueAction:fromViewController:sender:")]
		int CanPerformUnwindSegueAction (Selector action, UIViewController fromViewController, [NullAllowed] NSObject sender);

		// -(int)canPerformUnwindSegueAction:(SEL _Nonnull)action fromViewController:(UIViewController * _Nonnull)fromViewController withSender:(id _Nonnull)sender __attribute__((availability(ios, introduced=6.0, deprecated=13.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 13, 0)]
		[Export ("canPerformUnwindSegueAction:fromViewController:withSender:")]
		int CanPerformUnwindSegueAction (Selector action, UIViewController fromViewController, NSObject sender);

		// -(NSArray<UIViewController *> * _Nonnull)allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource * _Nonnull)source __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("allowedChildViewControllersForUnwindingFromSource:")]
		UIViewController[] AllowedChildViewControllersForUnwindingFromSource (UIStoryboardUnwindSegueSource source);

		// -(UIViewController * _Nullable)childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource * _Nonnull)source __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("childViewControllerContainingSegueSource:")]
		[return: NullAllowed]
		UIViewController ChildViewControllerContainingSegueSource (UIStoryboardUnwindSegueSource source);

		// -(UIViewController * _Nullable)viewControllerForUnwindSegueAction:(SEL _Nonnull)action fromViewController:(UIViewController * _Nonnull)fromViewController withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Export ("viewControllerForUnwindSegueAction:fromViewController:withSender:")]
		[return: NullAllowed]
		UIViewController ViewControllerForUnwindSegueAction (Selector action, UIViewController fromViewController, [NullAllowed] NSObject sender);

		// -(void)unwindForSegue:(UIStoryboardSegue * _Nonnull)unwindSegue towardsViewController:(UIViewController * _Nonnull)subsequentVC __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("unwindForSegue:towardsViewController:")]
		void UnwindForSegue (UIStoryboardSegue unwindSegue, UIViewController subsequentVC);

		// -(UIStoryboardSegue * _Nullable)segueForUnwindingToViewController:(UIViewController * _Nonnull)toViewController fromViewController:(UIViewController * _Nonnull)fromViewController identifier:(NSString * _Nullable)identifier __attribute__((availability(ios, introduced=6.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Export ("segueForUnwindingToViewController:fromViewController:identifier:")]
		[return: NullAllowed]
		UIStoryboardSegue SegueForUnwindingToViewController (UIViewController toViewController, UIViewController fromViewController, [NullAllowed] string identifier);

		// -(void)viewWillAppear:(int)animated;
		[Export ("viewWillAppear:")]
		void ViewWillAppear (int animated);

		// -(void)viewDidAppear:(int)animated;
		[Export ("viewDidAppear:")]
		void ViewDidAppear (int animated);

		// -(void)viewWillDisappear:(int)animated;
		[Export ("viewWillDisappear:")]
		void ViewWillDisappear (int animated);

		// -(void)viewDidDisappear:(int)animated;
		[Export ("viewDidDisappear:")]
		void ViewDidDisappear (int animated);

		// -(void)viewWillLayoutSubviews __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("viewWillLayoutSubviews")]
		void ViewWillLayoutSubviews ();

		// -(void)viewDidLayoutSubviews __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("viewDidLayoutSubviews")]
		void ViewDidLayoutSubviews ();

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// -(void)didReceiveMemoryWarning;
		[Export ("didReceiveMemoryWarning")]
		void DidReceiveMemoryWarning ();

		// @property (readonly, nonatomic, weak) UIViewController * _Nullable parentViewController;
		[NullAllowed, Export ("parentViewController", ArgumentSemantic.Weak)]
		UIViewController ParentViewController { get; }

		// @property (readonly, nonatomic) UIViewController * _Nullable modalViewController __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[NullAllowed, Export ("modalViewController")]
		UIViewController ModalViewController { get; }

		// @property (readonly, nonatomic) UIViewController * _Nullable presentedViewController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("presentedViewController")]
		UIViewController PresentedViewController { get; }

		// @property (readonly, nonatomic) UIViewController * _Nullable presentingViewController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("presentingViewController")]
		UIViewController PresentingViewController { get; }

		// @property (assign, nonatomic) int definesPresentationContext __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("definesPresentationContext")]
		int DefinesPresentationContext { get; set; }

		// @property (assign, nonatomic) int providesPresentationContextTransitionStyle __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("providesPresentationContextTransitionStyle")]
		int ProvidesPresentationContextTransitionStyle { get; set; }

		// @property (nonatomic) int restoresFocusAfterTransition __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("restoresFocusAfterTransition")]
		int RestoresFocusAfterTransition { get; set; }

		// @property (readonly, getter = isBeingPresented, nonatomic) int beingPresented __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("beingPresented")]
		int BeingPresented { [Bind ("isBeingPresented")] get; }

		// @property (readonly, getter = isBeingDismissed, nonatomic) int beingDismissed __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("beingDismissed")]
		int BeingDismissed { [Bind ("isBeingDismissed")] get; }

		// @property (readonly, getter = isMovingToParentViewController, nonatomic) int movingToParentViewController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("movingToParentViewController")]
		int MovingToParentViewController { [Bind ("isMovingToParentViewController")] get; }

		// @property (readonly, getter = isMovingFromParentViewController, nonatomic) int movingFromParentViewController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("movingFromParentViewController")]
		int MovingFromParentViewController { [Bind ("isMovingFromParentViewController")] get; }

		// -(void)presentViewController:(UIViewController * _Nonnull)viewControllerToPresent animated:(int)flag completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("presentViewController:animated:completion:")]
		void PresentViewController (UIViewController viewControllerToPresent, int flag, [NullAllowed] Action completion);

		// -(void)dismissViewControllerAnimated:(int)flag completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("dismissViewControllerAnimated:completion:")]
		void DismissViewControllerAnimated (int flag, [NullAllowed] Action completion);

		// -(void)presentModalViewController:(UIViewController * _Nonnull)modalViewController animated:(int)animated __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("presentModalViewController:animated:")]
		void PresentModalViewController (UIViewController modalViewController, int animated);

		// -(void)dismissModalViewControllerAnimated:(int)animated __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("dismissModalViewControllerAnimated:")]
		void DismissModalViewControllerAnimated (int animated);

		// @property (assign, nonatomic) UIModalTransitionStyle modalTransitionStyle __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("modalTransitionStyle", ArgumentSemantic.Assign)]
		UIModalTransitionStyle ModalTransitionStyle { get; set; }

		// @property (assign, nonatomic) UIModalPresentationStyle modalPresentationStyle __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("modalPresentationStyle", ArgumentSemantic.Assign)]
		UIModalPresentationStyle ModalPresentationStyle { get; set; }

		// @property (assign, nonatomic) int modalPresentationCapturesStatusBarAppearance __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("modalPresentationCapturesStatusBarAppearance")]
		int ModalPresentationCapturesStatusBarAppearance { get; set; }

		// @property (readonly, nonatomic) int disablesAutomaticKeyboardDismissal __attribute__((availability(ios, introduced=4.3)));
		[iOS (4, 3)]
		[Export ("disablesAutomaticKeyboardDismissal")]
		int DisablesAutomaticKeyboardDismissal { get; }

		// @property (assign, nonatomic) int wantsFullScreenLayout __attribute__((availability(ios, introduced=3.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("wantsFullScreenLayout")]
		int WantsFullScreenLayout { get; set; }

		// @property (assign, nonatomic) UIRectEdge edgesForExtendedLayout __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("edgesForExtendedLayout", ArgumentSemantic.Assign)]
		UIRectEdge EdgesForExtendedLayout { get; set; }

		// @property (assign, nonatomic) int extendedLayoutIncludesOpaqueBars __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("extendedLayoutIncludesOpaqueBars")]
		int ExtendedLayoutIncludesOpaqueBars { get; set; }

		// @property (assign, nonatomic) int automaticallyAdjustsScrollViewInsets __attribute__((availability(ios, introduced=7.0, deprecated=11.0))) __attribute__((availability(tvos, introduced=7.0, deprecated=11.0)));
		[Introduced (PlatformName.iOS, 7, 0, message: "Use UIScrollView's contentInsetAdjustmentBehavior instead")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "Use UIScrollView's contentInsetAdjustmentBehavior instead")]
		[Introduced (PlatformName.TvOS, 7, 0, message: "Use UIScrollView's contentInsetAdjustmentBehavior instead")]
		[Deprecated (PlatformName.TvOS, 11, 0, message: "Use UIScrollView's contentInsetAdjustmentBehavior instead")]
		[Export ("automaticallyAdjustsScrollViewInsets")]
		int AutomaticallyAdjustsScrollViewInsets { get; set; }

		// @property (nonatomic) CGSize preferredContentSize __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("preferredContentSize", ArgumentSemantic.Assign)]
		CGSize PreferredContentSize { get; set; }

		// @property (readonly, nonatomic) UIStatusBarStyle preferredStatusBarStyle __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("preferredStatusBarStyle")]
		UIStatusBarStyle PreferredStatusBarStyle { get; }

		// @property (readonly, nonatomic) int prefersStatusBarHidden __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("prefersStatusBarHidden")]
		int PrefersStatusBarHidden { get; }

		// @property (readonly, nonatomic) UIStatusBarAnimation preferredStatusBarUpdateAnimation __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("preferredStatusBarUpdateAnimation")]
		UIStatusBarAnimation PreferredStatusBarUpdateAnimation { get; }

		// -(void)setNeedsStatusBarAppearanceUpdate __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("setNeedsStatusBarAppearanceUpdate")]
		void SetNeedsStatusBarAppearanceUpdate ();

		// -(UIViewController * _Nullable)targetViewControllerForAction:(SEL _Nonnull)action sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("targetViewControllerForAction:sender:")]
		[return: NullAllowed]
		UIViewController TargetViewControllerForAction (Selector action, [NullAllowed] NSObject sender);

		// -(void)showViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("showViewController:sender:")]
		void ShowViewController (UIViewController vc, [NullAllowed] NSObject sender);

		// -(void)showDetailViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("showDetailViewController:sender:")]
		void ShowDetailViewController (UIViewController vc, [NullAllowed] NSObject sender);

		// @property (readonly, nonatomic) UIUserInterfaceStyle preferredUserInterfaceStyle __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, NoiOS]
		[Export ("preferredUserInterfaceStyle")]
		UIUserInterfaceStyle PreferredUserInterfaceStyle { get; }

		// -(void)setNeedsUserInterfaceAppearanceUpdate __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11,0), NoWatch, NoiOS]
		[Export ("setNeedsUserInterfaceAppearanceUpdate")]
		void SetNeedsUserInterfaceAppearanceUpdate ();

		// @property (nonatomic) UIUserInterfaceStyle overrideUserInterfaceStyle __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, iOS (13, 0)]
		[Export ("overrideUserInterfaceStyle", ArgumentSemantic.Assign)]
		UIUserInterfaceStyle OverrideUserInterfaceStyle { get; set; }
	}

	// @interface UIViewControllerRotation (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIViewControllerRotation
	{
		// +(void)attemptRotationToDeviceOrientation __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Static]
		[Export ("attemptRotationToDeviceOrientation")]
		void AttemptRotationToDeviceOrientation ();

		// -(int)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("shouldAutorotateToInterfaceOrientation:")]
		int ShouldAutorotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation);

		// @property (readonly, nonatomic) int shouldAutorotate __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Export ("shouldAutorotate")]
		int ShouldAutorotate { get; }

		// @property (readonly, nonatomic) UIInterfaceOrientationMask supportedInterfaceOrientations __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Export ("supportedInterfaceOrientations")]
		UIInterfaceOrientationMask SupportedInterfaceOrientations { get; }

		// @property (readonly, nonatomic) UIInterfaceOrientation preferredInterfaceOrientationForPresentation __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Export ("preferredInterfaceOrientationForPresentation")]
		UIInterfaceOrientation PreferredInterfaceOrientationForPresentation { get; }

		// -(UIView * _Nullable)rotatingHeaderView __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Header views are animated along with the rest of the view hierarchy")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Header views are animated along with the rest of the view hierarchy")]
		[NoTV]
		[NullAllowed, Export ("rotatingHeaderView")]
		[Verify (MethodToProperty)]
		UIView RotatingHeaderView { get; }

		// -(UIView * _Nullable)rotatingFooterView __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Footer views are animated along with the rest of the view hierarchy")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Footer views are animated along with the rest of the view hierarchy")]
		[NoTV]
		[NullAllowed, Export ("rotatingFooterView")]
		[Verify (MethodToProperty)]
		UIView RotatingFooterView { get; }

		// @property (readonly, nonatomic) UIInterfaceOrientation interfaceOrientation __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Export ("interfaceOrientation")]
		UIInterfaceOrientation InterfaceOrientation { get; }

		// -(void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Implement viewWillTransitionToSize:withTransitionCoordinator: instead")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Implement viewWillTransitionToSize:withTransitionCoordinator: instead")]
		[NoTV]
		[Export ("willRotateToInterfaceOrientation:duration:")]
		void WillRotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation, double duration);

		// -(void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Export ("didRotateFromInterfaceOrientation:")]
		void DidRotateFromInterfaceOrientation (UIInterfaceOrientation fromInterfaceOrientation);

		// -(void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=3.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Implement viewWillTransitionToSize:withTransitionCoordinator: instead")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Implement viewWillTransitionToSize:withTransitionCoordinator: instead")]
		[NoTV]
		[Export ("willAnimateRotationToInterfaceOrientation:duration:")]
		void WillAnimateRotationToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation, double duration);

		// -(void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=2.0, deprecated=5.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 5, 0)]
		[NoTV]
		[Export ("willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:")]
		void WillAnimateFirstHalfOfRotationToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation, double duration);

		// -(void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios, introduced=2.0, deprecated=5.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 5, 0)]
		[NoTV]
		[Export ("didAnimateFirstHalfOfRotationToInterfaceOrientation:")]
		void DidAnimateFirstHalfOfRotationToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation);

		// -(void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios, introduced=2.0, deprecated=5.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 5, 0)]
		[NoTV]
		[Export ("willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:")]
		void WillAnimateSecondHalfOfRotationFromInterfaceOrientation (UIInterfaceOrientation fromInterfaceOrientation, double duration);
	}

	// @interface UIViewControllerEditing (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIViewControllerEditing
	{
		// @property (getter = isEditing, nonatomic) int editing;
		[Export ("editing")]
		int Editing { [Bind ("isEditing")] get; set; }

		// -(void)setEditing:(int)editing animated:(int)animated;
		[Export ("setEditing:animated:")]
		void SetEditing (int editing, int animated);

		// @property (readonly, nonatomic) UIBarButtonItem * _Nonnull editButtonItem;
		[Export ("editButtonItem")]
		UIBarButtonItem EditButtonItem { get; }
	}

	// @interface UISearchDisplayControllerSupport (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UISearchDisplayControllerSupport
	{
		// @property (readonly, nonatomic, strong) UISearchDisplayController * _Nullable searchDisplayController __attribute__((availability(ios, introduced=3.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[NullAllowed, Export ("searchDisplayController", ArgumentSemantic.Strong)]
		UISearchDisplayController SearchDisplayController { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSExceptionName _Nonnull UIViewControllerHierarchyInconsistencyException __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIViewControllerHierarchyInconsistencyException", "__Internal")]
		NSString UIViewControllerHierarchyInconsistencyException { get; }
	}

	// @interface UIContainerViewControllerProtectedMethods (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIContainerViewControllerProtectedMethods
	{
		// @property (readonly, nonatomic) NSArray<__kindof UIViewController *> * _Nonnull childViewControllers __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("childViewControllers")]
		UIViewController[] ChildViewControllers { get; }

		// -(void)addChildViewController:(UIViewController * _Nonnull)childController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("addChildViewController:")]
		void AddChildViewController (UIViewController childController);

		// -(void)removeFromParentViewController __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("removeFromParentViewController")]
		void RemoveFromParentViewController ();

		// -(void)transitionFromViewController:(UIViewController * _Nonnull)fromViewController toViewController:(UIViewController * _Nonnull)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("transitionFromViewController:toViewController:duration:options:animations:completion:")]
		void TransitionFromViewController (UIViewController fromViewController, UIViewController toViewController, double duration, UIViewAnimationOptions options, [NullAllowed] Action animations, [NullAllowed] Action<int> completion);

		// -(void)beginAppearanceTransition:(int)isAppearing animated:(int)animated __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("beginAppearanceTransition:animated:")]
		void BeginAppearanceTransition (int isAppearing, int animated);

		// -(void)endAppearanceTransition __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("endAppearanceTransition")]
		void EndAppearanceTransition ();

		// @property (readonly, nonatomic) UIViewController * _Nullable childViewControllerForStatusBarStyle __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[NullAllowed, Export ("childViewControllerForStatusBarStyle")]
		UIViewController ChildViewControllerForStatusBarStyle { get; }

		// @property (readonly, nonatomic) UIViewController * _Nullable childViewControllerForStatusBarHidden __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[NullAllowed, Export ("childViewControllerForStatusBarHidden")]
		UIViewController ChildViewControllerForStatusBarHidden { get; }

		// -(void)setOverrideTraitCollection:(UITraitCollection * _Nullable)collection forChildViewController:(UIViewController * _Nonnull)childViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("setOverrideTraitCollection:forChildViewController:")]
		void SetOverrideTraitCollection ([NullAllowed] UITraitCollection collection, UIViewController childViewController);

		// -(UITraitCollection * _Nullable)overrideTraitCollectionForChildViewController:(UIViewController * _Nonnull)childViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("overrideTraitCollectionForChildViewController:")]
		[return: NullAllowed]
		UITraitCollection OverrideTraitCollectionForChildViewController (UIViewController childViewController);

		// @property (readonly, nonatomic) UIViewController * _Nullable childViewControllerForUserInterfaceStyle __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, NoiOS]
		[NullAllowed, Export ("childViewControllerForUserInterfaceStyle")]
		UIViewController ChildViewControllerForUserInterfaceStyle { get; }
	}

	// @interface UIContainerViewControllerCallbacks (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIContainerViewControllerCallbacks
	{
		// -(int)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers __attribute__((availability(ios, introduced=5.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers")]
		[Verify (MethodToProperty)]
		int AutomaticallyForwardAppearanceAndRotationMethodsToChildViewControllers { get; }

		// -(int)shouldAutomaticallyForwardRotationMethods __attribute__((availability(ios, introduced=6.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 6, 0, message: "Manually forward viewWillTransitionToSize:withTransitionCoordinator: if necessary")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Manually forward viewWillTransitionToSize:withTransitionCoordinator: if necessary")]
		[NoTV]
		[Export ("shouldAutomaticallyForwardRotationMethods")]
		[Verify (MethodToProperty)]
		int ShouldAutomaticallyForwardRotationMethods { get; }

		// @property (readonly, nonatomic) int shouldAutomaticallyForwardAppearanceMethods __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("shouldAutomaticallyForwardAppearanceMethods")]
		int ShouldAutomaticallyForwardAppearanceMethods { get; }

		// -(void)willMoveToParentViewController:(UIViewController * _Nullable)parent __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("willMoveToParentViewController:")]
		void WillMoveToParentViewController ([NullAllowed] UIViewController parent);

		// -(void)didMoveToParentViewController:(UIViewController * _Nullable)parent __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("didMoveToParentViewController:")]
		void DidMoveToParentViewController ([NullAllowed] UIViewController parent);
	}

	// @interface UIStateRestoration (UIViewController) <UIStateRestoring>
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIStateRestoration : IUIStateRestoring
	{
		// @property (copy, nonatomic) NSString * _Nullable restorationIdentifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("restorationIdentifier")]
		string RestorationIdentifier { get; set; }

		// @property (assign, readwrite, nonatomic) Class<UIViewControllerRestoration> _Nullable restorationClass __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("restorationClass", ArgumentSemantic.Assign)]
		UIViewControllerRestoration RestorationClass { get; set; }

		// -(void)encodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("encodeRestorableStateWithCoder:")]
		void EncodeRestorableStateWithCoder (NSCoder coder);

		// -(void)decodeRestorableStateWithCoder:(NSCoder * _Nonnull)coder __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("decodeRestorableStateWithCoder:")]
		void DecodeRestorableStateWithCoder (NSCoder coder);

		// -(void)applicationFinishedRestoringState __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("applicationFinishedRestoringState")]
		void ApplicationFinishedRestoringState ();
	}

	// @interface UIConstraintBasedLayoutCoreMethods (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIConstraintBasedLayoutCoreMethods
	{
		// -(void)updateViewConstraints __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("updateViewConstraints")]
		void UpdateViewConstraints ();
	}

	// @interface UIViewControllerTransitioning (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIViewControllerTransitioning
	{
		[Wrap ("WeakTransitioningDelegate")]
		[NullAllowed]
		UIViewControllerTransitioningDelegate TransitioningDelegate { get; set; }

		// @property (nonatomic, weak) id<UIViewControllerTransitioningDelegate> _Nullable transitioningDelegate __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("transitioningDelegate", ArgumentSemantic.Weak)]
		NSObject WeakTransitioningDelegate { get; set; }
	}

	// @interface UILayoutSupport (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UILayoutSupport
	{
		// @property (readonly, nonatomic, strong) id<UILayoutSupport> _Nonnull topLayoutGuide __attribute__((availability(ios, introduced=7.0, deprecated=11.0))) __attribute__((availability(tvos, introduced=7.0, deprecated=11.0)));
		[Introduced (PlatformName.iOS, 7, 0, message: "Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")]
		[Introduced (PlatformName.TvOS, 7, 0, message: "Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")]
		[Deprecated (PlatformName.TvOS, 11, 0, message: "Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")]
		[Export ("topLayoutGuide", ArgumentSemantic.Strong)]
		UILayoutSupport TopLayoutGuide { get; }

		// @property (readonly, nonatomic, strong) id<UILayoutSupport> _Nonnull bottomLayoutGuide __attribute__((availability(ios, introduced=7.0, deprecated=11.0))) __attribute__((availability(tvos, introduced=7.0, deprecated=11.0)));
		[Introduced (PlatformName.iOS, 7, 0, message: "Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")]
		[Introduced (PlatformName.TvOS, 7, 0, message: "Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")]
		[Deprecated (PlatformName.TvOS, 11, 0, message: "Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")]
		[Export ("bottomLayoutGuide", ArgumentSemantic.Strong)]
		UILayoutSupport BottomLayoutGuide { get; }

		// @property (nonatomic) UIEdgeInsets additionalSafeAreaInsets __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("additionalSafeAreaInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets AdditionalSafeAreaInsets { get; set; }

		// @property (readonly, nonatomic) NSDirectionalEdgeInsets systemMinimumLayoutMargins __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("systemMinimumLayoutMargins")]
		NSDirectionalEdgeInsets SystemMinimumLayoutMargins { get; }

		// @property (nonatomic) int viewRespectsSystemMinimumLayoutMargins __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("viewRespectsSystemMinimumLayoutMargins")]
		int ViewRespectsSystemMinimumLayoutMargins { get; set; }

		// -(void)viewLayoutMarginsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("viewLayoutMarginsDidChange")]
		[RequiresSuper]
		void ViewLayoutMarginsDidChange ();

		// -(void)viewSafeAreaInsetsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("viewSafeAreaInsetsDidChange")]
		[RequiresSuper]
		void ViewSafeAreaInsetsDidChange ();
	}

	// @interface UIKeyCommand (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIKeyCommand
	{
		// -(void)addKeyCommand:(UIKeyCommand * _Nonnull)keyCommand __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("addKeyCommand:")]
		void AddKeyCommand (UIKeyCommand keyCommand);

		// -(void)removeKeyCommand:(UIKeyCommand * _Nonnull)keyCommand __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("removeKeyCommand:")]
		void RemoveKeyCommand (UIKeyCommand keyCommand);
	}

	// @interface UIPerformsActions (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIPerformsActions
	{
		// @property (readonly, nonatomic) int performsActionsWhilePresentingModally __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("performsActionsWhilePresentingModally")]
		int PerformsActionsWhilePresentingModally { get; }
	}

	// @interface NSExtensionAdditions (UIViewController) <NSExtensionRequestHandling>
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_NSExtensionAdditions : INSExtensionRequestHandling
	{
		// @property (readonly, nonatomic, strong) NSExtensionContext * _Nullable extensionContext __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("extensionContext", ArgumentSemantic.Strong)]
		NSExtensionContext ExtensionContext { get; }
	}

	// @interface UIPresentationController (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIPresentationController
	{
		// @property (readonly, nonatomic) UIPresentationController * _Nullable presentationController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("presentationController")]
		UIPresentationController PresentationController { get; }

		// @property (readonly, nonatomic) UIPopoverPresentationController * _Nullable popoverPresentationController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("popoverPresentationController")]
		UIPopoverPresentationController PopoverPresentationController { get; }

		// @property (getter = isModalInPresentation, nonatomic) int modalInPresentation __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("modalInPresentation")]
		int ModalInPresentation { [Bind ("isModalInPresentation")] get; set; }
	}

	// @protocol UIViewControllerPreviewing <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerPreviewing
	{
		// @required @property (readonly, nonatomic) UIGestureRecognizer * _Nonnull previewingGestureRecognizerForFailureRelationship __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[Export ("previewingGestureRecognizerForFailureRelationship")]
		UIGestureRecognizer PreviewingGestureRecognizerForFailureRelationship { get; }

		[Wrap ("WeakDelegate"), Abstract]
		UIViewControllerPreviewingDelegate Delegate { get; }

		// @required @property (readonly, nonatomic) id<UIViewControllerPreviewingDelegate> _Nonnull delegate __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[NullAllowed, Export ("delegate")]
		NSObject WeakDelegate { get; }

		// @required @property (readonly, nonatomic) UIView * _Nonnull sourceView __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[Export ("sourceView")]
		UIView SourceView { get; }

		// @required @property (nonatomic) CGRect sourceRect __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[Export ("sourceRect", ArgumentSemantic.Assign)]
		CGRect SourceRect { get; set; }
	}

	// @protocol UIViewControllerPreviewingDelegate <NSObject>
	[iOS (9,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerPreviewingDelegate
	{
		// @required -(UIViewController * _Nullable)previewingContext:(id<UIViewControllerPreviewing> _Nonnull)previewingContext viewControllerForLocation:(CGPoint)location __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[Export ("previewingContext:viewControllerForLocation:")]
		[return: NullAllowed]
		UIViewController PreviewingContext (UIViewControllerPreviewing previewingContext, CGPoint location);

		// @required -(void)previewingContext:(id<UIViewControllerPreviewing> _Nonnull)previewingContext commitViewController:(UIViewController * _Nonnull)viewControllerToCommit __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Abstract]
		[Export ("previewingContext:commitViewController:")]
		void PreviewingContext (UIViewControllerPreviewing previewingContext, UIViewController viewControllerToCommit);
	}

	// @interface UIViewControllerPreviewingRegistration (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIViewControllerPreviewingRegistration
	{
		// -(id<UIViewControllerPreviewing> _Nonnull)registerForPreviewingWithDelegate:(id<UIViewControllerPreviewingDelegate> _Nonnull)delegate sourceView:(UIView * _Nonnull)sourceView __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("registerForPreviewingWithDelegate:sourceView:")]
		UIViewControllerPreviewing RegisterForPreviewingWithDelegate (UIViewControllerPreviewingDelegate @delegate, UIView sourceView);

		// -(void)unregisterForPreviewingWithContext:(id<UIViewControllerPreviewing> _Nonnull)previewing __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("unregisterForPreviewingWithContext:")]
		void UnregisterForPreviewingWithContext (UIViewControllerPreviewing previewing);
	}

	// @interface UIScreenEdgesDeferringSystemGestures (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIScreenEdgesDeferringSystemGestures
	{
		// @property (readonly, nonatomic) UIViewController * _Nullable childViewControllerForScreenEdgesDeferringSystemGestures __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("childViewControllerForScreenEdgesDeferringSystemGestures")]
		UIViewController ChildViewControllerForScreenEdgesDeferringSystemGestures { get; }

		// @property (readonly, nonatomic) UIRectEdge preferredScreenEdgesDeferringSystemGestures __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("preferredScreenEdgesDeferringSystemGestures")]
		UIRectEdge PreferredScreenEdgesDeferringSystemGestures { get; }

		// -(void)setNeedsUpdateOfScreenEdgesDeferringSystemGestures __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("setNeedsUpdateOfScreenEdgesDeferringSystemGestures")]
		void SetNeedsUpdateOfScreenEdgesDeferringSystemGestures ();
	}

	// @interface UIHomeIndicatorAutoHidden (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIHomeIndicatorAutoHidden
	{
		// @property (readonly, nonatomic) UIViewController * _Nullable childViewControllerForHomeIndicatorAutoHidden __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("childViewControllerForHomeIndicatorAutoHidden")]
		UIViewController ChildViewControllerForHomeIndicatorAutoHidden { get; }

		// @property (readonly, nonatomic) int prefersHomeIndicatorAutoHidden __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("prefersHomeIndicatorAutoHidden")]
		int PrefersHomeIndicatorAutoHidden { get; }

		// -(void)setNeedsUpdateOfHomeIndicatorAutoHidden __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("setNeedsUpdateOfHomeIndicatorAutoHidden")]
		void SetNeedsUpdateOfHomeIndicatorAutoHidden ();
	}

	// @interface  (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_
	{
		// @property (readonly, nonatomic) NSArray<id<UIPreviewActionItem>> * _Nonnull previewActionItems __attribute__((availability(ios, introduced=9.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 9, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
		[Export ("previewActionItems")]
		UIPreviewActionItem[] PreviewActionItems { get; }
	}

	// @protocol UIPreviewActionItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (9,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIPreviewActionItem
	{
		// @required @property (readonly, copy, nonatomic) NSString * _Nonnull title;
		[Abstract]
		[Export ("title")]
		string Title { get; }
	}

	// @interface UIPreviewAction : NSObject <NSCopying, UIPreviewActionItem>
	[Introduced (PlatformName.iOS, 9, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
	[Deprecated (PlatformName.iOS, 13, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIPreviewAction : INSCopying, IUIPreviewActionItem
	{
		// @property (readonly, copy, nonatomic) void (^ _Nonnull)(id<UIPreviewActionItem> _Nonnull, UIViewController * _Nonnull) handler;
		[Export ("handler", ArgumentSemantic.Copy)]
		Action<UIPreviewActionItem, UIViewController> Handler { get; }

		// +(instancetype _Nonnull)actionWithTitle:(NSString * _Nonnull)title style:(UIPreviewActionStyle)style handler:(void (^ _Nonnull)(UIPreviewAction * _Nonnull, UIViewController * _Nonnull))handler;
		[Static]
		[Export ("actionWithTitle:style:handler:")]
		UIPreviewAction ActionWithTitle (string title, UIPreviewActionStyle style, Action<UIPreviewAction, UIViewController> handler);
	}

	// @interface UIPreviewActionGroup : NSObject <NSCopying, UIPreviewActionItem>
	[Introduced (PlatformName.iOS, 9, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
	[Deprecated (PlatformName.iOS, 13, 0, message: "UIViewControllerPreviewing is deprecated. Please use UIContextMenuInteraction.")]
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIPreviewActionGroup : INSCopying, IUIPreviewActionItem
	{
		// +(instancetype _Nonnull)actionGroupWithTitle:(NSString * _Nonnull)title style:(UIPreviewActionStyle)style actions:(NSArray<UIPreviewAction *> * _Nonnull)actions;
		[Static]
		[Export ("actionGroupWithTitle:style:actions:")]
		UIPreviewActionGroup ActionGroupWithTitle (string title, UIPreviewActionStyle style, UIPreviewAction[] actions);
	}

	// @interface UIAlertAction : NSObject <NSCopying>
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIAlertAction : INSCopying
	{
		// +(instancetype _Nonnull)actionWithTitle:(NSString * _Nullable)title style:(UIAlertActionStyle)style handler:(void (^ _Nullable)(UIAlertAction * _Nonnull))handler;
		[Static]
		[Export ("actionWithTitle:style:handler:")]
		UIAlertAction ActionWithTitle ([NullAllowed] string title, UIAlertActionStyle style, [NullAllowed] Action<UIAlertAction> handler);

		// @property (readonly, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; }

		// @property (readonly, nonatomic) UIAlertActionStyle style;
		[Export ("style")]
		UIAlertActionStyle Style { get; }

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }
	}

	// @interface UIAlertController : UIViewController
	[iOS (8,0)]
	[BaseType (typeof(UIViewController))]
	interface UIAlertController
	{
		// +(instancetype _Nonnull)alertControllerWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message preferredStyle:(UIAlertControllerStyle)preferredStyle;
		[Static]
		[Export ("alertControllerWithTitle:message:preferredStyle:")]
		UIAlertController AlertControllerWithTitle ([NullAllowed] string title, [NullAllowed] string message, UIAlertControllerStyle preferredStyle);

		// -(void)addAction:(UIAlertAction * _Nonnull)action;
		[Export ("addAction:")]
		void AddAction (UIAlertAction action);

		// @property (readonly, nonatomic) NSArray<UIAlertAction *> * _Nonnull actions;
		[Export ("actions")]
		UIAlertAction[] Actions { get; }

		// @property (nonatomic, strong) UIAlertAction * _Nullable preferredAction __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("preferredAction", ArgumentSemantic.Strong)]
		UIAlertAction PreferredAction { get; set; }

		// -(void)addTextFieldWithConfigurationHandler:(void (^ _Nullable)(UITextField * _Nonnull))configurationHandler;
		[Export ("addTextFieldWithConfigurationHandler:")]
		void AddTextFieldWithConfigurationHandler ([NullAllowed] Action<UITextField> configurationHandler);

		// @property (readonly, nonatomic) NSArray<UITextField *> * _Nullable textFields;
		[NullAllowed, Export ("textFields")]
		UITextField[] TextFields { get; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable message;
		[NullAllowed, Export ("message")]
		string Message { get; set; }

		// @property (readonly, nonatomic) UIAlertControllerStyle preferredStyle;
		[Export ("preferredStyle")]
		UIAlertControllerStyle PreferredStyle { get; }
	}

	// @interface SpringLoading (UIAlertController) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UIAlertController))]
	interface UIAlertController_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @protocol UIBarPositioning <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIBarPositioning
	{
		// @required @property (readonly, nonatomic) UIBarPosition barPosition;
		[Abstract]
		[Export ("barPosition")]
		UIBarPosition BarPosition { get; }
	}

	// @protocol UIBarPositioningDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIBarPositioningDelegate
	{
		// @optional -(UIBarPosition)positionForBar:(id<UIBarPositioning> _Nonnull)bar;
		[Export ("positionForBar:")]
		UIBarPosition PositionForBar (UIBarPositioning bar);
	}

	// @interface UIBarButtonItem : UIBarItem <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIBarItem))]
	interface UIBarButtonItem : INSCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithImage:(UIImage * _Nullable)image style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action;
		[Export ("initWithImage:style:target:action:")]
		IntPtr Constructor ([NullAllowed] UIImage image, UIBarButtonItemStyle style, [NullAllowed] NSObject target, [NullAllowed] Selector action);

		// -(instancetype _Nonnull)initWithImage:(UIImage * _Nullable)image landscapeImagePhone:(UIImage * _Nullable)landscapeImagePhone style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithImage:landscapeImagePhone:style:target:action:")]
		IntPtr Constructor ([NullAllowed] UIImage image, [NullAllowed] UIImage landscapeImagePhone, UIBarButtonItemStyle style, [NullAllowed] NSObject target, [NullAllowed] Selector action);

		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nullable)title style:(UIBarButtonItemStyle)style target:(id _Nullable)target action:(SEL _Nullable)action;
		[Export ("initWithTitle:style:target:action:")]
		IntPtr Constructor ([NullAllowed] string title, UIBarButtonItemStyle style, [NullAllowed] NSObject target, [NullAllowed] Selector action);

		// -(instancetype _Nonnull)initWithBarButtonSystemItem:(UIBarButtonSystemItem)systemItem target:(id _Nullable)target action:(SEL _Nullable)action;
		[Export ("initWithBarButtonSystemItem:target:action:")]
		IntPtr Constructor (UIBarButtonSystemItem systemItem, [NullAllowed] NSObject target, [NullAllowed] Selector action);

		// -(instancetype _Nonnull)initWithCustomView:(UIView * _Nonnull)customView;
		[Export ("initWithCustomView:")]
		IntPtr Constructor (UIView customView);

		// @property (nonatomic) UIBarButtonItemStyle style;
		[Export ("style", ArgumentSemantic.Assign)]
		UIBarButtonItemStyle Style { get; set; }

		// @property (nonatomic) CGFloat width;
		[Export ("width")]
		nfloat Width { get; set; }

		// @property (copy, nonatomic) NSSet<NSString *> * _Nullable possibleTitles;
		[NullAllowed, Export ("possibleTitles", ArgumentSemantic.Copy)]
		NSSet<NSString> PossibleTitles { get; set; }

		// @property (nonatomic, strong) __kindof UIView * _Nullable customView;
		[Export ("customView", ArgumentSemantic.Strong)]
		UIView CustomView { get; set; }

		// @property (nonatomic) SEL _Nullable action;
		[NullAllowed, Export ("action", ArgumentSemantic.Assign)]
		Selector Action { get; set; }

		// @property (nonatomic, weak) id _Nullable target;
		[NullAllowed, Export ("target", ArgumentSemantic.Weak)]
		NSObject Target { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setBackgroundImage:forState:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("backgroundImageForState:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForState (UIControlState state, UIBarMetrics barMetrics);

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setBackgroundImage:forState:style:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state, UIBarButtonItemStyle style, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("backgroundImageForState:style:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForState (UIControlState state, UIBarButtonItemStyle style, UIBarMetrics barMetrics);

		// @property (nonatomic, strong) UIColor * _Nullable tintColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// -(void)setBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setBackgroundVerticalPositionAdjustment:forBarMetrics:")]
		void SetBackgroundVerticalPositionAdjustment (nfloat adjustment, UIBarMetrics barMetrics);

		// -(CGFloat)backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("backgroundVerticalPositionAdjustmentForBarMetrics:")]
		nfloat BackgroundVerticalPositionAdjustmentForBarMetrics (UIBarMetrics barMetrics);

		// -(void)setTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setTitlePositionAdjustment:forBarMetrics:")]
		void SetTitlePositionAdjustment (UIOffset adjustment, UIBarMetrics barMetrics);

		// -(UIOffset)titlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("titlePositionAdjustmentForBarMetrics:")]
		UIOffset TitlePositionAdjustmentForBarMetrics (UIBarMetrics barMetrics);

		// -(void)setBackButtonBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("setBackButtonBackgroundImage:forState:barMetrics:")]
		void SetBackButtonBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backButtonBackgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("backButtonBackgroundImageForState:barMetrics:")]
		[return: NullAllowed]
		UIImage BackButtonBackgroundImageForState (UIControlState state, UIBarMetrics barMetrics);

		// -(void)setBackButtonTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("setBackButtonTitlePositionAdjustment:forBarMetrics:")]
		void SetBackButtonTitlePositionAdjustment (UIOffset adjustment, UIBarMetrics barMetrics);

		// -(UIOffset)backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("backButtonTitlePositionAdjustmentForBarMetrics:")]
		UIOffset BackButtonTitlePositionAdjustmentForBarMetrics (UIBarMetrics barMetrics);

		// -(void)setBackButtonBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:")]
		void SetBackButtonBackgroundVerticalPositionAdjustment (nfloat adjustment, UIBarMetrics barMetrics);

		// -(CGFloat)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5,0)]
		[Export ("backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:")]
		nfloat BackButtonBackgroundVerticalPositionAdjustmentForBarMetrics (UIBarMetrics barMetrics);
	}

	// @interface SpringLoading (UIBarButtonItem) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UIBarButtonItem))]
	interface UIBarButtonItem_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @interface UIBarButtonItemGroup : NSObject <NSCoding>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIBarButtonItemGroup : INSCoding
	{
		// -(instancetype _Nonnull)initWithBarButtonItems:(NSArray<UIBarButtonItem *> * _Nonnull)barButtonItems representativeItem:(UIBarButtonItem * _Nullable)representativeItem __attribute__((objc_designated_initializer));
		[Export ("initWithBarButtonItems:representativeItem:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIBarButtonItem[] barButtonItems, [NullAllowed] UIBarButtonItem representativeItem);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readwrite, copy, nonatomic) NSArray<UIBarButtonItem *> * _Nonnull barButtonItems;
		[Export ("barButtonItems", ArgumentSemantic.Copy)]
		UIBarButtonItem[] BarButtonItems { get; set; }

		// @property (readwrite, nonatomic, strong) UIBarButtonItem * _Nullable representativeItem;
		[NullAllowed, Export ("representativeItem", ArgumentSemantic.Strong)]
		UIBarButtonItem RepresentativeItem { get; set; }

		// @property (readonly, getter = isDisplayingRepresentativeItem, assign, nonatomic) int displayingRepresentativeItem;
		[Export ("displayingRepresentativeItem")]
		int DisplayingRepresentativeItem { [Bind ("isDisplayingRepresentativeItem")] get; }
	}

	// @interface UIBarButtonItemGroup (UIBarButtonItem)
	[Category]
	[BaseType (typeof(UIBarButtonItem))]
	interface UIBarButtonItem_UIBarButtonItemGroup
	{
		// @property (readonly, nonatomic, weak) UIBarButtonItemGroup * _Nullable buttonGroup __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("buttonGroup", ArgumentSemantic.Weak)]
		UIBarButtonItemGroup ButtonGroup { get; }
	}

	// @interface UIKitAdditions (NSIndexPath)
	[Category]
	[BaseType (typeof(NSIndexPath))]
	interface NSIndexPath_UIKitAdditions
	{
		// +(instancetype _Nonnull)indexPathForRow:(NSInteger)row inSection:(NSInteger)section;
		[Static]
		[Export ("indexPathForRow:inSection:")]
		NSIndexPath IndexPathForRow (nint row, nint section);

		// +(instancetype _Nonnull)indexPathForItem:(NSInteger)item inSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("indexPathForItem:inSection:")]
		NSIndexPath IndexPathForItem (nint item, nint section);

		// @property (readonly, nonatomic) NSInteger section;
		[Export ("section")]
		nint Section { get; }

		// @property (readonly, nonatomic) NSInteger row;
		[Export ("row")]
		nint Row { get; }

		// @property (readonly, nonatomic) NSInteger item __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("item")]
		nint Item { get; }
	}

	// @protocol UIDataSourceTranslating <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[TV (11,0), iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIDataSourceTranslating
	{
		// @required -(NSInteger)presentationSectionIndexForDataSourceSectionIndex:(NSInteger)dataSourceSectionIndex;
		[Abstract]
		[Export ("presentationSectionIndexForDataSourceSectionIndex:")]
		nint PresentationSectionIndexForDataSourceSectionIndex (nint dataSourceSectionIndex);

		// @required -(NSInteger)dataSourceSectionIndexForPresentationSectionIndex:(NSInteger)presentationSectionIndex;
		[Abstract]
		[Export ("dataSourceSectionIndexForPresentationSectionIndex:")]
		nint DataSourceSectionIndexForPresentationSectionIndex (nint presentationSectionIndex);

		// @required -(NSIndexPath * _Nullable)presentationIndexPathForDataSourceIndexPath:(NSIndexPath * _Nullable)dataSourceIndexPath;
		[Abstract]
		[Export ("presentationIndexPathForDataSourceIndexPath:")]
		[return: NullAllowed]
		NSIndexPath PresentationIndexPathForDataSourceIndexPath ([NullAllowed] NSIndexPath dataSourceIndexPath);

		// @required -(NSIndexPath * _Nullable)dataSourceIndexPathForPresentationIndexPath:(NSIndexPath * _Nullable)presentationIndexPath;
		[Abstract]
		[Export ("dataSourceIndexPathForPresentationIndexPath:")]
		[return: NullAllowed]
		NSIndexPath DataSourceIndexPathForPresentationIndexPath ([NullAllowed] NSIndexPath presentationIndexPath);

		// @required -(void)performUsingPresentationValues:(void (^ _Nonnull)(void))actionsToTranslate __attribute__((swift_name("performUsingPresentationValues(_:)")));
		[Abstract]
		[Export ("performUsingPresentationValues:")]
		void PerformUsingPresentationValues (Action actionsToTranslate);
	}

	// typedef void (^UICollectionViewLayoutInteractiveTransitionCompletion)(int, int);
	delegate void UICollectionViewLayoutInteractiveTransitionCompletion (int arg0, int arg1);

	// @interface UICollectionViewFocusUpdateContext : UIFocusUpdateContext
	[iOS (9,0)]
	[BaseType (typeof(UIFocusUpdateContext))]
	interface UICollectionViewFocusUpdateContext
	{
		// @property (readonly, nonatomic, strong) NSIndexPath * _Nullable previouslyFocusedIndexPath;
		[NullAllowed, Export ("previouslyFocusedIndexPath", ArgumentSemantic.Strong)]
		NSIndexPath PreviouslyFocusedIndexPath { get; }

		// @property (readonly, nonatomic, strong) NSIndexPath * _Nullable nextFocusedIndexPath;
		[NullAllowed, Export ("nextFocusedIndexPath", ArgumentSemantic.Strong)]
		NSIndexPath NextFocusedIndexPath { get; }
	}

	// @protocol UICollectionViewDataSource <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDataSource
	{
		// @required -(NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section;
		[Abstract]
		[Export ("collectionView:numberOfItemsInSection:")]
		nint CollectionView (UICollectionView collectionView, nint section);

		// @required -(__kindof UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("collectionView:cellForItemAtIndexPath:")]
		UICollectionViewCell CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView;
		[Export ("numberOfSectionsInCollectionView:")]
		nint NumberOfSectionsInCollectionView (UICollectionView collectionView);

		// @optional -(UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:viewForSupplementaryElementOfKind:atIndexPath:")]
		UICollectionReusableView CollectionView (UICollectionView collectionView, string kind, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView canMoveItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:canMoveItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView moveItemAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toIndexPath:(NSIndexPath * _Nonnull)destinationIndexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:moveItemAtIndexPath:toIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath sourceIndexPath, NSIndexPath destinationIndexPath);

		// @optional -(NSArray<NSString *> * _Nullable)indexTitlesForCollectionView:(UICollectionView * _Nonnull)collectionView __attribute__((availability(tvos, introduced=10.2)));
		[TV (10,2)]
		[Export ("indexTitlesForCollectionView:")]
		[return: NullAllowed]
		string[] IndexTitlesForCollectionView (UICollectionView collectionView);

		// @optional -(NSIndexPath * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForIndexTitle:(NSString * _Nonnull)title atIndex:(NSInteger)index __attribute__((availability(tvos, introduced=10.2)));
		[TV (10,2)]
		[Export ("collectionView:indexPathForIndexTitle:atIndex:")]
		NSIndexPath CollectionView (UICollectionView collectionView, string title, nint index);
	}

	// @protocol UICollectionViewDataSourcePrefetching <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDataSourcePrefetching
	{
		// @required -(void)collectionView:(UICollectionView * _Nonnull)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Abstract]
		[Export ("collectionView:prefetchItemsAtIndexPaths:")]
		void PrefetchItemsAtIndexPaths (UICollectionView collectionView, NSIndexPath[] indexPaths);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("collectionView:cancelPrefetchingForItemsAtIndexPaths:")]
		void CancelPrefetchingForItemsAtIndexPaths (UICollectionView collectionView, NSIndexPath[] indexPaths);
	}

	// @protocol UICollectionViewDelegate <UIScrollViewDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface UICollectionViewDelegate : IUIScrollViewDelegate
	{
		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:shouldHighlightItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didHighlightItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didUnhighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didUnhighlightItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:shouldSelectItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:shouldDeselectItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didSelectItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didDeselectItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("collectionView:willDisplayCell:forItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, UICollectionViewCell cell, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplaySupplementaryView:(UICollectionReusableView * _Nonnull)view forElementKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:")]
		void CollectionView (UICollectionView collectionView, UICollectionReusableView view, string elementKind, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didEndDisplayingCell:forItemAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, UICollectionViewCell cell, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingSupplementaryView:(UICollectionReusableView * _Nonnull)view forElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:")]
		void CollectionView (UICollectionView collectionView, UICollectionReusableView view, string elementKind, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("collectionView:shouldShowMenuForItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView canPerformAction:(SEL _Nonnull)action forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("collectionView:canPerformAction:forItemAtIndexPath:withSender:")]
		int CollectionView (UICollectionView collectionView, Selector action, NSIndexPath indexPath, [NullAllowed] NSObject sender);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView performAction:(SEL _Nonnull)action forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=6.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("collectionView:performAction:forItemAtIndexPath:withSender:")]
		void CollectionView (UICollectionView collectionView, Selector action, NSIndexPath indexPath, [NullAllowed] NSObject sender);

		// @optional -(UICollectionViewTransitionLayout * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView transitionLayoutForOldLayout:(UICollectionViewLayout * _Nonnull)fromLayout newLayout:(UICollectionViewLayout * _Nonnull)toLayout;
		[Export ("collectionView:transitionLayoutForOldLayout:newLayout:")]
		UICollectionViewTransitionLayout CollectionView (UICollectionView collectionView, UICollectionViewLayout fromLayout, UICollectionViewLayout toLayout);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView canFocusItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:canFocusItemAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext * _Nonnull)context __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:shouldUpdateFocusInContext:")]
		int CollectionView (UICollectionView collectionView, UICollectionViewFocusUpdateContext context);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didUpdateFocusInContext:(UICollectionViewFocusUpdateContext * _Nonnull)context withAnimationCoordinator:(UIFocusAnimationCoordinator * _Nonnull)coordinator __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:didUpdateFocusInContext:withAnimationCoordinator:")]
		void CollectionView (UICollectionView collectionView, UICollectionViewFocusUpdateContext context, UIFocusAnimationCoordinator coordinator);

		// @optional -(NSIndexPath * _Nullable)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView * _Nonnull)collectionView __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("indexPathForPreferredFocusedViewInCollectionView:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForPreferredFocusedViewInCollectionView (UICollectionView collectionView);

		// @optional -(NSIndexPath * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath * _Nonnull)originalIndexPath toProposedIndexPath:(NSIndexPath * _Nonnull)proposedIndexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:")]
		NSIndexPath CollectionView (UICollectionView collectionView, NSIndexPath originalIndexPath, NSIndexPath proposedIndexPath);

		// @optional -(CGPoint)collectionView:(UICollectionView * _Nonnull)collectionView targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("collectionView:targetContentOffsetForProposedContentOffset:")]
		CGPoint CollectionView (UICollectionView collectionView, CGPoint proposedContentOffset);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldSpringLoadItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath withContext:(id<UISpringLoadedInteractionContext> _Nonnull)context __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("collectionView:shouldSpringLoadItemAtIndexPath:withContext:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath, UISpringLoadedInteractionContext context);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:")]
		int CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:didBeginMultipleSelectionInteractionAtIndexPath:")]
		void CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionViewDidEndMultipleSelectionInteraction:(UICollectionView * _Nonnull)collectionView __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionViewDidEndMultipleSelectionInteraction:")]
		void CollectionViewDidEndMultipleSelectionInteraction (UICollectionView collectionView);

		// @optional -(UIContextMenuConfiguration * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView contextMenuConfigurationForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:contextMenuConfigurationForItemAtIndexPath:point:")]
		[return: NullAllowed]
		UIContextMenuConfiguration CollectionView (UICollectionView collectionView, NSIndexPath indexPath, CGPoint point);

		// @optional -(UITargetedPreview * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:previewForHighlightingContextMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview CollectionView (UICollectionView collectionView, UIContextMenuConfiguration configuration);

		// @optional -(UITargetedPreview * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:previewForDismissingContextMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview CollectionView (UICollectionView collectionView, UIContextMenuConfiguration configuration);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration animator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:")]
		void CollectionView (UICollectionView collectionView, UIContextMenuConfiguration configuration, UIContextMenuInteractionCommitAnimating animator);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView willCommitMenuWithAnimator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("collectionView:willCommitMenuWithAnimator:")]
		void CollectionView (UICollectionView collectionView, UIContextMenuInteractionCommitAnimating animator);
	}

	// @interface UICollectionView : UIScrollView <UIDataSourceTranslating>
	[iOS (6,0)]
	[BaseType (typeof(UIScrollView))]
	interface UICollectionView : IUIDataSourceTranslating
	{
		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:collectionViewLayout:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame, UICollectionViewLayout layout);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic, strong) UICollectionViewLayout * _Nonnull collectionViewLayout;
		[Export ("collectionViewLayout", ArgumentSemantic.Strong)]
		UICollectionViewLayout CollectionViewLayout { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UICollectionViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UICollectionViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		[Wrap ("WeakDataSource")]
		[NullAllowed]
		UICollectionViewDataSource DataSource { get; set; }

		// @property (nonatomic, weak) id<UICollectionViewDataSource> _Nullable dataSource;
		[NullAllowed, Export ("dataSource", ArgumentSemantic.Weak)]
		NSObject WeakDataSource { get; set; }

		[Wrap ("WeakPrefetchDataSource")]
		[NullAllowed]
		UICollectionViewDataSourcePrefetching PrefetchDataSource { get; set; }

		// @property (nonatomic, weak) id<UICollectionViewDataSourcePrefetching> _Nullable prefetchDataSource __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("prefetchDataSource", ArgumentSemantic.Weak)]
		NSObject WeakPrefetchDataSource { get; set; }

		// @property (getter = isPrefetchingEnabled, nonatomic) int prefetchingEnabled __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("prefetchingEnabled")]
		int PrefetchingEnabled { [Bind ("isPrefetchingEnabled")] get; set; }

		[Wrap ("WeakDragDelegate")]
		[NullAllowed]
		UICollectionViewDragDelegate DragDelegate { get; set; }

		// @property (nonatomic, weak) id<UICollectionViewDragDelegate> _Nullable dragDelegate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("dragDelegate", ArgumentSemantic.Weak)]
		NSObject WeakDragDelegate { get; set; }

		[Wrap ("WeakDropDelegate")]
		[NullAllowed]
		UICollectionViewDropDelegate DropDelegate { get; set; }

		// @property (nonatomic, weak) id<UICollectionViewDropDelegate> _Nullable dropDelegate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("dropDelegate", ArgumentSemantic.Weak)]
		NSObject WeakDropDelegate { get; set; }

		// @property (nonatomic) int dragInteractionEnabled __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("dragInteractionEnabled")]
		int DragInteractionEnabled { get; set; }

		// @property (nonatomic) UICollectionViewReorderingCadence reorderingCadence __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("reorderingCadence", ArgumentSemantic.Assign)]
		UICollectionViewReorderingCadence ReorderingCadence { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable backgroundView;
		[NullAllowed, Export ("backgroundView", ArgumentSemantic.Strong)]
		UIView BackgroundView { get; set; }

		// -(void)registerClass:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
		[Export ("registerClass:forCellWithReuseIdentifier:")]
		void RegisterClass ([NullAllowed] Class cellClass, string identifier);

		// -(void)registerNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
		[Export ("registerNib:forCellWithReuseIdentifier:")]
		void RegisterNib ([NullAllowed] UINib nib, string identifier);

		// -(void)registerClass:(Class _Nullable)viewClass forSupplementaryViewOfKind:(NSString * _Nonnull)elementKind withReuseIdentifier:(NSString * _Nonnull)identifier;
		[Export ("registerClass:forSupplementaryViewOfKind:withReuseIdentifier:")]
		void RegisterClass ([NullAllowed] Class viewClass, string elementKind, string identifier);

		// -(void)registerNib:(UINib * _Nullable)nib forSupplementaryViewOfKind:(NSString * _Nonnull)kind withReuseIdentifier:(NSString * _Nonnull)identifier;
		[Export ("registerNib:forSupplementaryViewOfKind:withReuseIdentifier:")]
		void RegisterNib ([NullAllowed] UINib nib, string kind, string identifier);

		// -(__kindof UICollectionViewCell * _Nonnull)dequeueReusableCellWithReuseIdentifier:(NSString * _Nonnull)identifier forIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("dequeueReusableCellWithReuseIdentifier:forIndexPath:")]
		UICollectionViewCell DequeueReusableCellWithReuseIdentifier (string identifier, NSIndexPath indexPath);

		// -(__kindof UICollectionReusableView * _Nonnull)dequeueReusableSupplementaryViewOfKind:(NSString * _Nonnull)elementKind withReuseIdentifier:(NSString * _Nonnull)identifier forIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:")]
		UICollectionReusableView DequeueReusableSupplementaryViewOfKind (string elementKind, string identifier, NSIndexPath indexPath);

		// @property (nonatomic) int allowsSelection;
		[Export ("allowsSelection")]
		int AllowsSelection { get; set; }

		// @property (nonatomic) int allowsMultipleSelection;
		[Export ("allowsMultipleSelection")]
		int AllowsMultipleSelection { get; set; }

		// @property (readonly, nonatomic) NSArray<NSIndexPath *> * _Nullable indexPathsForSelectedItems;
		[NullAllowed, Export ("indexPathsForSelectedItems")]
		NSIndexPath[] IndexPathsForSelectedItems { get; }

		// -(void)selectItemAtIndexPath:(NSIndexPath * _Nullable)indexPath animated:(int)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition;
		[Export ("selectItemAtIndexPath:animated:scrollPosition:")]
		void SelectItemAtIndexPath ([NullAllowed] NSIndexPath indexPath, int animated, UICollectionViewScrollPosition scrollPosition);

		// -(void)deselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(int)animated;
		[Export ("deselectItemAtIndexPath:animated:")]
		void DeselectItemAtIndexPath (NSIndexPath indexPath, int animated);

		// @property (readonly, nonatomic) int hasUncommittedUpdates __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("hasUncommittedUpdates")]
		int HasUncommittedUpdates { get; }

		// -(void)reloadData;
		[Export ("reloadData")]
		void ReloadData ();

		// -(void)setCollectionViewLayout:(UICollectionViewLayout * _Nonnull)layout animated:(int)animated;
		[Export ("setCollectionViewLayout:animated:")]
		void SetCollectionViewLayout (UICollectionViewLayout layout, int animated);

		// -(void)setCollectionViewLayout:(UICollectionViewLayout * _Nonnull)layout animated:(int)animated completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("setCollectionViewLayout:animated:completion:")]
		void SetCollectionViewLayout (UICollectionViewLayout layout, int animated, [NullAllowed] Action<int> completion);

		// -(UICollectionViewTransitionLayout * _Nonnull)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout * _Nonnull)layout completion:(UICollectionViewLayoutInteractiveTransitionCompletion _Nullable)completion __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("startInteractiveTransitionToCollectionViewLayout:completion:")]
		UICollectionViewTransitionLayout StartInteractiveTransitionToCollectionViewLayout (UICollectionViewLayout layout, [NullAllowed] UICollectionViewLayoutInteractiveTransitionCompletion completion);

		// -(void)finishInteractiveTransition __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("finishInteractiveTransition")]
		void FinishInteractiveTransition ();

		// -(void)cancelInteractiveTransition __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("cancelInteractiveTransition")]
		void CancelInteractiveTransition ();

		// @property (readonly, nonatomic) NSInteger numberOfSections;
		[Export ("numberOfSections")]
		nint NumberOfSections { get; }

		// -(NSInteger)numberOfItemsInSection:(NSInteger)section;
		[Export ("numberOfItemsInSection:")]
		nint NumberOfItemsInSection (nint section);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForItemAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForItemAtIndexPath (NSIndexPath indexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForSupplementaryElementOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForSupplementaryElementOfKind (string kind, NSIndexPath indexPath);

		// -(NSIndexPath * _Nullable)indexPathForItemAtPoint:(CGPoint)point;
		[Export ("indexPathForItemAtPoint:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForItemAtPoint (CGPoint point);

		// -(NSIndexPath * _Nullable)indexPathForCell:(UICollectionViewCell * _Nonnull)cell;
		[Export ("indexPathForCell:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForCell (UICollectionViewCell cell);

		// -(UICollectionViewCell * _Nullable)cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("cellForItemAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewCell CellForItemAtIndexPath (NSIndexPath indexPath);

		// @property (readonly, nonatomic) NSArray<__kindof UICollectionViewCell *> * _Nonnull visibleCells;
		[Export ("visibleCells")]
		UICollectionViewCell[] VisibleCells { get; }

		// @property (readonly, nonatomic) NSArray<NSIndexPath *> * _Nonnull indexPathsForVisibleItems;
		[Export ("indexPathsForVisibleItems")]
		NSIndexPath[] IndexPathsForVisibleItems { get; }

		// -(UICollectionReusableView * _Nullable)supplementaryViewForElementKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("supplementaryViewForElementKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionReusableView SupplementaryViewForElementKind (string elementKind, NSIndexPath indexPath);

		// -(NSArray<UICollectionReusableView *> * _Nonnull)visibleSupplementaryViewsOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("visibleSupplementaryViewsOfKind:")]
		UICollectionReusableView[] VisibleSupplementaryViewsOfKind (string elementKind);

		// -(NSArray<NSIndexPath *> * _Nonnull)indexPathsForVisibleSupplementaryElementsOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("indexPathsForVisibleSupplementaryElementsOfKind:")]
		NSIndexPath[] IndexPathsForVisibleSupplementaryElementsOfKind (string elementKind);

		// -(void)scrollToItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(int)animated;
		[Export ("scrollToItemAtIndexPath:atScrollPosition:animated:")]
		void ScrollToItemAtIndexPath (NSIndexPath indexPath, UICollectionViewScrollPosition scrollPosition, int animated);

		// -(void)insertSections:(NSIndexSet * _Nonnull)sections;
		[Export ("insertSections:")]
		void InsertSections (NSIndexSet sections);

		// -(void)deleteSections:(NSIndexSet * _Nonnull)sections;
		[Export ("deleteSections:")]
		void DeleteSections (NSIndexSet sections);

		// -(void)reloadSections:(NSIndexSet * _Nonnull)sections;
		[Export ("reloadSections:")]
		void ReloadSections (NSIndexSet sections);

		// -(void)moveSection:(NSInteger)section toSection:(NSInteger)newSection;
		[Export ("moveSection:toSection:")]
		void MoveSection (nint section, nint newSection);

		// -(void)insertItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
		[Export ("insertItemsAtIndexPaths:")]
		void InsertItemsAtIndexPaths (NSIndexPath[] indexPaths);

		// -(void)deleteItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
		[Export ("deleteItemsAtIndexPaths:")]
		void DeleteItemsAtIndexPaths (NSIndexPath[] indexPaths);

		// -(void)reloadItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
		[Export ("reloadItemsAtIndexPaths:")]
		void ReloadItemsAtIndexPaths (NSIndexPath[] indexPaths);

		// -(void)moveItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath toIndexPath:(NSIndexPath * _Nonnull)newIndexPath;
		[Export ("moveItemAtIndexPath:toIndexPath:")]
		void MoveItemAtIndexPath (NSIndexPath indexPath, NSIndexPath newIndexPath);

		// -(void)performBatchUpdates:(void (^ _Nullable)(void))updates completion:(void (^ _Nullable)(int))completion;
		[Export ("performBatchUpdates:completion:")]
		void PerformBatchUpdates ([NullAllowed] Action updates, [NullAllowed] Action<int> completion);

		// -(int)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("beginInteractiveMovementForItemAtIndexPath:")]
		int BeginInteractiveMovementForItemAtIndexPath (NSIndexPath indexPath);

		// -(void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("updateInteractiveMovementTargetPosition:")]
		void UpdateInteractiveMovementTargetPosition (CGPoint targetPosition);

		// -(void)endInteractiveMovement __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("endInteractiveMovement")]
		void EndInteractiveMovement ();

		// -(void)cancelInteractiveMovement __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("cancelInteractiveMovement")]
		void CancelInteractiveMovement ();

		// @property (nonatomic) int remembersLastFocusedIndexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("remembersLastFocusedIndexPath")]
		int RemembersLastFocusedIndexPath { get; set; }

		// @property (readonly, nonatomic) int hasActiveDrag __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("hasActiveDrag")]
		int HasActiveDrag { get; }

		// @property (readonly, nonatomic) int hasActiveDrop __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("hasActiveDrop")]
		int HasActiveDrop { get; }
	}

	// @interface UIDragAndDrop (UICollectionView) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UICollectionView))]
	interface UICollectionView_UIDragAndDrop : IUISpringLoadedInteractionSupporting
	{
	}

	// @protocol UICollectionViewDragDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDragDelegate
	{
		// @required -(NSArray<UIDragItem *> * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView itemsForBeginningDragSession:(id<UIDragSession> _Nonnull)session atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("collectionView:itemsForBeginningDragSession:atIndexPath:")]
		UIDragItem[] CollectionView (UICollectionView collectionView, UIDragSession session, NSIndexPath indexPath);

		// @optional -(NSArray<UIDragItem *> * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView itemsForAddingToDragSession:(id<UIDragSession> _Nonnull)session atIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point;
		[Export ("collectionView:itemsForAddingToDragSession:atIndexPath:point:")]
		UIDragItem[] CollectionView (UICollectionView collectionView, UIDragSession session, NSIndexPath indexPath, CGPoint point);

		// @optional -(UIDragPreviewParameters * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView dragPreviewParametersForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:dragPreviewParametersForItemAtIndexPath:")]
		[return: NullAllowed]
		UIDragPreviewParameters CollectionView (UICollectionView collectionView, NSIndexPath indexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView dragSessionWillBegin:(id<UIDragSession> _Nonnull)session;
		[Export ("collectionView:dragSessionWillBegin:")]
		void CollectionView (UICollectionView collectionView, UIDragSession session);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView dragSessionDidEnd:(id<UIDragSession> _Nonnull)session;
		[Export ("collectionView:dragSessionDidEnd:")]
		void CollectionView (UICollectionView collectionView, UIDragSession session);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView dragSessionAllowsMoveOperation:(id<UIDragSession> _Nonnull)session;
		[Export ("collectionView:dragSessionAllowsMoveOperation:")]
		int CollectionView (UICollectionView collectionView, UIDragSession session);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession> _Nonnull)session;
		[Export ("collectionView:dragSessionIsRestrictedToDraggingApplication:")]
		int CollectionView (UICollectionView collectionView, UIDragSession session);
	}

	// @protocol UICollectionViewDropDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDropDelegate
	{
		// @required -(void)collectionView:(UICollectionView * _Nonnull)collectionView performDropWithCoordinator:(id<UICollectionViewDropCoordinator> _Nonnull)coordinator;
		[Abstract]
		[Export ("collectionView:performDropWithCoordinator:")]
		void CollectionView (UICollectionView collectionView, UICollectionViewDropCoordinator coordinator);

		// @optional -(int)collectionView:(UICollectionView * _Nonnull)collectionView canHandleDropSession:(id<UIDropSession> _Nonnull)session;
		[Export ("collectionView:canHandleDropSession:")]
		int CollectionView (UICollectionView collectionView, UIDropSession session);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView dropSessionDidEnter:(id<UIDropSession> _Nonnull)session;
		[Export ("collectionView:dropSessionDidEnter:")]
		void CollectionView (UICollectionView collectionView, UIDropSession session);

		// @optional -(UICollectionViewDropProposal * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView dropSessionDidUpdate:(id<UIDropSession> _Nonnull)session withDestinationIndexPath:(NSIndexPath * _Nullable)destinationIndexPath;
		[Export ("collectionView:dropSessionDidUpdate:withDestinationIndexPath:")]
		UICollectionViewDropProposal CollectionView (UICollectionView collectionView, UIDropSession session, [NullAllowed] NSIndexPath destinationIndexPath);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView dropSessionDidExit:(id<UIDropSession> _Nonnull)session;
		[Export ("collectionView:dropSessionDidExit:")]
		void CollectionView (UICollectionView collectionView, UIDropSession session);

		// @optional -(void)collectionView:(UICollectionView * _Nonnull)collectionView dropSessionDidEnd:(id<UIDropSession> _Nonnull)session;
		[Export ("collectionView:dropSessionDidEnd:")]
		void CollectionView (UICollectionView collectionView, UIDropSession session);

		// @optional -(UIDragPreviewParameters * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView dropPreviewParametersForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:dropPreviewParametersForItemAtIndexPath:")]
		[return: NullAllowed]
		UIDragPreviewParameters CollectionView (UICollectionView collectionView, NSIndexPath indexPath);
	}

	// @interface UICollectionViewDropProposal : UIDropProposal
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIDropProposal))]
	interface UICollectionViewDropProposal
	{
		// -(instancetype _Nonnull)initWithDropOperation:(UIDropOperation)operation intent:(UICollectionViewDropIntent)intent;
		[Export ("initWithDropOperation:intent:")]
		IntPtr Constructor (UIDropOperation operation, UICollectionViewDropIntent intent);

		// @property (readonly, nonatomic) UICollectionViewDropIntent intent;
		[Export ("intent")]
		UICollectionViewDropIntent Intent { get; }
	}

	// @protocol UICollectionViewDropCoordinator <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDropCoordinator
	{
		// @required @property (readonly, nonatomic) NSArray<id<UICollectionViewDropItem>> * _Nonnull items;
		[Abstract]
		[Export ("items")]
		UICollectionViewDropItem[] Items { get; }

		// @required @property (readonly, nonatomic) NSIndexPath * _Nullable destinationIndexPath;
		[Abstract]
		[NullAllowed, Export ("destinationIndexPath")]
		NSIndexPath DestinationIndexPath { get; }

		// @required @property (readonly, nonatomic) UICollectionViewDropProposal * _Nonnull proposal;
		[Abstract]
		[Export ("proposal")]
		UICollectionViewDropProposal Proposal { get; }

		// @required @property (readonly, nonatomic) id<UIDropSession> _Nonnull session;
		[Abstract]
		[Export ("session")]
		UIDropSession Session { get; }

		// @required -(id<UICollectionViewDropPlaceholderContext> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toPlaceholder:(UICollectionViewDropPlaceholder * _Nonnull)placeholder;
		[Abstract]
		[Export ("dropItem:toPlaceholder:")]
		UICollectionViewDropPlaceholderContext DropItem (UIDragItem dragItem, UICollectionViewDropPlaceholder placeholder);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("dropItem:toItemAtIndexPath:")]
		UIDragAnimating DropItem (UIDragItem dragItem, NSIndexPath indexPath);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem intoItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath rect:(CGRect)rect;
		[Abstract]
		[Export ("dropItem:intoItemAtIndexPath:rect:")]
		UIDragAnimating DropItem (UIDragItem dragItem, NSIndexPath indexPath, CGRect rect);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toTarget:(UIDragPreviewTarget * _Nonnull)target;
		[Abstract]
		[Export ("dropItem:toTarget:")]
		UIDragAnimating DropItem (UIDragItem dragItem, UIDragPreviewTarget target);
	}

	// @interface UICollectionViewPlaceholder : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UICollectionViewPlaceholder
	{
		// -(instancetype _Nonnull)initWithInsertionIndexPath:(NSIndexPath * _Nonnull)insertionIndexPath reuseIdentifier:(NSString * _Nonnull)reuseIdentifier __attribute__((objc_designated_initializer));
		[Export ("initWithInsertionIndexPath:reuseIdentifier:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSIndexPath insertionIndexPath, string reuseIdentifier);

		// @property (copy, nonatomic) void (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull) cellUpdateHandler;
		[NullAllowed, Export ("cellUpdateHandler", ArgumentSemantic.Copy)]
		Action<UICollectionViewCell> CellUpdateHandler { get; set; }
	}

	// @interface UICollectionViewDropPlaceholder : UICollectionViewPlaceholder
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UICollectionViewPlaceholder))]
	interface UICollectionViewDropPlaceholder
	{
		// @property (copy, nonatomic) UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UICollectionViewCell * _Nonnull) previewParametersProvider;
		[NullAllowed, Export ("previewParametersProvider", ArgumentSemantic.Copy)]
		Func<UICollectionViewCell, UIDragPreviewParameters> PreviewParametersProvider { get; set; }
	}

	// @protocol UICollectionViewDropItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewDropItem
	{
		// @required @property (readonly, nonatomic) UIDragItem * _Nonnull dragItem;
		[Abstract]
		[Export ("dragItem")]
		UIDragItem DragItem { get; }

		// @required @property (readonly, nonatomic) NSIndexPath * _Nullable sourceIndexPath;
		[Abstract]
		[NullAllowed, Export ("sourceIndexPath")]
		NSIndexPath SourceIndexPath { get; }

		// @required @property (readonly, nonatomic) CGSize previewSize;
		[Abstract]
		[Export ("previewSize")]
		CGSize PreviewSize { get; }
	}

	// @protocol UICollectionViewDropPlaceholderContext <UIDragAnimating>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UICollectionViewDropPlaceholderContext : IUIDragAnimating
	{
		// @required @property (readonly, nonatomic) UIDragItem * _Nonnull dragItem;
		[Abstract]
		[Export ("dragItem")]
		UIDragItem DragItem { get; }

		// @required -(int)commitInsertionWithDataSourceUpdates:(void (^ _Nonnull)(NSIndexPath * _Nonnull))dataSourceUpdates;
		[Abstract]
		[Export ("commitInsertionWithDataSourceUpdates:")]
		int CommitInsertionWithDataSourceUpdates (Action<NSIndexPath> dataSourceUpdates);

		// @required -(int)deletePlaceholder;
		[Abstract]
		[Export ("deletePlaceholder")]
		[Verify (MethodToProperty)]
		int DeletePlaceholder { get; }

		// @required -(void)setNeedsCellUpdate;
		[Abstract]
		[Export ("setNeedsCellUpdate")]
		void SetNeedsCellUpdate ();
	}

	// @interface UICollectionReusableView : UIView
	[iOS (6,0)]
	[BaseType (typeof(UIView))]
	interface UICollectionReusableView
	{
		// @property (readonly, copy, nonatomic) NSString * _Nullable reuseIdentifier;
		[NullAllowed, Export ("reuseIdentifier")]
		string ReuseIdentifier { get; }

		// -(void)prepareForReuse;
		[Export ("prepareForReuse")]
		void PrepareForReuse ();

		// -(void)applyLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes;
		[Export ("applyLayoutAttributes:")]
		void ApplyLayoutAttributes (UICollectionViewLayoutAttributes layoutAttributes);

		// -(void)willTransitionFromLayout:(UICollectionViewLayout * _Nonnull)oldLayout toLayout:(UICollectionViewLayout * _Nonnull)newLayout;
		[Export ("willTransitionFromLayout:toLayout:")]
		void WillTransitionFromLayout (UICollectionViewLayout oldLayout, UICollectionViewLayout newLayout);

		// -(void)didTransitionFromLayout:(UICollectionViewLayout * _Nonnull)oldLayout toLayout:(UICollectionViewLayout * _Nonnull)newLayout;
		[Export ("didTransitionFromLayout:toLayout:")]
		void DidTransitionFromLayout (UICollectionViewLayout oldLayout, UICollectionViewLayout newLayout);

		// -(UICollectionViewLayoutAttributes * _Nonnull)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributes __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("preferredLayoutAttributesFittingAttributes:")]
		UICollectionViewLayoutAttributes PreferredLayoutAttributesFittingAttributes (UICollectionViewLayoutAttributes layoutAttributes);
	}

	// @interface UICollectionViewCell : UICollectionReusableView
	[iOS (6,0)]
	[BaseType (typeof(UICollectionReusableView))]
	interface UICollectionViewCell
	{
		// @property (readonly, nonatomic) UIView * _Nonnull contentView;
		[Export ("contentView")]
		UIView ContentView { get; }

		// @property (getter = isSelected, nonatomic) int selected;
		[Export ("selected")]
		int Selected { [Bind ("isSelected")] get; set; }

		// @property (getter = isHighlighted, nonatomic) int highlighted;
		[Export ("highlighted")]
		int Highlighted { [Bind ("isHighlighted")] get; set; }

		// -(void)dragStateDidChange:(UICollectionViewCellDragState)dragState __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("dragStateDidChange:")]
		void DragStateDidChange (UICollectionViewCellDragState dragState);

		// @property (nonatomic, strong) UIView * _Nullable backgroundView;
		[NullAllowed, Export ("backgroundView", ArgumentSemantic.Strong)]
		UIView BackgroundView { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable selectedBackgroundView;
		[NullAllowed, Export ("selectedBackgroundView", ArgumentSemantic.Strong)]
		UIView SelectedBackgroundView { get; set; }
	}

	// @interface UICollectionViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>
	[iOS (6,0)]
	[BaseType (typeof(UIViewController))]
	interface UICollectionViewController : IUICollectionViewDelegate, IUICollectionViewDataSource
	{
		// -(instancetype _Nonnull)initWithCollectionViewLayout:(UICollectionViewLayout * _Nonnull)layout __attribute__((objc_designated_initializer));
		[Export ("initWithCollectionViewLayout:")]
		[DesignatedInitializer]
		IntPtr Constructor (UICollectionViewLayout layout);

		// -(instancetype _Nonnull)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil __attribute__((objc_designated_initializer));
		[Export ("initWithNibName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string nibNameOrNil, [NullAllowed] NSBundle nibBundleOrNil);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic, strong) __kindof UICollectionView * _Null_unspecified collectionView;
		[Export ("collectionView", ArgumentSemantic.Strong)]
		UICollectionView CollectionView { get; set; }

		// @property (nonatomic) int clearsSelectionOnViewWillAppear;
		[Export ("clearsSelectionOnViewWillAppear")]
		int ClearsSelectionOnViewWillAppear { get; set; }

		// @property (assign, nonatomic) int useLayoutToLayoutNavigationTransitions __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("useLayoutToLayoutNavigationTransitions")]
		int UseLayoutToLayoutNavigationTransitions { get; set; }

		// @property (readonly, nonatomic) UICollectionViewLayout * _Nonnull collectionViewLayout __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("collectionViewLayout")]
		UICollectionViewLayout CollectionViewLayout { get; }

		// @property (nonatomic) int installsStandardGestureForInteractiveMovement __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("installsStandardGestureForInteractiveMovement")]
		int InstallsStandardGestureForInteractiveMovement { get; set; }
	}

	// @interface UICollectionViewLayoutAttributes : NSObject <NSCopying, UIDynamicItem>
	[iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewLayoutAttributes : INSCopying, IUIDynamicItem
	{
		// @property (nonatomic) CGRect frame;
		[Export ("frame", ArgumentSemantic.Assign)]
		CGRect Frame { get; set; }

		// @property (nonatomic) CGPoint center;
		[Export ("center", ArgumentSemantic.Assign)]
		CGPoint Center { get; set; }

		// @property (nonatomic) CGSize size;
		[Export ("size", ArgumentSemantic.Assign)]
		CGSize Size { get; set; }

		// @property (nonatomic) CATransform3D transform3D;
		[Export ("transform3D", ArgumentSemantic.Assign)]
		CATransform3D Transform3D { get; set; }

		// @property (nonatomic) CGRect bounds __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("bounds", ArgumentSemantic.Assign)]
		CGRect Bounds { get; set; }

		// @property (nonatomic) CGAffineTransform transform __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("transform", ArgumentSemantic.Assign)]
		CGAffineTransform Transform { get; set; }

		// @property (nonatomic) CGFloat alpha;
		[Export ("alpha")]
		nfloat Alpha { get; set; }

		// @property (nonatomic) NSInteger zIndex;
		[Export ("zIndex")]
		nint ZIndex { get; set; }

		// @property (getter = isHidden, nonatomic) int hidden;
		[Export ("hidden")]
		int Hidden { [Bind ("isHidden")] get; set; }

		// @property (nonatomic, strong) NSIndexPath * _Nonnull indexPath;
		[Export ("indexPath", ArgumentSemantic.Strong)]
		NSIndexPath IndexPath { get; set; }

		// @property (readonly, nonatomic) UICollectionElementCategory representedElementCategory;
		[Export ("representedElementCategory")]
		UICollectionElementCategory RepresentedElementCategory { get; }

		// @property (readonly, nonatomic) NSString * _Nullable representedElementKind;
		[NullAllowed, Export ("representedElementKind")]
		string RepresentedElementKind { get; }

		// +(instancetype _Nonnull)layoutAttributesForCellWithIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Static]
		[Export ("layoutAttributesForCellWithIndexPath:")]
		UICollectionViewLayoutAttributes LayoutAttributesForCellWithIndexPath (NSIndexPath indexPath);

		// +(instancetype _Nonnull)layoutAttributesForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind withIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Static]
		[Export ("layoutAttributesForSupplementaryViewOfKind:withIndexPath:")]
		UICollectionViewLayoutAttributes LayoutAttributesForSupplementaryViewOfKind (string elementKind, NSIndexPath indexPath);

		// +(instancetype _Nonnull)layoutAttributesForDecorationViewOfKind:(NSString * _Nonnull)decorationViewKind withIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Static]
		[Export ("layoutAttributesForDecorationViewOfKind:withIndexPath:")]
		UICollectionViewLayoutAttributes LayoutAttributesForDecorationViewOfKind (string decorationViewKind, NSIndexPath indexPath);
	}

	// @interface UICollectionViewUpdateItem : NSObject
	[iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewUpdateItem
	{
		// @property (readonly, nonatomic) NSIndexPath * _Nullable indexPathBeforeUpdate;
		[NullAllowed, Export ("indexPathBeforeUpdate")]
		NSIndexPath IndexPathBeforeUpdate { get; }

		// @property (readonly, nonatomic) NSIndexPath * _Nullable indexPathAfterUpdate;
		[NullAllowed, Export ("indexPathAfterUpdate")]
		NSIndexPath IndexPathAfterUpdate { get; }

		// @property (readonly, nonatomic) UICollectionUpdateAction updateAction;
		[Export ("updateAction")]
		UICollectionUpdateAction UpdateAction { get; }
	}

	// @interface UICollectionViewLayoutInvalidationContext : NSObject
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewLayoutInvalidationContext
	{
		// @property (readonly, nonatomic) int invalidateEverything;
		[Export ("invalidateEverything")]
		int InvalidateEverything { get; }

		// @property (readonly, nonatomic) int invalidateDataSourceCounts;
		[Export ("invalidateDataSourceCounts")]
		int InvalidateDataSourceCounts { get; }

		// -(void)invalidateItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("invalidateItemsAtIndexPaths:")]
		void InvalidateItemsAtIndexPaths (NSIndexPath[] indexPaths);

		// -(void)invalidateSupplementaryElementsOfKind:(NSString * _Nonnull)elementKind atIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("invalidateSupplementaryElementsOfKind:atIndexPaths:")]
		void InvalidateSupplementaryElementsOfKind (string elementKind, NSIndexPath[] indexPaths);

		// -(void)invalidateDecorationElementsOfKind:(NSString * _Nonnull)elementKind atIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("invalidateDecorationElementsOfKind:atIndexPaths:")]
		void InvalidateDecorationElementsOfKind (string elementKind, NSIndexPath[] indexPaths);

		// @property (readonly, nonatomic) NSArray<NSIndexPath *> * _Nullable invalidatedItemIndexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("invalidatedItemIndexPaths")]
		NSIndexPath[] InvalidatedItemIndexPaths { get; }

		// @property (readonly, nonatomic) NSDictionary<NSString *,NSArray<NSIndexPath *> *> * _Nullable invalidatedSupplementaryIndexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("invalidatedSupplementaryIndexPaths")]
		NSDictionary<NSString, NSArray<NSIndexPath>> InvalidatedSupplementaryIndexPaths { get; }

		// @property (readonly, nonatomic) NSDictionary<NSString *,NSArray<NSIndexPath *> *> * _Nullable invalidatedDecorationIndexPaths __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("invalidatedDecorationIndexPaths")]
		NSDictionary<NSString, NSArray<NSIndexPath>> InvalidatedDecorationIndexPaths { get; }

		// @property (nonatomic) CGPoint contentOffsetAdjustment __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("contentOffsetAdjustment", ArgumentSemantic.Assign)]
		CGPoint ContentOffsetAdjustment { get; set; }

		// @property (nonatomic) CGSize contentSizeAdjustment __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("contentSizeAdjustment", ArgumentSemantic.Assign)]
		CGSize ContentSizeAdjustment { get; set; }

		// @property (readonly, copy, nonatomic) NSArray<NSIndexPath *> * _Nullable previousIndexPathsForInteractivelyMovingItems __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("previousIndexPathsForInteractivelyMovingItems", ArgumentSemantic.Copy)]
		NSIndexPath[] PreviousIndexPathsForInteractivelyMovingItems { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSIndexPath *> * _Nullable targetIndexPathsForInteractivelyMovingItems __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("targetIndexPathsForInteractivelyMovingItems", ArgumentSemantic.Copy)]
		NSIndexPath[] TargetIndexPathsForInteractivelyMovingItems { get; }

		// @property (readonly, nonatomic) CGPoint interactiveMovementTarget __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("interactiveMovementTarget")]
		CGPoint InteractiveMovementTarget { get; }
	}

	// @interface UICollectionViewLayout : NSObject <NSCoding>
	[iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewLayout : INSCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic) UICollectionView * _Nullable collectionView;
		[NullAllowed, Export ("collectionView")]
		UICollectionView CollectionView { get; }

		// -(void)invalidateLayout;
		[Export ("invalidateLayout")]
		void InvalidateLayout ();

		// -(void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext * _Nonnull)context __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("invalidateLayoutWithContext:")]
		void InvalidateLayoutWithContext (UICollectionViewLayoutInvalidationContext context);

		// -(void)registerClass:(Class _Nullable)viewClass forDecorationViewOfKind:(NSString * _Nonnull)elementKind;
		[Export ("registerClass:forDecorationViewOfKind:")]
		void RegisterClass ([NullAllowed] Class viewClass, string elementKind);

		// -(void)registerNib:(UINib * _Nullable)nib forDecorationViewOfKind:(NSString * _Nonnull)elementKind;
		[Export ("registerNib:forDecorationViewOfKind:")]
		void RegisterNib ([NullAllowed] UINib nib, string elementKind);
	}

	// @interface UISubclassingHooks (UICollectionViewLayout)
	[Category]
	[BaseType (typeof(UICollectionViewLayout))]
	interface UICollectionViewLayout_UISubclassingHooks
	{
		// @property (readonly, nonatomic, class) Class _Nonnull layoutAttributesClass;
		[Static]
		[Export ("layoutAttributesClass")]
		Class LayoutAttributesClass { get; }

		// @property (readonly, nonatomic, class) Class _Nonnull invalidationContextClass __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Static]
		[Export ("invalidationContextClass")]
		Class InvalidationContextClass { get; }

		// -(void)prepareLayout;
		[Export ("prepareLayout")]
		void PrepareLayout ();

		// -(NSArray<__kindof UICollectionViewLayoutAttributes *> * _Nullable)layoutAttributesForElementsInRect:(CGRect)rect;
		[Export ("layoutAttributesForElementsInRect:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes[] LayoutAttributesForElementsInRect (CGRect rect);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForItemAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForItemAtIndexPath (NSIndexPath indexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForSupplementaryViewOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForSupplementaryViewOfKind (string elementKind, NSIndexPath indexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForDecorationViewOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForDecorationViewOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForDecorationViewOfKind (string elementKind, NSIndexPath indexPath);

		// -(int)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds;
		[Export ("shouldInvalidateLayoutForBoundsChange:")]
		int ShouldInvalidateLayoutForBoundsChange (CGRect newBounds);

		// -(UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForBoundsChange:(CGRect)newBounds __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("invalidationContextForBoundsChange:")]
		UICollectionViewLayoutInvalidationContext InvalidationContextForBoundsChange (CGRect newBounds);

		// -(int)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:")]
		int ShouldInvalidateLayoutForPreferredLayoutAttributes (UICollectionViewLayoutAttributes preferredAttributes, UICollectionViewLayoutAttributes originalAttributes);

		// -(UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes * _Nonnull)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes * _Nonnull)originalAttributes __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:")]
		UICollectionViewLayoutInvalidationContext InvalidationContextForPreferredLayoutAttributes (UICollectionViewLayoutAttributes preferredAttributes, UICollectionViewLayoutAttributes originalAttributes);

		// -(CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity;
		[Export ("targetContentOffsetForProposedContentOffset:withScrollingVelocity:")]
		CGPoint TargetContentOffsetForProposedContentOffset (CGPoint proposedContentOffset, CGPoint velocity);

		// -(CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("targetContentOffsetForProposedContentOffset:")]
		CGPoint TargetContentOffsetForProposedContentOffset (CGPoint proposedContentOffset);

		// @property (readonly, nonatomic) CGSize collectionViewContentSize;
		[Export ("collectionViewContentSize")]
		CGSize CollectionViewContentSize { get; }

		// @property (readonly, nonatomic) UIUserInterfaceLayoutDirection developmentLayoutDirection;
		[Export ("developmentLayoutDirection")]
		UIUserInterfaceLayoutDirection DevelopmentLayoutDirection { get; }

		// @property (readonly, nonatomic) int flipsHorizontallyInOppositeLayoutDirection;
		[Export ("flipsHorizontallyInOppositeLayoutDirection")]
		int FlipsHorizontallyInOppositeLayoutDirection { get; }
	}

	// @interface UIUpdateSupportHooks (UICollectionViewLayout)
	[Category]
	[BaseType (typeof(UICollectionViewLayout))]
	interface UICollectionViewLayout_UIUpdateSupportHooks
	{
		// -(void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> * _Nonnull)updateItems;
		[Export ("prepareForCollectionViewUpdates:")]
		void PrepareForCollectionViewUpdates (UICollectionViewUpdateItem[] updateItems);

		// -(void)finalizeCollectionViewUpdates;
		[Export ("finalizeCollectionViewUpdates")]
		void FinalizeCollectionViewUpdates ();

		// -(void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
		[Export ("prepareForAnimatedBoundsChange:")]
		void PrepareForAnimatedBoundsChange (CGRect oldBounds);

		// -(void)finalizeAnimatedBoundsChange;
		[Export ("finalizeAnimatedBoundsChange")]
		void FinalizeAnimatedBoundsChange ();

		// -(void)prepareForTransitionToLayout:(UICollectionViewLayout * _Nonnull)newLayout __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("prepareForTransitionToLayout:")]
		void PrepareForTransitionToLayout (UICollectionViewLayout newLayout);

		// -(void)prepareForTransitionFromLayout:(UICollectionViewLayout * _Nonnull)oldLayout __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("prepareForTransitionFromLayout:")]
		void PrepareForTransitionFromLayout (UICollectionViewLayout oldLayout);

		// -(void)finalizeLayoutTransition __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("finalizeLayoutTransition")]
		void FinalizeLayoutTransition ();

		// -(UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath;
		[Export ("initialLayoutAttributesForAppearingItemAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingItemAtIndexPath (NSIndexPath itemIndexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath * _Nonnull)itemIndexPath;
		[Export ("finalLayoutAttributesForDisappearingItemAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingItemAtIndexPath (NSIndexPath itemIndexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath;
		[Export ("initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingSupplementaryElementOfKind (string elementKind, NSIndexPath elementIndexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)elementIndexPath;
		[Export ("finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingSupplementaryElementOfKind (string elementKind, NSIndexPath elementIndexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)initialLayoutAttributesForAppearingDecorationElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)decorationIndexPath;
		[Export ("initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingDecorationElementOfKind (string elementKind, NSIndexPath decorationIndexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)finalLayoutAttributesForDisappearingDecorationElementOfKind:(NSString * _Nonnull)elementKind atIndexPath:(NSIndexPath * _Nonnull)decorationIndexPath;
		[Export ("finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingDecorationElementOfKind (string elementKind, NSIndexPath decorationIndexPath);

		// -(NSArray<NSIndexPath *> * _Nonnull)indexPathsToDeleteForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("indexPathsToDeleteForSupplementaryViewOfKind:")]
		NSIndexPath[] IndexPathsToDeleteForSupplementaryViewOfKind (string elementKind);

		// -(NSArray<NSIndexPath *> * _Nonnull)indexPathsToDeleteForDecorationViewOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("indexPathsToDeleteForDecorationViewOfKind:")]
		NSIndexPath[] IndexPathsToDeleteForDecorationViewOfKind (string elementKind);

		// -(NSArray<NSIndexPath *> * _Nonnull)indexPathsToInsertForSupplementaryViewOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("indexPathsToInsertForSupplementaryViewOfKind:")]
		NSIndexPath[] IndexPathsToInsertForSupplementaryViewOfKind (string elementKind);

		// -(NSArray<NSIndexPath *> * _Nonnull)indexPathsToInsertForDecorationViewOfKind:(NSString * _Nonnull)elementKind __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("indexPathsToInsertForDecorationViewOfKind:")]
		NSIndexPath[] IndexPathsToInsertForDecorationViewOfKind (string elementKind);
	}

	// @interface UIReorderingSupportHooks (UICollectionViewLayout)
	[Category]
	[BaseType (typeof(UICollectionViewLayout))]
	interface UICollectionViewLayout_UIReorderingSupportHooks
	{
		// -(NSIndexPath * _Nonnull)targetIndexPathForInteractivelyMovingItem:(NSIndexPath * _Nonnull)previousIndexPath withPosition:(CGPoint)position __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("targetIndexPathForInteractivelyMovingItem:withPosition:")]
		NSIndexPath TargetIndexPathForInteractivelyMovingItem (NSIndexPath previousIndexPath, CGPoint position);

		// -(UICollectionViewLayoutAttributes * _Nonnull)layoutAttributesForInteractivelyMovingItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath withTargetPosition:(CGPoint)position __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:")]
		UICollectionViewLayoutAttributes LayoutAttributesForInteractivelyMovingItemAtIndexPath (NSIndexPath indexPath, CGPoint position);

		// -(UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForInteractivelyMovingItems:(NSArray<NSIndexPath *> * _Nonnull)targetIndexPaths withTargetPosition:(CGPoint)targetPosition previousIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)previousIndexPaths previousPosition:(CGPoint)previousPosition __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("invalidationContextForInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:")]
		UICollectionViewLayoutInvalidationContext InvalidationContextForInteractivelyMovingItems (NSIndexPath[] targetIndexPaths, CGPoint targetPosition, NSIndexPath[] previousIndexPaths, CGPoint previousPosition);

		// -(UICollectionViewLayoutInvalidationContext * _Nonnull)invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths previousIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)previousIndexPaths movementCancelled:(int)movementCancelled __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:previousIndexPaths:movementCancelled:")]
		UICollectionViewLayoutInvalidationContext InvalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths (NSIndexPath[] indexPaths, NSIndexPath[] previousIndexPaths, int movementCancelled);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UICollectionElementKindSectionHeader __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UICollectionElementKindSectionHeader", "__Internal")]
		NSString UICollectionElementKindSectionHeader { get; }

		// extern NSString *const _Nonnull UICollectionElementKindSectionFooter __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UICollectionElementKindSectionFooter", "__Internal")]
		NSString UICollectionElementKindSectionFooter { get; }

		// extern const CGSize UICollectionViewFlowLayoutAutomaticSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Field ("UICollectionViewFlowLayoutAutomaticSize", "__Internal")]
		CGSize UICollectionViewFlowLayoutAutomaticSize { get; }
	}

	// @interface UICollectionViewFlowLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
	[iOS (7,0)]
	[BaseType (typeof(UICollectionViewLayoutInvalidationContext))]
	interface UICollectionViewFlowLayoutInvalidationContext
	{
		// @property (nonatomic) int invalidateFlowLayoutDelegateMetrics;
		[Export ("invalidateFlowLayoutDelegateMetrics")]
		int InvalidateFlowLayoutDelegateMetrics { get; set; }

		// @property (nonatomic) int invalidateFlowLayoutAttributes;
		[Export ("invalidateFlowLayoutAttributes")]
		int InvalidateFlowLayoutAttributes { get; set; }
	}

	// @protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UICollectionViewDelegateFlowLayout : IUICollectionViewDelegate
	{
		// @optional -(CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("collectionView:layout:sizeForItemAtIndexPath:")]
		CGSize CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, NSIndexPath indexPath);

		// @optional -(UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;
		[Export ("collectionView:layout:insetForSectionAtIndex:")]
		UIEdgeInsets CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, nint section);

		// @optional -(CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;
		[Export ("collectionView:layout:minimumLineSpacingForSectionAtIndex:")]
		nfloat CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, nint section);

		// @optional -(CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;
		[Export ("collectionView:layout:minimumInteritemSpacingForSectionAtIndex:")]
		nfloat CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, nint section);

		// @optional -(CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;
		[Export ("collectionView:layout:referenceSizeForHeaderInSection:")]
		CGSize CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, nint section);

		// @optional -(CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section;
		[Export ("collectionView:layout:referenceSizeForFooterInSection:")]
		CGSize CollectionView (UICollectionView collectionView, UICollectionViewLayout collectionViewLayout, nint section);
	}

	// @interface UICollectionViewFlowLayout : UICollectionViewLayout
	[iOS (6,0)]
	[BaseType (typeof(UICollectionViewLayout))]
	interface UICollectionViewFlowLayout
	{
		// @property (nonatomic) CGFloat minimumLineSpacing;
		[Export ("minimumLineSpacing")]
		nfloat MinimumLineSpacing { get; set; }

		// @property (nonatomic) CGFloat minimumInteritemSpacing;
		[Export ("minimumInteritemSpacing")]
		nfloat MinimumInteritemSpacing { get; set; }

		// @property (nonatomic) CGSize itemSize;
		[Export ("itemSize", ArgumentSemantic.Assign)]
		CGSize ItemSize { get; set; }

		// @property (nonatomic) CGSize estimatedItemSize __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("estimatedItemSize", ArgumentSemantic.Assign)]
		CGSize EstimatedItemSize { get; set; }

		// @property (nonatomic) UICollectionViewScrollDirection scrollDirection;
		[Export ("scrollDirection", ArgumentSemantic.Assign)]
		UICollectionViewScrollDirection ScrollDirection { get; set; }

		// @property (nonatomic) CGSize headerReferenceSize;
		[Export ("headerReferenceSize", ArgumentSemantic.Assign)]
		CGSize HeaderReferenceSize { get; set; }

		// @property (nonatomic) CGSize footerReferenceSize;
		[Export ("footerReferenceSize", ArgumentSemantic.Assign)]
		CGSize FooterReferenceSize { get; set; }

		// @property (nonatomic) UIEdgeInsets sectionInset;
		[Export ("sectionInset", ArgumentSemantic.Assign)]
		UIEdgeInsets SectionInset { get; set; }

		// @property (nonatomic) UICollectionViewFlowLayoutSectionInsetReference sectionInsetReference __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, unavailable)));
		[TV (11, 0), NoWatch, iOS (11, 0)]
		[Export ("sectionInsetReference", ArgumentSemantic.Assign)]
		UICollectionViewFlowLayoutSectionInsetReference SectionInsetReference { get; set; }

		// @property (nonatomic) int sectionHeadersPinToVisibleBounds __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("sectionHeadersPinToVisibleBounds")]
		int SectionHeadersPinToVisibleBounds { get; set; }

		// @property (nonatomic) int sectionFootersPinToVisibleBounds __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("sectionFootersPinToVisibleBounds")]
		int SectionFootersPinToVisibleBounds { get; set; }
	}

	// @interface UICollectionViewTransitionLayout : UICollectionViewLayout
	[iOS (7,0)]
	[BaseType (typeof(UICollectionViewLayout))]
	[DisableDefaultCtor]
	interface UICollectionViewTransitionLayout
	{
		// @property (assign, nonatomic) CGFloat transitionProgress;
		[Export ("transitionProgress")]
		nfloat TransitionProgress { get; set; }

		// @property (readonly, nonatomic) UICollectionViewLayout * _Nonnull currentLayout;
		[Export ("currentLayout")]
		UICollectionViewLayout CurrentLayout { get; }

		// @property (readonly, nonatomic) UICollectionViewLayout * _Nonnull nextLayout;
		[Export ("nextLayout")]
		UICollectionViewLayout NextLayout { get; }

		// -(instancetype _Nonnull)initWithCurrentLayout:(UICollectionViewLayout * _Nonnull)currentLayout nextLayout:(UICollectionViewLayout * _Nonnull)newLayout __attribute__((objc_designated_initializer));
		[Export ("initWithCurrentLayout:nextLayout:")]
		[DesignatedInitializer]
		IntPtr Constructor (UICollectionViewLayout currentLayout, UICollectionViewLayout newLayout);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(void)updateValue:(CGFloat)value forAnimatedKey:(NSString * _Nonnull)key;
		[Export ("updateValue:forAnimatedKey:")]
		void UpdateValue (nfloat value, string key);

		// -(CGFloat)valueForAnimatedKey:(NSString * _Nonnull)key;
		[Export ("valueForAnimatedKey:")]
		nfloat ValueForAnimatedKey (string key);
	}

	// @interface UICollectionViewCompositionalLayoutConfiguration : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UICollectionViewCompositionalLayoutConfiguration : INSCopying
	{
		// @property (nonatomic) UICollectionViewScrollDirection scrollDirection;
		[Export ("scrollDirection", ArgumentSemantic.Assign)]
		UICollectionViewScrollDirection ScrollDirection { get; set; }

		// @property (nonatomic) CGFloat interSectionSpacing;
		[Export ("interSectionSpacing")]
		nfloat InterSectionSpacing { get; set; }

		// @property (copy, nonatomic) NSArray<NSCollectionLayoutBoundarySupplementaryItem *> * _Nonnull boundarySupplementaryItems;
		[Export ("boundarySupplementaryItems", ArgumentSemantic.Copy)]
		NSCollectionLayoutBoundarySupplementaryItem[] BoundarySupplementaryItems { get; set; }
	}

	// typedef NSCollectionLayoutSection * _Nullable (^UICollectionViewCompositionalLayoutSectionProvider)(NSInteger, id<NSCollectionLayoutEnvironment> _Nonnull);
	delegate NSCollectionLayoutSection UICollectionViewCompositionalLayoutSectionProvider (nint arg0, NSCollectionLayoutEnvironment arg1);

	// @interface UICollectionViewCompositionalLayout : UICollectionViewLayout
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(UICollectionViewLayout))]
	[DisableDefaultCtor]
	interface UICollectionViewCompositionalLayout
	{
		// -(instancetype _Nonnull)initWithSection:(NSCollectionLayoutSection * _Nonnull)section;
		[Export ("initWithSection:")]
		IntPtr Constructor (NSCollectionLayoutSection section);

		// -(instancetype _Nonnull)initWithSection:(NSCollectionLayoutSection * _Nonnull)section configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration;
		[Export ("initWithSection:configuration:")]
		IntPtr Constructor (NSCollectionLayoutSection section, UICollectionViewCompositionalLayoutConfiguration configuration);

		// -(instancetype _Nonnull)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider;
		[Export ("initWithSectionProvider:")]
		IntPtr Constructor (UICollectionViewCompositionalLayoutSectionProvider sectionProvider);

		// -(instancetype _Nonnull)initWithSectionProvider:(UICollectionViewCompositionalLayoutSectionProvider _Nonnull)sectionProvider configuration:(UICollectionViewCompositionalLayoutConfiguration * _Nonnull)configuration;
		[Export ("initWithSectionProvider:configuration:")]
		IntPtr Constructor (UICollectionViewCompositionalLayoutSectionProvider sectionProvider, UICollectionViewCompositionalLayoutConfiguration configuration);

		// @property (copy, nonatomic) UICollectionViewCompositionalLayoutConfiguration * _Nonnull configuration;
		[Export ("configuration", ArgumentSemantic.Copy)]
		UICollectionViewCompositionalLayoutConfiguration Configuration { get; set; }
	}

	// typedef void (^NSCollectionLayoutSectionVisibleItemsInvalidationHandler)(NSArray<id<NSCollectionLayoutVisibleItem>> * _Nonnull, CGPoint, id<NSCollectionLayoutEnvironment> _Nonnull);
	delegate void NSCollectionLayoutSectionVisibleItemsInvalidationHandler (NSCollectionLayoutVisibleItem[] arg0, CGPoint arg1, NSCollectionLayoutEnvironment arg2);

	// @interface NSCollectionLayoutSection : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutSection : INSCopying
	{
		// +(instancetype _Nonnull)sectionWithGroup:(NSCollectionLayoutGroup * _Nonnull)group;
		[Static]
		[Export ("sectionWithGroup:")]
		NSCollectionLayoutSection SectionWithGroup (NSCollectionLayoutGroup group);

		// @property (nonatomic) NSDirectionalEdgeInsets contentInsets;
		[Export ("contentInsets", ArgumentSemantic.Assign)]
		NSDirectionalEdgeInsets ContentInsets { get; set; }

		// @property (nonatomic) CGFloat interGroupSpacing;
		[Export ("interGroupSpacing")]
		nfloat InterGroupSpacing { get; set; }

		// @property (nonatomic) UICollectionLayoutSectionOrthogonalScrollingBehavior orthogonalScrollingBehavior;
		[Export ("orthogonalScrollingBehavior", ArgumentSemantic.Assign)]
		UICollectionLayoutSectionOrthogonalScrollingBehavior OrthogonalScrollingBehavior { get; set; }

		// @property (copy, nonatomic) NSArray<NSCollectionLayoutBoundarySupplementaryItem *> * _Nonnull boundarySupplementaryItems;
		[Export ("boundarySupplementaryItems", ArgumentSemantic.Copy)]
		NSCollectionLayoutBoundarySupplementaryItem[] BoundarySupplementaryItems { get; set; }

		// @property (nonatomic) int supplementariesFollowContentInsets;
		[Export ("supplementariesFollowContentInsets")]
		int SupplementariesFollowContentInsets { get; set; }

		// @property (copy, nonatomic) NSCollectionLayoutSectionVisibleItemsInvalidationHandler _Nullable visibleItemsInvalidationHandler;
		[NullAllowed, Export ("visibleItemsInvalidationHandler", ArgumentSemantic.Copy)]
		NSCollectionLayoutSectionVisibleItemsInvalidationHandler VisibleItemsInvalidationHandler { get; set; }

		// @property (copy, nonatomic) NSArray<NSCollectionLayoutDecorationItem *> * _Nonnull decorationItems;
		[Export ("decorationItems", ArgumentSemantic.Copy)]
		NSCollectionLayoutDecorationItem[] DecorationItems { get; set; }
	}

	// @interface NSCollectionLayoutItem : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutItem : INSCopying
	{
		// +(instancetype _Nonnull)itemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize;
		[Static]
		[Export ("itemWithLayoutSize:")]
		NSCollectionLayoutItem ItemWithLayoutSize (NSCollectionLayoutSize layoutSize);

		// +(instancetype _Nonnull)itemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize supplementaryItems:(NSArray<NSCollectionLayoutSupplementaryItem *> * _Nonnull)supplementaryItems;
		[Static]
		[Export ("itemWithLayoutSize:supplementaryItems:")]
		NSCollectionLayoutItem ItemWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutSupplementaryItem[] supplementaryItems);

		// @property (nonatomic) NSDirectionalEdgeInsets contentInsets;
		[Export ("contentInsets", ArgumentSemantic.Assign)]
		NSDirectionalEdgeInsets ContentInsets { get; set; }

		// @property (copy, nonatomic) NSCollectionLayoutEdgeSpacing * _Nullable edgeSpacing;
		[NullAllowed, Export ("edgeSpacing", ArgumentSemantic.Copy)]
		NSCollectionLayoutEdgeSpacing EdgeSpacing { get; set; }

		// @property (readonly, nonatomic) NSCollectionLayoutSize * _Nonnull layoutSize;
		[Export ("layoutSize")]
		NSCollectionLayoutSize LayoutSize { get; }

		// @property (readonly, nonatomic) NSArray<NSCollectionLayoutSupplementaryItem *> * _Nonnull supplementaryItems;
		[Export ("supplementaryItems")]
		NSCollectionLayoutSupplementaryItem[] SupplementaryItems { get; }
	}

	// @interface NSCollectionLayoutGroupCustomItem : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutGroupCustomItem : INSCopying
	{
		// +(instancetype _Nonnull)customItemWithFrame:(CGRect)frame;
		[Static]
		[Export ("customItemWithFrame:")]
		NSCollectionLayoutGroupCustomItem CustomItemWithFrame (CGRect frame);

		// +(instancetype _Nonnull)customItemWithFrame:(CGRect)frame zIndex:(NSInteger)zIndex;
		[Static]
		[Export ("customItemWithFrame:zIndex:")]
		NSCollectionLayoutGroupCustomItem CustomItemWithFrame (CGRect frame, nint zIndex);

		// @property (readonly, nonatomic) CGRect frame;
		[Export ("frame")]
		CGRect Frame { get; }

		// @property (readonly, nonatomic) NSInteger zIndex;
		[Export ("zIndex")]
		nint ZIndex { get; }
	}

	// typedef NSArray<NSCollectionLayoutGroupCustomItem *> * _Nonnull (^NSCollectionLayoutGroupCustomItemProvider)(id<NSCollectionLayoutEnvironment> _Nonnull);
	delegate NSCollectionLayoutGroupCustomItem[] NSCollectionLayoutGroupCustomItemProvider (NSCollectionLayoutEnvironment arg0);

	// @interface NSCollectionLayoutGroup : NSCollectionLayoutItem <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSCollectionLayoutItem))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutGroup : INSCopying
	{
		// +(instancetype _Nonnull)horizontalGroupWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize subitem:(NSCollectionLayoutItem * _Nonnull)subitem count:(NSInteger)count;
		[Static]
		[Export ("horizontalGroupWithLayoutSize:subitem:count:")]
		NSCollectionLayoutGroup HorizontalGroupWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutItem subitem, nint count);

		// +(instancetype _Nonnull)horizontalGroupWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize subitems:(NSArray<NSCollectionLayoutItem *> * _Nonnull)subitems;
		[Static]
		[Export ("horizontalGroupWithLayoutSize:subitems:")]
		NSCollectionLayoutGroup HorizontalGroupWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutItem[] subitems);

		// +(instancetype _Nonnull)verticalGroupWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize subitem:(NSCollectionLayoutItem * _Nonnull)subitem count:(NSInteger)count;
		[Static]
		[Export ("verticalGroupWithLayoutSize:subitem:count:")]
		NSCollectionLayoutGroup VerticalGroupWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutItem subitem, nint count);

		// +(instancetype _Nonnull)verticalGroupWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize subitems:(NSArray<NSCollectionLayoutItem *> * _Nonnull)subitems;
		[Static]
		[Export ("verticalGroupWithLayoutSize:subitems:")]
		NSCollectionLayoutGroup VerticalGroupWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutItem[] subitems);

		// +(instancetype _Nonnull)customGroupWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize itemProvider:(NSCollectionLayoutGroupCustomItemProvider _Nonnull)itemProvider;
		[Static]
		[Export ("customGroupWithLayoutSize:itemProvider:")]
		NSCollectionLayoutGroup CustomGroupWithLayoutSize (NSCollectionLayoutSize layoutSize, NSCollectionLayoutGroupCustomItemProvider itemProvider);

		// @property (copy, nonatomic) NSArray<NSCollectionLayoutSupplementaryItem *> * _Nonnull supplementaryItems;
		[Export ("supplementaryItems", ArgumentSemantic.Copy)]
		NSCollectionLayoutSupplementaryItem[] SupplementaryItems { get; set; }

		// @property (copy, nonatomic) NSCollectionLayoutSpacing * _Nullable interItemSpacing;
		[NullAllowed, Export ("interItemSpacing", ArgumentSemantic.Copy)]
		NSCollectionLayoutSpacing InterItemSpacing { get; set; }

		// @property (readonly, nonatomic) NSArray<NSCollectionLayoutItem *> * _Nonnull subitems;
		[Export ("subitems")]
		NSCollectionLayoutItem[] Subitems { get; }

		// -(NSString * _Nonnull)visualDescription;
		[Export ("visualDescription")]
		[Verify (MethodToProperty)]
		string VisualDescription { get; }
	}

	// @interface NSCollectionLayoutDimension : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutDimension : INSCopying
	{
		// +(instancetype _Nonnull)fractionalWidthDimension:(CGFloat)fractionalWidth;
		[Static]
		[Export ("fractionalWidthDimension:")]
		NSCollectionLayoutDimension FractionalWidthDimension (nfloat fractionalWidth);

		// +(instancetype _Nonnull)fractionalHeightDimension:(CGFloat)fractionalHeight;
		[Static]
		[Export ("fractionalHeightDimension:")]
		NSCollectionLayoutDimension FractionalHeightDimension (nfloat fractionalHeight);

		// +(instancetype _Nonnull)absoluteDimension:(CGFloat)absoluteDimension;
		[Static]
		[Export ("absoluteDimension:")]
		NSCollectionLayoutDimension AbsoluteDimension (nfloat absoluteDimension);

		// +(instancetype _Nonnull)estimatedDimension:(CGFloat)estimatedDimension;
		[Static]
		[Export ("estimatedDimension:")]
		NSCollectionLayoutDimension EstimatedDimension (nfloat estimatedDimension);

		// @property (readonly, nonatomic) int isFractionalWidth;
		[Export ("isFractionalWidth")]
		int IsFractionalWidth { get; }

		// @property (readonly, nonatomic) int isFractionalHeight;
		[Export ("isFractionalHeight")]
		int IsFractionalHeight { get; }

		// @property (readonly, nonatomic) int isAbsolute;
		[Export ("isAbsolute")]
		int IsAbsolute { get; }

		// @property (readonly, nonatomic) int isEstimated;
		[Export ("isEstimated")]
		int IsEstimated { get; }

		// @property (readonly, nonatomic) CGFloat dimension;
		[Export ("dimension")]
		nfloat Dimension { get; }
	}

	// @interface NSCollectionLayoutSize : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutSize : INSCopying
	{
		// +(instancetype _Nonnull)sizeWithWidthDimension:(NSCollectionLayoutDimension * _Nonnull)width heightDimension:(NSCollectionLayoutDimension * _Nonnull)height;
		[Static]
		[Export ("sizeWithWidthDimension:heightDimension:")]
		NSCollectionLayoutSize SizeWithWidthDimension (NSCollectionLayoutDimension width, NSCollectionLayoutDimension height);

		// @property (readonly, nonatomic) NSCollectionLayoutDimension * _Nonnull widthDimension;
		[Export ("widthDimension")]
		NSCollectionLayoutDimension WidthDimension { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutDimension * _Nonnull heightDimension;
		[Export ("heightDimension")]
		NSCollectionLayoutDimension HeightDimension { get; }
	}

	// @interface NSCollectionLayoutSpacing : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutSpacing : INSCopying
	{
		// +(instancetype _Nonnull)flexibleSpacing:(CGFloat)flexibleSpacing;
		[Static]
		[Export ("flexibleSpacing:")]
		NSCollectionLayoutSpacing FlexibleSpacing (nfloat flexibleSpacing);

		// +(instancetype _Nonnull)fixedSpacing:(CGFloat)fixedSpacing;
		[Static]
		[Export ("fixedSpacing:")]
		NSCollectionLayoutSpacing FixedSpacing (nfloat fixedSpacing);

		// @property (readonly, nonatomic) CGFloat spacing;
		[Export ("spacing")]
		nfloat Spacing { get; }

		// @property (readonly, nonatomic) int isFlexibleSpacing;
		[Export ("isFlexibleSpacing")]
		int IsFlexibleSpacing { get; }

		// @property (readonly, nonatomic) int isFixedSpacing;
		[Export ("isFixedSpacing")]
		int IsFixedSpacing { get; }
	}

	// @interface NSCollectionLayoutEdgeSpacing : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutEdgeSpacing : INSCopying
	{
		// +(instancetype _Nonnull)spacingForLeading:(NSCollectionLayoutSpacing * _Nullable)leading top:(NSCollectionLayoutSpacing * _Nullable)top trailing:(NSCollectionLayoutSpacing * _Nullable)trailing bottom:(NSCollectionLayoutSpacing * _Nullable)bottom;
		[Static]
		[Export ("spacingForLeading:top:trailing:bottom:")]
		NSCollectionLayoutEdgeSpacing SpacingForLeading ([NullAllowed] NSCollectionLayoutSpacing leading, [NullAllowed] NSCollectionLayoutSpacing top, [NullAllowed] NSCollectionLayoutSpacing trailing, [NullAllowed] NSCollectionLayoutSpacing bottom);

		// @property (readonly, nonatomic) NSCollectionLayoutSpacing * _Nullable leading;
		[NullAllowed, Export ("leading")]
		NSCollectionLayoutSpacing Leading { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutSpacing * _Nullable top;
		[NullAllowed, Export ("top")]
		NSCollectionLayoutSpacing Top { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutSpacing * _Nullable trailing;
		[NullAllowed, Export ("trailing")]
		NSCollectionLayoutSpacing Trailing { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutSpacing * _Nullable bottom;
		[NullAllowed, Export ("bottom")]
		NSCollectionLayoutSpacing Bottom { get; }
	}

	// @interface NSCollectionLayoutSupplementaryItem : NSCollectionLayoutItem <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSCollectionLayoutItem))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutSupplementaryItem : INSCopying
	{
		// +(instancetype _Nonnull)supplementaryItemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize elementKind:(NSString * _Nonnull)elementKind containerAnchor:(NSCollectionLayoutAnchor * _Nonnull)containerAnchor;
		[Static]
		[Export ("supplementaryItemWithLayoutSize:elementKind:containerAnchor:")]
		NSCollectionLayoutSupplementaryItem SupplementaryItemWithLayoutSize (NSCollectionLayoutSize layoutSize, string elementKind, NSCollectionLayoutAnchor containerAnchor);

		// +(instancetype _Nonnull)supplementaryItemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize elementKind:(NSString * _Nonnull)elementKind containerAnchor:(NSCollectionLayoutAnchor * _Nonnull)containerAnchor itemAnchor:(NSCollectionLayoutAnchor * _Nonnull)itemAnchor;
		[Static]
		[Export ("supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:")]
		NSCollectionLayoutSupplementaryItem SupplementaryItemWithLayoutSize (NSCollectionLayoutSize layoutSize, string elementKind, NSCollectionLayoutAnchor containerAnchor, NSCollectionLayoutAnchor itemAnchor);

		// @property (nonatomic) NSInteger zIndex;
		[Export ("zIndex")]
		nint ZIndex { get; set; }

		// @property (readonly, nonatomic) NSString * _Nonnull elementKind;
		[Export ("elementKind")]
		string ElementKind { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutAnchor * _Nonnull containerAnchor;
		[Export ("containerAnchor")]
		NSCollectionLayoutAnchor ContainerAnchor { get; }

		// @property (readonly, nonatomic) NSCollectionLayoutAnchor * _Nullable itemAnchor;
		[NullAllowed, Export ("itemAnchor")]
		NSCollectionLayoutAnchor ItemAnchor { get; }
	}

	// @interface NSCollectionLayoutBoundarySupplementaryItem : NSCollectionLayoutSupplementaryItem <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSCollectionLayoutSupplementaryItem))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutBoundarySupplementaryItem : INSCopying
	{
		// +(instancetype _Nonnull)boundarySupplementaryItemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize elementKind:(NSString * _Nonnull)elementKind alignment:(NSRectAlignment)alignment;
		[Static]
		[Export ("boundarySupplementaryItemWithLayoutSize:elementKind:alignment:")]
		NSCollectionLayoutBoundarySupplementaryItem BoundarySupplementaryItemWithLayoutSize (NSCollectionLayoutSize layoutSize, string elementKind, NSRectAlignment alignment);

		// +(instancetype _Nonnull)boundarySupplementaryItemWithLayoutSize:(NSCollectionLayoutSize * _Nonnull)layoutSize elementKind:(NSString * _Nonnull)elementKind alignment:(NSRectAlignment)alignment absoluteOffset:(CGPoint)absoluteOffset;
		[Static]
		[Export ("boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:")]
		NSCollectionLayoutBoundarySupplementaryItem BoundarySupplementaryItemWithLayoutSize (NSCollectionLayoutSize layoutSize, string elementKind, NSRectAlignment alignment, CGPoint absoluteOffset);

		// @property (nonatomic) int extendsBoundary;
		[Export ("extendsBoundary")]
		int ExtendsBoundary { get; set; }

		// @property (nonatomic) int pinToVisibleBounds;
		[Export ("pinToVisibleBounds")]
		int PinToVisibleBounds { get; set; }

		// @property (readonly, nonatomic) NSRectAlignment alignment;
		[Export ("alignment")]
		NSRectAlignment Alignment { get; }

		// @property (readonly, nonatomic) CGPoint offset;
		[Export ("offset")]
		CGPoint Offset { get; }
	}

	// @interface NSCollectionLayoutDecorationItem : NSCollectionLayoutItem <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSCollectionLayoutItem))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutDecorationItem : INSCopying
	{
		// +(instancetype _Nonnull)backgroundDecorationItemWithElementKind:(NSString * _Nonnull)elementKind;
		[Static]
		[Export ("backgroundDecorationItemWithElementKind:")]
		NSCollectionLayoutDecorationItem BackgroundDecorationItemWithElementKind (string elementKind);

		// @property (nonatomic) NSInteger zIndex;
		[Export ("zIndex")]
		nint ZIndex { get; set; }

		// @property (readonly, nonatomic) NSString * _Nonnull elementKind;
		[Export ("elementKind")]
		string ElementKind { get; }
	}

	// @interface NSCollectionLayoutAnchor : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSCollectionLayoutAnchor : INSCopying
	{
		// +(instancetype _Nonnull)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges;
		[Static]
		[Export ("layoutAnchorWithEdges:")]
		NSCollectionLayoutAnchor LayoutAnchorWithEdges (NSDirectionalRectEdge edges);

		// +(instancetype _Nonnull)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges absoluteOffset:(CGPoint)absoluteOffset;
		[Static]
		[Export ("layoutAnchorWithEdges:absoluteOffset:")]
		NSCollectionLayoutAnchor LayoutAnchorWithEdges (NSDirectionalRectEdge edges, CGPoint absoluteOffset);

		// +(instancetype _Nonnull)layoutAnchorWithEdges:(NSDirectionalRectEdge)edges fractionalOffset:(CGPoint)fractionalOffset;
		[Static]
		[Export ("layoutAnchorWithEdges:fractionalOffset:")]
		NSCollectionLayoutAnchor LayoutAnchorWithEdges (NSDirectionalRectEdge edges, CGPoint fractionalOffset);

		// @property (readonly, nonatomic) NSDirectionalRectEdge edges;
		[Export ("edges")]
		NSDirectionalRectEdge Edges { get; }

		// @property (readonly, nonatomic) CGPoint offset;
		[Export ("offset")]
		CGPoint Offset { get; }

		// @property (readonly, nonatomic) int isAbsoluteOffset;
		[Export ("isAbsoluteOffset")]
		int IsAbsoluteOffset { get; }

		// @property (readonly, nonatomic) int isFractionalOffset;
		[Export ("isFractionalOffset")]
		int IsFractionalOffset { get; }
	}

	// @protocol NSCollectionLayoutContainer <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Watch (6,0), TV (13,0), iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSCollectionLayoutContainer
	{
		// @required @property (readonly, nonatomic) CGSize contentSize;
		[Abstract]
		[Export ("contentSize")]
		CGSize ContentSize { get; }

		// @required @property (readonly, nonatomic) CGSize effectiveContentSize;
		[Abstract]
		[Export ("effectiveContentSize")]
		CGSize EffectiveContentSize { get; }

		// @required @property (readonly, nonatomic) NSDirectionalEdgeInsets contentInsets;
		[Abstract]
		[Export ("contentInsets")]
		NSDirectionalEdgeInsets ContentInsets { get; }

		// @required @property (readonly, nonatomic) NSDirectionalEdgeInsets effectiveContentInsets;
		[Abstract]
		[Export ("effectiveContentInsets")]
		NSDirectionalEdgeInsets EffectiveContentInsets { get; }
	}

	// @protocol NSCollectionLayoutEnvironment <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Watch (6,0), TV (13,0), iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSCollectionLayoutEnvironment
	{
		// @required @property (readonly, nonatomic) id<NSCollectionLayoutContainer> _Nonnull container;
		[Abstract]
		[Export ("container")]
		NSCollectionLayoutContainer Container { get; }

		// @required @property (readonly, nonatomic) UITraitCollection * _Nonnull traitCollection;
		[Abstract]
		[Export ("traitCollection")]
		UITraitCollection TraitCollection { get; }
	}

	// @protocol NSCollectionLayoutVisibleItem <NSObject, UIDynamicItem>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Watch (6,0), TV (13,0), iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSCollectionLayoutVisibleItem : IUIDynamicItem
	{
		// @required @property (nonatomic) CGFloat alpha;
		[Abstract]
		[Export ("alpha")]
		nfloat Alpha { get; set; }

		// @required @property (nonatomic) NSInteger zIndex;
		[Abstract]
		[Export ("zIndex")]
		nint ZIndex { get; set; }

		// @required @property (getter = isHidden, nonatomic) int hidden;
		[Abstract]
		[Export ("hidden")]
		int Hidden { [Bind ("isHidden")] get; set; }

		// @required @property (nonatomic) CGPoint center;
		[Abstract]
		[Export ("center", ArgumentSemantic.Assign)]
		CGPoint Center { get; set; }

		// @required @property (nonatomic) CGAffineTransform transform;
		[Abstract]
		[Export ("transform", ArgumentSemantic.Assign)]
		CGAffineTransform Transform { get; set; }

		// @required @property (nonatomic) CATransform3D transform3D;
		[Abstract]
		[Export ("transform3D", ArgumentSemantic.Assign)]
		CATransform3D Transform3D { get; set; }

		// @required @property (readonly, nonatomic) NSString * _Nonnull name;
		[Abstract]
		[Export ("name")]
		string Name { get; }

		// @required @property (readonly, nonatomic) NSIndexPath * _Nonnull indexPath;
		[Abstract]
		[Export ("indexPath")]
		NSIndexPath IndexPath { get; }

		// @required @property (readonly, nonatomic) CGRect frame;
		[Abstract]
		[Export ("frame")]
		CGRect Frame { get; }

		// @required @property (readonly, nonatomic) CGRect bounds;
		[Abstract]
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @required @property (readonly, nonatomic) UICollectionElementCategory representedElementCategory;
		[Abstract]
		[Export ("representedElementCategory")]
		UICollectionElementCategory RepresentedElementCategory { get; }

		// @required @property (readonly, nonatomic) NSString * _Nullable representedElementKind;
		[Abstract]
		[NullAllowed, Export ("representedElementKind")]
		string RepresentedElementKind { get; }
	}

	// @interface UIGestureRecognizer : NSObject
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UIGestureRecognizer
	{
		// -(instancetype _Nonnull)initWithTarget:(id _Nullable)target action:(SEL _Nullable)action __attribute__((objc_designated_initializer));
		[Export ("initWithTarget:action:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] NSObject target, [NullAllowed] Selector action);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder;
		[Export ("initWithCoder:")]
		IntPtr Constructor (NSCoder coder);

		// -(void)addTarget:(id _Nonnull)target action:(SEL _Nonnull)action;
		[Export ("addTarget:action:")]
		void AddTarget (NSObject target, Selector action);

		// -(void)removeTarget:(id _Nullable)target action:(SEL _Nullable)action;
		[Export ("removeTarget:action:")]
		void RemoveTarget ([NullAllowed] NSObject target, [NullAllowed] Selector action);

		// @property (readonly, nonatomic) UIGestureRecognizerState state;
		[Export ("state")]
		UIGestureRecognizerState State { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIGestureRecognizerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIGestureRecognizerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (readonly, nonatomic) UIView * _Nullable view;
		[NullAllowed, Export ("view")]
		UIView View { get; }

		// @property (nonatomic) int cancelsTouchesInView;
		[Export ("cancelsTouchesInView")]
		int CancelsTouchesInView { get; set; }

		// @property (nonatomic) int delaysTouchesBegan;
		[Export ("delaysTouchesBegan")]
		int DelaysTouchesBegan { get; set; }

		// @property (nonatomic) int delaysTouchesEnded;
		[Export ("delaysTouchesEnded")]
		int DelaysTouchesEnded { get; set; }

		// @property (copy, nonatomic) NSArray<NSNumber *> * _Nonnull allowedTouchTypes __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowedTouchTypes", ArgumentSemantic.Copy)]
		NSNumber[] AllowedTouchTypes { get; set; }

		// @property (copy, nonatomic) NSArray<NSNumber *> * _Nonnull allowedPressTypes __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowedPressTypes", ArgumentSemantic.Copy)]
		NSNumber[] AllowedPressTypes { get; set; }

		// @property (nonatomic) int requiresExclusiveTouchType __attribute__((availability(ios, introduced=9.2)));
		[iOS (9, 2)]
		[Export ("requiresExclusiveTouchType")]
		int RequiresExclusiveTouchType { get; set; }

		// -(void)requireGestureRecognizerToFail:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer;
		[Export ("requireGestureRecognizerToFail:")]
		void RequireGestureRecognizerToFail (UIGestureRecognizer otherGestureRecognizer);

		// -(CGPoint)locationInView:(UIView * _Nullable)view;
		[Export ("locationInView:")]
		CGPoint LocationInView ([NullAllowed] UIView view);

		// @property (readonly, nonatomic) NSUInteger numberOfTouches;
		[Export ("numberOfTouches")]
		nuint NumberOfTouches { get; }

		// -(CGPoint)locationOfTouch:(NSUInteger)touchIndex inView:(UIView * _Nullable)view;
		[Export ("locationOfTouch:inView:")]
		CGPoint LocationOfTouch (nuint touchIndex, [NullAllowed] UIView view);

		// @property (copy, nonatomic) NSString * _Nullable name __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[NullAllowed, Export ("name")]
		string Name { get; set; }
	}

	// @protocol UIGestureRecognizerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIGestureRecognizerDelegate
	{
		// @optional -(int)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
		[Export ("gestureRecognizerShouldBegin:")]
		int GestureRecognizerShouldBegin (UIGestureRecognizer gestureRecognizer);

		// @optional -(int)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer;
		[Export ("gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:")]
		int GestureRecognizer (UIGestureRecognizer gestureRecognizer, UIGestureRecognizer otherGestureRecognizer);

		// @optional -(int)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("gestureRecognizer:shouldRequireFailureOfGestureRecognizer:")]
		int GestureRecognizer (UIGestureRecognizer gestureRecognizer, UIGestureRecognizer otherGestureRecognizer);

		// @optional -(int)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:")]
		int GestureRecognizer (UIGestureRecognizer gestureRecognizer, UIGestureRecognizer otherGestureRecognizer);

		// @optional -(int)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch;
		[Export ("gestureRecognizer:shouldReceiveTouch:")]
		int GestureRecognizer (UIGestureRecognizer gestureRecognizer, UITouch touch);

		// @optional -(int)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceivePress:(UIPress * _Nonnull)press;
		[Export ("gestureRecognizer:shouldReceivePress:")]
		int GestureRecognizer (UIGestureRecognizer gestureRecognizer, UIPress press);
	}

	// @interface UISwipeGestureRecognizer : UIGestureRecognizer
	[iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UISwipeGestureRecognizer
	{
		// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("numberOfTouchesRequired")]
		nuint NumberOfTouchesRequired { get; set; }

		// @property (nonatomic) UISwipeGestureRecognizerDirection direction;
		[Export ("direction", ArgumentSemantic.Assign)]
		UISwipeGestureRecognizerDirection Direction { get; set; }
	}

	// typedef void (^UIContextualActionHandler)(UIContextualAction * _Nonnull, __kindof UIView * _Nonnull, void (^ _Nonnull)(int));
	delegate void UIContextualActionHandler (UIContextualAction arg0, UIView arg1, Action<int> arg2);

	// @interface UIContextualAction : NSObject
	[NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface UIContextualAction
	{
		// +(instancetype _Nonnull)contextualActionWithStyle:(UIContextualActionStyle)style title:(NSString * _Nullable)title handler:(UIContextualActionHandler _Nonnull)handler;
		[Static]
		[Export ("contextualActionWithStyle:title:handler:")]
		UIContextualAction ContextualActionWithStyle (UIContextualActionStyle style, [NullAllowed] string title, UIContextualActionHandler handler);

		// @property (readonly, nonatomic) UIContextualActionStyle style;
		[Export ("style")]
		UIContextualActionStyle Style { get; }

		// @property (readonly, copy, nonatomic) UIContextualActionHandler _Nonnull handler;
		[Export ("handler", ArgumentSemantic.Copy)]
		UIContextualActionHandler Handler { get; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) UIColor * _Null_unspecified backgroundColor;
		[Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (copy, nonatomic) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Copy)]
		UIImage Image { get; set; }
	}

	// @interface UISwipeActionsConfiguration : NSObject
	[NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface UISwipeActionsConfiguration
	{
		// +(instancetype _Nonnull)configurationWithActions:(NSArray<UIContextualAction *> * _Nonnull)actions;
		[Static]
		[Export ("configurationWithActions:")]
		UISwipeActionsConfiguration ConfigurationWithActions (UIContextualAction[] actions);

		// @property (readonly, copy, nonatomic) NSArray<UIContextualAction *> * _Nonnull actions;
		[Export ("actions", ArgumentSemantic.Copy)]
		UIContextualAction[] Actions { get; }

		// @property (nonatomic) int performsFirstActionWithFullSwipe;
		[Export ("performsFirstActionWithFullSwipe")]
		int PerformsFirstActionWithFullSwipe { get; set; }
	}

	// @interface UITableViewCell : UIView <NSCoding, UIGestureRecognizerDelegate>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UITableViewCell : INSCoding, IUIGestureRecognizerDelegate
	{
		// -(instancetype _Nonnull)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier __attribute__((availability(ios, introduced=3.0))) __attribute__((objc_designated_initializer));
		[iOS (3,0)]
		[Export ("initWithStyle:reuseIdentifier:")]
		[DesignatedInitializer]
		IntPtr Constructor (UITableViewCellStyle style, [NullAllowed] string reuseIdentifier);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic, strong) UIImageView * _Nullable imageView __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("imageView", ArgumentSemantic.Strong)]
		UIImageView ImageView { get; }

		// @property (readonly, nonatomic, strong) UILabel * _Nullable textLabel __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("textLabel", ArgumentSemantic.Strong)]
		UILabel TextLabel { get; }

		// @property (readonly, nonatomic, strong) UILabel * _Nullable detailTextLabel __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("detailTextLabel", ArgumentSemantic.Strong)]
		UILabel DetailTextLabel { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nonnull contentView;
		[Export ("contentView", ArgumentSemantic.Strong)]
		UIView ContentView { get; }

		// @property (nonatomic, strong) UIView * _Nullable backgroundView;
		[NullAllowed, Export ("backgroundView", ArgumentSemantic.Strong)]
		UIView BackgroundView { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable selectedBackgroundView;
		[NullAllowed, Export ("selectedBackgroundView", ArgumentSemantic.Strong)]
		UIView SelectedBackgroundView { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable multipleSelectionBackgroundView __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("multipleSelectionBackgroundView", ArgumentSemantic.Strong)]
		UIView MultipleSelectionBackgroundView { get; set; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable reuseIdentifier;
		[NullAllowed, Export ("reuseIdentifier")]
		string ReuseIdentifier { get; }

		// -(void)prepareForReuse __attribute__((objc_requires_super));
		[Export ("prepareForReuse")]
		[RequiresSuper]
		void PrepareForReuse ();

		// @property (nonatomic) UITableViewCellSelectionStyle selectionStyle;
		[Export ("selectionStyle", ArgumentSemantic.Assign)]
		UITableViewCellSelectionStyle SelectionStyle { get; set; }

		// @property (getter = isSelected, nonatomic) int selected;
		[Export ("selected")]
		int Selected { [Bind ("isSelected")] get; set; }

		// @property (getter = isHighlighted, nonatomic) int highlighted;
		[Export ("highlighted")]
		int Highlighted { [Bind ("isHighlighted")] get; set; }

		// -(void)setSelected:(int)selected animated:(int)animated;
		[Export ("setSelected:animated:")]
		void SetSelected (int selected, int animated);

		// -(void)setHighlighted:(int)highlighted animated:(int)animated;
		[Export ("setHighlighted:animated:")]
		void SetHighlighted (int highlighted, int animated);

		// @property (readonly, nonatomic) UITableViewCellEditingStyle editingStyle;
		[Export ("editingStyle")]
		UITableViewCellEditingStyle EditingStyle { get; }

		// @property (nonatomic) int showsReorderControl;
		[Export ("showsReorderControl")]
		int ShowsReorderControl { get; set; }

		// @property (nonatomic) int shouldIndentWhileEditing;
		[Export ("shouldIndentWhileEditing")]
		int ShouldIndentWhileEditing { get; set; }

		// @property (nonatomic) UITableViewCellAccessoryType accessoryType;
		[Export ("accessoryType", ArgumentSemantic.Assign)]
		UITableViewCellAccessoryType AccessoryType { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable accessoryView;
		[NullAllowed, Export ("accessoryView", ArgumentSemantic.Strong)]
		UIView AccessoryView { get; set; }

		// @property (nonatomic) UITableViewCellAccessoryType editingAccessoryType;
		[Export ("editingAccessoryType", ArgumentSemantic.Assign)]
		UITableViewCellAccessoryType EditingAccessoryType { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable editingAccessoryView;
		[NullAllowed, Export ("editingAccessoryView", ArgumentSemantic.Strong)]
		UIView EditingAccessoryView { get; set; }

		// @property (nonatomic) NSInteger indentationLevel;
		[Export ("indentationLevel")]
		nint IndentationLevel { get; set; }

		// @property (nonatomic) CGFloat indentationWidth;
		[Export ("indentationWidth")]
		nfloat IndentationWidth { get; set; }

		// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("separatorInset", ArgumentSemantic.Assign)]
		UIEdgeInsets SeparatorInset { get; set; }

		// @property (getter = isEditing, nonatomic) int editing;
		[Export ("editing")]
		int Editing { [Bind ("isEditing")] get; set; }

		// -(void)setEditing:(int)editing animated:(int)animated;
		[Export ("setEditing:animated:")]
		void SetEditing (int editing, int animated);

		// @property (readonly, nonatomic) int showingDeleteConfirmation;
		[Export ("showingDeleteConfirmation")]
		int ShowingDeleteConfirmation { get; }

		// @property (nonatomic) UITableViewCellFocusStyle focusStyle __attribute__((availability(ios, introduced=9.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (9, 0)]
		[Export ("focusStyle", ArgumentSemantic.Assign)]
		UITableViewCellFocusStyle FocusStyle { get; set; }

		// -(void)willTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("willTransitionToState:")]
		void WillTransitionToState (UITableViewCellStateMask state);

		// -(void)didTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("didTransitionToState:")]
		void DidTransitionToState (UITableViewCellStateMask state);

		// -(void)dragStateDidChange:(UITableViewCellDragState)dragState __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("dragStateDidChange:")]
		void DragStateDidChange (UITableViewCellDragState dragState);

		// @property (nonatomic) int userInteractionEnabledWhileDragging __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("userInteractionEnabledWhileDragging")]
		int UserInteractionEnabledWhileDragging { get; set; }
	}

	// @interface UIDeprecated (UITableViewCell)
	[Category]
	[BaseType (typeof(UITableViewCell))]
	interface UITableViewCell_UIDeprecated
	{
		// -(id _Nonnull)initWithFrame:(CGRect)frame reuseIdentifier:(NSString * _Nullable)reuseIdentifier __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("initWithFrame:reuseIdentifier:")]
		IntPtr Constructor (CGRect frame, [NullAllowed] string reuseIdentifier);

		// @property (copy, nonatomic) NSString * _Nullable text __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("text")]
		string Text { get; set; }

		// @property (nonatomic, strong) UIFont * _Nullable font __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic) NSTextAlignment textAlignment __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("textAlignment", ArgumentSemantic.Assign)]
		NSTextAlignment TextAlignment { get; set; }

		// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("lineBreakMode", ArgumentSemantic.Assign)]
		NSLineBreakMode LineBreakMode { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable textColor __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable selectedTextColor __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("selectedTextColor", ArgumentSemantic.Strong)]
		UIColor SelectedTextColor { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable image __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("image", ArgumentSemantic.Strong)]
		UIImage Image { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable selectedImage __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("selectedImage", ArgumentSemantic.Strong)]
		UIImage SelectedImage { get; set; }

		// @property (nonatomic) int hidesAccessoryWhenEditing __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("hidesAccessoryWhenEditing")]
		int HidesAccessoryWhenEditing { get; set; }

		// @property (assign, nonatomic) id _Nullable target __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("target", ArgumentSemantic.Assign)]
		NSObject Target { get; set; }

		// @property (nonatomic) SEL _Nullable editAction __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("editAction", ArgumentSemantic.Assign)]
		Selector EditAction { get; set; }

		// @property (nonatomic) SEL _Nullable accessoryAction __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[NullAllowed, Export ("accessoryAction", ArgumentSemantic.Assign)]
		Selector AccessoryAction { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UITableViewIndexSearch __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UITableViewIndexSearch", "__Internal")]
		NSString UITableViewIndexSearch { get; }

		// extern const CGFloat UITableViewAutomaticDimension __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UITableViewAutomaticDimension", "__Internal")]
		nfloat UITableViewAutomaticDimension { get; }
	}

	// @interface UITableViewRowAction : NSObject <NSCopying>
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UIContextualAction and related APIs instead.")]
	[Deprecated (PlatformName.iOS, 13, 0, message: "Use UIContextualAction and related APIs instead.")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UITableViewRowAction : INSCopying
	{
		// +(instancetype _Nonnull)rowActionWithStyle:(UITableViewRowActionStyle)style title:(NSString * _Nullable)title handler:(void (^ _Nonnull)(UITableViewRowAction * _Nonnull, NSIndexPath * _Nonnull))handler;
		[Static]
		[Export ("rowActionWithStyle:title:handler:")]
		UITableViewRowAction RowActionWithStyle (UITableViewRowActionStyle style, [NullAllowed] string title, Action<UITableViewRowAction, NSIndexPath> handler);

		// @property (readonly, nonatomic) UITableViewRowActionStyle style;
		[Export ("style")]
		UITableViewRowActionStyle Style { get; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) UIColor * _Nullable backgroundColor;
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (copy, nonatomic) UIVisualEffect * _Nullable backgroundEffect;
		[NullAllowed, Export ("backgroundEffect", ArgumentSemantic.Copy)]
		UIVisualEffect BackgroundEffect { get; set; }
	}

	// @interface UITableViewFocusUpdateContext : UIFocusUpdateContext
	[iOS (9,0)]
	[BaseType (typeof(UIFocusUpdateContext))]
	interface UITableViewFocusUpdateContext
	{
		// @property (readonly, nonatomic, strong) NSIndexPath * _Nullable previouslyFocusedIndexPath;
		[NullAllowed, Export ("previouslyFocusedIndexPath", ArgumentSemantic.Strong)]
		NSIndexPath PreviouslyFocusedIndexPath { get; }

		// @property (readonly, nonatomic, strong) NSIndexPath * _Nullable nextFocusedIndexPath;
		[NullAllowed, Export ("nextFocusedIndexPath", ArgumentSemantic.Strong)]
		NSIndexPath NextFocusedIndexPath { get; }
	}

	// @protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITableViewDelegate : IUIScrollViewDelegate
	{
		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:willDisplayCell:forRowAtIndexPath:")]
		void TableView (UITableView tableView, UITableViewCell cell, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:willDisplayHeaderView:forSection:")]
		void TableView (UITableView tableView, UIView view, nint section);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willDisplayFooterView:(UIView * _Nonnull)view forSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:willDisplayFooterView:forSection:")]
		void TableView (UITableView tableView, UIView view, nint section);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:didEndDisplayingCell:forRowAtIndexPath:")]
		void TableView (UITableView tableView, UITableViewCell cell, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:didEndDisplayingHeaderView:forSection:")]
		void TableView (UITableView tableView, UIView view, nint section);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingFooterView:(UIView * _Nonnull)view forSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:didEndDisplayingFooterView:forSection:")]
		void TableView (UITableView tableView, UIView view, nint section);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:heightForRowAtIndexPath:")]
		nfloat TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section;
		[Export ("tableView:heightForHeaderInSection:")]
		nfloat TableView (UITableView tableView, nint section);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section;
		[Export ("tableView:heightForFooterInSection:")]
		nfloat TableView (UITableView tableView, nint section);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tableView:estimatedHeightForRowAtIndexPath:")]
		nfloat TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForHeaderInSection:(NSInteger)section __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tableView:estimatedHeightForHeaderInSection:")]
		nfloat TableView (UITableView tableView, nint section);

		// @optional -(CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForFooterInSection:(NSInteger)section __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tableView:estimatedHeightForFooterInSection:")]
		nfloat TableView (UITableView tableView, nint section);

		// @optional -(UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section;
		[Export ("tableView:viewForHeaderInSection:")]
		[return: NullAllowed]
		UIView TableView (UITableView tableView, nint section);

		// @optional -(UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section;
		[Export ("tableView:viewForFooterInSection:")]
		[return: NullAllowed]
		UIView TableView (UITableView tableView, nint section);

		// @optional -(UITableViewCellAccessoryType)tableView:(UITableView * _Nonnull)tableView accessoryTypeForRowWithIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Export ("tableView:accessoryTypeForRowWithIndexPath:")]
		UITableViewCellAccessoryType TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:accessoryButtonTappedForRowWithIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldHighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:shouldHighlightRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didHighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:didHighlightRowAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didUnhighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("tableView:didUnhighlightRowAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSIndexPath * _Nullable)tableView:(UITableView * _Nonnull)tableView willSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:willSelectRowAtIndexPath:")]
		[return: NullAllowed]
		NSIndexPath TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSIndexPath * _Nullable)tableView:(UITableView * _Nonnull)tableView willDeselectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("tableView:willDeselectRowAtIndexPath:")]
		[return: NullAllowed]
		NSIndexPath TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:didSelectRowAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didDeselectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("tableView:didDeselectRowAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(UITableViewCellEditingStyle)tableView:(UITableView * _Nonnull)tableView editingStyleForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:editingStyleForRowAtIndexPath:")]
		UITableViewCellEditingStyle TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:")]
		[return: NullAllowed]
		string TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=8.0, deprecated=13.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[NoTV]
		[Export ("tableView:editActionsForRowAtIndexPath:")]
		[return: NullAllowed]
		UITableViewRowAction[] TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11,0)]
		[Export ("tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:")]
		[return: NullAllowed]
		UISwipeActionsConfiguration TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11,0)]
		[Export ("tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:")]
		[return: NullAllowed]
		UISwipeActionsConfiguration TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:shouldIndentWhileEditingRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willBeginEditingRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tableView:willBeginEditingRowAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didEndEditingRowAtIndexPath:(NSIndexPath * _Nullable)indexPath __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tableView:didEndEditingRowAtIndexPath:")]
		void TableView (UITableView tableView, [NullAllowed] NSIndexPath indexPath);

		// @optional -(NSIndexPath * _Nonnull)tableView:(UITableView * _Nonnull)tableView targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toProposedIndexPath:(NSIndexPath * _Nonnull)proposedDestinationIndexPath;
		[Export ("tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:")]
		NSIndexPath TableView (UITableView tableView, NSIndexPath sourceIndexPath, NSIndexPath proposedDestinationIndexPath);

		// @optional -(NSInteger)tableView:(UITableView * _Nonnull)tableView indentationLevelForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:indentationLevelForRowAtIndexPath:")]
		nint TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("tableView:shouldShowMenuForRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView canPerformAction:(SEL _Nonnull)action forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("tableView:canPerformAction:forRowAtIndexPath:withSender:")]
		int TableView (UITableView tableView, Selector action, NSIndexPath indexPath, [NullAllowed] NSObject sender);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView performAction:(SEL _Nonnull)action forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender __attribute__((availability(ios, introduced=5.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("tableView:performAction:forRowAtIndexPath:withSender:")]
		void TableView (UITableView tableView, Selector action, NSIndexPath indexPath, [NullAllowed] NSObject sender);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView canFocusRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("tableView:canFocusRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldUpdateFocusInContext:(UITableViewFocusUpdateContext * _Nonnull)context __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("tableView:shouldUpdateFocusInContext:")]
		int TableView (UITableView tableView, UITableViewFocusUpdateContext context);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didUpdateFocusInContext:(UITableViewFocusUpdateContext * _Nonnull)context withAnimationCoordinator:(UIFocusAnimationCoordinator * _Nonnull)coordinator __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("tableView:didUpdateFocusInContext:withAnimationCoordinator:")]
		void TableView (UITableView tableView, UITableViewFocusUpdateContext context, UIFocusAnimationCoordinator coordinator);

		// @optional -(NSIndexPath * _Nullable)indexPathForPreferredFocusedViewInTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("indexPathForPreferredFocusedViewInTableView:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForPreferredFocusedViewInTableView (UITableView tableView);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldSpringLoadRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withContext:(id<UISpringLoadedInteractionContext> _Nonnull)context __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("tableView:shouldSpringLoadRowAtIndexPath:withContext:")]
		int TableView (UITableView tableView, NSIndexPath indexPath, UISpringLoadedInteractionContext context);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView shouldBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView didBeginMultipleSelectionInteractionAtIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:didBeginMultipleSelectionInteractionAtIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableViewDidEndMultipleSelectionInteraction:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableViewDidEndMultipleSelectionInteraction:")]
		void TableViewDidEndMultipleSelectionInteraction (UITableView tableView);

		// @optional -(UIContextMenuConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView contextMenuConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:contextMenuConfigurationForRowAtIndexPath:point:")]
		[return: NullAllowed]
		UIContextMenuConfiguration TableView (UITableView tableView, NSIndexPath indexPath, CGPoint point);

		// @optional -(UITargetedPreview * _Nullable)tableView:(UITableView * _Nonnull)tableView previewForHighlightingContextMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:previewForHighlightingContextMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview TableView (UITableView tableView, UIContextMenuConfiguration configuration);

		// @optional -(UITargetedPreview * _Nullable)tableView:(UITableView * _Nonnull)tableView previewForDismissingContextMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:previewForDismissingContextMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview TableView (UITableView tableView, UIContextMenuConfiguration configuration);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration animator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:willPerformPreviewActionForMenuWithConfiguration:animator:")]
		void TableView (UITableView tableView, UIContextMenuConfiguration configuration, UIContextMenuInteractionCommitAnimating animator);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView willCommitMenuWithAnimator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Export ("tableView:willCommitMenuWithAnimator:")]
		void TableView (UITableView tableView, UIContextMenuInteractionCommitAnimating animator);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UITableViewSelectionDidChangeNotification __attribute__((visibility("default")));
		[Field ("UITableViewSelectionDidChangeNotification", "__Internal")]
		NSString UITableViewSelectionDidChangeNotification { get; }
	}

	// @interface UITableView : UIScrollView <NSCoding, UIDataSourceTranslating>
	[iOS (2,0)]
	[BaseType (typeof(UIScrollView))]
	interface UITableView : INSCoding, IUIDataSourceTranslating
	{
		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame style:(UITableViewStyle)style __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:style:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame, UITableViewStyle style);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic) UITableViewStyle style;
		[Export ("style")]
		UITableViewStyle Style { get; }

		[Wrap ("WeakDataSource")]
		[NullAllowed]
		UITableViewDataSource DataSource { get; set; }

		// @property (nonatomic, weak) id<UITableViewDataSource> _Nullable dataSource;
		[NullAllowed, Export ("dataSource", ArgumentSemantic.Weak)]
		NSObject WeakDataSource { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITableViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITableViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		[Wrap ("WeakPrefetchDataSource")]
		[NullAllowed]
		UITableViewDataSourcePrefetching PrefetchDataSource { get; set; }

		// @property (nonatomic, weak) id<UITableViewDataSourcePrefetching> _Nullable prefetchDataSource __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("prefetchDataSource", ArgumentSemantic.Weak)]
		NSObject WeakPrefetchDataSource { get; set; }

		[Wrap ("WeakDragDelegate")]
		[NullAllowed]
		UITableViewDragDelegate DragDelegate { get; set; }

		// @property (nonatomic, weak) id<UITableViewDragDelegate> _Nullable dragDelegate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("dragDelegate", ArgumentSemantic.Weak)]
		NSObject WeakDragDelegate { get; set; }

		[Wrap ("WeakDropDelegate")]
		[NullAllowed]
		UITableViewDropDelegate DropDelegate { get; set; }

		// @property (nonatomic, weak) id<UITableViewDropDelegate> _Nullable dropDelegate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[NullAllowed, Export ("dropDelegate", ArgumentSemantic.Weak)]
		NSObject WeakDropDelegate { get; set; }

		// @property (nonatomic) CGFloat rowHeight;
		[Export ("rowHeight")]
		nfloat RowHeight { get; set; }

		// @property (nonatomic) CGFloat sectionHeaderHeight;
		[Export ("sectionHeaderHeight")]
		nfloat SectionHeaderHeight { get; set; }

		// @property (nonatomic) CGFloat sectionFooterHeight;
		[Export ("sectionFooterHeight")]
		nfloat SectionFooterHeight { get; set; }

		// @property (nonatomic) CGFloat estimatedRowHeight __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("estimatedRowHeight")]
		nfloat EstimatedRowHeight { get; set; }

		// @property (nonatomic) CGFloat estimatedSectionHeaderHeight __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("estimatedSectionHeaderHeight")]
		nfloat EstimatedSectionHeaderHeight { get; set; }

		// @property (nonatomic) CGFloat estimatedSectionFooterHeight __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("estimatedSectionFooterHeight")]
		nfloat EstimatedSectionFooterHeight { get; set; }

		// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[Export ("separatorInset", ArgumentSemantic.Assign)]
		UIEdgeInsets SeparatorInset { get; set; }

		// @property (nonatomic) UITableViewSeparatorInsetReference separatorInsetReference __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("separatorInsetReference", ArgumentSemantic.Assign)]
		UITableViewSeparatorInsetReference SeparatorInsetReference { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable backgroundView __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[NullAllowed, Export ("backgroundView", ArgumentSemantic.Strong)]
		UIView BackgroundView { get; set; }

		// @property (readonly, nonatomic) NSInteger numberOfSections;
		[Export ("numberOfSections")]
		nint NumberOfSections { get; }

		// -(NSInteger)numberOfRowsInSection:(NSInteger)section;
		[Export ("numberOfRowsInSection:")]
		nint NumberOfRowsInSection (nint section);

		// -(CGRect)rectForSection:(NSInteger)section;
		[Export ("rectForSection:")]
		CGRect RectForSection (nint section);

		// -(CGRect)rectForHeaderInSection:(NSInteger)section;
		[Export ("rectForHeaderInSection:")]
		CGRect RectForHeaderInSection (nint section);

		// -(CGRect)rectForFooterInSection:(NSInteger)section;
		[Export ("rectForFooterInSection:")]
		CGRect RectForFooterInSection (nint section);

		// -(CGRect)rectForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("rectForRowAtIndexPath:")]
		CGRect RectForRowAtIndexPath (NSIndexPath indexPath);

		// -(NSIndexPath * _Nullable)indexPathForRowAtPoint:(CGPoint)point;
		[Export ("indexPathForRowAtPoint:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForRowAtPoint (CGPoint point);

		// -(NSIndexPath * _Nullable)indexPathForCell:(UITableViewCell * _Nonnull)cell;
		[Export ("indexPathForCell:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForCell (UITableViewCell cell);

		// -(NSArray<NSIndexPath *> * _Nullable)indexPathsForRowsInRect:(CGRect)rect;
		[Export ("indexPathsForRowsInRect:")]
		[return: NullAllowed]
		NSIndexPath[] IndexPathsForRowsInRect (CGRect rect);

		// -(__kindof UITableViewCell * _Nullable)cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("cellForRowAtIndexPath:")]
		UITableViewCell CellForRowAtIndexPath (NSIndexPath indexPath);

		// @property (readonly, nonatomic) NSArray<__kindof UITableViewCell *> * _Nonnull visibleCells;
		[Export ("visibleCells")]
		UITableViewCell[] VisibleCells { get; }

		// @property (readonly, nonatomic) NSArray<NSIndexPath *> * _Nullable indexPathsForVisibleRows;
		[NullAllowed, Export ("indexPathsForVisibleRows")]
		NSIndexPath[] IndexPathsForVisibleRows { get; }

		// -(UITableViewHeaderFooterView * _Nullable)headerViewForSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("headerViewForSection:")]
		[return: NullAllowed]
		UITableViewHeaderFooterView HeaderViewForSection (nint section);

		// -(UITableViewHeaderFooterView * _Nullable)footerViewForSection:(NSInteger)section __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("footerViewForSection:")]
		[return: NullAllowed]
		UITableViewHeaderFooterView FooterViewForSection (nint section);

		// -(void)scrollToRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath atScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(int)animated;
		[Export ("scrollToRowAtIndexPath:atScrollPosition:animated:")]
		void ScrollToRowAtIndexPath (NSIndexPath indexPath, UITableViewScrollPosition scrollPosition, int animated);

		// -(void)scrollToNearestSelectedRowAtScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(int)animated;
		[Export ("scrollToNearestSelectedRowAtScrollPosition:animated:")]
		void ScrollToNearestSelectedRowAtScrollPosition (UITableViewScrollPosition scrollPosition, int animated);

		// -(void)performBatchUpdates:(void (^ _Nullable)(void))updates completion:(void (^ _Nullable)(int))completion __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("performBatchUpdates:completion:")]
		void PerformBatchUpdates ([NullAllowed] Action updates, [NullAllowed] Action<int> completion);

		// -(void)beginUpdates;
		[Export ("beginUpdates")]
		void BeginUpdates ();

		// -(void)endUpdates;
		[Export ("endUpdates")]
		void EndUpdates ();

		// -(void)insertSections:(NSIndexSet * _Nonnull)sections withRowAnimation:(UITableViewRowAnimation)animation;
		[Export ("insertSections:withRowAnimation:")]
		void InsertSections (NSIndexSet sections, UITableViewRowAnimation animation);

		// -(void)deleteSections:(NSIndexSet * _Nonnull)sections withRowAnimation:(UITableViewRowAnimation)animation;
		[Export ("deleteSections:withRowAnimation:")]
		void DeleteSections (NSIndexSet sections, UITableViewRowAnimation animation);

		// -(void)reloadSections:(NSIndexSet * _Nonnull)sections withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("reloadSections:withRowAnimation:")]
		void ReloadSections (NSIndexSet sections, UITableViewRowAnimation animation);

		// -(void)moveSection:(NSInteger)section toSection:(NSInteger)newSection __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("moveSection:toSection:")]
		void MoveSection (nint section, nint newSection);

		// -(void)insertRowsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
		[Export ("insertRowsAtIndexPaths:withRowAnimation:")]
		void InsertRowsAtIndexPaths (NSIndexPath[] indexPaths, UITableViewRowAnimation animation);

		// -(void)deleteRowsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
		[Export ("deleteRowsAtIndexPaths:withRowAnimation:")]
		void DeleteRowsAtIndexPaths (NSIndexPath[] indexPaths, UITableViewRowAnimation animation);

		// -(void)reloadRowsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("reloadRowsAtIndexPaths:withRowAnimation:")]
		void ReloadRowsAtIndexPaths (NSIndexPath[] indexPaths, UITableViewRowAnimation animation);

		// -(void)moveRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath toIndexPath:(NSIndexPath * _Nonnull)newIndexPath __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("moveRowAtIndexPath:toIndexPath:")]
		void MoveRowAtIndexPath (NSIndexPath indexPath, NSIndexPath newIndexPath);

		// @property (readonly, nonatomic) int hasUncommittedUpdates __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("hasUncommittedUpdates")]
		int HasUncommittedUpdates { get; }

		// -(void)reloadData;
		[Export ("reloadData")]
		void ReloadData ();

		// -(void)reloadSectionIndexTitles __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("reloadSectionIndexTitles")]
		void ReloadSectionIndexTitles ();

		// @property (getter = isEditing, nonatomic) int editing;
		[Export ("editing")]
		int Editing { [Bind ("isEditing")] get; set; }

		// -(void)setEditing:(int)editing animated:(int)animated;
		[Export ("setEditing:animated:")]
		void SetEditing (int editing, int animated);

		// @property (nonatomic) int allowsSelection __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("allowsSelection")]
		int AllowsSelection { get; set; }

		// @property (nonatomic) int allowsSelectionDuringEditing;
		[Export ("allowsSelectionDuringEditing")]
		int AllowsSelectionDuringEditing { get; set; }

		// @property (nonatomic) int allowsMultipleSelection __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("allowsMultipleSelection")]
		int AllowsMultipleSelection { get; set; }

		// @property (nonatomic) int allowsMultipleSelectionDuringEditing __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("allowsMultipleSelectionDuringEditing")]
		int AllowsMultipleSelectionDuringEditing { get; set; }

		// @property (readonly, nonatomic) NSIndexPath * _Nullable indexPathForSelectedRow;
		[NullAllowed, Export ("indexPathForSelectedRow")]
		NSIndexPath IndexPathForSelectedRow { get; }

		// @property (readonly, nonatomic) NSArray<NSIndexPath *> * _Nullable indexPathsForSelectedRows __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("indexPathsForSelectedRows")]
		NSIndexPath[] IndexPathsForSelectedRows { get; }

		// -(void)selectRowAtIndexPath:(NSIndexPath * _Nullable)indexPath animated:(int)animated scrollPosition:(UITableViewScrollPosition)scrollPosition;
		[Export ("selectRowAtIndexPath:animated:scrollPosition:")]
		void SelectRowAtIndexPath ([NullAllowed] NSIndexPath indexPath, int animated, UITableViewScrollPosition scrollPosition);

		// -(void)deselectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath animated:(int)animated;
		[Export ("deselectRowAtIndexPath:animated:")]
		void DeselectRowAtIndexPath (NSIndexPath indexPath, int animated);

		// @property (nonatomic) NSInteger sectionIndexMinimumDisplayRowCount;
		[Export ("sectionIndexMinimumDisplayRowCount")]
		nint SectionIndexMinimumDisplayRowCount { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable sectionIndexColor __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("sectionIndexColor", ArgumentSemantic.Strong)]
		UIColor SectionIndexColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable sectionIndexBackgroundColor __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[NullAllowed, Export ("sectionIndexBackgroundColor", ArgumentSemantic.Strong)]
		UIColor SectionIndexBackgroundColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable sectionIndexTrackingBackgroundColor __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("sectionIndexTrackingBackgroundColor", ArgumentSemantic.Strong)]
		UIColor SectionIndexTrackingBackgroundColor { get; set; }

		// @property (nonatomic) UITableViewCellSeparatorStyle separatorStyle __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("separatorStyle", ArgumentSemantic.Assign)]
		UITableViewCellSeparatorStyle SeparatorStyle { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable separatorColor __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("separatorColor", ArgumentSemantic.Strong)]
		UIColor SeparatorColor { get; set; }

		// @property (copy, nonatomic) UIVisualEffect * _Nullable separatorEffect __attribute__((availability(ios, introduced=8.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[NullAllowed, Export ("separatorEffect", ArgumentSemantic.Copy)]
		UIVisualEffect SeparatorEffect { get; set; }

		// @property (nonatomic) int cellLayoutMarginsFollowReadableWidth __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("cellLayoutMarginsFollowReadableWidth")]
		int CellLayoutMarginsFollowReadableWidth { get; set; }

		// @property (nonatomic) int insetsContentViewsToSafeArea __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("insetsContentViewsToSafeArea")]
		int InsetsContentViewsToSafeArea { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable tableHeaderView;
		[NullAllowed, Export ("tableHeaderView", ArgumentSemantic.Strong)]
		UIView TableHeaderView { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable tableFooterView;
		[NullAllowed, Export ("tableFooterView", ArgumentSemantic.Strong)]
		UIView TableFooterView { get; set; }

		// -(__kindof UITableViewCell * _Nullable)dequeueReusableCellWithIdentifier:(NSString * _Nonnull)identifier;
		[Export ("dequeueReusableCellWithIdentifier:")]
		UITableViewCell DequeueReusableCellWithIdentifier (string identifier);

		// -(__kindof UITableViewCell * _Nonnull)dequeueReusableCellWithIdentifier:(NSString * _Nonnull)identifier forIndexPath:(NSIndexPath * _Nonnull)indexPath __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("dequeueReusableCellWithIdentifier:forIndexPath:")]
		UITableViewCell DequeueReusableCellWithIdentifier (string identifier, NSIndexPath indexPath);

		// -(__kindof UITableViewHeaderFooterView * _Nullable)dequeueReusableHeaderFooterViewWithIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("dequeueReusableHeaderFooterViewWithIdentifier:")]
		UITableViewHeaderFooterView DequeueReusableHeaderFooterViewWithIdentifier (string identifier);

		// -(void)registerNib:(UINib * _Nullable)nib forCellReuseIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("registerNib:forCellReuseIdentifier:")]
		void RegisterNib ([NullAllowed] UINib nib, string identifier);

		// -(void)registerClass:(Class _Nullable)cellClass forCellReuseIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("registerClass:forCellReuseIdentifier:")]
		void RegisterClass ([NullAllowed] Class cellClass, string identifier);

		// -(void)registerNib:(UINib * _Nullable)nib forHeaderFooterViewReuseIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("registerNib:forHeaderFooterViewReuseIdentifier:")]
		void RegisterNib ([NullAllowed] UINib nib, string identifier);

		// -(void)registerClass:(Class _Nullable)aClass forHeaderFooterViewReuseIdentifier:(NSString * _Nonnull)identifier __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("registerClass:forHeaderFooterViewReuseIdentifier:")]
		void RegisterClass ([NullAllowed] Class aClass, string identifier);

		// @property (nonatomic) int remembersLastFocusedIndexPath __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("remembersLastFocusedIndexPath")]
		int RemembersLastFocusedIndexPath { get; set; }

		// @property (nonatomic) int dragInteractionEnabled __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("dragInteractionEnabled")]
		int DragInteractionEnabled { get; set; }

		// @property (readonly, nonatomic) int hasActiveDrag __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("hasActiveDrag")]
		int HasActiveDrag { get; }

		// @property (readonly, nonatomic) int hasActiveDrop __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("hasActiveDrop")]
		int HasActiveDrop { get; }
	}

	// @interface UIDragAndDrop (UITableView) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UITableView))]
	interface UITableView_UIDragAndDrop : IUISpringLoadedInteractionSupporting
	{
	}

	// @protocol UITableViewDataSource <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITableViewDataSource
	{
		// @required -(NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
		[Abstract]
		[Export ("tableView:numberOfRowsInSection:")]
		nint TableView (UITableView tableView, nint section);

		// @required -(UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("tableView:cellForRowAtIndexPath:")]
		UITableViewCell TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView;
		[Export ("numberOfSectionsInTableView:")]
		nint NumberOfSectionsInTableView (UITableView tableView);

		// @optional -(NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section;
		[Export ("tableView:titleForHeaderInSection:")]
		[return: NullAllowed]
		string TableView (UITableView tableView, nint section);

		// @optional -(NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForFooterInSection:(NSInteger)section;
		[Export ("tableView:titleForFooterInSection:")]
		[return: NullAllowed]
		string TableView (UITableView tableView, nint section);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:canEditRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView canMoveRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:canMoveRowAtIndexPath:")]
		int TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(NSArray<NSString *> * _Nullable)sectionIndexTitlesForTableView:(UITableView * _Nonnull)tableView;
		[Export ("sectionIndexTitlesForTableView:")]
		[return: NullAllowed]
		string[] SectionIndexTitlesForTableView (UITableView tableView);

		// @optional -(NSInteger)tableView:(UITableView * _Nonnull)tableView sectionForSectionIndexTitle:(NSString * _Nonnull)title atIndex:(NSInteger)index;
		[Export ("tableView:sectionForSectionIndexTitle:atIndex:")]
		nint TableView (UITableView tableView, string title, nint index);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:commitEditingStyle:forRowAtIndexPath:")]
		void TableView (UITableView tableView, UITableViewCellEditingStyle editingStyle, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView moveRowAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toIndexPath:(NSIndexPath * _Nonnull)destinationIndexPath;
		[Export ("tableView:moveRowAtIndexPath:toIndexPath:")]
		void TableView (UITableView tableView, NSIndexPath sourceIndexPath, NSIndexPath destinationIndexPath);
	}

	// @protocol UITableViewDataSourcePrefetching <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITableViewDataSourcePrefetching
	{
		// @required -(void)tableView:(UITableView * _Nonnull)tableView prefetchRowsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
		[Abstract]
		[Export ("tableView:prefetchRowsAtIndexPaths:")]
		void PrefetchRowsAtIndexPaths (UITableView tableView, NSIndexPath[] indexPaths);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView cancelPrefetchingForRowsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
		[Export ("tableView:cancelPrefetchingForRowsAtIndexPaths:")]
		void CancelPrefetchingForRowsAtIndexPaths (UITableView tableView, NSIndexPath[] indexPaths);
	}

	// @protocol UITableViewDragDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITableViewDragDelegate
	{
		// @required -(NSArray<UIDragItem *> * _Nonnull)tableView:(UITableView * _Nonnull)tableView itemsForBeginningDragSession:(id<UIDragSession> _Nonnull)session atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("tableView:itemsForBeginningDragSession:atIndexPath:")]
		UIDragItem[] TableView (UITableView tableView, UIDragSession session, NSIndexPath indexPath);

		// @optional -(NSArray<UIDragItem *> * _Nonnull)tableView:(UITableView * _Nonnull)tableView itemsForAddingToDragSession:(id<UIDragSession> _Nonnull)session atIndexPath:(NSIndexPath * _Nonnull)indexPath point:(CGPoint)point;
		[Export ("tableView:itemsForAddingToDragSession:atIndexPath:point:")]
		UIDragItem[] TableView (UITableView tableView, UIDragSession session, NSIndexPath indexPath, CGPoint point);

		// @optional -(UIDragPreviewParameters * _Nullable)tableView:(UITableView * _Nonnull)tableView dragPreviewParametersForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:dragPreviewParametersForRowAtIndexPath:")]
		[return: NullAllowed]
		UIDragPreviewParameters TableView (UITableView tableView, NSIndexPath indexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView dragSessionWillBegin:(id<UIDragSession> _Nonnull)session;
		[Export ("tableView:dragSessionWillBegin:")]
		void TableView (UITableView tableView, UIDragSession session);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView dragSessionDidEnd:(id<UIDragSession> _Nonnull)session;
		[Export ("tableView:dragSessionDidEnd:")]
		void TableView (UITableView tableView, UIDragSession session);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView dragSessionAllowsMoveOperation:(id<UIDragSession> _Nonnull)session;
		[Export ("tableView:dragSessionAllowsMoveOperation:")]
		int TableView (UITableView tableView, UIDragSession session);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession> _Nonnull)session;
		[Export ("tableView:dragSessionIsRestrictedToDraggingApplication:")]
		int TableView (UITableView tableView, UIDragSession session);
	}

	// @protocol UITableViewDropDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITableViewDropDelegate
	{
		// @required -(void)tableView:(UITableView * _Nonnull)tableView performDropWithCoordinator:(id<UITableViewDropCoordinator> _Nonnull)coordinator;
		[Abstract]
		[Export ("tableView:performDropWithCoordinator:")]
		void TableView (UITableView tableView, UITableViewDropCoordinator coordinator);

		// @optional -(int)tableView:(UITableView * _Nonnull)tableView canHandleDropSession:(id<UIDropSession> _Nonnull)session;
		[Export ("tableView:canHandleDropSession:")]
		int TableView (UITableView tableView, UIDropSession session);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView dropSessionDidEnter:(id<UIDropSession> _Nonnull)session;
		[Export ("tableView:dropSessionDidEnter:")]
		void TableView (UITableView tableView, UIDropSession session);

		// @optional -(UITableViewDropProposal * _Nonnull)tableView:(UITableView * _Nonnull)tableView dropSessionDidUpdate:(id<UIDropSession> _Nonnull)session withDestinationIndexPath:(NSIndexPath * _Nullable)destinationIndexPath;
		[Export ("tableView:dropSessionDidUpdate:withDestinationIndexPath:")]
		UITableViewDropProposal TableView (UITableView tableView, UIDropSession session, [NullAllowed] NSIndexPath destinationIndexPath);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView dropSessionDidExit:(id<UIDropSession> _Nonnull)session;
		[Export ("tableView:dropSessionDidExit:")]
		void TableView (UITableView tableView, UIDropSession session);

		// @optional -(void)tableView:(UITableView * _Nonnull)tableView dropSessionDidEnd:(id<UIDropSession> _Nonnull)session;
		[Export ("tableView:dropSessionDidEnd:")]
		void TableView (UITableView tableView, UIDropSession session);

		// @optional -(UIDragPreviewParameters * _Nullable)tableView:(UITableView * _Nonnull)tableView dropPreviewParametersForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("tableView:dropPreviewParametersForRowAtIndexPath:")]
		[return: NullAllowed]
		UIDragPreviewParameters TableView (UITableView tableView, NSIndexPath indexPath);
	}

	// @interface UITableViewDropProposal : UIDropProposal
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIDropProposal))]
	interface UITableViewDropProposal
	{
		// -(instancetype _Nonnull)initWithDropOperation:(UIDropOperation)operation intent:(UITableViewDropIntent)intent;
		[Export ("initWithDropOperation:intent:")]
		IntPtr Constructor (UIDropOperation operation, UITableViewDropIntent intent);

		// @property (readonly, nonatomic) UITableViewDropIntent intent;
		[Export ("intent")]
		UITableViewDropIntent Intent { get; }
	}

	// @protocol UITableViewDropCoordinator <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITableViewDropCoordinator
	{
		// @required @property (readonly, nonatomic) NSArray<id<UITableViewDropItem>> * _Nonnull items;
		[Abstract]
		[Export ("items")]
		UITableViewDropItem[] Items { get; }

		// @required @property (readonly, nonatomic) NSIndexPath * _Nullable destinationIndexPath;
		[Abstract]
		[NullAllowed, Export ("destinationIndexPath")]
		NSIndexPath DestinationIndexPath { get; }

		// @required @property (readonly, nonatomic) UITableViewDropProposal * _Nonnull proposal;
		[Abstract]
		[Export ("proposal")]
		UITableViewDropProposal Proposal { get; }

		// @required @property (readonly, nonatomic) id<UIDropSession> _Nonnull session;
		[Abstract]
		[Export ("session")]
		UIDropSession Session { get; }

		// @required -(id<UITableViewDropPlaceholderContext> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toPlaceholder:(UITableViewDropPlaceholder * _Nonnull)placeholder;
		[Abstract]
		[Export ("dropItem:toPlaceholder:")]
		UITableViewDropPlaceholderContext DropItem (UIDragItem dragItem, UITableViewDropPlaceholder placeholder);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Abstract]
		[Export ("dropItem:toRowAtIndexPath:")]
		UIDragAnimating DropItem (UIDragItem dragItem, NSIndexPath indexPath);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem intoRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath rect:(CGRect)rect;
		[Abstract]
		[Export ("dropItem:intoRowAtIndexPath:rect:")]
		UIDragAnimating DropItem (UIDragItem dragItem, NSIndexPath indexPath, CGRect rect);

		// @required -(id<UIDragAnimating> _Nonnull)dropItem:(UIDragItem * _Nonnull)dragItem toTarget:(UIDragPreviewTarget * _Nonnull)target;
		[Abstract]
		[Export ("dropItem:toTarget:")]
		UIDragAnimating DropItem (UIDragItem dragItem, UIDragPreviewTarget target);
	}

	// @interface UITableViewPlaceholder : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITableViewPlaceholder
	{
		// -(instancetype _Nonnull)initWithInsertionIndexPath:(NSIndexPath * _Nonnull)insertionIndexPath reuseIdentifier:(NSString * _Nonnull)reuseIdentifier rowHeight:(CGFloat)rowHeight __attribute__((objc_designated_initializer));
		[Export ("initWithInsertionIndexPath:reuseIdentifier:rowHeight:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSIndexPath insertionIndexPath, string reuseIdentifier, nfloat rowHeight);

		// @property (copy, nonatomic) void (^ _Nullable)(__kindof UITableViewCell * _Nonnull) cellUpdateHandler;
		[NullAllowed, Export ("cellUpdateHandler", ArgumentSemantic.Copy)]
		Action<UITableViewCell> CellUpdateHandler { get; set; }
	}

	// @interface UITableViewDropPlaceholder : UITableViewPlaceholder
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UITableViewPlaceholder))]
	interface UITableViewDropPlaceholder
	{
		// @property (copy, nonatomic) UIDragPreviewParameters * _Nullable (^ _Nullable)(__kindof UITableViewCell * _Nonnull) previewParametersProvider;
		[NullAllowed, Export ("previewParametersProvider", ArgumentSemantic.Copy)]
		Func<UITableViewCell, UIDragPreviewParameters> PreviewParametersProvider { get; set; }
	}

	// @protocol UITableViewDropItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UITableViewDropItem
	{
		// @required @property (readonly, nonatomic) UIDragItem * _Nonnull dragItem;
		[Abstract]
		[Export ("dragItem")]
		UIDragItem DragItem { get; }

		// @required @property (readonly, nonatomic) NSIndexPath * _Nullable sourceIndexPath;
		[Abstract]
		[NullAllowed, Export ("sourceIndexPath")]
		NSIndexPath SourceIndexPath { get; }

		// @required @property (readonly, nonatomic) CGSize previewSize;
		[Abstract]
		[Export ("previewSize")]
		CGSize PreviewSize { get; }
	}

	// @protocol UITableViewDropPlaceholderContext <UIDragAnimating>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UITableViewDropPlaceholderContext : IUIDragAnimating
	{
		// @required @property (readonly, nonatomic) UIDragItem * _Nonnull dragItem;
		[Abstract]
		[Export ("dragItem")]
		UIDragItem DragItem { get; }

		// @required -(int)commitInsertionWithDataSourceUpdates:(void (^ _Nonnull)(NSIndexPath * _Nonnull))dataSourceUpdates;
		[Abstract]
		[Export ("commitInsertionWithDataSourceUpdates:")]
		int CommitInsertionWithDataSourceUpdates (Action<NSIndexPath> dataSourceUpdates);

		// @required -(int)deletePlaceholder;
		[Abstract]
		[Export ("deletePlaceholder")]
		[Verify (MethodToProperty)]
		int DeletePlaceholder { get; }
	}

	// audit-objc-generics: @interface NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType> : NSObject <NSCopying>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface NSDiffableDataSourceSnapshot : INSCopying
	{
		// @property (readonly, nonatomic) NSInteger numberOfItems;
		[Export ("numberOfItems")]
		nint NumberOfItems { get; }

		// @property (readonly, nonatomic) NSInteger numberOfSections;
		[Export ("numberOfSections")]
		nint NumberOfSections { get; }

		// @property (readonly, nonatomic) NSArray<SectionIdentifierType> * _Nonnull sectionIdentifiers;
		[Export ("sectionIdentifiers")]
		NSObject[] SectionIdentifiers { get; }

		// @property (readonly, nonatomic) NSArray<ItemIdentifierType> * _Nonnull itemIdentifiers;
		[Export ("itemIdentifiers")]
		NSObject[] ItemIdentifiers { get; }

		// -(NSInteger)numberOfItemsInSection:(SectionIdentifierType _Nonnull)sectionIdentifier;
		[Export ("numberOfItemsInSection:")]
		nint NumberOfItemsInSection (NSObject sectionIdentifier);

		// -(NSArray<ItemIdentifierType> * _Nonnull)itemIdentifiersInSectionWithIdentifier:(SectionIdentifierType _Nonnull)sectionIdentifier;
		[Export ("itemIdentifiersInSectionWithIdentifier:")]
		NSObject[] ItemIdentifiersInSectionWithIdentifier (NSObject sectionIdentifier);

		// -(SectionIdentifierType _Nullable)sectionIdentifierForSectionContainingItemIdentifier:(ItemIdentifierType _Nonnull)itemIdentifier;
		[Export ("sectionIdentifierForSectionContainingItemIdentifier:")]
		[return: NullAllowed]
		NSObject SectionIdentifierForSectionContainingItemIdentifier (NSObject itemIdentifier);

		// -(NSInteger)indexOfItemIdentifier:(ItemIdentifierType _Nonnull)itemIdentifier;
		[Export ("indexOfItemIdentifier:")]
		nint IndexOfItemIdentifier (NSObject itemIdentifier);

		// -(NSInteger)indexOfSectionIdentifier:(SectionIdentifierType _Nonnull)sectionIdentifier;
		[Export ("indexOfSectionIdentifier:")]
		nint IndexOfSectionIdentifier (NSObject sectionIdentifier);

		// -(void)appendItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers;
		[Export ("appendItemsWithIdentifiers:")]
		void AppendItemsWithIdentifiers (NSObject[] identifiers);

		// -(void)appendItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers intoSectionWithIdentifier:(SectionIdentifierType _Nonnull)sectionIdentifier;
		[Export ("appendItemsWithIdentifiers:intoSectionWithIdentifier:")]
		void AppendItemsWithIdentifiers (NSObject[] identifiers, NSObject sectionIdentifier);

		// -(void)insertItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers beforeItemWithIdentifier:(ItemIdentifierType _Nonnull)itemIdentifier;
		[Export ("insertItemsWithIdentifiers:beforeItemWithIdentifier:")]
		void InsertItemsWithIdentifiers (NSObject[] identifiers, NSObject itemIdentifier);

		// -(void)insertItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers afterItemWithIdentifier:(ItemIdentifierType _Nonnull)itemIdentifier;
		[Export ("insertItemsWithIdentifiers:afterItemWithIdentifier:")]
		void InsertItemsWithIdentifiers (NSObject[] identifiers, NSObject itemIdentifier);

		// -(void)deleteItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers;
		[Export ("deleteItemsWithIdentifiers:")]
		void DeleteItemsWithIdentifiers (NSObject[] identifiers);

		// -(void)deleteAllItems;
		[Export ("deleteAllItems")]
		void DeleteAllItems ();

		// -(void)moveItemWithIdentifier:(ItemIdentifierType _Nonnull)fromIdentifier beforeItemWithIdentifier:(ItemIdentifierType _Nonnull)toIdentifier;
		[Export ("moveItemWithIdentifier:beforeItemWithIdentifier:")]
		void MoveItemWithIdentifier (NSObject fromIdentifier, NSObject toIdentifier);

		// -(void)moveItemWithIdentifier:(ItemIdentifierType _Nonnull)fromIdentifier afterItemWithIdentifier:(ItemIdentifierType _Nonnull)toIdentifier;
		[Export ("moveItemWithIdentifier:afterItemWithIdentifier:")]
		void MoveItemWithIdentifier (NSObject fromIdentifier, NSObject toIdentifier);

		// -(void)reloadItemsWithIdentifiers:(NSArray<ItemIdentifierType> * _Nonnull)identifiers;
		[Export ("reloadItemsWithIdentifiers:")]
		void ReloadItemsWithIdentifiers (NSObject[] identifiers);

		// -(void)appendSectionsWithIdentifiers:(NSArray * _Nonnull)sectionIdentifiers;
		[Export ("appendSectionsWithIdentifiers:")]
		[Verify (StronglyTypedNSArray)]
		void AppendSectionsWithIdentifiers (NSObject[] sectionIdentifiers);

		// -(void)insertSectionsWithIdentifiers:(NSArray<SectionIdentifierType> * _Nonnull)sectionIdentifiers beforeSectionWithIdentifier:(SectionIdentifierType _Nonnull)toSectionIdentifier;
		[Export ("insertSectionsWithIdentifiers:beforeSectionWithIdentifier:")]
		void InsertSectionsWithIdentifiers (NSObject[] sectionIdentifiers, NSObject toSectionIdentifier);

		// -(void)insertSectionsWithIdentifiers:(NSArray<SectionIdentifierType> * _Nonnull)sectionIdentifiers afterSectionWithIdentifier:(SectionIdentifierType _Nonnull)toSectionIdentifier;
		[Export ("insertSectionsWithIdentifiers:afterSectionWithIdentifier:")]
		void InsertSectionsWithIdentifiers (NSObject[] sectionIdentifiers, NSObject toSectionIdentifier);

		// -(void)deleteSectionsWithIdentifiers:(NSArray<SectionIdentifierType> * _Nonnull)sectionIdentifiers;
		[Export ("deleteSectionsWithIdentifiers:")]
		void DeleteSectionsWithIdentifiers (NSObject[] sectionIdentifiers);

		// -(void)moveSectionWithIdentifier:(SectionIdentifierType _Nonnull)fromSectionIdentifier beforeSectionWithIdentifier:(SectionIdentifierType _Nonnull)toSectionIdentifier;
		[Export ("moveSectionWithIdentifier:beforeSectionWithIdentifier:")]
		void MoveSectionWithIdentifier (NSObject fromSectionIdentifier, NSObject toSectionIdentifier);

		// -(void)moveSectionWithIdentifier:(SectionIdentifierType _Nonnull)fromSectionIdentifier afterSectionWithIdentifier:(SectionIdentifierType _Nonnull)toSectionIdentifier;
		[Export ("moveSectionWithIdentifier:afterSectionWithIdentifier:")]
		void MoveSectionWithIdentifier (NSObject fromSectionIdentifier, NSObject toSectionIdentifier);

		// -(void)reloadSectionsWithIdentifiers:(NSArray<SectionIdentifierType> * _Nonnull)sectionIdentifiers;
		[Export ("reloadSectionsWithIdentifiers:")]
		void ReloadSectionsWithIdentifiers (NSObject[] sectionIdentifiers);
	}

	// typedef UICollectionViewCell * _Nullable (^UICollectionViewDiffableDataSourceCellProvider)(UICollectionView * _Nonnull, NSIndexPath * _Nonnull, id _Nonnull);
	delegate UICollectionViewCell UICollectionViewDiffableDataSourceCellProvider (UICollectionView arg0, NSIndexPath arg1, NSObject arg2);

	// typedef UICollectionReusableView * _Nullable (^UICollectionViewDiffableDataSourceSupplementaryViewProvider)(UICollectionView * _Nonnull, NSString * _Nonnull, NSIndexPath * _Nonnull);
	delegate UICollectionReusableView UICollectionViewDiffableDataSourceSupplementaryViewProvider (UICollectionView arg0, string arg1, NSIndexPath arg2);

	// audit-objc-generics: @interface UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType> : NSObject <UICollectionViewDataSource>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UICollectionViewDiffableDataSource : IUICollectionViewDataSource
	{
		// -(instancetype _Nonnull)initWithCollectionView:(UICollectionView * _Nonnull)collectionView cellProvider:(UICollectionViewDiffableDataSourceCellProvider _Nonnull)cellProvider;
		[Export ("initWithCollectionView:cellProvider:")]
		IntPtr Constructor (UICollectionView collectionView, UICollectionViewDiffableDataSourceCellProvider cellProvider);

		// @property (copy, nonatomic) UICollectionViewDiffableDataSourceSupplementaryViewProvider _Nullable supplementaryViewProvider;
		[NullAllowed, Export ("supplementaryViewProvider", ArgumentSemantic.Copy)]
		UICollectionViewDiffableDataSourceSupplementaryViewProvider SupplementaryViewProvider { get; set; }

		// -(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot;
		[Export ("snapshot")]
		[Verify (MethodToProperty)]
		NSDiffableDataSourceSnapshot`2<NSObject, NSObject> Snapshot { get; }

		// -(void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot animatingDifferences:(int)animatingDifferences;
		[Export ("applySnapshot:animatingDifferences:")]
		void ApplySnapshot (NSDiffableDataSourceSnapshot`2<NSObject, NSObject> snapshot, int animatingDifferences);

		// -(void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot animatingDifferences:(int)animatingDifferences completion:(void (^ _Nullable)(void))completion;
		[Export ("applySnapshot:animatingDifferences:completion:")]
		void ApplySnapshot (NSDiffableDataSourceSnapshot`2<NSObject, NSObject> snapshot, int animatingDifferences, [NullAllowed] Action completion);

		// -(ItemIdentifierType _Nullable)itemIdentifierForIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("itemIdentifierForIndexPath:")]
		[return: NullAllowed]
		NSObject ItemIdentifierForIndexPath (NSIndexPath indexPath);

		// -(NSIndexPath * _Nullable)indexPathForItemIdentifier:(ItemIdentifierType _Nonnull)identifier;
		[Export ("indexPathForItemIdentifier:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForItemIdentifier (NSObject identifier);
	}

	// typedef UITableViewCell * _Nullable (^UITableViewDiffableDataSourceCellProvider)(UITableView * _Nonnull, NSIndexPath * _Nonnull, id _Nonnull);
	delegate UITableViewCell UITableViewDiffableDataSourceCellProvider (UITableView arg0, NSIndexPath arg1, NSObject arg2);

	// audit-objc-generics: @interface UITableViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType> : NSObject <UITableViewDataSource>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITableViewDiffableDataSource : IUITableViewDataSource
	{
		// -(instancetype _Nonnull)initWithTableView:(UITableView * _Nonnull)tableView cellProvider:(UITableViewDiffableDataSourceCellProvider _Nonnull)cellProvider;
		[Export ("initWithTableView:cellProvider:")]
		IntPtr Constructor (UITableView tableView, UITableViewDiffableDataSourceCellProvider cellProvider);

		// -(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot;
		[Export ("snapshot")]
		[Verify (MethodToProperty)]
		NSDiffableDataSourceSnapshot`2<NSObject, NSObject> Snapshot { get; }

		// -(void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot animatingDifferences:(int)animatingDifferences;
		[Export ("applySnapshot:animatingDifferences:")]
		void ApplySnapshot (NSDiffableDataSourceSnapshot`2<NSObject, NSObject> snapshot, int animatingDifferences);

		// -(void)applySnapshot:(NSDiffableDataSourceSnapshot<SectionIdentifierType,ItemIdentifierType> * _Nonnull)snapshot animatingDifferences:(int)animatingDifferences completion:(void (^ _Nullable)(void))completion;
		[Export ("applySnapshot:animatingDifferences:completion:")]
		void ApplySnapshot (NSDiffableDataSourceSnapshot`2<NSObject, NSObject> snapshot, int animatingDifferences, [NullAllowed] Action completion);

		// -(ItemIdentifierType _Nullable)itemIdentifierForIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("itemIdentifierForIndexPath:")]
		[return: NullAllowed]
		NSObject ItemIdentifierForIndexPath (NSIndexPath indexPath);

		// -(NSIndexPath * _Nullable)indexPathForItemIdentifier:(ItemIdentifierType _Nonnull)identifier;
		[Export ("indexPathForItemIdentifier:")]
		[return: NullAllowed]
		NSIndexPath IndexPathForItemIdentifier (NSObject identifier);

		// @property (nonatomic) UITableViewRowAnimation defaultRowAnimation;
		[Export ("defaultRowAnimation", ArgumentSemantic.Assign)]
		UITableViewRowAnimation DefaultRowAnimation { get; set; }
	}

	// @interface UIDatePicker : UIControl <NSCoding>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UIDatePicker : INSCoding
	{
		// @property (nonatomic) UIDatePickerMode datePickerMode;
		[Export ("datePickerMode", ArgumentSemantic.Assign)]
		UIDatePickerMode DatePickerMode { get; set; }

		// @property (nonatomic, strong) NSLocale * _Nullable locale;
		[NullAllowed, Export ("locale", ArgumentSemantic.Strong)]
		NSLocale Locale { get; set; }

		// @property (copy, nonatomic) NSCalendar * _Null_unspecified calendar;
		[Export ("calendar", ArgumentSemantic.Copy)]
		NSCalendar Calendar { get; set; }

		// @property (nonatomic, strong) NSTimeZone * _Nullable timeZone;
		[NullAllowed, Export ("timeZone", ArgumentSemantic.Strong)]
		NSTimeZone TimeZone { get; set; }

		// @property (nonatomic, strong) NSDate * _Nonnull date;
		[Export ("date", ArgumentSemantic.Strong)]
		NSDate Date { get; set; }

		// @property (nonatomic, strong) NSDate * _Nullable minimumDate;
		[NullAllowed, Export ("minimumDate", ArgumentSemantic.Strong)]
		NSDate MinimumDate { get; set; }

		// @property (nonatomic, strong) NSDate * _Nullable maximumDate;
		[NullAllowed, Export ("maximumDate", ArgumentSemantic.Strong)]
		NSDate MaximumDate { get; set; }

		// @property (nonatomic) NSTimeInterval countDownDuration;
		[Export ("countDownDuration")]
		double CountDownDuration { get; set; }

		// @property (nonatomic) NSInteger minuteInterval;
		[Export ("minuteInterval")]
		nint MinuteInterval { get; set; }

		// -(void)setDate:(NSDate * _Nonnull)date animated:(int)animated;
		[Export ("setDate:animated:")]
		void SetDate (NSDate date, int animated);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIDocumentStateChangedNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Field ("UIDocumentStateChangedNotification", "__Internal")]
		NSString UIDocumentStateChangedNotification { get; }
	}

	// @interface UIDocument : NSObject <NSFilePresenter, NSProgressReporting>
	[NoTV, iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface UIDocument : INSFilePresenter, INSProgressReporting
	{
		// -(instancetype _Nonnull)initWithFileURL:(NSURL * _Nonnull)url __attribute__((objc_designated_initializer)) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("initWithFileURL:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSUrl url);

		// @property (readonly) NSURL * _Nonnull fileURL __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("fileURL")]
		NSUrl FileURL { get; }

		// @property (readonly, copy) NSString * _Nonnull localizedName __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("localizedName")]
		string LocalizedName { get; }

		// @property (readonly, copy) NSString * _Nullable fileType __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("fileType")]
		string FileType { get; }

		// @property (copy) NSDate * _Nullable fileModificationDate __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("fileModificationDate", ArgumentSemantic.Copy)]
		NSDate FileModificationDate { get; set; }

		// @property (readonly) UIDocumentState documentState __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("documentState")]
		UIDocumentState DocumentState { get; }

		// @property (readonly) NSProgress * _Nullable progress __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[NullAllowed, Export ("progress")]
		NSProgress Progress { get; }

		// -(void)openWithCompletionHandler:(void (^ _Nullable)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("openWithCompletionHandler:")]
		void OpenWithCompletionHandler ([NullAllowed] Action<int> completionHandler);

		// -(void)closeWithCompletionHandler:(void (^ _Nullable)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("closeWithCompletionHandler:")]
		void CloseWithCompletionHandler ([NullAllowed] Action<int> completionHandler);

		// -(int)loadFromContents:(id _Nonnull)contents ofType:(NSString * _Nullable)typeName error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("loadFromContents:ofType:error:")]
		int LoadFromContents (NSObject contents, [NullAllowed] string typeName, [NullAllowed] out NSError outError);

		// -(id _Nullable)contentsForType:(NSString * _Nonnull)typeName error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("contentsForType:error:")]
		[return: NullAllowed]
		NSObject ContentsForType (string typeName, [NullAllowed] out NSError outError);

		// -(void)disableEditing __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("disableEditing")]
		void DisableEditing ();

		// -(void)enableEditing __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("enableEditing")]
		void EnableEditing ();

		// @property (strong) NSUndoManager * _Null_unspecified undoManager __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("undoManager", ArgumentSemantic.Strong)]
		NSUndoManager UndoManager { get; set; }

		// @property (readonly, nonatomic) int hasUnsavedChanges __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("hasUnsavedChanges")]
		int HasUnsavedChanges { get; }

		// -(void)updateChangeCount:(UIDocumentChangeKind)change __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("updateChangeCount:")]
		void UpdateChangeCount (UIDocumentChangeKind change);

		// -(id _Nonnull)changeCountTokenForSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("changeCountTokenForSaveOperation:")]
		NSObject ChangeCountTokenForSaveOperation (UIDocumentSaveOperation saveOperation);

		// -(void)updateChangeCountWithToken:(id _Nonnull)changeCountToken forSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("updateChangeCountWithToken:forSaveOperation:")]
		void UpdateChangeCountWithToken (NSObject changeCountToken, UIDocumentSaveOperation saveOperation);

		// -(void)saveToURL:(NSURL * _Nonnull)url forSaveOperation:(UIDocumentSaveOperation)saveOperation completionHandler:(void (^ _Nullable)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("saveToURL:forSaveOperation:completionHandler:")]
		void SaveToURL (NSUrl url, UIDocumentSaveOperation saveOperation, [NullAllowed] Action<int> completionHandler);

		// -(void)autosaveWithCompletionHandler:(void (^ _Nullable)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("autosaveWithCompletionHandler:")]
		void AutosaveWithCompletionHandler ([NullAllowed] Action<int> completionHandler);

		// @property (readonly, nonatomic) NSString * _Nullable savingFileType __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("savingFileType")]
		string SavingFileType { get; }

		// -(NSString * _Nonnull)fileNameExtensionForType:(NSString * _Nullable)typeName saveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("fileNameExtensionForType:saveOperation:")]
		string FileNameExtensionForType ([NullAllowed] string typeName, UIDocumentSaveOperation saveOperation);

		// -(int)writeContents:(id _Nonnull)contents andAttributes:(NSDictionary * _Nullable)additionalFileAttributes safelyToURL:(NSURL * _Nonnull)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("writeContents:andAttributes:safelyToURL:forSaveOperation:error:")]
		int WriteContents (NSObject contents, [NullAllowed] NSDictionary additionalFileAttributes, NSUrl url, UIDocumentSaveOperation saveOperation, [NullAllowed] out NSError outError);

		// -(int)writeContents:(id _Nonnull)contents toURL:(NSURL * _Nonnull)url forSaveOperation:(UIDocumentSaveOperation)saveOperation originalContentsURL:(NSURL * _Nullable)originalContentsURL error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("writeContents:toURL:forSaveOperation:originalContentsURL:error:")]
		int WriteContents (NSObject contents, NSUrl url, UIDocumentSaveOperation saveOperation, [NullAllowed] NSUrl originalContentsURL, [NullAllowed] out NSError outError);

		// -(NSDictionary * _Nullable)fileAttributesToWriteToURL:(NSURL * _Nonnull)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("fileAttributesToWriteToURL:forSaveOperation:error:")]
		[return: NullAllowed]
		NSDictionary FileAttributesToWriteToURL (NSUrl url, UIDocumentSaveOperation saveOperation, [NullAllowed] out NSError outError);

		// -(int)readFromURL:(NSURL * _Nonnull)url error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("readFromURL:error:")]
		int ReadFromURL (NSUrl url, [NullAllowed] out NSError outError);

		// -(void)performAsynchronousFileAccessUsingBlock:(void (^ _Nonnull)(void))block __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("performAsynchronousFileAccessUsingBlock:")]
		void PerformAsynchronousFileAccessUsingBlock (Action block);

		// -(void)handleError:(NSError * _Nonnull)error userInteractionPermitted:(int)userInteractionPermitted __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("handleError:userInteractionPermitted:")]
		void HandleError (NSError error, int userInteractionPermitted);

		// -(void)finishedHandlingError:(NSError * _Nonnull)error recovered:(int)recovered __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("finishedHandlingError:recovered:")]
		void FinishedHandlingError (NSError error, int recovered);

		// -(void)userInteractionNoLongerPermittedForError:(NSError * _Nonnull)error __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("userInteractionNoLongerPermittedForError:")]
		void UserInteractionNoLongerPermittedForError (NSError error);

		// -(void)revertToContentsOfURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nullable)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("revertToContentsOfURL:completionHandler:")]
		void RevertToContentsOfURL (NSUrl url, [NullAllowed] Action<int> completionHandler);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull NSUserActivityDocumentURLKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Field ("NSUserActivityDocumentURLKey", "__Internal")]
		NSString NSUserActivityDocumentURLKey { get; }
	}

	// @interface ActivityContinuation (UIDocument) <UIUserActivityRestoring>
	[Category]
	[BaseType (typeof(UIDocument))]
	interface UIDocument_ActivityContinuation : IUIUserActivityRestoring
	{
		// @property (nonatomic, strong) NSUserActivity * _Nullable userActivity __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[NullAllowed, Export ("userActivity", ArgumentSemantic.Strong)]
		NSUserActivity UserActivity { get; set; }

		// -(void)updateUserActivityState:(NSUserActivity * _Nonnull)userActivity __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8,0)]
		[Export ("updateUserActivityState:")]
		void UpdateUserActivityState (NSUserActivity userActivity);

		// -(void)restoreUserActivityState:(NSUserActivity * _Nonnull)userActivity __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8,0)]
		[Export ("restoreUserActivityState:")]
		void RestoreUserActivityState (NSUserActivity userActivity);
	}

	// @protocol UIDocumentPickerDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDocumentPickerDelegate
	{
		// @optional -(void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("documentPicker:didPickDocumentsAtURLs:")]
		void DocumentPicker (UIDocumentPickerViewController controller, NSUrl[] urls);

		// @optional -(void)documentPickerWasCancelled:(UIDocumentPickerViewController * _Nonnull)controller;
		[Export ("documentPickerWasCancelled:")]
		void DocumentPickerWasCancelled (UIDocumentPickerViewController controller);

		// @optional -(void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentAtURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=8.0, deprecated=11.0)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[Export ("documentPicker:didPickDocumentAtURL:")]
		void DocumentPicker (UIDocumentPickerViewController controller, NSUrl url);
	}

	// @interface UIDocumentPickerViewController : UIViewController
	[NoTV, iOS (8,0)]
	[BaseType (typeof(UIViewController))]
	interface UIDocumentPickerViewController
	{
		// -(instancetype _Nonnull)initWithDocumentTypes:(NSArray<NSString *> * _Nonnull)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
		[Export ("initWithDocumentTypes:inMode:")]
		[DesignatedInitializer]
		IntPtr Constructor (string[] allowedUTIs, UIDocumentPickerMode mode);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithURL:(NSURL * _Nonnull)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
		[Export ("initWithURL:inMode:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSUrl url, UIDocumentPickerMode mode);

		// -(instancetype _Nonnull)initWithURLs:(NSArray<NSURL *> * _Nonnull)urls inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer)) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Export ("initWithURLs:inMode:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSUrl[] urls, UIDocumentPickerMode mode);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDocumentPickerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIDocumentPickerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, assign, nonatomic) UIDocumentPickerMode documentPickerMode;
		[Export ("documentPickerMode", ArgumentSemantic.Assign)]
		UIDocumentPickerMode DocumentPickerMode { get; }

		// @property (assign, nonatomic) int allowsMultipleSelection __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("allowsMultipleSelection")]
		int AllowsMultipleSelection { get; set; }

		// @property (assign, nonatomic) int shouldShowFileExtensions __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("shouldShowFileExtensions")]
		int ShouldShowFileExtensions { get; set; }

		// @property (copy, nonatomic) NSURL * _Nullable directoryURL __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("directoryURL", ArgumentSemantic.Copy)]
		NSUrl DirectoryURL { get; set; }
	}

	// @protocol UIDocumentMenuDelegate <NSObject>
	[Introduced (PlatformName.iOS, 8, 0, message: "UIDocumentMenuDelegate is deprecated. Use UIDocumentPickerViewController directly.")]
	[Deprecated (PlatformName.iOS, 13, 0, message: "UIDocumentMenuDelegate is deprecated. Use UIDocumentPickerViewController directly.")]
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDocumentMenuDelegate
	{
		// @required -(void)documentMenu:(UIDocumentMenuViewController * _Nonnull)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController * _Nonnull)documentPicker;
		[Abstract]
		[Export ("documentMenu:didPickDocumentPicker:")]
		void DocumentMenu (UIDocumentMenuViewController documentMenu, UIDocumentPickerViewController documentPicker);

		// @optional -(void)documentMenuWasCancelled:(UIDocumentMenuViewController * _Nonnull)documentMenu;
		[Export ("documentMenuWasCancelled:")]
		void DocumentMenuWasCancelled (UIDocumentMenuViewController documentMenu);
	}

	// @interface UIDocumentMenuViewController : UIViewController
	[Introduced (PlatformName.iOS, 8, 0, message: "UIDocumentMenuViewController is deprecated. Use UIDocumentPickerViewController directly.")]
	[Deprecated (PlatformName.iOS, 11, 0, message: "UIDocumentMenuViewController is deprecated. Use UIDocumentPickerViewController directly.")]
	[NoTV]
	[BaseType (typeof(UIViewController))]
	interface UIDocumentMenuViewController
	{
		// -(instancetype _Nonnull)initWithDocumentTypes:(NSArray<NSString *> * _Nonnull)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
		[Export ("initWithDocumentTypes:inMode:")]
		[DesignatedInitializer]
		IntPtr Constructor (string[] allowedUTIs, UIDocumentPickerMode mode);

		// -(instancetype _Nonnull)initWithURL:(NSURL * _Nonnull)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
		[Export ("initWithURL:inMode:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSUrl url, UIDocumentPickerMode mode);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(void)addOptionWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image order:(UIDocumentMenuOrder)order handler:(void (^ _Nonnull)(void))handler;
		[Export ("addOptionWithTitle:image:order:handler:")]
		void AddOptionWithTitle (string title, [NullAllowed] UIImage image, UIDocumentMenuOrder order, Action handler);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDocumentMenuDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIDocumentMenuDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @interface UIDocumentPickerExtensionViewController : UIViewController
	[NoTV, iOS (8,0)]
	[BaseType (typeof(UIViewController))]
	interface UIDocumentPickerExtensionViewController
	{
		// -(void)dismissGrantingAccessToURL:(NSURL * _Nullable)url;
		[Export ("dismissGrantingAccessToURL:")]
		void DismissGrantingAccessToURL ([NullAllowed] NSUrl url);

		// -(void)prepareForPresentationInMode:(UIDocumentPickerMode)mode;
		[Export ("prepareForPresentationInMode:")]
		void PrepareForPresentationInMode (UIDocumentPickerMode mode);

		// @property (readonly, assign, nonatomic) UIDocumentPickerMode documentPickerMode;
		[Export ("documentPickerMode", ArgumentSemantic.Assign)]
		UIDocumentPickerMode DocumentPickerMode { get; }

		// @property (readonly, copy, nonatomic) NSURL * _Nullable originalURL;
		[NullAllowed, Export ("originalURL", ArgumentSemantic.Copy)]
		NSUrl OriginalURL { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSString *> * _Nullable validTypes;
		[NullAllowed, Export ("validTypes", ArgumentSemantic.Copy)]
		string[] ValidTypes { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull providerIdentifier;
		[Export ("providerIdentifier")]
		string ProviderIdentifier { get; }

		// @property (readonly, copy, nonatomic) NSURL * _Nullable documentStorageURL;
		[NullAllowed, Export ("documentStorageURL", ArgumentSemantic.Copy)]
		NSUrl DocumentStorageURL { get; }
	}

	// @protocol UICloudSharingControllerDelegate <NSObject>
	[NoWatch, NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UICloudSharingControllerDelegate
	{
		// @required -(void)cloudSharingController:(UICloudSharingController * _Nonnull)csc failedToSaveShareWithError:(NSError * _Nonnull)error;
		[Abstract]
		[Export ("cloudSharingController:failedToSaveShareWithError:")]
		void CloudSharingController (UICloudSharingController csc, NSError error);

		// @required -(NSString * _Nullable)itemTitleForCloudSharingController:(UICloudSharingController * _Nonnull)csc;
		[Abstract]
		[Export ("itemTitleForCloudSharingController:")]
		[return: NullAllowed]
		string ItemTitleForCloudSharingController (UICloudSharingController csc);

		// @optional -(NSData * _Nullable)itemThumbnailDataForCloudSharingController:(UICloudSharingController * _Nonnull)csc;
		[Export ("itemThumbnailDataForCloudSharingController:")]
		[return: NullAllowed]
		NSData ItemThumbnailDataForCloudSharingController (UICloudSharingController csc);

		// @optional -(NSString * _Nullable)itemTypeForCloudSharingController:(UICloudSharingController * _Nonnull)csc;
		[Export ("itemTypeForCloudSharingController:")]
		[return: NullAllowed]
		string ItemTypeForCloudSharingController (UICloudSharingController csc);

		// @optional -(void)cloudSharingControllerDidSaveShare:(UICloudSharingController * _Nonnull)csc;
		[Export ("cloudSharingControllerDidSaveShare:")]
		void CloudSharingControllerDidSaveShare (UICloudSharingController csc);

		// @optional -(void)cloudSharingControllerDidStopSharing:(UICloudSharingController * _Nonnull)csc;
		[Export ("cloudSharingControllerDidStopSharing:")]
		void CloudSharingControllerDidStopSharing (UICloudSharingController csc);
	}

	// @interface UICloudSharingController : UIViewController
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(UIViewController))]
	interface UICloudSharingController
	{
		// -(instancetype _Nonnull)initWithPreparationHandler:(void (^ _Nonnull)(UICloudSharingController * _Nonnull, void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)))preparationHandler;
		[Export ("initWithPreparationHandler:")]
		IntPtr Constructor (Action<UICloudSharingController, Action<CKShare, CKContainer, NSError>> preparationHandler);

		// -(instancetype _Nonnull)initWithShare:(CKShare * _Nonnull)share container:(CKContainer * _Nonnull)container;
		[Export ("initWithShare:container:")]
		IntPtr Constructor (CKShare share, CKContainer container);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UICloudSharingControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UICloudSharingControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, nonatomic, strong) CKShare * _Nullable share;
		[NullAllowed, Export ("share", ArgumentSemantic.Strong)]
		CKShare Share { get; }

		// @property (nonatomic) UICloudSharingPermissionOptions availablePermissions;
		[Export ("availablePermissions", ArgumentSemantic.Assign)]
		UICloudSharingPermissionOptions AvailablePermissions { get; set; }

		// -(id<UIActivityItemSource> _Nonnull)activityItemSource;
		[Export ("activityItemSource")]
		[Verify (MethodToProperty)]
		UIActivityItemSource ActivityItemSource { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSFileProviderItemIdentifier _Nonnull NSFileProviderRootContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.rootContainer"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 15), iOS (11, 0)]
		[Field ("NSFileProviderRootContainerItemIdentifier", "__Internal")]
		NSString NSFileProviderRootContainerItemIdentifier { get; }

		// extern const NSFileProviderItemIdentifier _Nonnull NSFileProviderWorkingSetContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.workingSet"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 15), iOS (11, 0)]
		[Field ("NSFileProviderWorkingSetContainerItemIdentifier", "__Internal")]
		NSString NSFileProviderWorkingSetContainerItemIdentifier { get; }
	}

	// @interface NSFileProviderItemVersion : NSObject
	[NoWatch, NoTV, NoiOS, Mac (10,15)]
	[BaseType (typeof(NSObject))]
	interface NSFileProviderItemVersion
	{
		// -(instancetype _Nonnull)initWithContentVersion:(NSFileProviderVersionData _Nonnull)contentVersion metadataVersion:(NSFileProviderVersionData _Nonnull)metadataVersion;
		[Export ("initWithContentVersion:metadataVersion:")]
		IntPtr Constructor (NSData contentVersion, NSData metadataVersion);

		// @property (readonly, nonatomic) NSFileProviderVersionData _Nonnull contentVersion;
		[Export ("contentVersion")]
		NSData ContentVersion { get; }

		// @property (readonly, nonatomic) NSFileProviderVersionData _Nonnull metadataVersion;
		[Export ("metadataVersion")]
		NSData MetadataVersion { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const unsigned long long NSFileProviderFavoriteRankUnranked __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10, 15), iOS (11, 0)]
		[Field ("NSFileProviderFavoriteRankUnranked", "__Internal")]
		ulong NSFileProviderFavoriteRankUnranked { get; }
	}

	// @protocol NSFileProviderItemFlags <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSFileProviderItemFlags
	{
		// @required @property (readonly, getter = isUserExecutable, nonatomic) int userExecutable;
		[Abstract]
		[Export ("userExecutable")]
		int UserExecutable { [Bind ("isUserExecutable")] get; }

		// @required @property (readonly, getter = isUserReadable, nonatomic) int userReadable;
		[Abstract]
		[Export ("userReadable")]
		int UserReadable { [Bind ("isUserReadable")] get; }

		// @required @property (readonly, getter = isUserWritable, nonatomic) int userWritable;
		[Abstract]
		[Export ("userWritable")]
		int UserWritable { [Bind ("isUserWritable")] get; }

		// @required @property (readonly, getter = isHidden, nonatomic) int hidden;
		[Abstract]
		[Export ("hidden")]
		int Hidden { [Bind ("isHidden")] get; }

		// @required @property (readonly, getter = isPathExtensionHidden, nonatomic) int pathExtensionHidden;
		[Abstract]
		[Export ("pathExtensionHidden")]
		int PathExtensionHidden { [Bind ("isPathExtensionHidden")] get; }
	}

	// @protocol NSFileProviderItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface NSFileProviderItem
	{
		// @required @property (readonly, copy, nonatomic) NSFileProviderItemIdentifier _Nonnull itemIdentifier;
		[Abstract]
		[Export ("itemIdentifier")]
		string ItemIdentifier { get; }

		// @required @property (readonly, copy, nonatomic) NSFileProviderItemIdentifier _Nonnull parentItemIdentifier;
		[Abstract]
		[Export ("parentItemIdentifier")]
		string ParentItemIdentifier { get; }

		// @required @property (readonly, copy, nonatomic) NSString * _Nonnull filename;
		[Abstract]
		[Export ("filename")]
		string Filename { get; }

		// @required @property (readonly, copy, nonatomic) NSString * _Nonnull typeIdentifier;
		[Abstract]
		[Export ("typeIdentifier")]
		string TypeIdentifier { get; }

		// @optional @property (readonly, nonatomic) NSFileProviderItemCapabilities capabilities;
		[Export ("capabilities")]
		NSFileProviderItemCapabilities Capabilities { get; }

		// @optional @property (readonly, nonatomic, strong) id<NSFileProviderItemFlags> _Nullable flags __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 15)]
		[NullAllowed, Export ("flags", ArgumentSemantic.Strong)]
		NSFileProviderItemFlags Flags { get; }

		// @optional @property (readonly, copy, nonatomic) NSNumber * _Nullable documentSize;
		[NullAllowed, Export ("documentSize", ArgumentSemantic.Copy)]
		NSNumber DocumentSize { get; }

		// @optional @property (readonly, copy, nonatomic) NSNumber * _Nullable childItemCount;
		[NullAllowed, Export ("childItemCount", ArgumentSemantic.Copy)]
		NSNumber ChildItemCount { get; }

		// @optional @property (readonly, copy, nonatomic) NSDate * _Nullable creationDate;
		[NullAllowed, Export ("creationDate", ArgumentSemantic.Copy)]
		NSDate CreationDate { get; }

		// @optional @property (readonly, copy, nonatomic) NSDate * _Nullable contentModificationDate;
		[NullAllowed, Export ("contentModificationDate", ArgumentSemantic.Copy)]
		NSDate ContentModificationDate { get; }

		// @optional @property (readonly, nonatomic, strong) NSDictionary<NSString *,NSData *> * _Nullable extendedAttributes __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 15)]
		[NullAllowed, Export ("extendedAttributes", ArgumentSemantic.Strong)]
		NSDictionary<NSString, NSData> ExtendedAttributes { get; }

		// @optional @property (readonly, copy, nonatomic) NSDate * _Nullable lastUsedDate;
		[NullAllowed, Export ("lastUsedDate", ArgumentSemantic.Copy)]
		NSDate LastUsedDate { get; }

		// @optional @property (readonly, copy, nonatomic) NSData * _Nullable tagData;
		[NullAllowed, Export ("tagData", ArgumentSemantic.Copy)]
		NSData TagData { get; }

		// @optional @property (readonly, copy, nonatomic) NSNumber * _Nullable favoriteRank;
		[NullAllowed, Export ("favoriteRank", ArgumentSemantic.Copy)]
		NSNumber FavoriteRank { get; }

		// @optional @property (readonly, getter = isTrashed, nonatomic) int trashed;
		[Export ("trashed")]
		int Trashed { [Bind ("isTrashed")] get; }

		// @optional @property (readonly, getter = isUploaded, nonatomic) int uploaded;
		[Export ("uploaded")]
		int Uploaded { [Bind ("isUploaded")] get; }

		// @optional @property (readonly, getter = isUploading, nonatomic) int uploading;
		[Export ("uploading")]
		int Uploading { [Bind ("isUploading")] get; }

		// @optional @property (readonly, copy, nonatomic) NSError * _Nullable uploadingError;
		[NullAllowed, Export ("uploadingError", ArgumentSemantic.Copy)]
		NSError UploadingError { get; }

		// @optional @property (readonly, getter = isDownloaded, nonatomic) int downloaded;
		[Export ("downloaded")]
		int Downloaded { [Bind ("isDownloaded")] get; }

		// @optional @property (readonly, getter = isDownloading, nonatomic) int downloading;
		[Export ("downloading")]
		int Downloading { [Bind ("isDownloading")] get; }

		// @optional @property (readonly, copy, nonatomic) NSError * _Nullable downloadingError;
		[NullAllowed, Export ("downloadingError", ArgumentSemantic.Copy)]
		NSError DownloadingError { get; }

		// @optional @property (readonly, getter = isExcludedFromSync, nonatomic) int excludedFromSync __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 15)]
		[Export ("excludedFromSync")]
		int ExcludedFromSync { [Bind ("isExcludedFromSync")] get; }

		// @optional @property (readonly, getter = isMostRecentVersionDownloaded, nonatomic) int mostRecentVersionDownloaded;
		[Export ("mostRecentVersionDownloaded")]
		int MostRecentVersionDownloaded { [Bind ("isMostRecentVersionDownloaded")] get; }

		// @optional @property (readonly, getter = isShared, nonatomic) int shared;
		[Export ("shared")]
		int Shared { [Bind ("isShared")] get; }

		// @optional @property (readonly, getter = isSharedByCurrentUser, nonatomic) int sharedByCurrentUser;
		[Export ("sharedByCurrentUser")]
		int SharedByCurrentUser { [Bind ("isSharedByCurrentUser")] get; }

		// @optional @property (readonly, nonatomic, strong) NSPersonNameComponents * _Nullable ownerNameComponents;
		[NullAllowed, Export ("ownerNameComponents", ArgumentSemantic.Strong)]
		NSPersonNameComponents OwnerNameComponents { get; }

		// @optional @property (readonly, nonatomic, strong) NSPersonNameComponents * _Nullable mostRecentEditorNameComponents;
		[NullAllowed, Export ("mostRecentEditorNameComponents", ArgumentSemantic.Strong)]
		NSPersonNameComponents MostRecentEditorNameComponents { get; }

		// @optional @property (readonly, nonatomic, strong) NSData * _Nullable versionIdentifier __attribute__((availability(ios, introduced=11.0, deprecated=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[Introduced (PlatformName.iOS, 11, 0, message: "itemVersion")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "itemVersion")]
		[NoWatch, NoTV, NoMac]
		[NullAllowed, Export ("versionIdentifier", ArgumentSemantic.Strong)]
		NSData VersionIdentifier { get; }

		// @optional @property (readonly, nonatomic, strong) NSFileProviderItemVersion * _Nullable itemVersion __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 15)]
		[NullAllowed, Export ("itemVersion", ArgumentSemantic.Strong)]
		NSFileProviderItemVersion ItemVersion { get; }

		// @optional @property (readonly, nonatomic, strong) NSDictionary * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Strong)]
		NSDictionary UserInfo { get; }
	}

	// @interface NSFileProviderExtension : NSObject
	[NoWatch, NoTV, Mac (10,15), iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface NSFileProviderExtension
	{
		// -(NSFileProviderItem _Nullable)itemForIdentifier:(NSFileProviderItemIdentifier _Nonnull)identifier error:(NSError * _Nullable * _Nullable)error __attribute__((swift_name("item(for:)"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, Mac (10,15), iOS (11,0)]
		[Export ("itemForIdentifier:error:")]
		[return: NullAllowed]
		NSFileProviderItem ItemForIdentifier (string identifier, [NullAllowed] out NSError error);

		// -(NSProgress * _Nonnull)fetchContentsForItemWithIdentifier:(NSFileProviderItemIdentifier _Nonnull)itemIdentifier version:(NSFileProviderItemVersion * _Nullable)requestedVersion completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSFileProviderItem _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchContents(for:version:completionHandler:)"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("fetchContentsForItemWithIdentifier:version:completionHandler:")]
		NSProgress FetchContentsForItemWithIdentifier (string itemIdentifier, [NullAllowed] NSFileProviderItemVersion requestedVersion, Action<NSURL, NSFileProviderItem, NSError> completionHandler);

		// -(NSProgress * _Nonnull)fetchContentsForItemWithIdentifier:(NSFileProviderItemIdentifier _Nonnull)itemIdentifier version:(NSFileProviderItemVersion * _Nullable)requestedVersion usingExistingContentsAtURL:(NSURL * _Nonnull)existingContents existingVersion:(NSFileProviderItemVersion * _Nonnull)existingVersion completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSFileProviderItem _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fetchContents(for:version:usingExistingContentsAt:existingVersion:completionHandler:)"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("fetchContentsForItemWithIdentifier:version:usingExistingContentsAtURL:existingVersion:completionHandler:")]
		NSProgress FetchContentsForItemWithIdentifier (string itemIdentifier, [NullAllowed] NSFileProviderItemVersion requestedVersion, NSUrl existingContents, NSFileProviderItemVersion existingVersion, Action<NSURL, NSFileProviderItem, NSError> completionHandler);

		// -(void)itemChanged:(NSFileProviderItem _Nonnull)item baseVersion:(NSFileProviderItemVersion * _Nonnull)version changedFields:(NSFileProviderItemField)changedFields contents:(NSURL * _Nullable)newContents completionHandler:(void (^ _Nonnull)(NSFileProviderItem _Nullable, NSError * _Nullable))completionHandler __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("itemChanged:baseVersion:changedFields:contents:completionHandler:")]
		void ItemChanged (NSFileProviderItem item, NSFileProviderItemVersion version, NSFileProviderItemField changedFields, [NullAllowed] NSUrl newContents, Action<NSFileProviderItem, NSError> completionHandler);
	}

	// @interface CreateItem (NSFileProviderExtension)
	[Category]
	[BaseType (typeof(NSFileProviderExtension))]
	interface NSFileProviderExtension_CreateItem
	{
		// -(void)createItemBasedOnTemplate:(NSFileProviderItem _Nonnull)itemTemplate fields:(NSFileProviderItemField)fields contents:(NSURL * _Nullable)url options:(NSFileProviderCreateItemOptions)options completionHandler:(void (^ _Nonnull)(NSFileProviderItem _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createItem(basedOn:fields:contents:options:completionHandler:)"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("createItemBasedOnTemplate:fields:contents:options:completionHandler:")]
		void CreateItemBasedOnTemplate (NSFileProviderItem itemTemplate, NSFileProviderItemField fields, [NullAllowed] NSUrl url, NSFileProviderCreateItemOptions options, Action<NSFileProviderItem, NSError> completionHandler);
	}

	// @interface DeleteItem (NSFileProviderExtension)
	[Category]
	[BaseType (typeof(NSFileProviderExtension))]
	interface NSFileProviderExtension_DeleteItem
	{
		// -(void)deleteItemWithIdentifier:(NSFileProviderItemIdentifier _Nonnull)itemIdentifier baseVersion:(NSFileProviderItemVersion * _Nonnull)version options:(NSFileProviderDeleteItemOptions)options completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("deleteItemWithIdentifier:baseVersion:options:completionHandler:")]
		void DeleteItemWithIdentifier (string itemIdentifier, NSFileProviderItemVersion version, NSFileProviderDeleteItemOptions options, Action<NSError> completionHandler);
	}

	// @interface Import (NSFileProviderExtension)
	[Category]
	[BaseType (typeof(NSFileProviderExtension))]
	interface NSFileProviderExtension_Import
	{
		// -(void)importDidFinishWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10,15)]
		[Export ("importDidFinishWithCompletionHandler:")]
		void ImportDidFinishWithCompletionHandler (Action completionHandler);
	}

	// @interface Deprecated (NSFileProviderExtension)
	[Category]
	[BaseType (typeof(NSFileProviderExtension))]
	interface NSFileProviderExtension_Deprecated
	{
		// +(int)writePlaceholderAtURL:(NSURL * _Nonnull)placeholderURL withMetadata:(NSDictionary<NSURLResourceKey,id> * _Nonnull)metadata error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=8.0, deprecated=11.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "Use the corresponding method on NSFileProviderManager instead")]
		[Deprecated (PlatformName.iOS, 11, 0, message: "Use the corresponding method on NSFileProviderManager instead")]
		[NoWatch, NoTV, NoMac]
		[Static]
		[Export ("writePlaceholderAtURL:withMetadata:error:")]
		int WritePlaceholderAtURL (NSUrl placeholderURL, NSDictionary<NSString, NSObject> metadata, [NullAllowed] out NSError error);

		// +(NSURL * _Nonnull)placeholderURLForURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=8.0, deprecated=11.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[NoWatch, NoTV, NoMac]
		[Static]
		[Export ("placeholderURLForURL:")]
		NSUrl PlaceholderURLForURL (NSUrl url);

		// @property (readonly, nonatomic) NSString * _Nonnull providerIdentifier __attribute__((availability(ios, introduced=8.0, deprecated=11.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[NoWatch, NoTV, NoMac]
		[Export ("providerIdentifier")]
		string ProviderIdentifier { get; }

		// @property (readonly, nonatomic) NSURL * _Nonnull documentStorageURL __attribute__((availability(ios, introduced=8.0, deprecated=11.0))) __attribute__((availability(macos, unavailable))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[NoWatch, NoTV, NoMac]
		[Export ("documentStorageURL")]
		NSUrl DocumentStorageURL { get; }

		// -(NSURL * _Nullable)URLForItemWithPersistentIdentifier:(NSFileProviderItemIdentifier _Nonnull)identifier __attribute__((availability(ios, introduced=8.0, deprecated=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[Introduced (PlatformName.iOS, 8, 0, message: "No longer called")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer called")]
		[NoWatch, NoTV, NoMac]
		[Export ("URLForItemWithPersistentIdentifier:")]
		[return: NullAllowed]
		NSUrl URLForItemWithPersistentIdentifier (string identifier);

		// -(NSFileProviderItemIdentifier _Nullable)persistentIdentifierForItemAtURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (8,0)]
		[Export ("persistentIdentifierForItemAtURL:")]
		[return: NullAllowed]
		string PersistentIdentifierForItemAtURL (NSUrl url);

		// -(void)providePlaceholderAtURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (8,0)]
		[Export ("providePlaceholderAtURL:completionHandler:")]
		void ProvidePlaceholderAtURL (NSUrl url, Action<NSError> completionHandler);

		// -(void)startProvidingItemAtURL:(NSURL * _Nonnull)url completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler __attribute__((swift_name("startProvidingItem(at:completionHandler:)"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (8,0)]
		[Export ("startProvidingItemAtURL:completionHandler:")]
		void StartProvidingItemAtURL (NSUrl url, Action<NSError> completionHandler);

		// -(void)stopProvidingItemAtURL:(NSURL * _Nonnull)url __attribute__((swift_name("stopProvidingItem(at:)"))) __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (8,0)]
		[Export ("stopProvidingItemAtURL:")]
		void StopProvidingItemAtURL (NSUrl url);

		// -(void)itemChangedAtURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(macos, unavailable)));
		[NoWatch, NoTV, NoMac, iOS (8,0)]
		[Export ("itemChangedAtURL:")]
		void ItemChangedAtURL (NSUrl url);
	}

	// @interface UIVisualEffect : NSObject <NSCopying, NSSecureCoding>
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIVisualEffect : INSCopying, INSSecureCoding
	{
	}

	// @interface UIBlurEffect : UIVisualEffect
	[iOS (8,0)]
	[BaseType (typeof(UIVisualEffect))]
	interface UIBlurEffect
	{
		// +(UIBlurEffect * _Nonnull)effectWithStyle:(UIBlurEffectStyle)style;
		[Static]
		[Export ("effectWithStyle:")]
		UIBlurEffect EffectWithStyle (UIBlurEffectStyle style);
	}

	// @interface UIVibrancyEffect : UIVisualEffect
	[iOS (8,0)]
	[BaseType (typeof(UIVisualEffect))]
	interface UIVibrancyEffect
	{
		// +(UIVibrancyEffect * _Nonnull)effectForBlurEffect:(UIBlurEffect * _Nonnull)blurEffect;
		[Static]
		[Export ("effectForBlurEffect:")]
		UIVibrancyEffect EffectForBlurEffect (UIBlurEffect blurEffect);
	}

	// @interface AdditionalStyles (UIVibrancyEffect)
	[Category]
	[BaseType (typeof(UIVibrancyEffect))]
	interface UIVibrancyEffect_AdditionalStyles
	{
		// +(UIVibrancyEffect * _Nonnull)effectForBlurEffect:(UIBlurEffect * _Nonnull)blurEffect style:(UIVibrancyEffectStyle)style __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13,0)]
		[Static]
		[Export ("effectForBlurEffect:style:")]
		UIVibrancyEffect EffectForBlurEffect (UIBlurEffect blurEffect, UIVibrancyEffectStyle style);
	}

	// @interface UIVisualEffectView : UIView <NSSecureCoding>
	[iOS (8,0)]
	[BaseType (typeof(UIView))]
	interface UIVisualEffectView : INSSecureCoding
	{
		// @property (readonly, nonatomic, strong) UIView * _Nonnull contentView;
		[Export ("contentView", ArgumentSemantic.Strong)]
		UIView ContentView { get; }

		// @property (copy, nonatomic) UIVisualEffect * _Nullable effect;
		[NullAllowed, Export ("effect", ArgumentSemantic.Copy)]
		UIVisualEffect Effect { get; set; }

		// -(instancetype _Nonnull)initWithEffect:(UIVisualEffect * _Nullable)effect __attribute__((objc_designated_initializer));
		[Export ("initWithEffect:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] UIVisualEffect effect);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	// @interface UIFontMetrics : NSObject
	[Watch (4,0), TV (11,0), iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIFontMetrics
	{
		// @property (readonly, strong, class) UIFontMetrics * _Nonnull defaultMetrics;
		[Static]
		[Export ("defaultMetrics", ArgumentSemantic.Strong)]
		UIFontMetrics DefaultMetrics { get; }

		// +(instancetype _Nonnull)metricsForTextStyle:(UIFontTextStyle _Nonnull)textStyle;
		[Static]
		[Export ("metricsForTextStyle:")]
		UIFontMetrics MetricsForTextStyle (string textStyle);

		// -(instancetype _Nonnull)initForTextStyle:(UIFontTextStyle _Nonnull)textStyle __attribute__((objc_designated_initializer));
		[Export ("initForTextStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (string textStyle);

		// -(UIFont * _Nonnull)scaledFontForFont:(UIFont * _Nonnull)font;
		[Export ("scaledFontForFont:")]
		UIFont ScaledFontForFont (UIFont font);

		// -(UIFont * _Nonnull)scaledFontForFont:(UIFont * _Nonnull)font maximumPointSize:(CGFloat)maximumPointSize;
		[Export ("scaledFontForFont:maximumPointSize:")]
		UIFont ScaledFontForFont (UIFont font, nfloat maximumPointSize);

		// -(UIFont * _Nonnull)scaledFontForFont:(UIFont * _Nonnull)font compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(watchos, unavailable)));
		[NoWatch]
		[Export ("scaledFontForFont:compatibleWithTraitCollection:")]
		UIFont ScaledFontForFont (UIFont font, [NullAllowed] UITraitCollection traitCollection);

		// -(UIFont * _Nonnull)scaledFontForFont:(UIFont * _Nonnull)font maximumPointSize:(CGFloat)maximumPointSize compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(watchos, unavailable)));
		[NoWatch]
		[Export ("scaledFontForFont:maximumPointSize:compatibleWithTraitCollection:")]
		UIFont ScaledFontForFont (UIFont font, nfloat maximumPointSize, [NullAllowed] UITraitCollection traitCollection);

		// -(CGFloat)scaledValueForValue:(CGFloat)value;
		[Export ("scaledValueForValue:")]
		nfloat ScaledValueForValue (nfloat value);

		// -(CGFloat)scaledValueForValue:(CGFloat)value compatibleWithTraitCollection:(UITraitCollection * _Nullable)traitCollection __attribute__((availability(watchos, unavailable)));
		[NoWatch]
		[Export ("scaledValueForValue:compatibleWithTraitCollection:")]
		nfloat ScaledValueForValue (nfloat value, [NullAllowed] UITraitCollection traitCollection);
	}

	// @interface UIFontPickerViewControllerConfiguration : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UIFontPickerViewControllerConfiguration : INSCopying
	{
		// @property (nonatomic) int includeFaces;
		[Export ("includeFaces")]
		int IncludeFaces { get; set; }

		// @property (nonatomic) int displayUsingSystemFont;
		[Export ("displayUsingSystemFont")]
		int DisplayUsingSystemFont { get; set; }

		// @property (nonatomic) UIFontDescriptorSymbolicTraits filteredTraits;
		[Export ("filteredTraits", ArgumentSemantic.Assign)]
		UIFontDescriptorSymbolicTraits FilteredTraits { get; set; }

		// @property (copy, nonatomic) NSPredicate * _Nullable filteredLanguagesPredicate;
		[NullAllowed, Export ("filteredLanguagesPredicate", ArgumentSemantic.Copy)]
		NSPredicate FilteredLanguagesPredicate { get; set; }

		// +(NSPredicate * _Nullable)filterPredicateForFilteredLanguages:(NSArray<NSString *> * _Nonnull)filteredLanguages;
		[Static]
		[Export ("filterPredicateForFilteredLanguages:")]
		[return: NullAllowed]
		NSPredicate FilterPredicateForFilteredLanguages (string[] filteredLanguages);
	}

	// @protocol UIFontPickerViewControllerDelegate <NSObject>
	[NoWatch, NoTV, iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIFontPickerViewControllerDelegate
	{
		// @optional -(void)fontPickerViewControllerDidCancel:(UIFontPickerViewController * _Nonnull)viewController;
		[Export ("fontPickerViewControllerDidCancel:")]
		void FontPickerViewControllerDidCancel (UIFontPickerViewController viewController);

		// @optional -(void)fontPickerViewControllerDidPickFont:(UIFontPickerViewController * _Nonnull)viewController;
		[Export ("fontPickerViewControllerDidPickFont:")]
		void FontPickerViewControllerDidPickFont (UIFontPickerViewController viewController);
	}

	// @interface UIFontPickerViewController : UIViewController
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(UIViewController))]
	interface UIFontPickerViewController
	{
		// -(instancetype _Nonnull)initWithConfiguration:(UIFontPickerViewControllerConfiguration * _Nonnull)configuration __attribute__((objc_designated_initializer));
		[Export ("initWithConfiguration:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIFontPickerViewControllerConfiguration configuration);

		// @property (readonly, copy, nonatomic) UIFontPickerViewControllerConfiguration * _Nonnull configuration;
		[Export ("configuration", ArgumentSemantic.Copy)]
		UIFontPickerViewControllerConfiguration Configuration { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIFontPickerViewControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIFontPickerViewControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic, strong) UIFontDescriptor * _Nullable selectedFontDescriptor;
		[NullAllowed, Export ("selectedFontDescriptor", ArgumentSemantic.Strong)]
		UIFontDescriptor SelectedFontDescriptor { get; set; }
	}

	// @interface UIImageConfiguration : NSObject <NSCopying, NSSecureCoding>
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIImageConfiguration : INSCopying, INSSecureCoding
	{
		// @property (readonly, nonatomic) UITraitCollection * _Nullable traitCollection;
		[NullAllowed, Export ("traitCollection")]
		UITraitCollection TraitCollection { get; }

		// -(instancetype _Nonnull)configurationWithTraitCollection:(UITraitCollection * _Nullable)traitCollection;
		[Export ("configurationWithTraitCollection:")]
		UIImageConfiguration ConfigurationWithTraitCollection ([NullAllowed] UITraitCollection traitCollection);

		// -(instancetype _Nonnull)configurationByApplyingConfiguration:(UIImageConfiguration * _Nullable)otherConfiguration;
		[Export ("configurationByApplyingConfiguration:")]
		UIImageConfiguration ConfigurationByApplyingConfiguration ([NullAllowed] UIImageConfiguration otherConfiguration);
	}

	// @interface UIImageSymbolConfiguration : UIImageConfiguration
	[Watch (6,0), TV (13,0), iOS (13,0)]
	[BaseType (typeof(UIImageConfiguration))]
	interface UIImageSymbolConfiguration
	{
		// @property (readonly, nonatomic, class) UIImageSymbolConfiguration * _Nonnull unspecifiedConfiguration;
		[Static]
		[Export ("unspecifiedConfiguration")]
		UIImageSymbolConfiguration UnspecifiedConfiguration { get; }

		// +(instancetype _Nonnull)configurationWithScale:(UIImageSymbolScale)scale;
		[Static]
		[Export ("configurationWithScale:")]
		UIImageSymbolConfiguration ConfigurationWithScale (UIImageSymbolScale scale);

		// +(instancetype _Nonnull)configurationWithPointSize:(CGFloat)pointSize;
		[Static]
		[Export ("configurationWithPointSize:")]
		UIImageSymbolConfiguration ConfigurationWithPointSize (nfloat pointSize);

		// +(instancetype _Nonnull)configurationWithWeight:(UIImageSymbolWeight)weight;
		[Static]
		[Export ("configurationWithWeight:")]
		UIImageSymbolConfiguration ConfigurationWithWeight (UIImageSymbolWeight weight);

		// +(instancetype _Nonnull)configurationWithPointSize:(CGFloat)pointSize weight:(UIImageSymbolWeight)weight;
		[Static]
		[Export ("configurationWithPointSize:weight:")]
		UIImageSymbolConfiguration ConfigurationWithPointSize (nfloat pointSize, UIImageSymbolWeight weight);

		// +(instancetype _Nonnull)configurationWithPointSize:(CGFloat)pointSize weight:(UIImageSymbolWeight)weight scale:(UIImageSymbolScale)scale;
		[Static]
		[Export ("configurationWithPointSize:weight:scale:")]
		UIImageSymbolConfiguration ConfigurationWithPointSize (nfloat pointSize, UIImageSymbolWeight weight, UIImageSymbolScale scale);

		// +(instancetype _Nonnull)configurationWithTextStyle:(UIFontTextStyle _Nonnull)textStyle;
		[Static]
		[Export ("configurationWithTextStyle:")]
		UIImageSymbolConfiguration ConfigurationWithTextStyle (string textStyle);

		// +(instancetype _Nonnull)configurationWithTextStyle:(UIFontTextStyle _Nonnull)textStyle scale:(UIImageSymbolScale)scale;
		[Static]
		[Export ("configurationWithTextStyle:scale:")]
		UIImageSymbolConfiguration ConfigurationWithTextStyle (string textStyle, UIImageSymbolScale scale);

		// +(instancetype _Nonnull)configurationWithFont:(UIFont * _Nonnull)font;
		[Static]
		[Export ("configurationWithFont:")]
		UIImageSymbolConfiguration ConfigurationWithFont (UIFont font);

		// +(instancetype _Nonnull)configurationWithFont:(UIFont * _Nonnull)font scale:(UIImageSymbolScale)scale;
		[Static]
		[Export ("configurationWithFont:scale:")]
		UIImageSymbolConfiguration ConfigurationWithFont (UIFont font, UIImageSymbolScale scale);

		// -(instancetype _Nonnull)configurationWithoutTextStyle;
		[Export ("configurationWithoutTextStyle")]
		UIImageSymbolConfiguration ConfigurationWithoutTextStyle ();

		// -(instancetype _Nonnull)configurationWithoutScale;
		[Export ("configurationWithoutScale")]
		UIImageSymbolConfiguration ConfigurationWithoutScale ();

		// -(instancetype _Nonnull)configurationWithoutWeight;
		[Export ("configurationWithoutWeight")]
		UIImageSymbolConfiguration ConfigurationWithoutWeight ();

		// -(instancetype _Nonnull)configurationWithoutPointSizeAndWeight;
		[Export ("configurationWithoutPointSizeAndWeight")]
		UIImageSymbolConfiguration ConfigurationWithoutPointSizeAndWeight ();

		// -(int)isEqualToConfiguration:(UIImageSymbolConfiguration * _Nullable)otherConfiguration;
		[Export ("isEqualToConfiguration:")]
		int IsEqualToConfiguration ([NullAllowed] UIImageSymbolConfiguration otherConfiguration);
	}

	// @interface UIGraphicsRendererFormat : NSObject <NSCopying>
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIGraphicsRendererFormat : INSCopying
	{
		// +(instancetype _Nonnull)defaultFormat __attribute__((availability(tvos, introduced=10.0, deprecated=11.0))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0)));
		[Introduced (PlatformName.TvOS, 10, 0)]
		[Deprecated (PlatformName.TvOS, 11, 0)]
		[Watch (3,0), iOS (10,0)]
		[Static]
		[Export ("defaultFormat")]
		UIGraphicsRendererFormat DefaultFormat ();

		// +(instancetype _Nonnull)preferredFormat __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(watchos, introduced=4.0)));
		[Watch (4,0), TV (11,0), iOS (11,0)]
		[Static]
		[Export ("preferredFormat")]
		UIGraphicsRendererFormat PreferredFormat ();

		// @property (readonly, nonatomic) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }
	}

	// @interface UIGraphicsRendererContext : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIGraphicsRendererContext
	{
		// @property (readonly, nonatomic) CGContextRef _Nonnull CGContext;
		[Export ("CGContext")]
		unsafe CGContextRef* CGContext { get; }

		// @property (readonly, nonatomic) __kindof UIGraphicsRendererFormat * _Nonnull format;
		[Export ("format")]
		UIGraphicsRendererFormat Format { get; }

		// -(void)fillRect:(CGRect)rect;
		[Export ("fillRect:")]
		void FillRect (CGRect rect);

		// -(void)fillRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;
		[Export ("fillRect:blendMode:")]
		void FillRect (CGRect rect, CGBlendMode blendMode);

		// -(void)strokeRect:(CGRect)rect;
		[Export ("strokeRect:")]
		void StrokeRect (CGRect rect);

		// -(void)strokeRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;
		[Export ("strokeRect:blendMode:")]
		void StrokeRect (CGRect rect, CGBlendMode blendMode);

		// -(void)clipToRect:(CGRect)rect;
		[Export ("clipToRect:")]
		void ClipToRect (CGRect rect);
	}

	// @interface UIGraphicsRenderer : NSObject
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIGraphicsRenderer
	{
		// -(instancetype _Nonnull)initWithBounds:(CGRect)bounds;
		[Export ("initWithBounds:")]
		IntPtr Constructor (CGRect bounds);

		// -(instancetype _Nonnull)initWithBounds:(CGRect)bounds format:(UIGraphicsRendererFormat * _Nonnull)format __attribute__((objc_designated_initializer));
		[Export ("initWithBounds:format:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect bounds, UIGraphicsRendererFormat format);

		// @property (readonly, nonatomic) __kindof UIGraphicsRendererFormat * _Nonnull format;
		[Export ("format")]
		UIGraphicsRendererFormat Format { get; }

		// @property (readonly, nonatomic) int allowsImageOutput;
		[Export ("allowsImageOutput")]
		int AllowsImageOutput { get; }
	}

	// typedef void (^UIGraphicsImageDrawingActions)(UIGraphicsImageRendererContext * _Nonnull);
	delegate void UIGraphicsImageDrawingActions (UIGraphicsImageRendererContext arg0);

	// @interface UIGraphicsImageRendererFormat : UIGraphicsRendererFormat
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRendererFormat))]
	interface UIGraphicsImageRendererFormat
	{
		// @property (nonatomic) CGFloat scale;
		[Export ("scale")]
		nfloat Scale { get; set; }

		// @property (nonatomic) int opaque;
		[Export ("opaque")]
		int Opaque { get; set; }

		// @property (nonatomic) int prefersExtendedRange __attribute__((availability(ios, introduced=10.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 10, 0, message: "Use the preferredRange property instead")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "Use the preferredRange property instead")]
		[Export ("prefersExtendedRange")]
		int PrefersExtendedRange { get; set; }

		// @property (nonatomic) UIGraphicsImageRendererFormatRange preferredRange __attribute__((availability(ios, introduced=12.0)));
		[iOS (12, 0)]
		[Export ("preferredRange", ArgumentSemantic.Assign)]
		UIGraphicsImageRendererFormatRange PreferredRange { get; set; }

		// +(instancetype _Nonnull)formatForTraitCollection:(UITraitCollection * _Nonnull)traitCollection __attribute__((availability(ios, introduced=11.0)));
		[iOS (11,0)]
		[Static]
		[Export ("formatForTraitCollection:")]
		UIGraphicsImageRendererFormat FormatForTraitCollection (UITraitCollection traitCollection);
	}

	// @interface UIGraphicsImageRendererContext : UIGraphicsRendererContext
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRendererContext))]
	interface UIGraphicsImageRendererContext
	{
		// @property (readonly, nonatomic) UIImage * _Nonnull currentImage;
		[Export ("currentImage")]
		UIImage CurrentImage { get; }
	}

	// @interface UIGraphicsImageRenderer : UIGraphicsRenderer
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRenderer))]
	interface UIGraphicsImageRenderer
	{
		// -(instancetype _Nonnull)initWithSize:(CGSize)size;
		[Export ("initWithSize:")]
		IntPtr Constructor (CGSize size);

		// -(instancetype _Nonnull)initWithSize:(CGSize)size format:(UIGraphicsImageRendererFormat * _Nonnull)format __attribute__((objc_designated_initializer));
		[Export ("initWithSize:format:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGSize size, UIGraphicsImageRendererFormat format);

		// -(instancetype _Nonnull)initWithBounds:(CGRect)bounds format:(UIGraphicsImageRendererFormat * _Nonnull)format __attribute__((objc_designated_initializer));
		[Export ("initWithBounds:format:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect bounds, UIGraphicsImageRendererFormat format);

		// -(UIImage * _Nonnull)imageWithActions:(UIGraphicsImageDrawingActions _Nonnull)actions;
		[Export ("imageWithActions:")]
		UIImage ImageWithActions (UIGraphicsImageDrawingActions actions);

		// -(NSData * _Nonnull)PNGDataWithActions:(UIGraphicsImageDrawingActions _Nonnull)actions;
		[Export ("PNGDataWithActions:")]
		NSData PNGDataWithActions (UIGraphicsImageDrawingActions actions);

		// -(NSData * _Nonnull)JPEGDataWithCompressionQuality:(CGFloat)compressionQuality actions:(UIGraphicsImageDrawingActions _Nonnull)actions;
		[Export ("JPEGDataWithCompressionQuality:actions:")]
		NSData JPEGDataWithCompressionQuality (nfloat compressionQuality, UIGraphicsImageDrawingActions actions);
	}

	// typedef void (^UIGraphicsPDFDrawingActions)(UIGraphicsPDFRendererContext * _Nonnull);
	delegate void UIGraphicsPDFDrawingActions (UIGraphicsPdfRendererContext arg0);

	// @interface UIGraphicsPDFRendererFormat : UIGraphicsRendererFormat
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRendererFormat))]
	interface UIGraphicsPDFRendererFormat
	{
		// @property (copy, nonatomic) NSDictionary<NSString *,id> * _Nonnull documentInfo;
		[Export ("documentInfo", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> DocumentInfo { get; set; }
	}

	// @interface UIGraphicsPDFRendererContext : UIGraphicsRendererContext
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRendererContext))]
	interface UIGraphicsPDFRendererContext
	{
		// @property (readonly, nonatomic) CGRect pdfContextBounds;
		[Export ("pdfContextBounds")]
		CGRect PdfContextBounds { get; }

		// -(void)beginPage;
		[Export ("beginPage")]
		void BeginPage ();

		// -(void)beginPageWithBounds:(CGRect)bounds pageInfo:(NSDictionary<NSString *,id> * _Nonnull)pageInfo;
		[Export ("beginPageWithBounds:pageInfo:")]
		void BeginPageWithBounds (CGRect bounds, NSDictionary<NSString, NSObject> pageInfo);

		// -(void)setURL:(NSURL * _Nonnull)url forRect:(CGRect)rect;
		[Export ("setURL:forRect:")]
		void SetURL (NSUrl url, CGRect rect);

		// -(void)addDestinationWithName:(NSString * _Nonnull)name atPoint:(CGPoint)point;
		[Export ("addDestinationWithName:atPoint:")]
		void AddDestinationWithName (string name, CGPoint point);

		// -(void)setDestinationWithName:(NSString * _Nonnull)name forRect:(CGRect)rect;
		[Export ("setDestinationWithName:forRect:")]
		void SetDestinationWithName (string name, CGRect rect);
	}

	// @interface UIGraphicsPDFRenderer : UIGraphicsRenderer
	[iOS (10,0)]
	[BaseType (typeof(UIGraphicsRenderer))]
	interface UIGraphicsPDFRenderer
	{
		// -(instancetype _Nonnull)initWithBounds:(CGRect)bounds format:(UIGraphicsPDFRendererFormat * _Nonnull)format __attribute__((objc_designated_initializer));
		[Export ("initWithBounds:format:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect bounds, UIGraphicsPdfRendererFormat format);

		// -(int)writePDFToURL:(NSURL * _Nonnull)url withActions:(UIGraphicsPDFDrawingActions _Nonnull)actions error:(NSError * _Nullable * _Nullable)error;
		[Export ("writePDFToURL:withActions:error:")]
		int WritePDFToURL (NSUrl url, UIGraphicsPDFDrawingActions actions, [NullAllowed] out NSError error);

		// -(NSData * _Nonnull)PDFDataWithActions:(UIGraphicsPDFDrawingActions _Nonnull)actions;
		[Export ("PDFDataWithActions:")]
		NSData PDFDataWithActions (UIGraphicsPDFDrawingActions actions);
	}

	// @interface NSDataAsset : NSObject <NSCopying>
	[Watch (2,0), TV (9,0), Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface NSDataAsset : INSCopying
	{
		// -(instancetype _Nullable)initWithName:(NSDataAssetName _Nonnull)name;
		[Export ("initWithName:")]
		IntPtr Constructor (string name);

		// -(instancetype _Nullable)initWithName:(NSDataAssetName _Nonnull)name bundle:(NSBundle * _Nonnull)bundle __attribute__((objc_designated_initializer));
		[Export ("initWithName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor (string name, NSBundle bundle);

		// @property (readonly, copy, nonatomic) NSDataAssetName _Nonnull name;
		[Export ("name")]
		string Name { get; }

		// @property (readonly, copy, nonatomic) NSData * _Nonnull data;
		[Export ("data", ArgumentSemantic.Copy)]
		NSData Data { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull typeIdentifier;
		[Export ("typeIdentifier")]
		string TypeIdentifier { get; }
	}

	// @interface UIImageAsset : NSObject <NSSecureCoding>
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIImageAsset : INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(UIImage * _Nonnull)imageWithConfiguration:(UIImageConfiguration * _Nonnull)configuration;
		[Export ("imageWithConfiguration:")]
		UIImage ImageWithConfiguration (UIImageConfiguration configuration);

		// -(void)registerImage:(UIImage * _Nonnull)image withConfiguration:(UIImageConfiguration * _Nonnull)configuration;
		[Export ("registerImage:withConfiguration:")]
		void RegisterImage (UIImage image, UIImageConfiguration configuration);

		// -(void)unregisterImageWithConfiguration:(UIImageConfiguration * _Nonnull)configuration;
		[Export ("unregisterImageWithConfiguration:")]
		void UnregisterImageWithConfiguration (UIImageConfiguration configuration);

		// -(UIImage * _Nonnull)imageWithTraitCollection:(UITraitCollection * _Nonnull)traitCollection;
		[Export ("imageWithTraitCollection:")]
		UIImage ImageWithTraitCollection (UITraitCollection traitCollection);

		// -(void)registerImage:(UIImage * _Nonnull)image withTraitCollection:(UITraitCollection * _Nonnull)traitCollection;
		[Export ("registerImage:withTraitCollection:")]
		void RegisterImage (UIImage image, UITraitCollection traitCollection);

		// -(void)unregisterImageWithTraitCollection:(UITraitCollection * _Nonnull)traitCollection;
		[Export ("unregisterImageWithTraitCollection:")]
		void UnregisterImageWithTraitCollection (UITraitCollection traitCollection);
	}

	// @interface UIPanGestureRecognizer : UIGestureRecognizer
	[iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UIPanGestureRecognizer
	{
		// @property (nonatomic) NSUInteger minimumNumberOfTouches __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("minimumNumberOfTouches")]
		nuint MinimumNumberOfTouches { get; set; }

		// @property (nonatomic) NSUInteger maximumNumberOfTouches __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("maximumNumberOfTouches")]
		nuint MaximumNumberOfTouches { get; set; }

		// -(CGPoint)translationInView:(UIView * _Nullable)view;
		[Export ("translationInView:")]
		CGPoint TranslationInView ([NullAllowed] UIView view);

		// -(void)setTranslation:(CGPoint)translation inView:(UIView * _Nullable)view;
		[Export ("setTranslation:inView:")]
		void SetTranslation (CGPoint translation, [NullAllowed] UIView view);

		// -(CGPoint)velocityInView:(UIView * _Nullable)view;
		[Export ("velocityInView:")]
		CGPoint VelocityInView ([NullAllowed] UIView view);
	}

	// @interface UITapGestureRecognizer : UIGestureRecognizer
	[iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UITapGestureRecognizer
	{
		// @property (nonatomic) NSUInteger numberOfTapsRequired;
		[Export ("numberOfTapsRequired")]
		nuint NumberOfTapsRequired { get; set; }

		// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("numberOfTouchesRequired")]
		nuint NumberOfTouchesRequired { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CGFloat UINavigationControllerHideShowBarDuration __attribute__((visibility("default")));
		[Field ("UINavigationControllerHideShowBarDuration", "__Internal")]
		nfloat UINavigationControllerHideShowBarDuration { get; }
	}

	// @interface UINavigationController : UIViewController
	[iOS (2,0)]
	[BaseType (typeof(UIViewController))]
	interface UINavigationController
	{
		// -(instancetype _Nonnull)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass __attribute__((objc_designated_initializer)) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("initWithNavigationBarClass:toolbarClass:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] Class navigationBarClass, [NullAllowed] Class toolbarClass);

		// -(instancetype _Nonnull)initWithRootViewController:(UIViewController * _Nonnull)rootViewController __attribute__((objc_designated_initializer));
		[Export ("initWithRootViewController:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIViewController rootViewController);

		// -(instancetype _Nonnull)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil __attribute__((objc_designated_initializer));
		[Export ("initWithNibName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string nibNameOrNil, [NullAllowed] NSBundle nibBundleOrNil);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)aDecoder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder aDecoder);

		// -(void)pushViewController:(UIViewController * _Nonnull)viewController animated:(int)animated;
		[Export ("pushViewController:animated:")]
		void PushViewController (UIViewController viewController, int animated);

		// -(UIViewController * _Nullable)popViewControllerAnimated:(int)animated;
		[Export ("popViewControllerAnimated:")]
		[return: NullAllowed]
		UIViewController PopViewControllerAnimated (int animated);

		// -(NSArray<__kindof UIViewController *> * _Nullable)popToViewController:(UIViewController * _Nonnull)viewController animated:(int)animated;
		[Export ("popToViewController:animated:")]
		[return: NullAllowed]
		UIViewController[] PopToViewController (UIViewController viewController, int animated);

		// -(NSArray<__kindof UIViewController *> * _Nullable)popToRootViewControllerAnimated:(int)animated;
		[Export ("popToRootViewControllerAnimated:")]
		[return: NullAllowed]
		UIViewController[] PopToRootViewControllerAnimated (int animated);

		// @property (readonly, nonatomic, strong) UIViewController * _Nullable topViewController;
		[NullAllowed, Export ("topViewController", ArgumentSemantic.Strong)]
		UIViewController TopViewController { get; }

		// @property (readonly, nonatomic, strong) UIViewController * _Nullable visibleViewController;
		[NullAllowed, Export ("visibleViewController", ArgumentSemantic.Strong)]
		UIViewController VisibleViewController { get; }

		// @property (copy, nonatomic) NSArray<__kindof UIViewController *> * _Nonnull viewControllers;
		[Export ("viewControllers", ArgumentSemantic.Copy)]
		UIViewController[] ViewControllers { get; set; }

		// -(void)setViewControllers:(NSArray<UIViewController *> * _Nonnull)viewControllers animated:(int)animated __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("setViewControllers:animated:")]
		void SetViewControllers (UIViewController[] viewControllers, int animated);

		// @property (getter = isNavigationBarHidden, nonatomic) int navigationBarHidden;
		[Export ("navigationBarHidden")]
		int NavigationBarHidden { [Bind ("isNavigationBarHidden")] get; set; }

		// -(void)setNavigationBarHidden:(int)hidden animated:(int)animated;
		[Export ("setNavigationBarHidden:animated:")]
		void SetNavigationBarHidden (int hidden, int animated);

		// @property (readonly, nonatomic) UINavigationBar * _Nonnull navigationBar;
		[Export ("navigationBar")]
		UINavigationBar NavigationBar { get; }

		// @property (getter = isToolbarHidden, nonatomic) int toolbarHidden __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("toolbarHidden")]
		int ToolbarHidden { [Bind ("isToolbarHidden")] get; set; }

		// -(void)setToolbarHidden:(int)hidden animated:(int)animated __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("setToolbarHidden:animated:")]
		void SetToolbarHidden (int hidden, int animated);

		// @property (readonly, nonatomic) UIToolbar * _Null_unspecified toolbar __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("toolbar")]
		UIToolbar Toolbar { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UINavigationControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UINavigationControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, nonatomic) UIGestureRecognizer * _Nullable interactivePopGestureRecognizer __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[NullAllowed, Export ("interactivePopGestureRecognizer")]
		UIGestureRecognizer InteractivePopGestureRecognizer { get; }

		// -(void)showViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("showViewController:sender:")]
		void ShowViewController (UIViewController vc, [NullAllowed] NSObject sender);

		// @property (assign, readwrite, nonatomic) int hidesBarsWhenKeyboardAppears __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("hidesBarsWhenKeyboardAppears")]
		int HidesBarsWhenKeyboardAppears { get; set; }

		// @property (assign, readwrite, nonatomic) int hidesBarsOnSwipe __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("hidesBarsOnSwipe")]
		int HidesBarsOnSwipe { get; set; }

		// @property (readonly, nonatomic, strong) UIPanGestureRecognizer * _Nonnull barHideOnSwipeGestureRecognizer __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("barHideOnSwipeGestureRecognizer", ArgumentSemantic.Strong)]
		UIPanGestureRecognizer BarHideOnSwipeGestureRecognizer { get; }

		// @property (assign, readwrite, nonatomic) int hidesBarsWhenVerticallyCompact __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("hidesBarsWhenVerticallyCompact")]
		int HidesBarsWhenVerticallyCompact { get; set; }

		// @property (assign, readwrite, nonatomic) int hidesBarsOnTap __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("hidesBarsOnTap")]
		int HidesBarsOnTap { get; set; }

		// @property (readonly, assign, nonatomic) UITapGestureRecognizer * _Nonnull barHideOnTapGestureRecognizer __attribute__((availability(ios, introduced=8.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (8, 0)]
		[Export ("barHideOnTapGestureRecognizer", ArgumentSemantic.Assign)]
		UITapGestureRecognizer BarHideOnTapGestureRecognizer { get; }
	}

	// @protocol UINavigationControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UINavigationControllerDelegate
	{
		// @optional -(void)navigationController:(UINavigationController * _Nonnull)navigationController willShowViewController:(UIViewController * _Nonnull)viewController animated:(int)animated;
		[Export ("navigationController:willShowViewController:animated:")]
		void NavigationController (UINavigationController navigationController, UIViewController viewController, int animated);

		// @optional -(void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(int)animated;
		[Export ("navigationController:didShowViewController:animated:")]
		void NavigationController (UINavigationController navigationController, UIViewController viewController, int animated);

		// @optional -(UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController * _Nonnull)navigationController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("navigationControllerSupportedInterfaceOrientations:")]
		UIInterfaceOrientationMask NavigationControllerSupportedInterfaceOrientations (UINavigationController navigationController);

		// @optional -(UIInterfaceOrientation)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController * _Nonnull)navigationController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("navigationControllerPreferredInterfaceOrientationForPresentation:")]
		UIInterfaceOrientation NavigationControllerPreferredInterfaceOrientationForPresentation (UINavigationController navigationController);

		// @optional -(id<UIViewControllerInteractiveTransitioning> _Nullable)navigationController:(UINavigationController * _Nonnull)navigationController interactionControllerForAnimationController:(id<UIViewControllerAnimatedTransitioning> _Nonnull)animationController __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("navigationController:interactionControllerForAnimationController:")]
		[return: NullAllowed]
		UIViewControllerInteractiveTransitioning NavigationController (UINavigationController navigationController, UIViewControllerAnimatedTransitioning animationController);

		// @optional -(id<UIViewControllerAnimatedTransitioning> _Nullable)navigationController:(UINavigationController * _Nonnull)navigationController animationControllerForOperation:(UINavigationControllerOperation)operation fromViewController:(UIViewController * _Nonnull)fromVC toViewController:(UIViewController * _Nonnull)toVC __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("navigationController:animationControllerForOperation:fromViewController:toViewController:")]
		[return: NullAllowed]
		UIViewControllerAnimatedTransitioning NavigationController (UINavigationController navigationController, UINavigationControllerOperation operation, UIViewController fromVC, UIViewController toVC);
	}

	// @interface UINavigationControllerItem (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UINavigationControllerItem
	{
		// @property (readonly, nonatomic, strong) UINavigationItem * _Nonnull navigationItem;
		[Export ("navigationItem", ArgumentSemantic.Strong)]
		UINavigationItem NavigationItem { get; }

		// @property (nonatomic) int hidesBottomBarWhenPushed __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("hidesBottomBarWhenPushed")]
		int HidesBottomBarWhenPushed { get; set; }

		// @property (readonly, nonatomic, strong) UINavigationController * _Nullable navigationController;
		[NullAllowed, Export ("navigationController", ArgumentSemantic.Strong)]
		UINavigationController NavigationController { get; }
	}

	// @interface UINavigationControllerContextualToolbarItems (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UINavigationControllerContextualToolbarItems
	{
		// @property (nonatomic, strong) NSArray<__kindof UIBarButtonItem *> * _Nullable toolbarItems __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[NullAllowed, Export ("toolbarItems", ArgumentSemantic.Strong)]
		UIBarButtonItem[] ToolbarItems { get; set; }

		// -(void)setToolbarItems:(NSArray<UIBarButtonItem *> * _Nullable)toolbarItems animated:(int)animated __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("setToolbarItems:animated:")]
		void SetToolbarItems ([NullAllowed] UIBarButtonItem[] toolbarItems, int animated);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerMediaType __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIImagePickerControllerMediaType", "__Internal")]
		NSString UIImagePickerControllerMediaType { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerOriginalImage __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIImagePickerControllerOriginalImage", "__Internal")]
		NSString UIImagePickerControllerOriginalImage { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerEditedImage __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIImagePickerControllerEditedImage", "__Internal")]
		NSString UIImagePickerControllerEditedImage { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerCropRect __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIImagePickerControllerCropRect", "__Internal")]
		NSString UIImagePickerControllerCropRect { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerMediaURL __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIImagePickerControllerMediaURL", "__Internal")]
		NSString UIImagePickerControllerMediaURL { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerReferenceURL __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.1, deprecated=11.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 1)]
		[Deprecated (PlatformName.iOS, 11, 0)]
		[NoTV]
		[Field ("UIImagePickerControllerReferenceURL", "__Internal")]
		NSString UIImagePickerControllerReferenceURL { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerMediaMetadata __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.1))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (4, 1)]
		[Field ("UIImagePickerControllerMediaMetadata", "__Internal")]
		NSString UIImagePickerControllerMediaMetadata { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerLivePhoto __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.1))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 1)]
		[Field ("UIImagePickerControllerLivePhoto", "__Internal")]
		NSString UIImagePickerControllerLivePhoto { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerPHAsset __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Field ("UIImagePickerControllerPHAsset", "__Internal")]
		NSString UIImagePickerControllerPHAsset { get; }

		// extern const UIImagePickerControllerInfoKey _Nonnull UIImagePickerControllerImageURL __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Field ("UIImagePickerControllerImageURL", "__Internal")]
		NSString UIImagePickerControllerImageURL { get; }
	}

	// @interface UIImagePickerController : UINavigationController <NSCoding>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UINavigationController))]
	interface UIImagePickerController : INSCoding
	{
		// +(int)isSourceTypeAvailable:(UIImagePickerControllerSourceType)sourceType;
		[Static]
		[Export ("isSourceTypeAvailable:")]
		int IsSourceTypeAvailable (UIImagePickerControllerSourceType sourceType);

		// +(NSArray<NSString *> * _Nullable)availableMediaTypesForSourceType:(UIImagePickerControllerSourceType)sourceType;
		[Static]
		[Export ("availableMediaTypesForSourceType:")]
		[return: NullAllowed]
		string[] AvailableMediaTypesForSourceType (UIImagePickerControllerSourceType sourceType);

		// +(int)isCameraDeviceAvailable:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("isCameraDeviceAvailable:")]
		int IsCameraDeviceAvailable (UIImagePickerControllerCameraDevice cameraDevice);

		// +(int)isFlashAvailableForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("isFlashAvailableForCameraDevice:")]
		int IsFlashAvailableForCameraDevice (UIImagePickerControllerCameraDevice cameraDevice);

		// +(NSArray<NSNumber *> * _Nullable)availableCaptureModesForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Static]
		[Export ("availableCaptureModesForCameraDevice:")]
		[return: NullAllowed]
		NSNumber[] AvailableCaptureModesForCameraDevice (UIImagePickerControllerCameraDevice cameraDevice);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSObject<UINavigationControllerDelegate, UIImagePickerControllerDelegate> Delegate { get; set; }

		// @property (nonatomic, weak) id<UINavigationControllerDelegate,UIImagePickerControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic) UIImagePickerControllerSourceType sourceType;
		[Export ("sourceType", ArgumentSemantic.Assign)]
		UIImagePickerControllerSourceType SourceType { get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nonnull mediaTypes;
		[Export ("mediaTypes", ArgumentSemantic.Copy)]
		string[] MediaTypes { get; set; }

		// @property (nonatomic) int allowsEditing __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("allowsEditing")]
		int AllowsEditing { get; set; }

		// @property (nonatomic) int allowsImageEditing __attribute__((availability(ios, introduced=2.0, deprecated=3.1)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 1)]
		[Export ("allowsImageEditing")]
		int AllowsImageEditing { get; set; }

		// @property (nonatomic) UIImagePickerControllerImageURLExportPreset imageExportPreset __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("imageExportPreset", ArgumentSemantic.Assign)]
		UIImagePickerControllerImageURLExportPreset ImageExportPreset { get; set; }

		// @property (nonatomic) NSTimeInterval videoMaximumDuration __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("videoMaximumDuration")]
		double VideoMaximumDuration { get; set; }

		// @property (nonatomic) UIImagePickerControllerQualityType videoQuality __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("videoQuality", ArgumentSemantic.Assign)]
		UIImagePickerControllerQualityType VideoQuality { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull videoExportPreset __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("videoExportPreset")]
		string VideoExportPreset { get; set; }

		// @property (nonatomic) int showsCameraControls __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("showsCameraControls")]
		int ShowsCameraControls { get; set; }

		// @property (nonatomic, strong) __kindof UIView * _Nullable cameraOverlayView __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("cameraOverlayView", ArgumentSemantic.Strong)]
		UIView CameraOverlayView { get; set; }

		// @property (nonatomic) CGAffineTransform cameraViewTransform __attribute__((availability(ios, introduced=3.1)));
		[iOS (3, 1)]
		[Export ("cameraViewTransform", ArgumentSemantic.Assign)]
		CGAffineTransform CameraViewTransform { get; set; }

		// -(void)takePicture __attribute__((availability(ios, introduced=3.1)));
		[iOS (3,1)]
		[Export ("takePicture")]
		void TakePicture ();

		// -(int)startVideoCapture __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("startVideoCapture")]
		[Verify (MethodToProperty)]
		int StartVideoCapture { get; }

		// -(void)stopVideoCapture __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("stopVideoCapture")]
		void StopVideoCapture ();

		// @property (nonatomic) UIImagePickerControllerCameraCaptureMode cameraCaptureMode __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("cameraCaptureMode", ArgumentSemantic.Assign)]
		UIImagePickerControllerCameraCaptureMode CameraCaptureMode { get; set; }

		// @property (nonatomic) UIImagePickerControllerCameraDevice cameraDevice __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("cameraDevice", ArgumentSemantic.Assign)]
		UIImagePickerControllerCameraDevice CameraDevice { get; set; }

		// @property (nonatomic) UIImagePickerControllerCameraFlashMode cameraFlashMode __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("cameraFlashMode", ArgumentSemantic.Assign)]
		UIImagePickerControllerCameraFlashMode CameraFlashMode { get; set; }
	}

	// @protocol UIImagePickerControllerDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIImagePickerControllerDelegate
	{
		// @optional -(void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingImage:(UIImage * _Nonnull)image editingInfo:(NSDictionary<UIImagePickerControllerInfoKey,id> * _Nullable)editingInfo __attribute__((availability(ios, introduced=2.0, deprecated=3.0)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[Export ("imagePickerController:didFinishPickingImage:editingInfo:")]
		void ImagePickerController (UIImagePickerController picker, UIImage image, [NullAllowed] NSDictionary<NSString, NSObject> editingInfo);

		// @optional -(void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey,id> * _Nonnull)info;
		[Export ("imagePickerController:didFinishPickingMediaWithInfo:")]
		void ImagePickerController (UIImagePickerController picker, NSDictionary<NSString, NSObject> info);

		// @optional -(void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
		[Export ("imagePickerControllerDidCancel:")]
		void ImagePickerControllerDidCancel (UIImagePickerController picker);
	}

	// @interface UIInputView : UIView
	[iOS (7,0)]
	[BaseType (typeof(UIView))]
	interface UIInputView
	{
		// @property (readonly, nonatomic) UIInputViewStyle inputViewStyle;
		[Export ("inputViewStyle")]
		UIInputViewStyle InputViewStyle { get; }

		// @property (assign, nonatomic) int allowsSelfSizing __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowsSelfSizing")]
		int AllowsSelfSizing { get; set; }

		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame inputViewStyle:(UIInputViewStyle)inputViewStyle __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:inputViewStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame, UIInputViewStyle inputViewStyle);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	// @protocol UITextDocumentProxy <UIKeyInput>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UITextDocumentProxy : IUIKeyInput
	{
		// @required @property (readonly, nonatomic) NSString * _Nullable documentContextBeforeInput;
		[Abstract]
		[NullAllowed, Export ("documentContextBeforeInput")]
		string DocumentContextBeforeInput { get; }

		// @required @property (readonly, nonatomic) NSString * _Nullable documentContextAfterInput;
		[Abstract]
		[NullAllowed, Export ("documentContextAfterInput")]
		string DocumentContextAfterInput { get; }

		// @required @property (readonly, nonatomic) NSString * _Nullable selectedText __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Abstract]
		[NullAllowed, Export ("selectedText")]
		string SelectedText { get; }

		// @required @property (readonly, nonatomic) UITextInputMode * _Nullable documentInputMode __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Abstract]
		[NullAllowed, Export ("documentInputMode")]
		UITextInputMode DocumentInputMode { get; }

		// @required @property (readonly, copy, nonatomic) NSUUID * _Nonnull documentIdentifier __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Abstract]
		[Export ("documentIdentifier", ArgumentSemantic.Copy)]
		NSUuid DocumentIdentifier { get; }

		// @required -(void)adjustTextPositionByCharacterOffset:(NSInteger)offset;
		[Abstract]
		[Export ("adjustTextPositionByCharacterOffset:")]
		void AdjustTextPositionByCharacterOffset (nint offset);

		// @required -(void)setMarkedText:(NSString * _Nonnull)markedText selectedRange:(NSRange)selectedRange __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Abstract]
		[Export ("setMarkedText:selectedRange:")]
		void SetMarkedText (string markedText, NSRange selectedRange);

		// @required -(void)unmarkText __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Abstract]
		[Export ("unmarkText")]
		void UnmarkText ();
	}

	// @interface UIInputViewController : UIViewController <UITextInputDelegate>
	[iOS (8,0)]
	[BaseType (typeof(UIViewController))]
	interface UIInputViewController : IUITextInputDelegate
	{
		// @property (nonatomic, strong) UIInputView * _Nullable inputView;
		[NullAllowed, Export ("inputView", ArgumentSemantic.Strong)]
		UIInputView InputView { get; set; }

		// @property (readonly, nonatomic) id<UITextDocumentProxy> _Nonnull textDocumentProxy;
		[Export ("textDocumentProxy")]
		UITextDocumentProxy TextDocumentProxy { get; }

		// @property (copy, nonatomic) NSString * _Nullable primaryLanguage;
		[NullAllowed, Export ("primaryLanguage")]
		string PrimaryLanguage { get; set; }

		// @property (nonatomic) int hasDictationKey;
		[Export ("hasDictationKey")]
		int HasDictationKey { get; set; }

		// @property (readonly, nonatomic) int hasFullAccess __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("hasFullAccess")]
		int HasFullAccess { get; }

		// @property (readonly, nonatomic) int needsInputModeSwitchKey __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("needsInputModeSwitchKey")]
		int NeedsInputModeSwitchKey { get; }

		// -(void)dismissKeyboard;
		[Export ("dismissKeyboard")]
		void DismissKeyboard ();

		// -(void)advanceToNextInputMode;
		[Export ("advanceToNextInputMode")]
		void AdvanceToNextInputMode ();

		// -(void)handleInputModeListFromView:(UIView * _Nonnull)view withEvent:(UIEvent * _Nonnull)event __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("handleInputModeListFromView:withEvent:")]
		void HandleInputModeListFromView (UIView view, UIEvent @event);

		// -(void)requestSupplementaryLexiconWithCompletion:(void (^ _Nonnull)(UILexicon * _Nonnull))completionHandler;
		[Export ("requestSupplementaryLexiconWithCompletion:")]
		void RequestSupplementaryLexiconWithCompletion (Action<UILexicon> completionHandler);
	}

	// @interface UILabel : UIView <NSCoding, UIContentSizeCategoryAdjusting>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UILabel : INSCoding, IUIContentSizeCategoryAdjusting
	{
		// @property (copy, nonatomic) NSString * _Nullable text;
		[NullAllowed, Export ("text")]
		string Text { get; set; }

		// @property (nonatomic, strong) UIFont * _Null_unspecified font __attribute__((annotate("ui_appearance_selector")));
		[Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified textColor __attribute__((annotate("ui_appearance_selector")));
		[Export ("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable shadowColor __attribute__((annotate("ui_appearance_selector")));
		[NullAllowed, Export ("shadowColor", ArgumentSemantic.Strong)]
		UIColor ShadowColor { get; set; }

		// @property (nonatomic) CGSize shadowOffset __attribute__((annotate("ui_appearance_selector")));
		[Export ("shadowOffset", ArgumentSemantic.Assign)]
		CGSize ShadowOffset { get; set; }

		// @property (nonatomic) NSTextAlignment textAlignment;
		[Export ("textAlignment", ArgumentSemantic.Assign)]
		NSTextAlignment TextAlignment { get; set; }

		// @property (nonatomic) NSLineBreakMode lineBreakMode;
		[Export ("lineBreakMode", ArgumentSemantic.Assign)]
		NSLineBreakMode LineBreakMode { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable attributedText __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[NullAllowed, Export ("attributedText", ArgumentSemantic.Copy)]
		NSAttributedString AttributedText { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable highlightedTextColor __attribute__((annotate("ui_appearance_selector")));
		[NullAllowed, Export ("highlightedTextColor", ArgumentSemantic.Strong)]
		UIColor HighlightedTextColor { get; set; }

		// @property (getter = isHighlighted, nonatomic) int highlighted;
		[Export ("highlighted")]
		int Highlighted { [Bind ("isHighlighted")] get; set; }

		// @property (getter = isUserInteractionEnabled, nonatomic) int userInteractionEnabled;
		[Export ("userInteractionEnabled")]
		int UserInteractionEnabled { [Bind ("isUserInteractionEnabled")] get; set; }

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }

		// @property (nonatomic) NSInteger numberOfLines;
		[Export ("numberOfLines")]
		nint NumberOfLines { get; set; }

		// @property (nonatomic) int adjustsFontSizeToFitWidth;
		[Export ("adjustsFontSizeToFitWidth")]
		int AdjustsFontSizeToFitWidth { get; set; }

		// @property (nonatomic) UIBaselineAdjustment baselineAdjustment;
		[Export ("baselineAdjustment", ArgumentSemantic.Assign)]
		UIBaselineAdjustment BaselineAdjustment { get; set; }

		// @property (nonatomic) CGFloat minimumScaleFactor __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("minimumScaleFactor")]
		nfloat MinimumScaleFactor { get; set; }

		// @property (nonatomic) int allowsDefaultTighteningForTruncation __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowsDefaultTighteningForTruncation")]
		int AllowsDefaultTighteningForTruncation { get; set; }

		// -(CGRect)textRectForBounds:(CGRect)bounds limitedToNumberOfLines:(NSInteger)numberOfLines;
		[Export ("textRectForBounds:limitedToNumberOfLines:")]
		CGRect TextRectForBounds (CGRect bounds, nint numberOfLines);

		// -(void)drawTextInRect:(CGRect)rect;
		[Export ("drawTextInRect:")]
		void DrawTextInRect (CGRect rect);

		// @property (nonatomic) CGFloat preferredMaxLayoutWidth __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("preferredMaxLayoutWidth")]
		nfloat PreferredMaxLayoutWidth { get; set; }

		// @property (nonatomic) int enablesMarqueeWhenAncestorFocused __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (12, 0), NoWatch, NoiOS]
		[Export ("enablesMarqueeWhenAncestorFocused")]
		int EnablesMarqueeWhenAncestorFocused { get; set; }

		// @property (nonatomic) CGFloat minimumFontSize __attribute__((availability(ios, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[NoTV]
		[Export ("minimumFontSize")]
		nfloat MinimumFontSize { get; set; }

		// @property (nonatomic) int adjustsLetterSpacingToFitWidth __attribute__((availability(ios, introduced=6.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("adjustsLetterSpacingToFitWidth")]
		int AdjustsLetterSpacingToFitWidth { get; set; }
	}

	// @interface UILexiconEntry : NSObject <NSCopying>
	[NoTV, iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UILexiconEntry : INSCopying
	{
		// @property (readonly, nonatomic) NSString * _Nonnull documentText;
		[Export ("documentText")]
		string DocumentText { get; }

		// @property (readonly, nonatomic) NSString * _Nonnull userInput;
		[Export ("userInput")]
		string UserInput { get; }
	}

	// @interface UILexicon : NSObject <NSCopying>
	[NoTV, iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UILexicon : INSCopying
	{
		// @property (readonly, nonatomic) NSArray<UILexiconEntry *> * _Nonnull entries;
		[Export ("entries")]
		UILexiconEntry[] Entries { get; }
	}

	// @protocol UILargeContentViewerItem <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UILargeContentViewerItem
	{
		// @required @property (readonly, assign, nonatomic) int showsLargeContentViewer;
		[Abstract]
		[Export ("showsLargeContentViewer")]
		int ShowsLargeContentViewer { get; }

		// @required @property (readonly, copy, nonatomic) NSString * _Nullable largeContentTitle;
		[Abstract]
		[NullAllowed, Export ("largeContentTitle")]
		string LargeContentTitle { get; }

		// @required @property (readonly, nonatomic, strong) UIImage * _Nullable largeContentImage;
		[Abstract]
		[NullAllowed, Export ("largeContentImage", ArgumentSemantic.Strong)]
		UIImage LargeContentImage { get; }

		// @required @property (readonly, assign, nonatomic) int scalesLargeContentImage;
		[Abstract]
		[Export ("scalesLargeContentImage")]
		int ScalesLargeContentImage { get; }

		// @required @property (readonly, assign, nonatomic) UIEdgeInsets largeContentImageInsets;
		[Abstract]
		[Export ("largeContentImageInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets LargeContentImageInsets { get; }
	}

	// @interface UILargeContentViewer (UIView) <UILargeContentViewerItem>
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UILargeContentViewer : IUILargeContentViewerItem
	{
		// @property (assign, readwrite, nonatomic) int showsLargeContentViewer __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Export ("showsLargeContentViewer")]
		int ShowsLargeContentViewer { get; set; }

		// @property (readwrite, copy, nonatomic) NSString * _Nullable largeContentTitle __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[NullAllowed, Export ("largeContentTitle")]
		string LargeContentTitle { get; set; }

		// @property (readwrite, nonatomic, strong) UIImage * _Nullable largeContentImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[NullAllowed, Export ("largeContentImage", ArgumentSemantic.Strong)]
		UIImage LargeContentImage { get; set; }

		// @property (assign, readwrite, nonatomic) int scalesLargeContentImage __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Export ("scalesLargeContentImage")]
		int ScalesLargeContentImage { get; set; }

		// @property (assign, readwrite, nonatomic) UIEdgeInsets largeContentImageInsets __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Export ("largeContentImageInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets LargeContentImageInsets { get; set; }
	}

	// @interface UILargeContentViewerInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UILargeContentViewerInteraction : IUIInteraction
	{
		// -(instancetype _Nonnull)initWithDelegate:(id<UILargeContentViewerInteractionDelegate> _Nullable)delegate __attribute__((objc_designated_initializer));
		[Export ("initWithDelegate:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] UILargeContentViewerInteractionDelegate @delegate);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UILargeContentViewerInteractionDelegate Delegate { get; }

		// @property (readonly, nonatomic, weak) id<UILargeContentViewerInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; }

		// @property (readonly, nonatomic, strong) UIGestureRecognizer * _Nonnull gestureRecognizerForExclusionRelationship;
		[Export ("gestureRecognizerForExclusionRelationship", ArgumentSemantic.Strong)]
		UIGestureRecognizer GestureRecognizerForExclusionRelationship { get; }

		// @property (readonly, getter = isEnabled, nonatomic, class) int enabled;
		[Static]
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; }
	}

	// @protocol UILargeContentViewerInteractionDelegate <NSObject>
	[NoWatch, NoTV, iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UILargeContentViewerInteractionDelegate
	{
		// @optional -(void)largeContentViewerInteraction:(UILargeContentViewerInteraction * _Nonnull)interaction didEndOnItem:(id<UILargeContentViewerItem> _Nullable)item atPoint:(CGPoint)point;
		[Export ("largeContentViewerInteraction:didEndOnItem:atPoint:")]
		void LargeContentViewerInteraction (UILargeContentViewerInteraction interaction, [NullAllowed] UILargeContentViewerItem item, CGPoint point);

		// @optional -(id<UILargeContentViewerItem> _Nullable)largeContentViewerInteraction:(UILargeContentViewerInteraction * _Nonnull)interaction itemAtPoint:(CGPoint)point;
		[Export ("largeContentViewerInteraction:itemAtPoint:")]
		[return: NullAllowed]
		UILargeContentViewerItem LargeContentViewerInteraction (UILargeContentViewerInteraction interaction, CGPoint point);

		// @optional -(UIViewController * _Nonnull)viewControllerForLargeContentViewerInteraction:(UILargeContentViewerInteraction * _Nonnull)interaction;
		[Export ("viewControllerForLargeContentViewerInteraction:")]
		UIViewController ViewControllerForLargeContentViewerInteraction (UILargeContentViewerInteraction interaction);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UILargeContentViewerInteractionEnabledStatusDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UILargeContentViewerInteractionEnabledStatusDidChangeNotification", "__Internal")]
		NSString UILargeContentViewerInteractionEnabledStatusDidChangeNotification { get; }
	}

	// @interface UILocalNotification : NSObject <NSCopying, NSCoding>
	[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's UNNotificationRequest")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationRequest")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UILocalNotification : INSCopying, INSCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (copy, nonatomic) NSDate * _Nullable fireDate;
		[NullAllowed, Export ("fireDate", ArgumentSemantic.Copy)]
		NSDate FireDate { get; set; }

		// @property (copy, nonatomic) NSTimeZone * _Nullable timeZone;
		[NullAllowed, Export ("timeZone", ArgumentSemantic.Copy)]
		NSTimeZone TimeZone { get; set; }

		// @property (nonatomic) NSCalendarUnit repeatInterval;
		[Export ("repeatInterval", ArgumentSemantic.Assign)]
		NSCalendarUnit RepeatInterval { get; set; }

		// @property (copy, nonatomic) NSCalendar * _Nullable repeatCalendar;
		[NullAllowed, Export ("repeatCalendar", ArgumentSemantic.Copy)]
		NSCalendar RepeatCalendar { get; set; }

		// @property (copy, nonatomic) CLRegion * _Nullable region __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("region", ArgumentSemantic.Copy)]
		CLRegion Region { get; set; }

		// @property (assign, nonatomic) int regionTriggersOnce __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("regionTriggersOnce")]
		int RegionTriggersOnce { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable alertBody;
		[NullAllowed, Export ("alertBody")]
		string AlertBody { get; set; }

		// @property (nonatomic) int hasAction;
		[Export ("hasAction")]
		int HasAction { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable alertAction;
		[NullAllowed, Export ("alertAction")]
		string AlertAction { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable alertLaunchImage;
		[NullAllowed, Export ("alertLaunchImage")]
		string AlertLaunchImage { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable alertTitle __attribute__((availability(ios, introduced=8.2)));
		[iOS (8, 2)]
		[NullAllowed, Export ("alertTitle")]
		string AlertTitle { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable soundName;
		[NullAllowed, Export ("soundName")]
		string SoundName { get; set; }

		// @property (nonatomic) NSInteger applicationIconBadgeNumber;
		[Export ("applicationIconBadgeNumber")]
		nint ApplicationIconBadgeNumber { get; set; }

		// @property (copy, nonatomic) NSDictionary * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Copy)]
		NSDictionary UserInfo { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable category __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("category")]
		string Category { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UILocalNotificationDefaultSoundName __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=4.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 0, message: "Use UserNotifications Framework's +[UNNotificationSound defaultSound]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's +[UNNotificationSound defaultSound]")]
		[NoTV]
		[Field ("UILocalNotificationDefaultSoundName", "__Internal")]
		NSString UILocalNotificationDefaultSoundName { get; }
	}

	// @interface UIApplicationShortcutIcon : NSObject <NSCopying>
	[NoTV, iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIApplicationShortcutIcon : INSCopying
	{
		// +(instancetype _Nonnull)iconWithType:(UIApplicationShortcutIconType)type;
		[Static]
		[Export ("iconWithType:")]
		UIApplicationShortcutIcon IconWithType (UIApplicationShortcutIconType type);

		// +(instancetype _Nonnull)iconWithTemplateImageName:(NSString * _Nonnull)templateImageName;
		[Static]
		[Export ("iconWithTemplateImageName:")]
		UIApplicationShortcutIcon IconWithTemplateImageName (string templateImageName);

		// +(instancetype _Nonnull)iconWithSystemImageName:(NSString * _Nonnull)systemImageName;
		[Static]
		[Export ("iconWithSystemImageName:")]
		UIApplicationShortcutIcon IconWithSystemImageName (string systemImageName);
	}

	// @interface UIApplicationShortcutItem : NSObject <NSCopying, NSMutableCopying>
	[NoTV, iOS (9,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIApplicationShortcutItem : INSCopying, INSMutableCopying
	{
		// -(instancetype _Nonnull)initWithType:(NSString * _Nonnull)type localizedTitle:(NSString * _Nonnull)localizedTitle localizedSubtitle:(NSString * _Nullable)localizedSubtitle icon:(UIApplicationShortcutIcon * _Nullable)icon userInfo:(NSDictionary<NSString *,id<NSSecureCoding>> * _Nullable)userInfo __attribute__((objc_designated_initializer));
		[Export ("initWithType:localizedTitle:localizedSubtitle:icon:userInfo:")]
		[DesignatedInitializer]
		IntPtr Constructor (string type, string localizedTitle, [NullAllowed] string localizedSubtitle, [NullAllowed] UIApplicationShortcutIcon icon, [NullAllowed] NSDictionary<NSString, NSSecureCoding> userInfo);

		// -(instancetype _Nonnull)initWithType:(NSString * _Nonnull)type localizedTitle:(NSString * _Nonnull)localizedTitle;
		[Export ("initWithType:localizedTitle:")]
		IntPtr Constructor (string type, string localizedTitle);

		// @property (readonly, copy, nonatomic) NSString * _Nonnull type;
		[Export ("type")]
		string Type { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull localizedTitle;
		[Export ("localizedTitle")]
		string LocalizedTitle { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable localizedSubtitle;
		[NullAllowed, Export ("localizedSubtitle")]
		string LocalizedSubtitle { get; }

		// @property (readonly, copy, nonatomic) UIApplicationShortcutIcon * _Nullable icon;
		[NullAllowed, Export ("icon", ArgumentSemantic.Copy)]
		UIApplicationShortcutIcon Icon { get; }

		// @property (readonly, copy, nonatomic) NSDictionary<NSString *,id<NSSecureCoding>> * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSSecureCoding> UserInfo { get; }

		// @property (readonly, copy, nonatomic) id _Nullable targetContentIdentifier;
		[NullAllowed, Export ("targetContentIdentifier", ArgumentSemantic.Copy)]
		NSObject TargetContentIdentifier { get; }
	}

	// @interface UIMutableApplicationShortcutItem : UIApplicationShortcutItem
	[NoTV, iOS (9,0)]
	[BaseType (typeof(UIApplicationShortcutItem))]
	interface UIMutableApplicationShortcutItem
	{
		// @property (copy, nonatomic) NSString * _Nonnull type;
		[Export ("type")]
		string Type { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull localizedTitle;
		[Export ("localizedTitle")]
		string LocalizedTitle { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable localizedSubtitle;
		[NullAllowed, Export ("localizedSubtitle")]
		string LocalizedSubtitle { get; set; }

		// @property (copy, nonatomic) UIApplicationShortcutIcon * _Nullable icon;
		[NullAllowed, Export ("icon", ArgumentSemantic.Copy)]
		UIApplicationShortcutIcon Icon { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSString *,id<NSSecureCoding>> * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSSecureCoding> UserInfo { get; set; }

		// @property (copy, nonatomic) id _Nullable targetContentIdentifier;
		[NullAllowed, Export ("targetContentIdentifier", ArgumentSemantic.Copy)]
		NSObject TargetContentIdentifier { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UIUserNotificationTextInputActionButtonTitleKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 9, 0, message: "Use UserNotifications Framework's -[UNTextInputNotificationAction textInputButtonTitle]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNTextInputNotificationAction textInputButtonTitle]")]
		[NoTV]
		[Field ("UIUserNotificationTextInputActionButtonTitleKey", "__Internal")]
		NSString UIUserNotificationTextInputActionButtonTitleKey { get; }

		// extern NSString *const _Nonnull UIUserNotificationActionResponseTypedTextKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 9, 0, message: "Use UserNotifications Framework's -[UNTextInputNotificationResponse userText]")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's -[UNTextInputNotificationResponse userText]")]
		[NoTV]
		[Field ("UIUserNotificationActionResponseTypedTextKey", "__Internal")]
		NSString UIUserNotificationActionResponseTypedTextKey { get; }
	}

	// @interface UIUserNotificationSettings : NSObject
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationSettings")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationSettings")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UIUserNotificationSettings
	{
		// +(instancetype _Nonnull)settingsForTypes:(UIUserNotificationType)types categories:(NSSet<UIUserNotificationCategory *> * _Nullable)categories;
		[Static]
		[Export ("settingsForTypes:categories:")]
		UIUserNotificationSettings SettingsForTypes (UIUserNotificationType types, [NullAllowed] NSSet<UIUserNotificationCategory> categories);

		// @property (readonly, nonatomic) UIUserNotificationType types;
		[Export ("types")]
		UIUserNotificationType Types { get; }

		// @property (readonly, copy, nonatomic) NSSet<UIUserNotificationCategory *> * _Nullable categories;
		[NullAllowed, Export ("categories", ArgumentSemantic.Copy)]
		NSSet<UIUserNotificationCategory> Categories { get; }
	}

	// @interface UIUserNotificationCategory : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationCategory")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationCategory")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIUserNotificationCategory : INSCopying, INSMutableCopying, INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, copy, nonatomic) NSString * _Nullable identifier __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("identifier")]
		string Identifier { get; }

		// -(NSArray<UIUserNotificationAction *> * _Nullable)actionsForContext:(UIUserNotificationActionContext)context __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("actionsForContext:")]
		[return: NullAllowed]
		UIUserNotificationAction[] ActionsForContext (UIUserNotificationActionContext context);
	}

	// @interface UIMutableUserNotificationCategory : UIUserNotificationCategory
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationCategory")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationCategory")]
	[NoTV]
	[BaseType (typeof(UIUserNotificationCategory))]
	interface UIMutableUserNotificationCategory
	{
		// @property (copy, nonatomic) NSString * _Nullable identifier;
		[NullAllowed, Export ("identifier")]
		string Identifier { get; set; }

		// -(void)setActions:(NSArray<UIUserNotificationAction *> * _Nullable)actions forContext:(UIUserNotificationActionContext)context;
		[Export ("setActions:forContext:")]
		void SetActions ([NullAllowed] UIUserNotificationAction[] actions, UIUserNotificationActionContext context);
	}

	// @interface UIUserNotificationAction : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationAction")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationAction")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIUserNotificationAction : INSCopying, INSMutableCopying, INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, copy, nonatomic) NSString * _Nullable identifier __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("identifier")]
		string Identifier { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable title __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("title")]
		string Title { get; }

		// @property (readonly, assign, nonatomic) UIUserNotificationActionBehavior behavior __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[Export ("behavior", ArgumentSemantic.Assign)]
		UIUserNotificationActionBehavior Behavior { get; }

		// @property (readonly, copy, nonatomic) NSDictionary * _Nonnull parameters __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[Export ("parameters", ArgumentSemantic.Copy)]
		NSDictionary Parameters { get; }

		// @property (readonly, assign, nonatomic) UIUserNotificationActivationMode activationMode __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("activationMode", ArgumentSemantic.Assign)]
		UIUserNotificationActivationMode ActivationMode { get; }

		// @property (readonly, getter = isAuthenticationRequired, assign, nonatomic) int authenticationRequired __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("authenticationRequired")]
		int AuthenticationRequired { [Bind ("isAuthenticationRequired")] get; }

		// @property (readonly, getter = isDestructive, assign, nonatomic) int destructive __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("destructive")]
		int Destructive { [Bind ("isDestructive")] get; }
	}

	// @interface UIMutableUserNotificationAction : UIUserNotificationAction
	[Introduced (PlatformName.iOS, 8, 0, message: "Use UserNotifications Framework's UNNotificationAction")]
	[Deprecated (PlatformName.iOS, 10, 0, message: "Use UserNotifications Framework's UNNotificationAction")]
	[NoTV]
	[BaseType (typeof(UIUserNotificationAction))]
	interface UIMutableUserNotificationAction
	{
		// @property (copy, nonatomic) NSString * _Nullable identifier;
		[NullAllowed, Export ("identifier")]
		string Identifier { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (assign, nonatomic) UIUserNotificationActionBehavior behavior __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("behavior", ArgumentSemantic.Assign)]
		UIUserNotificationActionBehavior Behavior { get; set; }

		// @property (copy, nonatomic) NSDictionary * _Nonnull parameters __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("parameters", ArgumentSemantic.Copy)]
		NSDictionary Parameters { get; set; }

		// @property (assign, nonatomic) UIUserNotificationActivationMode activationMode;
		[Export ("activationMode", ArgumentSemantic.Assign)]
		UIUserNotificationActivationMode ActivationMode { get; set; }

		// @property (getter = isAuthenticationRequired, assign, nonatomic) int authenticationRequired;
		[Export ("authenticationRequired")]
		int AuthenticationRequired { [Bind ("isAuthenticationRequired")] get; set; }

		// @property (getter = isDestructive, assign, nonatomic) int destructive;
		[Export ("destructive")]
		int Destructive { [Bind ("isDestructive")] get; set; }
	}

	// @interface UIFocusSystem : NSObject
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIFocusSystem
	{
		// @property (readonly, nonatomic, weak) id<UIFocusItem> _Nullable focusedItem __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12, 0), iOS (12, 0)]
		[NullAllowed, Export ("focusedItem", ArgumentSemantic.Weak)]
		UIFocusItem FocusedItem { get; }

		// +(UIFocusSystem * _Nullable)focusSystemForEnvironment:(id<UIFocusEnvironment> _Nonnull)environment __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12,0), iOS (12,0)]
		[Static]
		[Export ("focusSystemForEnvironment:")]
		[return: NullAllowed]
		UIFocusSystem FocusSystemForEnvironment (UIFocusEnvironment environment);

		// -(void)requestFocusUpdateToEnvironment:(id<UIFocusEnvironment> _Nonnull)environment __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12,0), iOS (12,0)]
		[Export ("requestFocusUpdateToEnvironment:")]
		void RequestFocusUpdateToEnvironment (UIFocusEnvironment environment);

		// -(void)updateFocusIfNeeded __attribute__((availability(tvos, introduced=12.0))) __attribute__((availability(ios, introduced=12.0)));
		[TV (12,0), iOS (12,0)]
		[Export ("updateFocusIfNeeded")]
		void UpdateFocusIfNeeded ();

		// +(int)environment:(id<UIFocusEnvironment> _Nonnull)environment containsEnvironment:(id<UIFocusEnvironment> _Nonnull)otherEnvironment;
		[Static]
		[Export ("environment:containsEnvironment:")]
		int Environment (UIFocusEnvironment environment, UIFocusEnvironment otherEnvironment);

		// +(void)registerURL:(NSURL * _Nonnull)soundFileURL forSoundIdentifier:(UIFocusSoundIdentifier _Nonnull)identifier __attribute__((availability(tvos, introduced=11.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (11,0), NoWatch, NoiOS]
		[Static]
		[Export ("registerURL:forSoundIdentifier:")]
		void RegisterURL (NSUrl soundFileURL, string identifier);
	}

	// @interface UIFocusDebugger : NSObject
	[iOS (11,0)]
	[BaseType (typeof(NSObject))]
	interface UIFocusDebugger
	{
		// +(id<UIFocusDebuggerOutput> _Nonnull)help;
		[Static]
		[Export ("help")]
		[Verify (MethodToProperty)]
		UIFocusDebuggerOutput Help { get; }

		// +(id<UIFocusDebuggerOutput> _Nonnull)status;
		[Static]
		[Export ("status")]
		[Verify (MethodToProperty)]
		UIFocusDebuggerOutput Status { get; }

		// +(id<UIFocusDebuggerOutput> _Nonnull)checkFocusabilityForItem:(id<UIFocusItem> _Nonnull)item;
		[Static]
		[Export ("checkFocusabilityForItem:")]
		UIFocusDebuggerOutput CheckFocusabilityForItem (UIFocusItem item);

		// +(id<UIFocusDebuggerOutput> _Nonnull)simulateFocusUpdateRequestFromEnvironment:(id<UIFocusEnvironment> _Nonnull)environment;
		[Static]
		[Export ("simulateFocusUpdateRequestFromEnvironment:")]
		UIFocusDebuggerOutput SimulateFocusUpdateRequestFromEnvironment (UIFocusEnvironment environment);
	}

	// @protocol UIFocusDebuggerOutput <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIFocusDebuggerOutput
	{
	}

	// @interface UIFocusMovementHint : NSObject <NSCopying>
	[iOS (12,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIFocusMovementHint : INSCopying
	{
		// @property (readonly, nonatomic) CGVector movementDirection;
		[Export ("movementDirection")]
		CGVector MovementDirection { get; }

		// @property (readonly, nonatomic) CATransform3D perspectiveTransform;
		[Export ("perspectiveTransform")]
		CATransform3D PerspectiveTransform { get; }

		// @property (readonly, nonatomic) CGVector rotation;
		[Export ("rotation")]
		CGVector Rotation { get; }

		// @property (readonly, nonatomic) CGVector translation;
		[Export ("translation")]
		CGVector Translation { get; }

		// @property (readonly, nonatomic) CATransform3D interactionTransform;
		[Export ("interactionTransform")]
		CATransform3D InteractionTransform { get; }
	}

	// @interface UIHoverGestureRecognizer : UIGestureRecognizer
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UIHoverGestureRecognizer
	{
	}

	// @interface UILocalizedIndexedCollation : NSObject
	[iOS (3,0)]
	[BaseType (typeof(NSObject))]
	interface UILocalizedIndexedCollation
	{
		// +(instancetype _Nonnull)currentCollation;
		[Static]
		[Export ("currentCollation")]
		UILocalizedIndexedCollation CurrentCollation ();

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nonnull sectionTitles;
		[Export ("sectionTitles")]
		string[] SectionTitles { get; }

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nonnull sectionIndexTitles;
		[Export ("sectionIndexTitles")]
		string[] SectionIndexTitles { get; }

		// -(NSInteger)sectionForSectionIndexTitleAtIndex:(NSInteger)indexTitleIndex;
		[Export ("sectionForSectionIndexTitleAtIndex:")]
		nint SectionForSectionIndexTitleAtIndex (nint indexTitleIndex);

		// -(NSInteger)sectionForObject:(id _Nonnull)object collationStringSelector:(SEL _Nonnull)selector;
		[Export ("sectionForObject:collationStringSelector:")]
		nint SectionForObject (NSObject @object, Selector selector);

		// -(NSArray * _Nonnull)sortedArrayFromArray:(NSArray * _Nonnull)array collationStringSelector:(SEL _Nonnull)selector;
		[Export ("sortedArrayFromArray:collationStringSelector:")]
		[Verify (StronglyTypedNSArray), Verify (StronglyTypedNSArray)]
		NSObject[] SortedArrayFromArray (NSObject[] array, Selector selector);
	}

	// @interface UILongPressGestureRecognizer : UIGestureRecognizer
	[iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UILongPressGestureRecognizer
	{
		// @property (nonatomic) NSUInteger numberOfTapsRequired;
		[Export ("numberOfTapsRequired")]
		nuint NumberOfTapsRequired { get; set; }

		// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("numberOfTouchesRequired")]
		nuint NumberOfTouchesRequired { get; set; }

		// @property (nonatomic) NSTimeInterval minimumPressDuration;
		[Export ("minimumPressDuration")]
		double MinimumPressDuration { get; set; }

		// @property (nonatomic) CGFloat allowableMovement;
		[Export ("allowableMovement")]
		nfloat AllowableMovement { get; set; }
	}

	// @interface UIManagedDocument : UIDocument
	[NoTV, iOS (5,0)]
	[BaseType (typeof(UIDocument))]
	interface UIManagedDocument
	{
		// @property (readonly, nonatomic, class) NSString * _Nonnull persistentStoreName;
		[Static]
		[Export ("persistentStoreName")]
		string PersistentStoreName { get; }

		// @property (readonly, nonatomic, strong) NSManagedObjectContext * _Nonnull managedObjectContext;
		[Export ("managedObjectContext", ArgumentSemantic.Strong)]
		NSManagedObjectContext ManagedObjectContext { get; }

		// @property (readonly, nonatomic, strong) NSManagedObjectModel * _Nonnull managedObjectModel;
		[Export ("managedObjectModel", ArgumentSemantic.Strong)]
		NSManagedObjectModel ManagedObjectModel { get; }

		// @property (copy, nonatomic) NSDictionary * _Nullable persistentStoreOptions;
		[NullAllowed, Export ("persistentStoreOptions", ArgumentSemantic.Copy)]
		NSDictionary PersistentStoreOptions { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable modelConfiguration;
		[NullAllowed, Export ("modelConfiguration")]
		string ModelConfiguration { get; set; }

		// -(int)configurePersistentStoreCoordinatorForURL:(NSURL * _Nonnull)storeURL ofType:(NSString * _Nonnull)fileType modelConfiguration:(NSString * _Nullable)configuration storeOptions:(NSDictionary * _Nullable)storeOptions error:(NSError * _Nullable * _Nullable)error;
		[Export ("configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:")]
		int ConfigurePersistentStoreCoordinatorForURL (NSUrl storeURL, string fileType, [NullAllowed] string configuration, [NullAllowed] NSDictionary storeOptions, [NullAllowed] out NSError error);

		// -(NSString * _Nonnull)persistentStoreTypeForFileType:(NSString * _Nonnull)fileType;
		[Export ("persistentStoreTypeForFileType:")]
		string PersistentStoreTypeForFileType (string fileType);

		// -(int)readAdditionalContentFromURL:(NSURL * _Nonnull)absoluteURL error:(NSError * _Nullable * _Nullable)error;
		[Export ("readAdditionalContentFromURL:error:")]
		int ReadAdditionalContentFromURL (NSUrl absoluteURL, [NullAllowed] out NSError error);

		// -(id _Nullable)additionalContentForURL:(NSURL * _Nonnull)absoluteURL error:(NSError * _Nullable * _Nullable)error;
		[Export ("additionalContentForURL:error:")]
		[return: NullAllowed]
		NSObject AdditionalContentForURL (NSUrl absoluteURL, [NullAllowed] out NSError error);

		// -(int)writeAdditionalContent:(id _Nonnull)content toURL:(NSURL * _Nonnull)absoluteURL originalContentsURL:(NSURL * _Nullable)absoluteOriginalContentsURL error:(NSError * _Nullable * _Nullable)error;
		[Export ("writeAdditionalContent:toURL:originalContentsURL:error:")]
		int WriteAdditionalContent (NSObject content, NSUrl absoluteURL, [NullAllowed] NSUrl absoluteOriginalContentsURL, [NullAllowed] out NSError error);
	}

	// @interface UIMenuController : NSObject
	[NoTV, iOS (3,0)]
	[BaseType (typeof(NSObject))]
	interface UIMenuController
	{
		// @property (readonly, nonatomic, class) UIMenuController * _Nonnull sharedMenuController;
		[Static]
		[Export ("sharedMenuController")]
		UIMenuController SharedMenuController { get; }

		// @property (getter = isMenuVisible, nonatomic) int menuVisible;
		[Export ("menuVisible")]
		int MenuVisible { [Bind ("isMenuVisible")] get; set; }

		// -(void)setMenuVisible:(int)menuVisible animated:(int)animated __attribute__((availability(ios, introduced=3.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Use showMenuFromView:rect: or hideMenuFromView: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use showMenuFromView:rect: or hideMenuFromView: instead.")]
		[Export ("setMenuVisible:animated:")]
		void SetMenuVisible (int menuVisible, int animated);

		// -(void)setTargetRect:(CGRect)targetRect inView:(UIView * _Nonnull)targetView __attribute__((availability(ios, introduced=3.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Use showMenuFromView:rect: instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Use showMenuFromView:rect: instead.")]
		[Export ("setTargetRect:inView:")]
		void SetTargetRect (CGRect targetRect, UIView targetView);

		// -(void)showMenuFromView:(UIView * _Nonnull)targetView rect:(CGRect)targetRect __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("showMenuFromView:rect:")]
		void ShowMenuFromView (UIView targetView, CGRect targetRect);

		// -(void)hideMenuFromView:(UIView * _Nonnull)targetView __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("hideMenuFromView:")]
		void HideMenuFromView (UIView targetView);

		// -(void)hideMenu __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("hideMenu")]
		void HideMenu ();

		// @property (nonatomic) UIMenuControllerArrowDirection arrowDirection __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("arrowDirection", ArgumentSemantic.Assign)]
		UIMenuControllerArrowDirection ArrowDirection { get; set; }

		// @property (copy, nonatomic) NSArray<UIMenuItem *> * _Nullable menuItems __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[NullAllowed, Export ("menuItems", ArgumentSemantic.Copy)]
		UIMenuItem[] MenuItems { get; set; }

		// -(void)update;
		[Export ("update")]
		void Update ();

		// @property (readonly, nonatomic) CGRect menuFrame;
		[Export ("menuFrame")]
		CGRect MenuFrame { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIMenuControllerWillShowMenuNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIMenuControllerWillShowMenuNotification", "__Internal")]
		NSString UIMenuControllerWillShowMenuNotification { get; }

		// extern const NSNotificationName _Nonnull UIMenuControllerDidShowMenuNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIMenuControllerDidShowMenuNotification", "__Internal")]
		NSString UIMenuControllerDidShowMenuNotification { get; }

		// extern const NSNotificationName _Nonnull UIMenuControllerWillHideMenuNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIMenuControllerWillHideMenuNotification", "__Internal")]
		NSString UIMenuControllerWillHideMenuNotification { get; }

		// extern const NSNotificationName _Nonnull UIMenuControllerDidHideMenuNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIMenuControllerDidHideMenuNotification", "__Internal")]
		NSString UIMenuControllerDidHideMenuNotification { get; }

		// extern const NSNotificationName _Nonnull UIMenuControllerMenuFrameDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIMenuControllerMenuFrameDidChangeNotification", "__Internal")]
		NSString UIMenuControllerMenuFrameDidChangeNotification { get; }
	}

	// @interface UIMenuItem : NSObject
	[NoTV, iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UIMenuItem
	{
		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nonnull)title action:(SEL _Nonnull)action __attribute__((objc_designated_initializer));
		[Export ("initWithTitle:action:")]
		[DesignatedInitializer]
		IntPtr Constructor (string title, Selector action);

		// @property (copy, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; set; }

		// @property (nonatomic) SEL _Nonnull action;
		[Export ("action", ArgumentSemantic.Assign)]
		Selector Action { get; set; }
	}

	// @interface UIMotionEffect : NSObject <NSCopying, NSCoding>
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UIMotionEffect : INSCopying, INSCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(NSDictionary<NSString *,id> * _Nullable)keyPathsAndRelativeValuesForViewerOffset:(UIOffset)viewerOffset;
		[Export ("keyPathsAndRelativeValuesForViewerOffset:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> KeyPathsAndRelativeValuesForViewerOffset (UIOffset viewerOffset);
	}

	// @interface UIInterpolatingMotionEffect : UIMotionEffect
	[iOS (7,0)]
	[BaseType (typeof(UIMotionEffect))]
	interface UIInterpolatingMotionEffect
	{
		// -(instancetype _Nonnull)initWithKeyPath:(NSString * _Nonnull)keyPath type:(UIInterpolatingMotionEffectType)type __attribute__((objc_designated_initializer));
		[Export ("initWithKeyPath:type:")]
		[DesignatedInitializer]
		IntPtr Constructor (string keyPath, UIInterpolatingMotionEffectType type);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic) NSString * _Nonnull keyPath;
		[Export ("keyPath")]
		string KeyPath { get; }

		// @property (readonly, nonatomic) UIInterpolatingMotionEffectType type;
		[Export ("type")]
		UIInterpolatingMotionEffectType Type { get; }

		// @property (nonatomic, strong) id _Nullable minimumRelativeValue;
		[NullAllowed, Export ("minimumRelativeValue", ArgumentSemantic.Strong)]
		NSObject MinimumRelativeValue { get; set; }

		// @property (nonatomic, strong) id _Nullable maximumRelativeValue;
		[NullAllowed, Export ("maximumRelativeValue", ArgumentSemantic.Strong)]
		NSObject MaximumRelativeValue { get; set; }
	}

	// @interface UIMotionEffectGroup : UIMotionEffect
	[iOS (7,0)]
	[BaseType (typeof(UIMotionEffect))]
	interface UIMotionEffectGroup
	{
		// @property (copy, nonatomic) NSArray<__kindof UIMotionEffect *> * _Nullable motionEffects;
		[NullAllowed, Export ("motionEffects", ArgumentSemantic.Copy)]
		UIMotionEffect[] MotionEffects { get; set; }
	}

	// @interface UINavigationItem : NSObject <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UINavigationItem : INSCoding
	{
		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nonnull)title __attribute__((objc_designated_initializer));
		[Export ("initWithTitle:")]
		[DesignatedInitializer]
		IntPtr Constructor (string title);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (copy, nonatomic) NSString * _Nullable title;
		[NullAllowed, Export ("title")]
		string Title { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable titleView;
		[NullAllowed, Export ("titleView", ArgumentSemantic.Strong)]
		UIView TitleView { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable prompt __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("prompt")]
		string Prompt { get; set; }

		// @property (nonatomic, strong) UIBarButtonItem * _Nullable backBarButtonItem __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("backBarButtonItem", ArgumentSemantic.Strong)]
		UIBarButtonItem BackBarButtonItem { get; set; }

		// @property (assign, nonatomic) int hidesBackButton __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("hidesBackButton")]
		int HidesBackButton { get; set; }

		// -(void)setHidesBackButton:(int)hidesBackButton animated:(int)animated __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("setHidesBackButton:animated:")]
		void SetHidesBackButton (int hidesBackButton, int animated);

		// @property (copy, nonatomic) NSArray<UIBarButtonItem *> * _Nullable leftBarButtonItems __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("leftBarButtonItems", ArgumentSemantic.Copy)]
		UIBarButtonItem[] LeftBarButtonItems { get; set; }

		// @property (copy, nonatomic) NSArray<UIBarButtonItem *> * _Nullable rightBarButtonItems __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("rightBarButtonItems", ArgumentSemantic.Copy)]
		UIBarButtonItem[] RightBarButtonItems { get; set; }

		// -(void)setLeftBarButtonItems:(NSArray<UIBarButtonItem *> * _Nullable)items animated:(int)animated __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("setLeftBarButtonItems:animated:")]
		void SetLeftBarButtonItems ([NullAllowed] UIBarButtonItem[] items, int animated);

		// -(void)setRightBarButtonItems:(NSArray<UIBarButtonItem *> * _Nullable)items animated:(int)animated __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("setRightBarButtonItems:animated:")]
		void SetRightBarButtonItems ([NullAllowed] UIBarButtonItem[] items, int animated);

		// @property (nonatomic) int leftItemsSupplementBackButton __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Export ("leftItemsSupplementBackButton")]
		int LeftItemsSupplementBackButton { get; set; }

		// @property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButtonItem;
		[NullAllowed, Export ("leftBarButtonItem", ArgumentSemantic.Strong)]
		UIBarButtonItem LeftBarButtonItem { get; set; }

		// @property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButtonItem;
		[NullAllowed, Export ("rightBarButtonItem", ArgumentSemantic.Strong)]
		UIBarButtonItem RightBarButtonItem { get; set; }

		// -(void)setLeftBarButtonItem:(UIBarButtonItem * _Nullable)item animated:(int)animated;
		[Export ("setLeftBarButtonItem:animated:")]
		void SetLeftBarButtonItem ([NullAllowed] UIBarButtonItem item, int animated);

		// -(void)setRightBarButtonItem:(UIBarButtonItem * _Nullable)item animated:(int)animated;
		[Export ("setRightBarButtonItem:animated:")]
		void SetRightBarButtonItem ([NullAllowed] UIBarButtonItem item, int animated);

		// @property (assign, readwrite, nonatomic) UINavigationItemLargeTitleDisplayMode largeTitleDisplayMode __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Export ("largeTitleDisplayMode", ArgumentSemantic.Assign)]
		UINavigationItemLargeTitleDisplayMode LargeTitleDisplayMode { get; set; }

		// @property (retain, nonatomic) UISearchController * _Nullable searchController __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[NullAllowed, Export ("searchController", ArgumentSemantic.Retain)]
		UISearchController SearchController { get; set; }

		// @property (nonatomic) int hidesSearchBarWhenScrolling __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Export ("hidesSearchBarWhenScrolling")]
		int HidesSearchBarWhenScrolling { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nullable standardAppearance __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("standardAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance StandardAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nullable compactAppearance __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("compactAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance CompactAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nullable scrollEdgeAppearance __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("scrollEdgeAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance ScrollEdgeAppearance { get; set; }
	}

	// @interface UINavigationBar : UIView <NSCoding, UIBarPositioning>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UINavigationBar : INSCoding, IUIBarPositioning
	{
		// @property (assign, nonatomic) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("barStyle", ArgumentSemantic.Assign)]
		UIBarStyle BarStyle { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UINavigationBarDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UINavigationBarDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isTranslucent, assign, nonatomic) int translucent __attribute__((availability(ios, introduced=3.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (3, 0)]
		[Export ("translucent")]
		int Translucent { [Bind ("isTranslucent")] get; set; }

		// -(void)pushNavigationItem:(UINavigationItem * _Nonnull)item animated:(int)animated;
		[Export ("pushNavigationItem:animated:")]
		void PushNavigationItem (UINavigationItem item, int animated);

		// -(UINavigationItem * _Nullable)popNavigationItemAnimated:(int)animated;
		[Export ("popNavigationItemAnimated:")]
		[return: NullAllowed]
		UINavigationItem PopNavigationItemAnimated (int animated);

		// @property (readonly, nonatomic, strong) UINavigationItem * _Nullable topItem;
		[NullAllowed, Export ("topItem", ArgumentSemantic.Strong)]
		UINavigationItem TopItem { get; }

		// @property (readonly, nonatomic, strong) UINavigationItem * _Nullable backItem;
		[NullAllowed, Export ("backItem", ArgumentSemantic.Strong)]
		UINavigationItem BackItem { get; }

		// @property (copy, nonatomic) NSArray<UINavigationItem *> * _Nullable items;
		[NullAllowed, Export ("items", ArgumentSemantic.Copy)]
		UINavigationItem[] Items { get; set; }

		// -(void)setItems:(NSArray<UINavigationItem *> * _Nullable)items animated:(int)animated;
		[Export ("setItems:animated:")]
		void SetItems ([NullAllowed] UINavigationItem[] items, int animated);

		// @property (assign, readwrite, nonatomic) int prefersLargeTitles __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Export ("prefersLargeTitles")]
		int PrefersLargeTitles { get; set; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable barTintColor __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[NullAllowed, Export ("barTintColor", ArgumentSemantic.Strong)]
		UIColor BarTintColor { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7,0)]
		[Export ("setBackgroundImage:forBarPosition:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIBarPosition barPosition, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7,0)]
		[Export ("backgroundImageForBarPosition:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForBarPosition (UIBarPosition barPosition, UIBarMetrics barMetrics);

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setBackgroundImage:forBarMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("backgroundImageForBarMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForBarMetrics (UIBarMetrics barMetrics);

		// @property (nonatomic, strong) UIImage * _Nullable shadowImage __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("shadowImage", ArgumentSemantic.Strong)]
		UIImage ShadowImage { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nullable titleTextAttributes __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("titleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TitleTextAttributes { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nullable largeTitleTextAttributes __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[NullAllowed, Export ("largeTitleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> LargeTitleTextAttributes { get; set; }

		// -(void)setTitleVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setTitleVerticalPositionAdjustment:forBarMetrics:")]
		void SetTitleVerticalPositionAdjustment (nfloat adjustment, UIBarMetrics barMetrics);

		// -(CGFloat)titleVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("titleVerticalPositionAdjustmentForBarMetrics:")]
		nfloat TitleVerticalPositionAdjustmentForBarMetrics (UIBarMetrics barMetrics);

		// @property (nonatomic, strong) UIImage * _Nullable backIndicatorImage __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[NullAllowed, Export ("backIndicatorImage", ArgumentSemantic.Strong)]
		UIImage BackIndicatorImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable backIndicatorTransitionMaskImage __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[NullAllowed, Export ("backIndicatorTransitionMaskImage", ArgumentSemantic.Strong)]
		UIImage BackIndicatorTransitionMaskImage { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nonnull standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("standardAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance StandardAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nullable compactAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("compactAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance CompactAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UINavigationBarAppearance * _Nullable scrollEdgeAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("scrollEdgeAppearance", ArgumentSemantic.Copy)]
		UINavigationBarAppearance ScrollEdgeAppearance { get; set; }
	}

	// @protocol UINavigationBarDelegate <UIBarPositioningDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface UINavigationBarDelegate : IUIBarPositioningDelegate
	{
		// @optional -(int)navigationBar:(UINavigationBar * _Nonnull)navigationBar shouldPushItem:(UINavigationItem * _Nonnull)item;
		[Export ("navigationBar:shouldPushItem:")]
		int NavigationBar (UINavigationBar navigationBar, UINavigationItem item);

		// @optional -(void)navigationBar:(UINavigationBar * _Nonnull)navigationBar didPushItem:(UINavigationItem * _Nonnull)item;
		[Export ("navigationBar:didPushItem:")]
		void NavigationBar (UINavigationBar navigationBar, UINavigationItem item);

		// @optional -(int)navigationBar:(UINavigationBar * _Nonnull)navigationBar shouldPopItem:(UINavigationItem * _Nonnull)item;
		[Export ("navigationBar:shouldPopItem:")]
		int NavigationBar (UINavigationBar navigationBar, UINavigationItem item);

		// @optional -(void)navigationBar:(UINavigationBar * _Nonnull)navigationBar didPopItem:(UINavigationItem * _Nonnull)item;
		[Export ("navigationBar:didPopItem:")]
		void NavigationBar (UINavigationBar navigationBar, UINavigationItem item);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UINibOptionsKey _Nonnull UINibExternalObjects __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Field ("UINibExternalObjects", "__Internal")]
		NSString UINibExternalObjects { get; }
	}

	// @interface UINibLoadingAdditions (NSBundle)
	[Category]
	[BaseType (typeof(NSBundle))]
	interface NSBundle_UINibLoadingAdditions
	{
		// -(NSArray * _Nullable)loadNibNamed:(NSString * _Nonnull)name owner:(id _Nullable)owner options:(NSDictionary<UINibOptionsKey,id> * _Nullable)options;
		[Export ("loadNibNamed:owner:options:")]
		[Verify (StronglyTypedNSArray)]
		[return: NullAllowed]
		NSObject[] LoadNibNamed (string name, [NullAllowed] NSObject owner, [NullAllowed] NSDictionary<NSString, NSObject> options);
	}

	// @interface UINibLoadingAdditions (NSObject)
	[Category]
	[BaseType (typeof(NSObject))]
	interface NSObject_UINibLoadingAdditions
	{
		// -(void)awakeFromNib __attribute__((objc_requires_super));
		[Export ("awakeFromNib")]
		[RequiresSuper]
		void AwakeFromNib ();

		// -(void)prepareForInterfaceBuilder __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("prepareForInterfaceBuilder")]
		void PrepareForInterfaceBuilder ();
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UINibProxiedObjectsKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=2.0, deprecated=3.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[NoTV]
		[Field ("UINibProxiedObjectsKey", "__Internal")]
		NSString UINibProxiedObjectsKey { get; }
	}

	// @interface UINib : NSObject
	[iOS (4,0)]
	[BaseType (typeof(NSObject))]
	interface UINib
	{
		// +(UINib * _Nonnull)nibWithNibName:(NSString * _Nonnull)name bundle:(NSBundle * _Nullable)bundleOrNil;
		[Static]
		[Export ("nibWithNibName:bundle:")]
		UINib NibWithNibName (string name, [NullAllowed] NSBundle bundleOrNil);

		// +(UINib * _Nonnull)nibWithData:(NSData * _Nonnull)data bundle:(NSBundle * _Nullable)bundleOrNil;
		[Static]
		[Export ("nibWithData:bundle:")]
		UINib NibWithData (NSData data, [NullAllowed] NSBundle bundleOrNil);

		// -(NSArray * _Nonnull)instantiateWithOwner:(id _Nullable)ownerOrNil options:(NSDictionary<UINibOptionsKey,id> * _Nullable)optionsOrNil;
		[Export ("instantiateWithOwner:options:")]
		[Verify (StronglyTypedNSArray)]
		NSObject[] InstantiateWithOwner ([NullAllowed] NSObject ownerOrNil, [NullAllowed] NSDictionary<NSString, NSObject> optionsOrNil);
	}

	// @interface UIPageControl : UIControl
	[iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UIPageControl
	{
		// @property (nonatomic) NSInteger numberOfPages;
		[Export ("numberOfPages")]
		nint NumberOfPages { get; set; }

		// @property (nonatomic) NSInteger currentPage;
		[Export ("currentPage")]
		nint CurrentPage { get; set; }

		// @property (nonatomic) int hidesForSinglePage;
		[Export ("hidesForSinglePage")]
		int HidesForSinglePage { get; set; }

		// @property (nonatomic) int defersCurrentPageDisplay;
		[Export ("defersCurrentPageDisplay")]
		int DefersCurrentPageDisplay { get; set; }

		// -(void)updateCurrentPageDisplay;
		[Export ("updateCurrentPageDisplay")]
		void UpdateCurrentPageDisplay ();

		// -(CGSize)sizeForNumberOfPages:(NSInteger)pageCount;
		[Export ("sizeForNumberOfPages:")]
		CGSize SizeForNumberOfPages (nint pageCount);

		// @property (nonatomic, strong) UIColor * _Nullable pageIndicatorTintColor __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("pageIndicatorTintColor", ArgumentSemantic.Strong)]
		UIColor PageIndicatorTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable currentPageIndicatorTintColor __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("currentPageIndicatorTintColor", ArgumentSemantic.Strong)]
		UIColor CurrentPageIndicatorTintColor { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIPageViewControllerOptionsKey _Nonnull UIPageViewControllerOptionSpineLocationKey __attribute__((visibility("default")));
		[Field ("UIPageViewControllerOptionSpineLocationKey", "__Internal")]
		NSString UIPageViewControllerOptionSpineLocationKey { get; }

		// extern const UIPageViewControllerOptionsKey _Nonnull UIPageViewControllerOptionInterPageSpacingKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Field ("UIPageViewControllerOptionInterPageSpacingKey", "__Internal")]
		NSString UIPageViewControllerOptionInterPageSpacingKey { get; }
	}

	// @interface UIPageViewController : UIViewController
	[iOS (5,0)]
	[BaseType (typeof(UIViewController))]
	interface UIPageViewController
	{
		// -(instancetype _Nonnull)initWithTransitionStyle:(UIPageViewControllerTransitionStyle)style navigationOrientation:(UIPageViewControllerNavigationOrientation)navigationOrientation options:(NSDictionary<UIPageViewControllerOptionsKey,id> * _Nullable)options __attribute__((objc_designated_initializer));
		[Export ("initWithTransitionStyle:navigationOrientation:options:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIPageViewControllerTransitionStyle style, UIPageViewControllerNavigationOrientation navigationOrientation, [NullAllowed] NSDictionary<NSString, NSObject> options);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPageViewControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPageViewControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		[Wrap ("WeakDataSource")]
		[NullAllowed]
		UIPageViewControllerDataSource DataSource { get; set; }

		// @property (nonatomic, weak) id<UIPageViewControllerDataSource> _Nullable dataSource;
		[NullAllowed, Export ("dataSource", ArgumentSemantic.Weak)]
		NSObject WeakDataSource { get; set; }

		// @property (readonly, nonatomic) UIPageViewControllerTransitionStyle transitionStyle;
		[Export ("transitionStyle")]
		UIPageViewControllerTransitionStyle TransitionStyle { get; }

		// @property (readonly, nonatomic) UIPageViewControllerNavigationOrientation navigationOrientation;
		[Export ("navigationOrientation")]
		UIPageViewControllerNavigationOrientation NavigationOrientation { get; }

		// @property (readonly, nonatomic) UIPageViewControllerSpineLocation spineLocation;
		[Export ("spineLocation")]
		UIPageViewControllerSpineLocation SpineLocation { get; }

		// @property (getter = isDoubleSided, nonatomic) int doubleSided;
		[Export ("doubleSided")]
		int DoubleSided { [Bind ("isDoubleSided")] get; set; }

		// @property (readonly, nonatomic) NSArray<__kindof UIGestureRecognizer *> * _Nonnull gestureRecognizers;
		[Export ("gestureRecognizers")]
		UIGestureRecognizer[] GestureRecognizers { get; }

		// @property (readonly, nonatomic) NSArray<__kindof UIViewController *> * _Nullable viewControllers;
		[NullAllowed, Export ("viewControllers")]
		UIViewController[] ViewControllers { get; }

		// -(void)setViewControllers:(NSArray<UIViewController *> * _Nullable)viewControllers direction:(UIPageViewControllerNavigationDirection)direction animated:(int)animated completion:(void (^ _Nullable)(int))completion;
		[Export ("setViewControllers:direction:animated:completion:")]
		void SetViewControllers ([NullAllowed] UIViewController[] viewControllers, UIPageViewControllerNavigationDirection direction, int animated, [NullAllowed] Action<int> completion);
	}

	// @protocol UIPageViewControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPageViewControllerDelegate
	{
		// @optional -(void)pageViewController:(UIPageViewController * _Nonnull)pageViewController willTransitionToViewControllers:(NSArray<UIViewController *> * _Nonnull)pendingViewControllers __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("pageViewController:willTransitionToViewControllers:")]
		void PageViewController (UIPageViewController pageViewController, UIViewController[] pendingViewControllers);

		// @optional -(void)pageViewController:(UIPageViewController * _Nonnull)pageViewController didFinishAnimating:(int)finished previousViewControllers:(NSArray<UIViewController *> * _Nonnull)previousViewControllers transitionCompleted:(int)completed;
		[Export ("pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:")]
		void PageViewController (UIPageViewController pageViewController, int finished, UIViewController[] previousViewControllers, int completed);

		// @optional -(UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController * _Nonnull)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pageViewController:spineLocationForInterfaceOrientation:")]
		UIPageViewControllerSpineLocation PageViewController (UIPageViewController pageViewController, UIInterfaceOrientation orientation);

		// @optional -(UIInterfaceOrientationMask)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController * _Nonnull)pageViewController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("pageViewControllerSupportedInterfaceOrientations:")]
		UIInterfaceOrientationMask PageViewControllerSupportedInterfaceOrientations (UIPageViewController pageViewController);

		// @optional -(UIInterfaceOrientation)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController * _Nonnull)pageViewController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("pageViewControllerPreferredInterfaceOrientationForPresentation:")]
		UIInterfaceOrientation PageViewControllerPreferredInterfaceOrientationForPresentation (UIPageViewController pageViewController);
	}

	// @protocol UIPageViewControllerDataSource <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPageViewControllerDataSource
	{
		// @required -(UIViewController * _Nullable)pageViewController:(UIPageViewController * _Nonnull)pageViewController viewControllerBeforeViewController:(UIViewController * _Nonnull)viewController;
		[Abstract]
		[Export ("pageViewController:viewControllerBeforeViewController:")]
		[return: NullAllowed]
		UIViewController PageViewController (UIPageViewController pageViewController, UIViewController viewController);

		// @required -(UIViewController * _Nullable)pageViewController:(UIPageViewController * _Nonnull)pageViewController viewControllerAfterViewController:(UIViewController * _Nonnull)viewController;
		[Abstract]
		[Export ("pageViewController:viewControllerAfterViewController:")]
		[return: NullAllowed]
		UIViewController PageViewController (UIPageViewController pageViewController, UIViewController viewController);

		// @optional -(NSInteger)presentationCountForPageViewController:(UIPageViewController * _Nonnull)pageViewController __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("presentationCountForPageViewController:")]
		nint PresentationCountForPageViewController (UIPageViewController pageViewController);

		// @optional -(NSInteger)presentationIndexForPageViewController:(UIPageViewController * _Nonnull)pageViewController __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Export ("presentationIndexForPageViewController:")]
		nint PresentationIndexForPageViewController (UIPageViewController pageViewController);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIPasteboardName _Nonnull UIPasteboardNameGeneral __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardNameGeneral", "__Internal")]
		NSString UIPasteboardNameGeneral { get; }

		// extern NSString *const _Nonnull UIPasteboardNameFind __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=3.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 3, 0, message: "The Find pasteboard is no longer available.")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "The Find pasteboard is no longer available.")]
		[NoWatch, NoTV]
		[Field ("UIPasteboardNameFind", "__Internal")]
		NSString UIPasteboardNameFind { get; }
	}

	// @interface UIPasteboard : NSObject
	[NoWatch, NoTV, iOS (3,0)]
	[BaseType (typeof(NSObject))]
	interface UIPasteboard
	{
		// @property (readonly, nonatomic, class) UIPasteboard * _Nonnull generalPasteboard;
		[Static]
		[Export ("generalPasteboard")]
		UIPasteboard GeneralPasteboard { get; }

		// +(UIPasteboard * _Nullable)pasteboardWithName:(UIPasteboardName _Nonnull)pasteboardName create:(int)create;
		[Static]
		[Export ("pasteboardWithName:create:")]
		[return: NullAllowed]
		UIPasteboard PasteboardWithName (string pasteboardName, int create);

		// +(UIPasteboard * _Nonnull)pasteboardWithUniqueName;
		[Static]
		[Export ("pasteboardWithUniqueName")]
		[Verify (MethodToProperty)]
		UIPasteboard PasteboardWithUniqueName { get; }

		// @property (readonly, nonatomic) UIPasteboardName _Nonnull name;
		[Export ("name")]
		string Name { get; }

		// +(void)removePasteboardWithName:(UIPasteboardName _Nonnull)pasteboardName;
		[Static]
		[Export ("removePasteboardWithName:")]
		void RemovePasteboardWithName (string pasteboardName);

		// @property (readonly, getter = isPersistent, nonatomic) int persistent;
		[Export ("persistent")]
		int Persistent { [Bind ("isPersistent")] get; }

		// -(void)setPersistent:(int)persistent __attribute__((availability(ios, introduced=3.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 3, 0, message: "Do not set persistence on pasteboards. This property is set automatically.")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Do not set persistence on pasteboards. This property is set automatically.")]
		[Export ("setPersistent:")]
		void SetPersistent (int persistent);

		// @property (readonly, nonatomic) NSInteger changeCount;
		[Export ("changeCount")]
		nint ChangeCount { get; }

		// @property (copy, nonatomic) NSArray<__kindof NSItemProvider *> * _Nonnull itemProviders __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Export ("itemProviders", ArgumentSemantic.Copy)]
		NSItemProvider[] ItemProviders { get; set; }

		// -(void)setItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders localOnly:(int)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("setItemProviders:localOnly:expirationDate:")]
		void SetItemProviders (NSItemProvider[] itemProviders, int localOnly, [NullAllowed] NSDate expirationDate);

		// -(void)setObjects:(NSArray<id<NSItemProviderWriting>> * _Nonnull)objects __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("setObjects:")]
		void SetObjects (NSItemProviderWriting[] objects);

		// -(void)setObjects:(NSArray<id<NSItemProviderWriting>> * _Nonnull)objects localOnly:(int)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Export ("setObjects:localOnly:expirationDate:")]
		void SetObjects (NSItemProviderWriting[] objects, int localOnly, [NullAllowed] NSDate expirationDate);

		// @property (readonly, nonatomic) NSArray<NSString *> * _Nonnull pasteboardTypes;
		[Export ("pasteboardTypes")]
		string[] PasteboardTypes { get; }

		// -(int)containsPasteboardTypes:(NSArray<NSString *> * _Nonnull)pasteboardTypes;
		[Export ("containsPasteboardTypes:")]
		int ContainsPasteboardTypes (string[] pasteboardTypes);

		// -(NSData * _Nullable)dataForPasteboardType:(NSString * _Nonnull)pasteboardType;
		[Export ("dataForPasteboardType:")]
		[return: NullAllowed]
		NSData DataForPasteboardType (string pasteboardType);

		// -(id _Nullable)valueForPasteboardType:(NSString * _Nonnull)pasteboardType;
		[Export ("valueForPasteboardType:")]
		[return: NullAllowed]
		NSObject ValueForPasteboardType (string pasteboardType);

		// -(void)setValue:(id _Nonnull)value forPasteboardType:(NSString * _Nonnull)pasteboardType;
		[Export ("setValue:forPasteboardType:")]
		void SetValue (NSObject value, string pasteboardType);

		// -(void)setData:(NSData * _Nonnull)data forPasteboardType:(NSString * _Nonnull)pasteboardType;
		[Export ("setData:forPasteboardType:")]
		void SetData (NSData data, string pasteboardType);

		// @property (readonly, nonatomic) NSInteger numberOfItems;
		[Export ("numberOfItems")]
		nint NumberOfItems { get; }

		// -(NSArray<NSArray<NSString *> *> * _Nullable)pasteboardTypesForItemSet:(NSIndexSet * _Nullable)itemSet;
		[Export ("pasteboardTypesForItemSet:")]
		[return: NullAllowed]
		NSArray<NSString>[] PasteboardTypesForItemSet ([NullAllowed] NSIndexSet itemSet);

		// -(int)containsPasteboardTypes:(NSArray<NSString *> * _Nonnull)pasteboardTypes inItemSet:(NSIndexSet * _Nullable)itemSet;
		[Export ("containsPasteboardTypes:inItemSet:")]
		int ContainsPasteboardTypes (string[] pasteboardTypes, [NullAllowed] NSIndexSet itemSet);

		// -(NSIndexSet * _Nullable)itemSetWithPasteboardTypes:(NSArray<NSString *> * _Nonnull)pasteboardTypes;
		[Export ("itemSetWithPasteboardTypes:")]
		[return: NullAllowed]
		NSIndexSet ItemSetWithPasteboardTypes (string[] pasteboardTypes);

		// -(NSArray * _Nullable)valuesForPasteboardType:(NSString * _Nonnull)pasteboardType inItemSet:(NSIndexSet * _Nullable)itemSet;
		[Export ("valuesForPasteboardType:inItemSet:")]
		[Verify (StronglyTypedNSArray)]
		[return: NullAllowed]
		NSObject[] ValuesForPasteboardType (string pasteboardType, [NullAllowed] NSIndexSet itemSet);

		// -(NSArray<NSData *> * _Nullable)dataForPasteboardType:(NSString * _Nonnull)pasteboardType inItemSet:(NSIndexSet * _Nullable)itemSet;
		[Export ("dataForPasteboardType:inItemSet:")]
		[return: NullAllowed]
		NSData[] DataForPasteboardType (string pasteboardType, [NullAllowed] NSIndexSet itemSet);

		// @property (copy, nonatomic) NSArray<NSDictionary<NSString *,id> *> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject>[] Items { get; set; }

		// -(void)addItems:(NSArray<NSDictionary<NSString *,id> *> * _Nonnull)items;
		[Export ("addItems:")]
		void AddItems (NSDictionary<NSString, NSObject>[] items);

		// -(void)setItems:(NSArray<NSDictionary<NSString *,id> *> * _Nonnull)items options:(NSDictionary<UIPasteboardOption,id> * _Nonnull)options __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("setItems:options:")]
		void SetItems (NSDictionary<NSString, NSObject>[] items, NSDictionary<NSString, NSObject> options);

		// @property (copy, nonatomic) NSString * _Nullable string __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("string")]
		string String { get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nullable strings __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("strings", ArgumentSemantic.Copy)]
		string[] Strings { get; set; }

		// @property (copy, nonatomic) NSURL * _Nullable URL __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("URL", ArgumentSemantic.Copy)]
		NSUrl URL { get; set; }

		// @property (copy, nonatomic) NSArray<NSURL *> * _Nullable URLs __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("URLs", ArgumentSemantic.Copy)]
		NSUrl[] URLs { get; set; }

		// @property (copy, nonatomic) UIImage * _Nullable image __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("image", ArgumentSemantic.Copy)]
		UIImage Image { get; set; }

		// @property (copy, nonatomic) NSArray<UIImage *> * _Nullable images __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("images", ArgumentSemantic.Copy)]
		UIImage[] Images { get; set; }

		// @property (copy, nonatomic) UIColor * _Nullable color __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("color", ArgumentSemantic.Copy)]
		UIColor Color { get; set; }

		// @property (copy, nonatomic) NSArray<UIColor *> * _Nullable colors __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[NullAllowed, Export ("colors", ArgumentSemantic.Copy)]
		UIColor[] Colors { get; set; }

		// @property (readonly, nonatomic) int hasStrings __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
		[NoWatch, NoTV, iOS (10, 0)]
		[Export ("hasStrings")]
		int HasStrings { get; }

		// @property (readonly, nonatomic) int hasURLs __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
		[NoWatch, NoTV, iOS (10, 0)]
		[Export ("hasURLs")]
		int HasURLs { get; }

		// @property (readonly, nonatomic) int hasImages __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
		[NoWatch, NoTV, iOS (10, 0)]
		[Export ("hasImages")]
		int HasImages { get; }

		// @property (readonly, nonatomic) int hasColors __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
		[NoWatch, NoTV, iOS (10, 0)]
		[Export ("hasColors")]
		int HasColors { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIPasteboardOption _Nonnull UIPasteboardOptionExpirationDate __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0))) __attribute__((swift_name("UIPasteboardOption.expirationDate")));
		[NoWatch, NoTV, iOS (10, 0)]
		[Field ("UIPasteboardOptionExpirationDate", "__Internal")]
		NSString UIPasteboardOptionExpirationDate { get; }

		// extern const UIPasteboardOption _Nonnull UIPasteboardOptionLocalOnly __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0))) __attribute__((swift_name("UIPasteboardOption.localOnly")));
		[NoWatch, NoTV, iOS (10, 0)]
		[Field ("UIPasteboardOptionLocalOnly", "__Internal")]
		NSString UIPasteboardOptionLocalOnly { get; }

		// extern const NSNotificationName _Nonnull UIPasteboardChangedNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardChangedNotification", "__Internal")]
		NSString UIPasteboardChangedNotification { get; }

		// extern NSString *const _Nonnull UIPasteboardChangedTypesAddedKey __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardChangedTypesAddedKey", "__Internal")]
		NSString UIPasteboardChangedTypesAddedKey { get; }

		// extern NSString *const _Nonnull UIPasteboardChangedTypesRemovedKey __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardChangedTypesRemovedKey", "__Internal")]
		NSString UIPasteboardChangedTypesRemovedKey { get; }

		// extern const NSNotificationName _Nonnull UIPasteboardRemovedNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardRemovedNotification", "__Internal")]
		NSString UIPasteboardRemovedNotification { get; }

		// extern NSArray<NSString *> * _Nonnull UIPasteboardTypeListString __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardTypeListString", "__Internal")]
		NSString[] UIPasteboardTypeListString { get; }

		// extern NSArray<NSString *> * _Nonnull UIPasteboardTypeListURL __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardTypeListURL", "__Internal")]
		NSString[] UIPasteboardTypeListURL { get; }

		// extern NSArray<NSString *> * _Nonnull UIPasteboardTypeListImage __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardTypeListImage", "__Internal")]
		NSString[] UIPasteboardTypeListImage { get; }

		// extern NSArray<NSString *> * _Nonnull UIPasteboardTypeListColor __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV]
		[Field ("UIPasteboardTypeListColor", "__Internal")]
		NSString[] UIPasteboardTypeListColor { get; }

		// extern NSString *const _Nonnull UIPasteboardTypeAutomatic __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(ios, introduced=10.0)));
		[NoWatch, NoTV, iOS (10, 0)]
		[Field ("UIPasteboardTypeAutomatic", "__Internal")]
		NSString UIPasteboardTypeAutomatic { get; }
	}

	// @interface UIPinchGestureRecognizer : UIGestureRecognizer
	[NoTV, iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UIPinchGestureRecognizer
	{
		// @property (nonatomic) CGFloat scale;
		[Export ("scale")]
		nfloat Scale { get; set; }

		// @property (readonly, nonatomic) CGFloat velocity;
		[Export ("velocity")]
		nfloat Velocity { get; }
	}

	// @interface UIPopoverController (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIPopoverController
	{
		// @property (getter = isModalInPopover, readwrite, nonatomic) int modalInPopover __attribute__((availability(ios, introduced=3.2, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("modalInPopover")]
		int ModalInPopover { [Bind ("isModalInPopover")] get; set; }

		// @property (readwrite, nonatomic) CGSize contentSizeForViewInPopover __attribute__((availability(ios, introduced=3.2, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("contentSizeForViewInPopover", ArgumentSemantic.Assign)]
		CGSize ContentSizeForViewInPopover { get; set; }
	}

	// @interface UIPopoverController : NSObject <UIAppearanceContainer>
	[Introduced (PlatformName.iOS, 3, 2, message: "UIPopoverController is deprecated. Popovers are now implemented as UIViewController presentations. Use a modal presentation style of UIModalPresentationPopover and UIPopoverPresentationController.")]
	[Deprecated (PlatformName.iOS, 9, 0, message: "UIPopoverController is deprecated. Popovers are now implemented as UIViewController presentations. Use a modal presentation style of UIModalPresentationPopover and UIPopoverPresentationController.")]
	[BaseType (typeof(NSObject))]
	interface UIPopoverController : IUIAppearanceContainer
	{
		// -(instancetype _Nonnull)initWithContentViewController:(UIViewController * _Nonnull)viewController;
		[Export ("initWithContentViewController:")]
		IntPtr Constructor (UIViewController viewController);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPopoverControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPopoverControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic, strong) UIViewController * _Nonnull contentViewController;
		[Export ("contentViewController", ArgumentSemantic.Strong)]
		UIViewController ContentViewController { get; set; }

		// -(void)setContentViewController:(UIViewController * _Nonnull)viewController animated:(int)animated;
		[Export ("setContentViewController:animated:")]
		void SetContentViewController (UIViewController viewController, int animated);

		// @property (nonatomic) CGSize popoverContentSize;
		[Export ("popoverContentSize", ArgumentSemantic.Assign)]
		CGSize PopoverContentSize { get; set; }

		// -(void)setPopoverContentSize:(CGSize)size animated:(int)animated;
		[Export ("setPopoverContentSize:animated:")]
		void SetPopoverContentSize (CGSize size, int animated);

		// @property (readonly, getter = isPopoverVisible, nonatomic) int popoverVisible;
		[Export ("popoverVisible")]
		int PopoverVisible { [Bind ("isPopoverVisible")] get; }

		// @property (readonly, nonatomic) UIPopoverArrowDirection popoverArrowDirection;
		[Export ("popoverArrowDirection")]
		UIPopoverArrowDirection PopoverArrowDirection { get; }

		// @property (copy, nonatomic) NSArray<__kindof UIView *> * _Nullable passthroughViews;
		[NullAllowed, Export ("passthroughViews", ArgumentSemantic.Copy)]
		UIView[] PassthroughViews { get; set; }

		// -(void)presentPopoverFromRect:(CGRect)rect inView:(UIView * _Nonnull)view permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(int)animated;
		[Export ("presentPopoverFromRect:inView:permittedArrowDirections:animated:")]
		void PresentPopoverFromRect (CGRect rect, UIView view, UIPopoverArrowDirection arrowDirections, int animated);

		// -(void)presentPopoverFromBarButtonItem:(UIBarButtonItem * _Nonnull)item permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(int)animated;
		[Export ("presentPopoverFromBarButtonItem:permittedArrowDirections:animated:")]
		void PresentPopoverFromBarButtonItem (UIBarButtonItem item, UIPopoverArrowDirection arrowDirections, int animated);

		// -(void)dismissPopoverAnimated:(int)animated;
		[Export ("dismissPopoverAnimated:")]
		void DismissPopoverAnimated (int animated);

		// @property (copy, nonatomic) UIColor * _Nullable backgroundColor __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (readwrite, nonatomic) UIEdgeInsets popoverLayoutMargins __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("popoverLayoutMargins", ArgumentSemantic.Assign)]
		UIEdgeInsets PopoverLayoutMargins { get; set; }

		// @property (readwrite, nonatomic, strong) Class _Nullable popoverBackgroundViewClass __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("popoverBackgroundViewClass", ArgumentSemantic.Strong)]
		Class PopoverBackgroundViewClass { get; set; }
	}

	// @protocol UIPopoverControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPopoverControllerDelegate
	{
		// @optional -(int)popoverControllerShouldDismissPopover:(UIPopoverController * _Nonnull)popoverController __attribute__((availability(ios, introduced=3.2, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Export ("popoverControllerShouldDismissPopover:")]
		int PopoverControllerShouldDismissPopover (UIPopoverController popoverController);

		// @optional -(void)popoverControllerDidDismissPopover:(UIPopoverController * _Nonnull)popoverController __attribute__((availability(ios, introduced=3.2, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Export ("popoverControllerDidDismissPopover:")]
		void PopoverControllerDidDismissPopover (UIPopoverController popoverController);

		// @optional -(void)popoverController:(UIPopoverController * _Nonnull)popoverController willRepositionPopoverToRect:(CGRect * _Nonnull)rect inView:(UIView * _Nonnull * _Nonnull)view __attribute__((availability(ios, introduced=7.0, deprecated=9.0)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[Export ("popoverController:willRepositionPopoverToRect:inView:")]
		unsafe void PopoverController (UIPopoverController popoverController, CGRect* rect, out UIView view);
	}

	// @protocol UIPopoverBackgroundViewMethods
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIPopoverBackgroundViewMethods
	{
		// @required +(CGFloat)arrowBase;
		[Static, Abstract]
		[Export ("arrowBase")]
		[Verify (MethodToProperty)]
		nfloat ArrowBase { get; }

		// @required +(UIEdgeInsets)contentViewInsets;
		[Static, Abstract]
		[Export ("contentViewInsets")]
		[Verify (MethodToProperty)]
		UIEdgeInsets ContentViewInsets { get; }

		// @required +(CGFloat)arrowHeight;
		[Static, Abstract]
		[Export ("arrowHeight")]
		[Verify (MethodToProperty)]
		nfloat ArrowHeight { get; }
	}

	// @interface UIPopoverBackgroundView : UIView <UIPopoverBackgroundViewMethods>
	[iOS (5,0)]
	[BaseType (typeof(UIView))]
	interface UIPopoverBackgroundView : IUIPopoverBackgroundViewMethods
	{
		// @property (readwrite, nonatomic) CGFloat arrowOffset;
		[Export ("arrowOffset")]
		nfloat ArrowOffset { get; set; }

		// @property (readwrite, nonatomic) UIPopoverArrowDirection arrowDirection;
		[Export ("arrowDirection", ArgumentSemantic.Assign)]
		UIPopoverArrowDirection ArrowDirection { get; set; }

		// @property (readonly, nonatomic, class) int wantsDefaultContentAppearance __attribute__((availability(ios, introduced=6.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 6, 0, message: "No longer supported")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "No longer supported")]
		[Static]
		[Export ("wantsDefaultContentAppearance")]
		int WantsDefaultContentAppearance { get; }
	}

	// @interface UIPress : NSObject
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIPress
	{
		// @property (readonly, nonatomic) NSTimeInterval timestamp;
		[Export ("timestamp")]
		double Timestamp { get; }

		// @property (readonly, nonatomic) UIPressPhase phase;
		[Export ("phase")]
		UIPressPhase Phase { get; }

		// @property (readonly, nonatomic) UIPressType type;
		[Export ("type")]
		UIPressType Type { get; }

		// @property (readonly, nonatomic, strong) UIWindow * _Nullable window;
		[NullAllowed, Export ("window", ArgumentSemantic.Strong)]
		UIWindow Window { get; }

		// @property (readonly, nonatomic, strong) UIResponder * _Nullable responder;
		[NullAllowed, Export ("responder", ArgumentSemantic.Strong)]
		UIResponder Responder { get; }

		// @property (readonly, copy, nonatomic) NSArray<UIGestureRecognizer *> * _Nullable gestureRecognizers;
		[NullAllowed, Export ("gestureRecognizers", ArgumentSemantic.Copy)]
		UIGestureRecognizer[] GestureRecognizers { get; }

		// @property (readonly, nonatomic) CGFloat force;
		[Export ("force")]
		nfloat Force { get; }
	}

	// @interface UIPressesEvent : UIEvent
	[iOS (9,0)]
	[BaseType (typeof(UIEvent))]
	interface UIPressesEvent
	{
		// @property (readonly, nonatomic) NSSet<UIPress *> * _Nonnull allPresses;
		[Export ("allPresses")]
		NSSet<UIPress> AllPresses { get; }

		// -(NSSet<UIPress *> * _Nonnull)pressesForGestureRecognizer:(UIGestureRecognizer * _Nonnull)gesture;
		[Export ("pressesForGestureRecognizer:")]
		NSSet<UIPress> PressesForGestureRecognizer (UIGestureRecognizer gesture);
	}

	// @interface UIPrinter : NSObject
	[NoTV, iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIPrinter
	{
		// +(UIPrinter * _Nonnull)printerWithURL:(NSURL * _Nonnull)url;
		[Static]
		[Export ("printerWithURL:")]
		UIPrinter PrinterWithURL (NSUrl url);

		// @property (readonly, copy) NSURL * _Nonnull URL;
		[Export ("URL", ArgumentSemantic.Copy)]
		NSUrl URL { get; }

		// @property (readonly, copy) NSString * _Nonnull displayName;
		[Export ("displayName")]
		string DisplayName { get; }

		// @property (readonly, copy) NSString * _Nullable displayLocation;
		[NullAllowed, Export ("displayLocation")]
		string DisplayLocation { get; }

		// @property (readonly) UIPrinterJobTypes supportedJobTypes;
		[Export ("supportedJobTypes")]
		UIPrinterJobTypes SupportedJobTypes { get; }

		// @property (readonly, copy) NSString * _Nullable makeAndModel;
		[NullAllowed, Export ("makeAndModel")]
		string MakeAndModel { get; }

		// @property (readonly) int supportsColor;
		[Export ("supportsColor")]
		int SupportsColor { get; }

		// @property (readonly) int supportsDuplex;
		[Export ("supportsDuplex")]
		int SupportsDuplex { get; }

		// -(void)contactPrinter:(void (^ _Nullable)(int))completionHandler;
		[Export ("contactPrinter:")]
		void ContactPrinter ([NullAllowed] Action<int> completionHandler);
	}

	// typedef void (^UIPrinterPickerCompletionHandler)(UIPrinterPickerController * _Nonnull, int, NSError * _Nullable);
	delegate void UIPrinterPickerCompletionHandler (UIPrinterPickerController arg0, int arg1, [NullAllowed] NSError arg2);

	// @protocol UIPrinterPickerControllerDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPrinterPickerControllerDelegate
	{
		// @optional -(UIViewController * _Nullable)printerPickerControllerParentViewController:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerParentViewController:")]
		[return: NullAllowed]
		UIViewController PrinterPickerControllerParentViewController (UIPrinterPickerController printerPickerController);

		// @optional -(int)printerPickerController:(UIPrinterPickerController * _Nonnull)printerPickerController shouldShowPrinter:(UIPrinter * _Nonnull)printer;
		[Export ("printerPickerController:shouldShowPrinter:")]
		int PrinterPickerController (UIPrinterPickerController printerPickerController, UIPrinter printer);

		// @optional -(void)printerPickerControllerWillPresent:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerWillPresent:")]
		void PrinterPickerControllerWillPresent (UIPrinterPickerController printerPickerController);

		// @optional -(void)printerPickerControllerDidPresent:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerDidPresent:")]
		void PrinterPickerControllerDidPresent (UIPrinterPickerController printerPickerController);

		// @optional -(void)printerPickerControllerWillDismiss:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerWillDismiss:")]
		void PrinterPickerControllerWillDismiss (UIPrinterPickerController printerPickerController);

		// @optional -(void)printerPickerControllerDidDismiss:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerDidDismiss:")]
		void PrinterPickerControllerDidDismiss (UIPrinterPickerController printerPickerController);

		// @optional -(void)printerPickerControllerDidSelectPrinter:(UIPrinterPickerController * _Nonnull)printerPickerController;
		[Export ("printerPickerControllerDidSelectPrinter:")]
		void PrinterPickerControllerDidSelectPrinter (UIPrinterPickerController printerPickerController);
	}

	// @interface UIPrinterPickerController : NSObject
	[NoTV, iOS (8,0)]
	[BaseType (typeof(NSObject))]
	interface UIPrinterPickerController
	{
		// +(UIPrinterPickerController * _Nonnull)printerPickerControllerWithInitiallySelectedPrinter:(UIPrinter * _Nullable)printer;
		[Static]
		[Export ("printerPickerControllerWithInitiallySelectedPrinter:")]
		UIPrinterPickerController PrinterPickerControllerWithInitiallySelectedPrinter ([NullAllowed] UIPrinter printer);

		// @property (readonly, nonatomic) UIPrinter * _Nullable selectedPrinter;
		[NullAllowed, Export ("selectedPrinter")]
		UIPrinter SelectedPrinter { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPrinterPickerControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPrinterPickerControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(int)presentAnimated:(int)animated completionHandler:(UIPrinterPickerCompletionHandler _Nullable)completion;
		[Export ("presentAnimated:completionHandler:")]
		int PresentAnimated (int animated, [NullAllowed] UIPrinterPickerCompletionHandler completion);

		// -(int)presentFromRect:(CGRect)rect inView:(UIView * _Nonnull)view animated:(int)animated completionHandler:(UIPrinterPickerCompletionHandler _Nullable)completion;
		[Export ("presentFromRect:inView:animated:completionHandler:")]
		int PresentFromRect (CGRect rect, UIView view, int animated, [NullAllowed] UIPrinterPickerCompletionHandler completion);

		// -(int)presentFromBarButtonItem:(UIBarButtonItem * _Nonnull)item animated:(int)animated completionHandler:(UIPrinterPickerCompletionHandler _Nullable)completion;
		[Export ("presentFromBarButtonItem:animated:completionHandler:")]
		int PresentFromBarButtonItem (UIBarButtonItem item, int animated, [NullAllowed] UIPrinterPickerCompletionHandler completion);

		// -(void)dismissAnimated:(int)animated;
		[Export ("dismissAnimated:")]
		void DismissAnimated (int animated);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSErrorDomain _Nonnull UIPrintErrorDomain __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIPrintErrorDomain", "__Internal")]
		NSString UIPrintErrorDomain { get; }
	}

	// @interface UIPrintFormatter : NSObject <NSCopying>
	[NoTV, iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UIPrintFormatter : INSCopying
	{
		// @property (readonly, nonatomic, weak) UIPrintPageRenderer * _Nullable printPageRenderer __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("printPageRenderer", ArgumentSemantic.Weak)]
		UIPrintPageRenderer PrintPageRenderer { get; }

		// -(void)removeFromPrintPageRenderer __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("removeFromPrintPageRenderer")]
		void RemoveFromPrintPageRenderer ();

		// @property (nonatomic) CGFloat maximumContentHeight __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("maximumContentHeight")]
		nfloat MaximumContentHeight { get; set; }

		// @property (nonatomic) CGFloat maximumContentWidth __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("maximumContentWidth")]
		nfloat MaximumContentWidth { get; set; }

		// @property (nonatomic) UIEdgeInsets contentInsets __attribute__((availability(ios, introduced=4.2, deprecated=10.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 4, 2)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[NoTV]
		[Export ("contentInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets ContentInsets { get; set; }

		// @property (nonatomic) UIEdgeInsets perPageContentInsets __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("perPageContentInsets", ArgumentSemantic.Assign)]
		UIEdgeInsets PerPageContentInsets { get; set; }

		// @property (nonatomic) NSInteger startPage __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("startPage")]
		nint StartPage { get; set; }

		// @property (readonly, nonatomic) NSInteger pageCount __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("pageCount")]
		nint PageCount { get; }

		// -(CGRect)rectForPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("rectForPageAtIndex:")]
		CGRect RectForPageAtIndex (nint pageIndex);

		// -(void)drawInRect:(CGRect)rect forPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("drawInRect:forPageAtIndex:")]
		void DrawInRect (CGRect rect, nint pageIndex);
	}

	// @interface UISimpleTextPrintFormatter : UIPrintFormatter
	[NoTV, iOS (4,2)]
	[BaseType (typeof(UIPrintFormatter))]
	interface UISimpleTextPrintFormatter
	{
		// -(instancetype _Nonnull)initWithText:(NSString * _Nonnull)text;
		[Export ("initWithText:")]
		IntPtr Constructor (string text);

		// -(instancetype _Nonnull)initWithAttributedText:(NSAttributedString * _Nonnull)attributedText __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("initWithAttributedText:")]
		IntPtr Constructor (NSAttributedString attributedText);

		// @property (copy, nonatomic) NSString * _Nullable text;
		[NullAllowed, Export ("text")]
		string Text { get; set; }

		// @property (copy, nonatomic) NSAttributedString * _Nullable attributedText __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("attributedText", ArgumentSemantic.Copy)]
		NSAttributedString AttributedText { get; set; }

		// @property (nonatomic, strong) UIFont * _Nullable font;
		[NullAllowed, Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable color;
		[NullAllowed, Export ("color", ArgumentSemantic.Strong)]
		UIColor Color { get; set; }

		// @property (nonatomic) NSTextAlignment textAlignment;
		[Export ("textAlignment", ArgumentSemantic.Assign)]
		NSTextAlignment TextAlignment { get; set; }
	}

	// @interface UIMarkupTextPrintFormatter : UIPrintFormatter
	[NoTV, iOS (4,2)]
	[BaseType (typeof(UIPrintFormatter))]
	interface UIMarkupTextPrintFormatter
	{
		// -(instancetype _Nonnull)initWithMarkupText:(NSString * _Nonnull)markupText;
		[Export ("initWithMarkupText:")]
		IntPtr Constructor (string markupText);

		// @property (copy, nonatomic) NSString * _Nullable markupText;
		[NullAllowed, Export ("markupText")]
		string MarkupText { get; set; }
	}

	// @interface UIViewPrintFormatter : UIPrintFormatter
	[NoTV, iOS (4,2)]
	[BaseType (typeof(UIPrintFormatter))]
	interface UIViewPrintFormatter
	{
		// @property (readonly, nonatomic) UIView * _Nonnull view;
		[Export ("view")]
		UIView View { get; }
	}

	// @interface UIPrintFormatter (UIView)
	[Category]
	[BaseType (typeof(UIView))]
	interface UIView_UIPrintFormatter
	{
		// -(UIViewPrintFormatter * _Nonnull)viewPrintFormatter __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("viewPrintFormatter")]
		[Verify (MethodToProperty)]
		UIViewPrintFormatter ViewPrintFormatter { get; }

		// -(void)drawRect:(CGRect)rect forViewPrintFormatter:(UIViewPrintFormatter * _Nonnull)formatter __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("drawRect:forViewPrintFormatter:")]
		void DrawRect (CGRect rect, UIViewPrintFormatter formatter);
	}

	// @interface UIPrintInfo : NSObject <NSCopying, NSCoding>
	[NoTV, iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UIPrintInfo : INSCopying, INSCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// +(UIPrintInfo * _Nonnull)printInfo;
		[Static]
		[Export ("printInfo")]
		[Verify (MethodToProperty)]
		UIPrintInfo PrintInfo { get; }

		// +(UIPrintInfo * _Nonnull)printInfoWithDictionary:(NSDictionary * _Nullable)dictionary;
		[Static]
		[Export ("printInfoWithDictionary:")]
		UIPrintInfo PrintInfoWithDictionary ([NullAllowed] NSDictionary dictionary);

		// @property (copy, nonatomic) NSString * _Nullable printerID;
		[NullAllowed, Export ("printerID")]
		string PrinterID { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull jobName;
		[Export ("jobName")]
		string JobName { get; set; }

		// @property (nonatomic) UIPrintInfoOutputType outputType;
		[Export ("outputType", ArgumentSemantic.Assign)]
		UIPrintInfoOutputType OutputType { get; set; }

		// @property (nonatomic) UIPrintInfoOrientation orientation;
		[Export ("orientation", ArgumentSemantic.Assign)]
		UIPrintInfoOrientation Orientation { get; set; }

		// @property (nonatomic) UIPrintInfoDuplex duplex;
		[Export ("duplex", ArgumentSemantic.Assign)]
		UIPrintInfoDuplex Duplex { get; set; }

		// @property (readonly, nonatomic) NSDictionary * _Nonnull dictionaryRepresentation;
		[Export ("dictionaryRepresentation")]
		NSDictionary DictionaryRepresentation { get; }
	}

	// typedef void (^UIPrintInteractionCompletionHandler)(UIPrintInteractionController * _Nonnull, int, NSError * _Nullable);
	delegate void UIPrintInteractionCompletionHandler (UIPrintInteractionController arg0, int arg1, [NullAllowed] NSError arg2);

	// @interface UIPrintInteractionController : NSObject
	[NoTV, iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UIPrintInteractionController
	{
		// @property (readonly, getter = isPrintingAvailable, nonatomic, class) int printingAvailable;
		[Static]
		[Export ("printingAvailable")]
		int PrintingAvailable { [Bind ("isPrintingAvailable")] get; }

		// @property (readonly, nonatomic, class) NSSet<NSString *> * _Nonnull printableUTIs;
		[Static]
		[Export ("printableUTIs")]
		NSSet<NSString> PrintableUTIs { get; }

		// +(int)canPrintURL:(NSURL * _Nonnull)url;
		[Static]
		[Export ("canPrintURL:")]
		int CanPrintURL (NSUrl url);

		// +(int)canPrintData:(NSData * _Nonnull)data;
		[Static]
		[Export ("canPrintData:")]
		int CanPrintData (NSData data);

		// @property (readonly, nonatomic, class) UIPrintInteractionController * _Nonnull sharedPrintController;
		[Static]
		[Export ("sharedPrintController")]
		UIPrintInteractionController SharedPrintController { get; }

		// @property (nonatomic, strong) UIPrintInfo * _Nullable printInfo;
		[NullAllowed, Export ("printInfo", ArgumentSemantic.Strong)]
		UIPrintInfo PrintInfo { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPrintInteractionControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPrintInteractionControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic) int showsPageRange __attribute__((availability(ios, introduced=4.2, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 4, 2, message: "Pages can be removed from the print preview, so page range is always shown.")]
		[Deprecated (PlatformName.iOS, 10, 0, message: "Pages can be removed from the print preview, so page range is always shown.")]
		[Export ("showsPageRange")]
		int ShowsPageRange { get; set; }

		// @property (nonatomic) int showsNumberOfCopies __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("showsNumberOfCopies")]
		int ShowsNumberOfCopies { get; set; }

		// @property (nonatomic) int showsPaperSelectionForLoadedPapers __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("showsPaperSelectionForLoadedPapers")]
		int ShowsPaperSelectionForLoadedPapers { get; set; }

		// @property (readonly, nonatomic) UIPrintPaper * _Nullable printPaper;
		[NullAllowed, Export ("printPaper")]
		UIPrintPaper PrintPaper { get; }

		// @property (nonatomic, strong) UIPrintPageRenderer * _Nullable printPageRenderer;
		[NullAllowed, Export ("printPageRenderer", ArgumentSemantic.Strong)]
		UIPrintPageRenderer PrintPageRenderer { get; set; }

		// @property (nonatomic, strong) UIPrintFormatter * _Nullable printFormatter;
		[NullAllowed, Export ("printFormatter", ArgumentSemantic.Strong)]
		UIPrintFormatter PrintFormatter { get; set; }

		// @property (copy, nonatomic) id _Nullable printingItem;
		[NullAllowed, Export ("printingItem", ArgumentSemantic.Copy)]
		NSObject PrintingItem { get; set; }

		// @property (copy, nonatomic) NSArray * _Nullable printingItems;
		[NullAllowed, Export ("printingItems", ArgumentSemantic.Copy)]
		[Verify (StronglyTypedNSArray)]
		NSObject[] PrintingItems { get; set; }

		// -(int)presentAnimated:(int)animated completionHandler:(UIPrintInteractionCompletionHandler _Nullable)completion;
		[Export ("presentAnimated:completionHandler:")]
		int PresentAnimated (int animated, [NullAllowed] UIPrintInteractionCompletionHandler completion);

		// -(int)presentFromRect:(CGRect)rect inView:(UIView * _Nonnull)view animated:(int)animated completionHandler:(UIPrintInteractionCompletionHandler _Nullable)completion;
		[Export ("presentFromRect:inView:animated:completionHandler:")]
		int PresentFromRect (CGRect rect, UIView view, int animated, [NullAllowed] UIPrintInteractionCompletionHandler completion);

		// -(int)presentFromBarButtonItem:(UIBarButtonItem * _Nonnull)item animated:(int)animated completionHandler:(UIPrintInteractionCompletionHandler _Nullable)completion;
		[Export ("presentFromBarButtonItem:animated:completionHandler:")]
		int PresentFromBarButtonItem (UIBarButtonItem item, int animated, [NullAllowed] UIPrintInteractionCompletionHandler completion);

		// -(int)printToPrinter:(UIPrinter * _Nonnull)printer completionHandler:(UIPrintInteractionCompletionHandler _Nullable)completion;
		[Export ("printToPrinter:completionHandler:")]
		int PrintToPrinter (UIPrinter printer, [NullAllowed] UIPrintInteractionCompletionHandler completion);

		// -(void)dismissAnimated:(int)animated;
		[Export ("dismissAnimated:")]
		void DismissAnimated (int animated);
	}

	// @protocol UIPrintInteractionControllerDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPrintInteractionControllerDelegate
	{
		// @optional -(UIViewController * _Nullable)printInteractionControllerParentViewController:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerParentViewController:")]
		[return: NullAllowed]
		UIViewController PrintInteractionControllerParentViewController (UIPrintInteractionController printInteractionController);

		// @optional -(UIPrintPaper * _Nonnull)printInteractionController:(UIPrintInteractionController * _Nonnull)printInteractionController choosePaper:(NSArray<UIPrintPaper *> * _Nonnull)paperList;
		[Export ("printInteractionController:choosePaper:")]
		UIPrintPaper PrintInteractionController (UIPrintInteractionController printInteractionController, UIPrintPaper[] paperList);

		// @optional -(void)printInteractionControllerWillPresentPrinterOptions:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerWillPresentPrinterOptions:")]
		void PrintInteractionControllerWillPresentPrinterOptions (UIPrintInteractionController printInteractionController);

		// @optional -(void)printInteractionControllerDidPresentPrinterOptions:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerDidPresentPrinterOptions:")]
		void PrintInteractionControllerDidPresentPrinterOptions (UIPrintInteractionController printInteractionController);

		// @optional -(void)printInteractionControllerWillDismissPrinterOptions:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerWillDismissPrinterOptions:")]
		void PrintInteractionControllerWillDismissPrinterOptions (UIPrintInteractionController printInteractionController);

		// @optional -(void)printInteractionControllerDidDismissPrinterOptions:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerDidDismissPrinterOptions:")]
		void PrintInteractionControllerDidDismissPrinterOptions (UIPrintInteractionController printInteractionController);

		// @optional -(void)printInteractionControllerWillStartJob:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerWillStartJob:")]
		void PrintInteractionControllerWillStartJob (UIPrintInteractionController printInteractionController);

		// @optional -(void)printInteractionControllerDidFinishJob:(UIPrintInteractionController * _Nonnull)printInteractionController;
		[Export ("printInteractionControllerDidFinishJob:")]
		void PrintInteractionControllerDidFinishJob (UIPrintInteractionController printInteractionController);

		// @optional -(CGFloat)printInteractionController:(UIPrintInteractionController * _Nonnull)printInteractionController cutLengthForPaper:(UIPrintPaper * _Nonnull)paper __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("printInteractionController:cutLengthForPaper:")]
		nfloat PrintInteractionController (UIPrintInteractionController printInteractionController, UIPrintPaper paper);

		// @optional -(UIPrinterCutterBehavior)printInteractionController:(UIPrintInteractionController * _Nonnull)printInteractionController chooseCutterBehavior:(NSArray * _Nonnull)availableBehaviors __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("printInteractionController:chooseCutterBehavior:")]
		[Verify (StronglyTypedNSArray)]
		UIPrinterCutterBehavior PrintInteractionController (UIPrintInteractionController printInteractionController, NSObject[] availableBehaviors);
	}

	// @interface UIPrintPageRenderer : NSObject
	[NoTV, iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UIPrintPageRenderer
	{
		// @property (nonatomic) CGFloat headerHeight;
		[Export ("headerHeight")]
		nfloat HeaderHeight { get; set; }

		// @property (nonatomic) CGFloat footerHeight;
		[Export ("footerHeight")]
		nfloat FooterHeight { get; set; }

		// @property (readonly, nonatomic) CGRect paperRect;
		[Export ("paperRect")]
		CGRect PaperRect { get; }

		// @property (readonly, nonatomic) CGRect printableRect;
		[Export ("printableRect")]
		CGRect PrintableRect { get; }

		// @property (readonly, nonatomic) NSInteger numberOfPages;
		[Export ("numberOfPages")]
		nint NumberOfPages { get; }

		// @property (copy, atomic) NSArray<UIPrintFormatter *> * _Nullable printFormatters;
		[NullAllowed, Export ("printFormatters", ArgumentSemantic.Copy)]
		UIPrintFormatter[] PrintFormatters { get; set; }

		// -(NSArray<UIPrintFormatter *> * _Nullable)printFormattersForPageAtIndex:(NSInteger)pageIndex;
		[Export ("printFormattersForPageAtIndex:")]
		[return: NullAllowed]
		UIPrintFormatter[] PrintFormattersForPageAtIndex (nint pageIndex);

		// -(void)addPrintFormatter:(UIPrintFormatter * _Nonnull)formatter startingAtPageAtIndex:(NSInteger)pageIndex;
		[Export ("addPrintFormatter:startingAtPageAtIndex:")]
		void AddPrintFormatter (UIPrintFormatter formatter, nint pageIndex);

		// -(void)prepareForDrawingPages:(NSRange)range;
		[Export ("prepareForDrawingPages:")]
		void PrepareForDrawingPages (NSRange range);

		// -(void)drawPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)printableRect;
		[Export ("drawPageAtIndex:inRect:")]
		void DrawPageAtIndex (nint pageIndex, CGRect printableRect);

		// -(void)drawPrintFormatter:(UIPrintFormatter * _Nonnull)printFormatter forPageAtIndex:(NSInteger)pageIndex;
		[Export ("drawPrintFormatter:forPageAtIndex:")]
		void DrawPrintFormatter (UIPrintFormatter printFormatter, nint pageIndex);

		// -(void)drawHeaderForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)headerRect;
		[Export ("drawHeaderForPageAtIndex:inRect:")]
		void DrawHeaderForPageAtIndex (nint pageIndex, CGRect headerRect);

		// -(void)drawContentForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)contentRect;
		[Export ("drawContentForPageAtIndex:inRect:")]
		void DrawContentForPageAtIndex (nint pageIndex, CGRect contentRect);

		// -(void)drawFooterForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)footerRect;
		[Export ("drawFooterForPageAtIndex:inRect:")]
		void DrawFooterForPageAtIndex (nint pageIndex, CGRect footerRect);
	}

	// @interface UIPrintPaper : NSObject
	[NoTV, iOS (4,2)]
	[BaseType (typeof(NSObject))]
	interface UIPrintPaper
	{
		// +(UIPrintPaper * _Nonnull)bestPaperForPageSize:(CGSize)contentSize withPapersFromArray:(NSArray<UIPrintPaper *> * _Nonnull)paperList;
		[Static]
		[Export ("bestPaperForPageSize:withPapersFromArray:")]
		UIPrintPaper BestPaperForPageSize (CGSize contentSize, UIPrintPaper[] paperList);

		// @property (readonly) CGSize paperSize;
		[Export ("paperSize")]
		CGSize PaperSize { get; }

		// @property (readonly) CGRect printableRect;
		[Export ("printableRect")]
		CGRect PrintableRect { get; }
	}

	// @interface Deprecated_Nonfunctional (UIPrintPaper)
	[Category]
	[BaseType (typeof(UIPrintPaper))]
	interface UIPrintPaper_Deprecated_Nonfunctional
	{
		// -(CGRect)printRect __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("printRect")]
		[Verify (MethodToProperty)]
		CGRect PrintRect { get; }
	}

	// @interface UIProgressView : UIView <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIProgressView : INSCoding
	{
		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithProgressViewStyle:(UIProgressViewStyle)style;
		[Export ("initWithProgressViewStyle:")]
		IntPtr Constructor (UIProgressViewStyle style);

		// @property (nonatomic) UIProgressViewStyle progressViewStyle;
		[Export ("progressViewStyle", ArgumentSemantic.Assign)]
		UIProgressViewStyle ProgressViewStyle { get; set; }

		// @property (nonatomic) float progress;
		[Export ("progress")]
		float Progress { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable progressTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("progressTintColor", ArgumentSemantic.Strong)]
		UIColor ProgressTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable trackTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("trackTintColor", ArgumentSemantic.Strong)]
		UIColor TrackTintColor { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable progressImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("progressImage", ArgumentSemantic.Strong)]
		UIImage ProgressImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable trackImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("trackImage", ArgumentSemantic.Strong)]
		UIImage TrackImage { get; set; }

		// -(void)setProgress:(float)progress animated:(int)animated __attribute__((availability(ios, introduced=5.0)));
		[iOS (5,0)]
		[Export ("setProgress:animated:")]
		void SetProgress (float progress, int animated);

		// @property (nonatomic, strong) NSProgress * _Nullable observedProgress __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("observedProgress", ArgumentSemantic.Strong)]
		NSProgress ObservedProgress { get; set; }
	}

	// @interface UIReferenceLibraryViewController : UIViewController
	[NoTV, iOS (5,0)]
	[BaseType (typeof(UIViewController))]
	[DisableDefaultCtor]
	interface UIReferenceLibraryViewController
	{
		// +(int)dictionaryHasDefinitionForTerm:(NSString * _Nonnull)term;
		[Static]
		[Export ("dictionaryHasDefinitionForTerm:")]
		int DictionaryHasDefinitionForTerm (string term);

		// -(instancetype _Nonnull)initWithTerm:(NSString * _Nonnull)term __attribute__((objc_designated_initializer));
		[Export ("initWithTerm:")]
		[DesignatedInitializer]
		IntPtr Constructor (string term);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);
	}

	// @interface UIRotationGestureRecognizer : UIGestureRecognizer
	[NoTV, iOS (3,2)]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UIRotationGestureRecognizer
	{
		// @property (nonatomic) CGFloat rotation;
		[Export ("rotation")]
		nfloat Rotation { get; set; }

		// @property (readonly, nonatomic) CGFloat velocity;
		[Export ("velocity")]
		nfloat Velocity { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UIScreenDidConnectNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Field ("UIScreenDidConnectNotification", "__Internal")]
		NSString UIScreenDidConnectNotification { get; }

		// extern const NSNotificationName _Nonnull UIScreenDidDisconnectNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Field ("UIScreenDidDisconnectNotification", "__Internal")]
		NSString UIScreenDidDisconnectNotification { get; }

		// extern const NSNotificationName _Nonnull UIScreenModeDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Field ("UIScreenModeDidChangeNotification", "__Internal")]
		NSString UIScreenModeDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIScreenBrightnessDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Field ("UIScreenBrightnessDidChangeNotification", "__Internal")]
		NSString UIScreenBrightnessDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UIScreenCapturedDidChangeNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Field ("UIScreenCapturedDidChangeNotification", "__Internal")]
		NSString UIScreenCapturedDidChangeNotification { get; }
	}

	// @interface UIScreen : NSObject <UITraitEnvironment>
	[iOS (2,0)]
	[BaseType (typeof(NSObject))]
	interface UIScreen : IUITraitEnvironment
	{
		// @property (readonly, nonatomic, class) NSArray<UIScreen *> * _Nonnull screens __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Static]
		[Export ("screens")]
		UIScreen[] Screens { get; }

		// @property (readonly, nonatomic, class) UIScreen * _Nonnull mainScreen;
		[Static]
		[Export ("mainScreen")]
		UIScreen MainScreen { get; }

		// @property (readonly, nonatomic) CGRect bounds;
		[Export ("bounds")]
		CGRect Bounds { get; }

		// @property (readonly, nonatomic) CGFloat scale __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("scale")]
		nfloat Scale { get; }

		// @property (readonly, copy, nonatomic) NSArray<UIScreenMode *> * _Nonnull availableModes __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 2)]
		[Export ("availableModes", ArgumentSemantic.Copy)]
		UIScreenMode[] AvailableModes { get; }

		// @property (readonly, nonatomic, strong) UIScreenMode * _Nullable preferredMode __attribute__((availability(ios, introduced=4.3))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (4, 3)]
		[NullAllowed, Export ("preferredMode", ArgumentSemantic.Strong)]
		UIScreenMode PreferredMode { get; }

		// @property (nonatomic, strong) UIScreenMode * _Nullable currentMode __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[NullAllowed, Export ("currentMode", ArgumentSemantic.Strong)]
		UIScreenMode CurrentMode { get; set; }

		// @property (nonatomic) UIScreenOverscanCompensation overscanCompensation __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("overscanCompensation", ArgumentSemantic.Assign)]
		UIScreenOverscanCompensation OverscanCompensation { get; set; }

		// @property (readonly, nonatomic) UIEdgeInsets overscanCompensationInsets __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("overscanCompensationInsets")]
		UIEdgeInsets OverscanCompensationInsets { get; }

		// @property (readonly, nonatomic, strong) UIScreen * _Nullable mirroredScreen __attribute__((availability(ios, introduced=4.3)));
		[iOS (4, 3)]
		[NullAllowed, Export ("mirroredScreen", ArgumentSemantic.Strong)]
		UIScreen MirroredScreen { get; }

		// @property (readonly, getter = isCaptured, nonatomic) int captured __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("captured")]
		int Captured { [Bind ("isCaptured")] get; }

		// @property (nonatomic) CGFloat brightness __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Export ("brightness")]
		nfloat Brightness { get; set; }

		// @property (nonatomic) int wantsSoftwareDimming __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Export ("wantsSoftwareDimming")]
		int WantsSoftwareDimming { get; set; }

		// @property (readonly) id<UICoordinateSpace> _Nonnull coordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("coordinateSpace")]
		UICoordinateSpace CoordinateSpace { get; }

		// @property (readonly) id<UICoordinateSpace> _Nonnull fixedCoordinateSpace __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("fixedCoordinateSpace")]
		UICoordinateSpace FixedCoordinateSpace { get; }

		// @property (readonly, nonatomic) CGRect nativeBounds __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("nativeBounds")]
		CGRect NativeBounds { get; }

		// @property (readonly, nonatomic) CGFloat nativeScale __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("nativeScale")]
		nfloat NativeScale { get; }

		// -(CADisplayLink * _Nullable)displayLinkWithTarget:(id _Nonnull)target selector:(SEL _Nonnull)sel __attribute__((availability(ios, introduced=4.0)));
		[iOS (4,0)]
		[Export ("displayLinkWithTarget:selector:")]
		[return: NullAllowed]
		CADisplayLink DisplayLinkWithTarget (NSObject target, Selector sel);

		// @property (readonly) NSInteger maximumFramesPerSecond __attribute__((availability(ios, introduced=10.3)));
		[iOS (10, 3)]
		[Export ("maximumFramesPerSecond")]
		nint MaximumFramesPerSecond { get; }

		// @property (readonly, nonatomic) CFTimeInterval calibratedLatency __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("calibratedLatency")]
		double CalibratedLatency { get; }

		// @property (readonly, nonatomic, weak) id<UIFocusItem> _Nullable focusedItem __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("focusedItem", ArgumentSemantic.Weak)]
		UIFocusItem FocusedItem { get; }

		// @property (readonly, nonatomic, weak) UIView * _Nullable focusedView __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[NullAllowed, Export ("focusedView", ArgumentSemantic.Weak)]
		UIView FocusedView { get; }

		// @property (readonly, nonatomic) int supportsFocus __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("supportsFocus")]
		int SupportsFocus { get; }

		// @property (readonly, nonatomic) CGRect applicationFrame __attribute__((availability(ios, introduced=2.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Export ("applicationFrame")]
		CGRect ApplicationFrame { get; }
	}

	// @interface UISnapshotting (UIScreen)
	[Category]
	[BaseType (typeof(UIScreen))]
	interface UIScreen_UISnapshotting
	{
		// -(UIView * _Nonnull)snapshotViewAfterScreenUpdates:(int)afterUpdates __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("snapshotViewAfterScreenUpdates:")]
		UIView SnapshotViewAfterScreenUpdates (int afterUpdates);
	}

	// @interface UIScreenEdgePanGestureRecognizer : UIPanGestureRecognizer
	[NoTV, iOS (7,0)]
	[BaseType (typeof(UIPanGestureRecognizer))]
	interface UIScreenEdgePanGestureRecognizer
	{
		// @property (assign, readwrite, nonatomic) UIRectEdge edges;
		[Export ("edges", ArgumentSemantic.Assign)]
		UIRectEdge Edges { get; set; }
	}

	// @interface UIScreenMode : NSObject
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UIScreenMode
	{
		// @property (readonly, nonatomic) CGSize size;
		[Export ("size")]
		CGSize Size { get; }

		// @property (readonly, nonatomic) CGFloat pixelAspectRatio;
		[Export ("pixelAspectRatio")]
		nfloat PixelAspectRatio { get; }
	}

	// @interface UISearchBar : UIView <UIBarPositioning, UITextInputTraits>
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	[DisableDefaultCtor]
	interface UISearchBar : IUIBarPositioning, IUITextInputTraits
	{
		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer)) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic) UIBarStyle barStyle __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("barStyle", ArgumentSemantic.Assign)]
		UIBarStyle BarStyle { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UISearchBarDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UISearchBarDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable text;
		[NullAllowed, Export ("text")]
		string Text { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable prompt;
		[NullAllowed, Export ("prompt")]
		string Prompt { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable placeholder;
		[NullAllowed, Export ("placeholder")]
		string Placeholder { get; set; }

		// @property (nonatomic) int showsBookmarkButton __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("showsBookmarkButton")]
		int ShowsBookmarkButton { get; set; }

		// @property (nonatomic) int showsCancelButton __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("showsCancelButton")]
		int ShowsCancelButton { get; set; }

		// @property (nonatomic) int showsSearchResultsButton __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 2)]
		[Export ("showsSearchResultsButton")]
		int ShowsSearchResultsButton { get; set; }

		// @property (getter = isSearchResultsButtonSelected, nonatomic) int searchResultsButtonSelected __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 2)]
		[Export ("searchResultsButtonSelected")]
		int SearchResultsButtonSelected { [Bind ("isSearchResultsButtonSelected")] get; set; }

		// -(void)setShowsCancelButton:(int)showsCancelButton animated:(int)animated __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("setShowsCancelButton:animated:")]
		void SetShowsCancelButton (int showsCancelButton, int animated);

		// @property (readonly, nonatomic, strong) UITextInputAssistantItem * _Nonnull inputAssistantItem __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (9, 0)]
		[Export ("inputAssistantItem", ArgumentSemantic.Strong)]
		UITextInputAssistantItem InputAssistantItem { get; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable barTintColor __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[NullAllowed, Export ("barTintColor", ArgumentSemantic.Strong)]
		UIColor BarTintColor { get; set; }

		// @property (nonatomic) UISearchBarStyle searchBarStyle __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("searchBarStyle", ArgumentSemantic.Assign)]
		UISearchBarStyle SearchBarStyle { get; set; }

		// @property (getter = isTranslucent, assign, nonatomic) int translucent __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("translucent")]
		int Translucent { [Bind ("isTranslucent")] get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nullable scopeButtonTitles __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[NullAllowed, Export ("scopeButtonTitles", ArgumentSemantic.Copy)]
		string[] ScopeButtonTitles { get; set; }

		// @property (nonatomic) NSInteger selectedScopeButtonIndex __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("selectedScopeButtonIndex")]
		nint SelectedScopeButtonIndex { get; set; }

		// @property (nonatomic) int showsScopeBar __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("showsScopeBar")]
		int ShowsScopeBar { get; set; }

		// -(void)setShowsScopeBar:(int)show animated:(int)animate __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("setShowsScopeBar:animated:")]
		void SetShowsScopeBar (int show, int animate);

		// @property (readwrite, nonatomic, strong) UIView * _Nullable inputAccessoryView;
		[NullAllowed, Export ("inputAccessoryView", ArgumentSemantic.Strong)]
		UIView InputAccessoryView { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable backgroundImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("backgroundImage", ArgumentSemantic.Strong)]
		UIImage BackgroundImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable scopeBarBackgroundImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("scopeBarBackgroundImage", ArgumentSemantic.Strong)]
		UIImage ScopeBarBackgroundImage { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7,0)]
		[Export ("setBackgroundImage:forBarPosition:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIBarPosition barPosition, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7,0)]
		[Export ("backgroundImageForBarPosition:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForBarPosition (UIBarPosition barPosition, UIBarMetrics barMetrics);

		// -(void)setSearchFieldBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setSearchFieldBackgroundImage:forState:")]
		void SetSearchFieldBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state);

		// -(UIImage * _Nullable)searchFieldBackgroundImageForState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("searchFieldBackgroundImageForState:")]
		[return: NullAllowed]
		UIImage SearchFieldBackgroundImageForState (UIControlState state);

		// -(void)setImage:(UIImage * _Nullable)iconImage forSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setImage:forSearchBarIcon:state:")]
		void SetImage ([NullAllowed] UIImage iconImage, UISearchBarIcon icon, UIControlState state);

		// -(UIImage * _Nullable)imageForSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("imageForSearchBarIcon:state:")]
		[return: NullAllowed]
		UIImage ImageForSearchBarIcon (UISearchBarIcon icon, UIControlState state);

		// -(void)setScopeBarButtonBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setScopeBarButtonBackgroundImage:forState:")]
		void SetScopeBarButtonBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state);

		// -(UIImage * _Nullable)scopeBarButtonBackgroundImageForState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("scopeBarButtonBackgroundImageForState:")]
		[return: NullAllowed]
		UIImage ScopeBarButtonBackgroundImageForState (UIControlState state);

		// -(void)setScopeBarButtonDividerImage:(UIImage * _Nullable)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:")]
		void SetScopeBarButtonDividerImage ([NullAllowed] UIImage dividerImage, UIControlState leftState, UIControlState rightState);

		// -(UIImage * _Nullable)scopeBarButtonDividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:")]
		[return: NullAllowed]
		UIImage ScopeBarButtonDividerImageForLeftSegmentState (UIControlState leftState, UIControlState rightState);

		// -(void)setScopeBarButtonTitleTextAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attributes forState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setScopeBarButtonTitleTextAttributes:forState:")]
		void SetScopeBarButtonTitleTextAttributes ([NullAllowed] NSDictionary<NSString, NSObject> attributes, UIControlState state);

		// -(NSDictionary<NSAttributedStringKey,id> * _Nullable)scopeBarButtonTitleTextAttributesForState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("scopeBarButtonTitleTextAttributesForState:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> ScopeBarButtonTitleTextAttributesForState (UIControlState state);

		// @property (nonatomic) UIOffset searchFieldBackgroundPositionAdjustment __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[Export ("searchFieldBackgroundPositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset SearchFieldBackgroundPositionAdjustment { get; set; }

		// @property (nonatomic) UIOffset searchTextPositionAdjustment __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[Export ("searchTextPositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset SearchTextPositionAdjustment { get; set; }

		// -(void)setPositionAdjustment:(UIOffset)adjustment forSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setPositionAdjustment:forSearchBarIcon:")]
		void SetPositionAdjustment (UIOffset adjustment, UISearchBarIcon icon);

		// -(UIOffset)positionAdjustmentForSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("positionAdjustmentForSearchBarIcon:")]
		UIOffset PositionAdjustmentForSearchBarIcon (UISearchBarIcon icon);
	}

	// @protocol UISearchBarDelegate <UIBarPositioningDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface UISearchBarDelegate : IUIBarPositioningDelegate
	{
		// @optional -(int)searchBarShouldBeginEditing:(UISearchBar * _Nonnull)searchBar;
		[Export ("searchBarShouldBeginEditing:")]
		int SearchBarShouldBeginEditing (UISearchBar searchBar);

		// @optional -(void)searchBarTextDidBeginEditing:(UISearchBar * _Nonnull)searchBar;
		[Export ("searchBarTextDidBeginEditing:")]
		void SearchBarTextDidBeginEditing (UISearchBar searchBar);

		// @optional -(int)searchBarShouldEndEditing:(UISearchBar * _Nonnull)searchBar;
		[Export ("searchBarShouldEndEditing:")]
		int SearchBarShouldEndEditing (UISearchBar searchBar);

		// @optional -(void)searchBarTextDidEndEditing:(UISearchBar * _Nonnull)searchBar;
		[Export ("searchBarTextDidEndEditing:")]
		void SearchBarTextDidEndEditing (UISearchBar searchBar);

		// @optional -(void)searchBar:(UISearchBar * _Nonnull)searchBar textDidChange:(NSString * _Nonnull)searchText;
		[Export ("searchBar:textDidChange:")]
		void SearchBar (UISearchBar searchBar, string searchText);

		// @optional -(int)searchBar:(UISearchBar * _Nonnull)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("searchBar:shouldChangeTextInRange:replacementText:")]
		int SearchBar (UISearchBar searchBar, NSRange range, string text);

		// @optional -(void)searchBarSearchButtonClicked:(UISearchBar * _Nonnull)searchBar;
		[Export ("searchBarSearchButtonClicked:")]
		void SearchBarSearchButtonClicked (UISearchBar searchBar);

		// @optional -(void)searchBarBookmarkButtonClicked:(UISearchBar * _Nonnull)searchBar __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("searchBarBookmarkButtonClicked:")]
		void SearchBarBookmarkButtonClicked (UISearchBar searchBar);

		// @optional -(void)searchBarCancelButtonClicked:(UISearchBar * _Nonnull)searchBar __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("searchBarCancelButtonClicked:")]
		void SearchBarCancelButtonClicked (UISearchBar searchBar);

		// @optional -(void)searchBarResultsListButtonClicked:(UISearchBar * _Nonnull)searchBar __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,2)]
		[Export ("searchBarResultsListButtonClicked:")]
		void SearchBarResultsListButtonClicked (UISearchBar searchBar);

		// @optional -(void)searchBar:(UISearchBar * _Nonnull)searchBar selectedScopeButtonIndexDidChange:(NSInteger)selectedScope __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("searchBar:selectedScopeButtonIndexDidChange:")]
		void SearchBar (UISearchBar searchBar, nint selectedScope);
	}

	// @interface UISearchContainerViewController : UIViewController
	[TV (9,0), NoWatch, iOS (9,1)]
	[BaseType (typeof(UIViewController))]
	interface UISearchContainerViewController
	{
		// @property (readonly, nonatomic, strong) UISearchController * _Nonnull searchController;
		[Export ("searchController", ArgumentSemantic.Strong)]
		UISearchController SearchController { get; }

		// -(instancetype _Nonnull)initWithSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("initWithSearchController:")]
		IntPtr Constructor (UISearchController searchController);
	}

	// @protocol UIViewControllerTransitionCoordinatorContext <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerTransitionCoordinatorContext
	{
		// @required @property (readonly, getter = isAnimated, nonatomic) int animated;
		[Abstract]
		[Export ("animated")]
		int Animated { [Bind ("isAnimated")] get; }

		// @required @property (readonly, nonatomic) UIModalPresentationStyle presentationStyle;
		[Abstract]
		[Export ("presentationStyle")]
		UIModalPresentationStyle PresentationStyle { get; }

		// @required @property (readonly, nonatomic) int initiallyInteractive;
		[Abstract]
		[Export ("initiallyInteractive")]
		int InitiallyInteractive { get; }

		// @required @property (readonly, nonatomic) int isInterruptible __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Abstract]
		[Export ("isInterruptible")]
		int IsInterruptible { get; }

		// @required @property (readonly, getter = isInteractive, nonatomic) int interactive;
		[Abstract]
		[Export ("interactive")]
		int Interactive { [Bind ("isInteractive")] get; }

		// @required @property (readonly, getter = isCancelled, nonatomic) int cancelled;
		[Abstract]
		[Export ("cancelled")]
		int Cancelled { [Bind ("isCancelled")] get; }

		// @required @property (readonly, nonatomic) NSTimeInterval transitionDuration;
		[Abstract]
		[Export ("transitionDuration")]
		double TransitionDuration { get; }

		// @required @property (readonly, nonatomic) CGFloat percentComplete;
		[Abstract]
		[Export ("percentComplete")]
		nfloat PercentComplete { get; }

		// @required @property (readonly, nonatomic) CGFloat completionVelocity;
		[Abstract]
		[Export ("completionVelocity")]
		nfloat CompletionVelocity { get; }

		// @required @property (readonly, nonatomic) UIViewAnimationCurve completionCurve;
		[Abstract]
		[Export ("completionCurve")]
		UIViewAnimationCurve CompletionCurve { get; }

		// @required -(__kindof UIViewController * _Nullable)viewControllerForKey:(UITransitionContextViewControllerKey _Nonnull)key;
		[Abstract]
		[Export ("viewControllerForKey:")]
		UIViewController ViewControllerForKey (string key);

		// @required -(__kindof UIView * _Nullable)viewForKey:(UITransitionContextViewKey _Nonnull)key __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("viewForKey:")]
		UIView ViewForKey (string key);

		// @required @property (readonly, nonatomic) UIView * _Nonnull containerView;
		[Abstract]
		[Export ("containerView")]
		UIView ContainerView { get; }

		// @required @property (readonly, nonatomic) CGAffineTransform targetTransform __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Abstract]
		[Export ("targetTransform")]
		CGAffineTransform TargetTransform { get; }
	}

	// @protocol UIViewControllerTransitionCoordinator <UIViewControllerTransitionCoordinatorContext>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UIViewControllerTransitionCoordinator : IUIViewControllerTransitionCoordinatorContext
	{
		// @required -(int)animateAlongsideTransition:(void (^ _Nullable)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))animation completion:(void (^ _Nullable)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))completion;
		[Abstract]
		[Export ("animateAlongsideTransition:completion:")]
		int AnimateAlongsideTransition ([NullAllowed] Action<UIViewControllerTransitionCoordinatorContext> animation, [NullAllowed] Action<UIViewControllerTransitionCoordinatorContext> completion);

		// @required -(int)animateAlongsideTransitionInView:(UIView * _Nullable)view animation:(void (^ _Nullable)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))animation completion:(void (^ _Nullable)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))completion;
		[Abstract]
		[Export ("animateAlongsideTransitionInView:animation:completion:")]
		int AnimateAlongsideTransitionInView ([NullAllowed] UIView view, [NullAllowed] Action<UIViewControllerTransitionCoordinatorContext> animation, [NullAllowed] Action<UIViewControllerTransitionCoordinatorContext> completion);

		// @required -(void)notifyWhenInteractionEndsUsingBlock:(void (^ _Nonnull)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))handler __attribute__((availability(ios, introduced=7.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[Abstract]
		[Export ("notifyWhenInteractionEndsUsingBlock:")]
		void NotifyWhenInteractionEndsUsingBlock (Action<UIViewControllerTransitionCoordinatorContext> handler);

		// @required -(void)notifyWhenInteractionChangesUsingBlock:(void (^ _Nonnull)(id<UIViewControllerTransitionCoordinatorContext> _Nonnull))handler __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Abstract]
		[Export ("notifyWhenInteractionChangesUsingBlock:")]
		void NotifyWhenInteractionChangesUsingBlock (Action<UIViewControllerTransitionCoordinatorContext> handler);
	}

	// @interface UIViewControllerTransitionCoordinator (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UIViewControllerTransitionCoordinator
	{
		// @property (readonly, nonatomic) id<UIViewControllerTransitionCoordinator> _Nullable transitionCoordinator __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("transitionCoordinator")]
		UIViewControllerTransitionCoordinator TransitionCoordinator { get; }
	}

	// @protocol UIAdaptivePresentationControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIAdaptivePresentationControllerDelegate
	{
		// @optional -(UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller;
		[Export ("adaptivePresentationStyleForPresentationController:")]
		UIModalPresentationStyle AdaptivePresentationStyleForPresentationController (UIPresentationController controller);

		// @optional -(UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection __attribute__((availability(ios, introduced=8.3)));
		[iOS (8,3)]
		[Export ("adaptivePresentationStyleForPresentationController:traitCollection:")]
		UIModalPresentationStyle AdaptivePresentationStyleForPresentationController (UIPresentationController controller, UITraitCollection traitCollection);

		// @optional -(UIViewController * _Nullable)presentationController:(UIPresentationController * _Nonnull)controller viewControllerForAdaptivePresentationStyle:(UIModalPresentationStyle)style;
		[Export ("presentationController:viewControllerForAdaptivePresentationStyle:")]
		[return: NullAllowed]
		UIViewController PresentationController (UIPresentationController controller, UIModalPresentationStyle style);

		// @optional -(void)presentationController:(UIPresentationController * _Nonnull)presentationController willPresentWithAdaptiveStyle:(UIModalPresentationStyle)style transitionCoordinator:(id<UIViewControllerTransitionCoordinator> _Nullable)transitionCoordinator __attribute__((availability(ios, introduced=8.3)));
		[iOS (8,3)]
		[Export ("presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:")]
		void PresentationController (UIPresentationController presentationController, UIModalPresentationStyle style, [NullAllowed] UIViewControllerTransitionCoordinator transitionCoordinator);

		// @optional -(int)presentationControllerShouldDismiss:(UIPresentationController * _Nonnull)presentationController __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("presentationControllerShouldDismiss:")]
		int PresentationControllerShouldDismiss (UIPresentationController presentationController);

		// @optional -(void)presentationControllerWillDismiss:(UIPresentationController * _Nonnull)presentationController __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("presentationControllerWillDismiss:")]
		void PresentationControllerWillDismiss (UIPresentationController presentationController);

		// @optional -(void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("presentationControllerDidDismiss:")]
		void PresentationControllerDidDismiss (UIPresentationController presentationController);

		// @optional -(void)presentationControllerDidAttemptToDismiss:(UIPresentationController * _Nonnull)presentationController __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("presentationControllerDidAttemptToDismiss:")]
		void PresentationControllerDidAttemptToDismiss (UIPresentationController presentationController);
	}

	// @interface UIPresentationController : NSObject <UIAppearanceContainer, UITraitEnvironment, UIContentContainer, UIFocusEnvironment>
	[iOS (8,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIPresentationController : IUIAppearanceContainer, IUITraitEnvironment, IUIContentContainer, IUIFocusEnvironment
	{
		// @property (readonly, nonatomic, strong) UIViewController * _Nonnull presentingViewController;
		[Export ("presentingViewController", ArgumentSemantic.Strong)]
		UIViewController PresentingViewController { get; }

		// @property (readonly, nonatomic, strong) UIViewController * _Nonnull presentedViewController;
		[Export ("presentedViewController", ArgumentSemantic.Strong)]
		UIViewController PresentedViewController { get; }

		// @property (readonly, nonatomic) UIModalPresentationStyle presentationStyle;
		[Export ("presentationStyle")]
		UIModalPresentationStyle PresentationStyle { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nullable containerView;
		[NullAllowed, Export ("containerView", ArgumentSemantic.Strong)]
		UIView ContainerView { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIAdaptivePresentationControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIAdaptivePresentationControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(instancetype _Nonnull)initWithPresentedViewController:(UIViewController * _Nonnull)presentedViewController presentingViewController:(UIViewController * _Nullable)presentingViewController __attribute__((objc_designated_initializer));
		[Export ("initWithPresentedViewController:presentingViewController:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIViewController presentedViewController, [NullAllowed] UIViewController presentingViewController);

		// @property (readonly, nonatomic) UIModalPresentationStyle adaptivePresentationStyle;
		[Export ("adaptivePresentationStyle")]
		UIModalPresentationStyle AdaptivePresentationStyle { get; }

		// -(UIModalPresentationStyle)adaptivePresentationStyleForTraitCollection:(UITraitCollection * _Nonnull)traitCollection __attribute__((availability(ios, introduced=8.3)));
		[iOS (8,3)]
		[Export ("adaptivePresentationStyleForTraitCollection:")]
		UIModalPresentationStyle AdaptivePresentationStyleForTraitCollection (UITraitCollection traitCollection);

		// -(void)containerViewWillLayoutSubviews;
		[Export ("containerViewWillLayoutSubviews")]
		void ContainerViewWillLayoutSubviews ();

		// -(void)containerViewDidLayoutSubviews;
		[Export ("containerViewDidLayoutSubviews")]
		void ContainerViewDidLayoutSubviews ();

		// @property (readonly, nonatomic) UIView * _Nullable presentedView;
		[NullAllowed, Export ("presentedView")]
		UIView PresentedView { get; }

		// @property (readonly, nonatomic) CGRect frameOfPresentedViewInContainerView;
		[Export ("frameOfPresentedViewInContainerView")]
		CGRect FrameOfPresentedViewInContainerView { get; }

		// @property (readonly, nonatomic) int shouldPresentInFullscreen;
		[Export ("shouldPresentInFullscreen")]
		int ShouldPresentInFullscreen { get; }

		// @property (readonly, nonatomic) int shouldRemovePresentersView;
		[Export ("shouldRemovePresentersView")]
		int ShouldRemovePresentersView { get; }

		// -(void)presentationTransitionWillBegin;
		[Export ("presentationTransitionWillBegin")]
		void PresentationTransitionWillBegin ();

		// -(void)presentationTransitionDidEnd:(int)completed;
		[Export ("presentationTransitionDidEnd:")]
		void PresentationTransitionDidEnd (int completed);

		// -(void)dismissalTransitionWillBegin;
		[Export ("dismissalTransitionWillBegin")]
		void DismissalTransitionWillBegin ();

		// -(void)dismissalTransitionDidEnd:(int)completed;
		[Export ("dismissalTransitionDidEnd:")]
		void DismissalTransitionDidEnd (int completed);

		// @property (copy, nonatomic) UITraitCollection * _Nullable overrideTraitCollection;
		[NullAllowed, Export ("overrideTraitCollection", ArgumentSemantic.Copy)]
		UITraitCollection OverrideTraitCollection { get; set; }
	}

	// @protocol UITimingCurveProvider <NSCoding, NSCopying>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UITimingCurveProvider : INSCoding, INSCopying
	{
		// @required @property (readonly, nonatomic) UITimingCurveType timingCurveType;
		[Abstract]
		[Export ("timingCurveType")]
		UITimingCurveType TimingCurveType { get; }

		// @required @property (readonly, nonatomic) UICubicTimingParameters * _Nullable cubicTimingParameters;
		[Abstract]
		[NullAllowed, Export ("cubicTimingParameters")]
		UICubicTimingParameters CubicTimingParameters { get; }

		// @required @property (readonly, nonatomic) UISpringTimingParameters * _Nullable springTimingParameters;
		[Abstract]
		[NullAllowed, Export ("springTimingParameters")]
		UISpringTimingParameters SpringTimingParameters { get; }
	}

	// @interface UICubicTimingParameters : NSObject <UITimingCurveProvider>
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UICubicTimingParameters : IUITimingCurveProvider
	{
		// @property (readonly, nonatomic) UIViewAnimationCurve animationCurve;
		[Export ("animationCurve")]
		UIViewAnimationCurve AnimationCurve { get; }

		// @property (readonly, nonatomic) CGPoint controlPoint1;
		[Export ("controlPoint1")]
		CGPoint ControlPoint1 { get; }

		// @property (readonly, nonatomic) CGPoint controlPoint2;
		[Export ("controlPoint2")]
		CGPoint ControlPoint2 { get; }

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithAnimationCurve:(UIViewAnimationCurve)curve __attribute__((objc_designated_initializer));
		[Export ("initWithAnimationCurve:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIViewAnimationCurve curve);

		// -(instancetype _Nonnull)initWithControlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 __attribute__((objc_designated_initializer));
		[Export ("initWithControlPoint1:controlPoint2:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGPoint point1, CGPoint point2);
	}

	// @interface UISpringTimingParameters : NSObject <UITimingCurveProvider>
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UISpringTimingParameters : IUITimingCurveProvider
	{
		// @property (readonly, nonatomic) CGVector initialVelocity;
		[Export ("initialVelocity")]
		CGVector InitialVelocity { get; }

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithDampingRatio:(CGFloat)ratio initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));
		[Export ("initWithDampingRatio:initialVelocity:")]
		[DesignatedInitializer]
		IntPtr Constructor (nfloat ratio, CGVector velocity);

		// -(instancetype _Nonnull)initWithMass:(CGFloat)mass stiffness:(CGFloat)stiffness damping:(CGFloat)damping initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));
		[Export ("initWithMass:stiffness:damping:initialVelocity:")]
		[DesignatedInitializer]
		IntPtr Constructor (nfloat mass, nfloat stiffness, nfloat damping, CGVector velocity);

		// -(instancetype _Nonnull)initWithDampingRatio:(CGFloat)ratio;
		[Export ("initWithDampingRatio:")]
		IntPtr Constructor (nfloat ratio);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UITransitionContextViewControllerKey _Nonnull UITransitionContextFromViewControllerKey __attribute__((visibility("default"))) __attribute__((swift_name("from"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UITransitionContextFromViewControllerKey", "__Internal")]
		NSString UITransitionContextFromViewControllerKey { get; }

		// extern const UITransitionContextViewControllerKey _Nonnull UITransitionContextToViewControllerKey __attribute__((visibility("default"))) __attribute__((swift_name("to"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("UITransitionContextToViewControllerKey", "__Internal")]
		NSString UITransitionContextToViewControllerKey { get; }

		// extern const UITransitionContextViewKey _Nonnull UITransitionContextFromViewKey __attribute__((visibility("default"))) __attribute__((swift_name("from"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UITransitionContextFromViewKey", "__Internal")]
		NSString UITransitionContextFromViewKey { get; }

		// extern const UITransitionContextViewKey _Nonnull UITransitionContextToViewKey __attribute__((visibility("default"))) __attribute__((swift_name("to"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UITransitionContextToViewKey", "__Internal")]
		NSString UITransitionContextToViewKey { get; }
	}

	// @protocol UIViewControllerContextTransitioning <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerContextTransitioning
	{
		// @required @property (readonly, nonatomic) UIView * _Nonnull containerView;
		[Abstract]
		[Export ("containerView")]
		UIView ContainerView { get; }

		// @required @property (readonly, getter = isAnimated, nonatomic) int animated;
		[Abstract]
		[Export ("animated")]
		int Animated { [Bind ("isAnimated")] get; }

		// @required @property (readonly, getter = isInteractive, nonatomic) int interactive;
		[Abstract]
		[Export ("interactive")]
		int Interactive { [Bind ("isInteractive")] get; }

		// @required @property (readonly, nonatomic) int transitionWasCancelled;
		[Abstract]
		[Export ("transitionWasCancelled")]
		int TransitionWasCancelled { get; }

		// @required @property (readonly, nonatomic) UIModalPresentationStyle presentationStyle;
		[Abstract]
		[Export ("presentationStyle")]
		UIModalPresentationStyle PresentationStyle { get; }

		// @required -(void)updateInteractiveTransition:(CGFloat)percentComplete;
		[Abstract]
		[Export ("updateInteractiveTransition:")]
		void UpdateInteractiveTransition (nfloat percentComplete);

		// @required -(void)finishInteractiveTransition;
		[Abstract]
		[Export ("finishInteractiveTransition")]
		void FinishInteractiveTransition ();

		// @required -(void)cancelInteractiveTransition;
		[Abstract]
		[Export ("cancelInteractiveTransition")]
		void CancelInteractiveTransition ();

		// @required -(void)pauseInteractiveTransition __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Abstract]
		[Export ("pauseInteractiveTransition")]
		void PauseInteractiveTransition ();

		// @required -(void)completeTransition:(int)didComplete;
		[Abstract]
		[Export ("completeTransition:")]
		void CompleteTransition (int didComplete);

		// @required -(__kindof UIViewController * _Nullable)viewControllerForKey:(UITransitionContextViewControllerKey _Nonnull)key;
		[Abstract]
		[Export ("viewControllerForKey:")]
		UIViewController ViewControllerForKey (string key);

		// @required -(__kindof UIView * _Nullable)viewForKey:(UITransitionContextViewKey _Nonnull)key __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Abstract]
		[Export ("viewForKey:")]
		UIView ViewForKey (string key);

		// @required @property (readonly, nonatomic) CGAffineTransform targetTransform __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Abstract]
		[Export ("targetTransform")]
		CGAffineTransform TargetTransform { get; }

		// @required -(CGRect)initialFrameForViewController:(UIViewController * _Nonnull)vc;
		[Abstract]
		[Export ("initialFrameForViewController:")]
		CGRect InitialFrameForViewController (UIViewController vc);

		// @required -(CGRect)finalFrameForViewController:(UIViewController * _Nonnull)vc;
		[Abstract]
		[Export ("finalFrameForViewController:")]
		CGRect FinalFrameForViewController (UIViewController vc);
	}

	// @protocol UIViewControllerAnimatedTransitioning <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerAnimatedTransitioning
	{
		// @required -(NSTimeInterval)transitionDuration:(id<UIViewControllerContextTransitioning> _Nullable)transitionContext;
		[Abstract]
		[Export ("transitionDuration:")]
		double TransitionDuration ([NullAllowed] UIViewControllerContextTransitioning transitionContext);

		// @required -(void)animateTransition:(id<UIViewControllerContextTransitioning> _Nonnull)transitionContext;
		[Abstract]
		[Export ("animateTransition:")]
		void AnimateTransition (UIViewControllerContextTransitioning transitionContext);

		// @optional -(id<UIViewImplicitlyAnimating> _Nonnull)interruptibleAnimatorForTransition:(id<UIViewControllerContextTransitioning> _Nonnull)transitionContext __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("interruptibleAnimatorForTransition:")]
		UIViewImplicitlyAnimating InterruptibleAnimatorForTransition (UIViewControllerContextTransitioning transitionContext);

		// @optional -(void)animationEnded:(int)transitionCompleted;
		[Export ("animationEnded:")]
		void AnimationEnded (int transitionCompleted);
	}

	// @protocol UIViewControllerInteractiveTransitioning <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerInteractiveTransitioning
	{
		// @required -(void)startInteractiveTransition:(id<UIViewControllerContextTransitioning> _Nonnull)transitionContext;
		[Abstract]
		[Export ("startInteractiveTransition:")]
		void StartInteractiveTransition (UIViewControllerContextTransitioning transitionContext);

		// @optional @property (readonly, nonatomic) CGFloat completionSpeed;
		[Export ("completionSpeed")]
		nfloat CompletionSpeed { get; }

		// @optional @property (readonly, nonatomic) UIViewAnimationCurve completionCurve;
		[Export ("completionCurve")]
		UIViewAnimationCurve CompletionCurve { get; }

		// @optional @property (readonly, nonatomic) int wantsInteractiveStart __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("wantsInteractiveStart")]
		int WantsInteractiveStart { get; }
	}

	// @protocol UIViewControllerTransitioningDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIViewControllerTransitioningDelegate
	{
		// @optional -(id<UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source;
		[Export ("animationControllerForPresentedController:presentingController:sourceController:")]
		[return: NullAllowed]
		UIViewControllerAnimatedTransitioning AnimationControllerForPresentedController (UIViewController presented, UIViewController presenting, UIViewController source);

		// @optional -(id<UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed;
		[Export ("animationControllerForDismissedController:")]
		[return: NullAllowed]
		UIViewControllerAnimatedTransitioning AnimationControllerForDismissedController (UIViewController dismissed);

		// @optional -(id<UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForPresentation:(id<UIViewControllerAnimatedTransitioning> _Nonnull)animator;
		[Export ("interactionControllerForPresentation:")]
		[return: NullAllowed]
		UIViewControllerInteractiveTransitioning InteractionControllerForPresentation (UIViewControllerAnimatedTransitioning animator);

		// @optional -(id<UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id<UIViewControllerAnimatedTransitioning> _Nonnull)animator;
		[Export ("interactionControllerForDismissal:")]
		[return: NullAllowed]
		UIViewControllerInteractiveTransitioning InteractionControllerForDismissal (UIViewControllerAnimatedTransitioning animator);

		// @optional -(UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("presentationControllerForPresentedViewController:presentingViewController:sourceViewController:")]
		[return: NullAllowed]
		UIPresentationController PresentationControllerForPresentedViewController (UIViewController presented, [NullAllowed] UIViewController presenting, UIViewController source);
	}

	// @interface UIPercentDrivenInteractiveTransition : NSObject <UIViewControllerInteractiveTransitioning>
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UIPercentDrivenInteractiveTransition : IUIViewControllerInteractiveTransitioning
	{
		// @property (readonly) CGFloat duration;
		[Export ("duration")]
		nfloat Duration { get; }

		// @property (readonly) CGFloat percentComplete;
		[Export ("percentComplete")]
		nfloat PercentComplete { get; }

		// @property (assign, nonatomic) CGFloat completionSpeed;
		[Export ("completionSpeed")]
		nfloat CompletionSpeed { get; set; }

		// @property (assign, nonatomic) UIViewAnimationCurve completionCurve;
		[Export ("completionCurve", ArgumentSemantic.Assign)]
		UIViewAnimationCurve CompletionCurve { get; set; }

		// @property (nonatomic, strong) id<UITimingCurveProvider> _Nullable timingCurve __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[NullAllowed, Export ("timingCurve", ArgumentSemantic.Strong)]
		UITimingCurveProvider TimingCurve { get; set; }

		// @property (nonatomic) int wantsInteractiveStart __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Export ("wantsInteractiveStart")]
		int WantsInteractiveStart { get; set; }

		// -(void)pauseInteractiveTransition __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("pauseInteractiveTransition")]
		void PauseInteractiveTransition ();

		// -(void)updateInteractiveTransition:(CGFloat)percentComplete;
		[Export ("updateInteractiveTransition:")]
		void UpdateInteractiveTransition (nfloat percentComplete);

		// -(void)cancelInteractiveTransition;
		[Export ("cancelInteractiveTransition")]
		void CancelInteractiveTransition ();

		// -(void)finishInteractiveTransition;
		[Export ("finishInteractiveTransition")]
		void FinishInteractiveTransition ();
	}

	// @protocol UISearchControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UISearchControllerDelegate
	{
		// @optional -(void)willPresentSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("willPresentSearchController:")]
		void WillPresentSearchController (UISearchController searchController);

		// @optional -(void)didPresentSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("didPresentSearchController:")]
		void DidPresentSearchController (UISearchController searchController);

		// @optional -(void)willDismissSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("willDismissSearchController:")]
		void WillDismissSearchController (UISearchController searchController);

		// @optional -(void)didDismissSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("didDismissSearchController:")]
		void DidDismissSearchController (UISearchController searchController);

		// @optional -(void)presentSearchController:(UISearchController * _Nonnull)searchController;
		[Export ("presentSearchController:")]
		void PresentSearchController (UISearchController searchController);
	}

	// @protocol UISearchResultsUpdating <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UISearchResultsUpdating
	{
		// @required -(void)updateSearchResultsForSearchController:(UISearchController * _Nonnull)searchController;
		[Abstract]
		[Export ("updateSearchResultsForSearchController:")]
		void UpdateSearchResultsForSearchController (UISearchController searchController);
	}

	// @interface UISearchController : UIViewController <UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning>
	[iOS (8,0)]
	[BaseType (typeof(UIViewController))]
	interface UISearchController : IUIViewControllerTransitioningDelegate, IUIViewControllerAnimatedTransitioning
	{
		// -(instancetype _Nonnull)initWithSearchResultsController:(UIViewController * _Nullable)searchResultsController __attribute__((objc_designated_initializer));
		[Export ("initWithSearchResultsController:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] UIViewController searchResultsController);

		// -(instancetype _Nonnull)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil __attribute__((objc_designated_initializer));
		[Export ("initWithNibName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string nibNameOrNil, [NullAllowed] NSBundle nibBundleOrNil);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic, weak) id<UISearchResultsUpdating> _Nullable searchResultsUpdater;
		[NullAllowed, Export ("searchResultsUpdater", ArgumentSemantic.Weak)]
		UISearchResultsUpdating SearchResultsUpdater { get; set; }

		// @property (getter = isActive, assign, nonatomic) int active;
		[Export ("active")]
		int Active { [Bind ("isActive")] get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UISearchControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UISearchControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) int dimsBackgroundDuringPresentation __attribute__((availability(tvos, unavailable))) __attribute__((availability(ios, introduced=8.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 12, 0)]
		[NoTV]
		[Export ("dimsBackgroundDuringPresentation")]
		int DimsBackgroundDuringPresentation { get; set; }

		// @property (assign, nonatomic) int obscuresBackgroundDuringPresentation __attribute__((availability(ios, introduced=9.1)));
		[iOS (9, 1)]
		[Export ("obscuresBackgroundDuringPresentation")]
		int ObscuresBackgroundDuringPresentation { get; set; }

		// @property (assign, nonatomic) int hidesNavigationBarDuringPresentation;
		[Export ("hidesNavigationBarDuringPresentation")]
		int HidesNavigationBarDuringPresentation { get; set; }

		// @property (readonly, nonatomic, strong) UIViewController * _Nullable searchResultsController;
		[NullAllowed, Export ("searchResultsController", ArgumentSemantic.Strong)]
		UIViewController SearchResultsController { get; }

		// @property (readonly, nonatomic, strong) UISearchBar * _Nonnull searchBar;
		[Export ("searchBar", ArgumentSemantic.Strong)]
		UISearchBar SearchBar { get; }

		// @property (nonatomic) int automaticallyShowsSearchResultsController __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (13, 0)]
		[Export ("automaticallyShowsSearchResultsController")]
		int AutomaticallyShowsSearchResultsController { get; set; }

		// @property (nonatomic) int showsSearchResultsController __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (13, 0)]
		[Export ("showsSearchResultsController")]
		int ShowsSearchResultsController { get; set; }

		// @property (nonatomic) int automaticallyShowsCancelButton __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("automaticallyShowsCancelButton")]
		int AutomaticallyShowsCancelButton { get; set; }

		// @property (nonatomic) int automaticallyShowsScopeBar __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("automaticallyShowsScopeBar")]
		int AutomaticallyShowsScopeBar { get; set; }
	}

	// @interface UISearchDisplayController : NSObject
	[Introduced (PlatformName.iOS, 3, 0, message: "UISearchDisplayController has been replaced with UISearchController")]
	[Deprecated (PlatformName.iOS, 8, 0, message: "UISearchDisplayController has been replaced with UISearchController")]
	[NoTV]
	[BaseType (typeof(NSObject))]
	interface UISearchDisplayController
	{
		// -(instancetype _Nonnull)initWithSearchBar:(UISearchBar * _Nonnull)searchBar contentsController:(UIViewController * _Nonnull)viewController;
		[Export ("initWithSearchBar:contentsController:")]
		IntPtr Constructor (UISearchBar searchBar, UIViewController viewController);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UISearchDisplayDelegate Delegate { get; set; }

		// @property (assign, nonatomic) id<UISearchDisplayDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isActive, nonatomic) int active;
		[Export ("active")]
		int Active { [Bind ("isActive")] get; set; }

		// -(void)setActive:(int)visible animated:(int)animated;
		[Export ("setActive:animated:")]
		void SetActive (int visible, int animated);

		// @property (readonly, nonatomic) UISearchBar * _Nonnull searchBar;
		[Export ("searchBar")]
		UISearchBar SearchBar { get; }

		// @property (readonly, nonatomic) UIViewController * _Nonnull searchContentsController;
		[Export ("searchContentsController")]
		UIViewController SearchContentsController { get; }

		// @property (readonly, nonatomic) UITableView * _Nonnull searchResultsTableView;
		[Export ("searchResultsTableView")]
		UITableView SearchResultsTableView { get; }

		[Wrap ("WeakSearchResultsDataSource")]
		[NullAllowed]
		UITableViewDataSource SearchResultsDataSource { get; set; }

		// @property (nonatomic, weak) id<UITableViewDataSource> _Nullable searchResultsDataSource;
		[NullAllowed, Export ("searchResultsDataSource", ArgumentSemantic.Weak)]
		NSObject WeakSearchResultsDataSource { get; set; }

		[Wrap ("WeakSearchResultsDelegate")]
		[NullAllowed]
		UITableViewDelegate SearchResultsDelegate { get; set; }

		// @property (nonatomic, weak) id<UITableViewDelegate> _Nullable searchResultsDelegate;
		[NullAllowed, Export ("searchResultsDelegate", ArgumentSemantic.Weak)]
		NSObject WeakSearchResultsDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable searchResultsTitle __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[NullAllowed, Export ("searchResultsTitle")]
		string SearchResultsTitle { get; set; }

		// @property (assign, nonatomic) int displaysSearchBarInNavigationBar __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("displaysSearchBarInNavigationBar")]
		int DisplaysSearchBarInNavigationBar { get; set; }

		// @property (readonly, nonatomic) UINavigationItem * _Nullable navigationItem __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("navigationItem")]
		UINavigationItem NavigationItem { get; }
	}

	// @protocol UISearchDisplayDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UISearchDisplayDelegate
	{
		// @optional -(void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController * _Nonnull)controller __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayControllerWillBeginSearch:")]
		void SearchDisplayControllerWillBeginSearch (UISearchDisplayController controller);

		// @optional -(void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController * _Nonnull)controller __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayControllerDidBeginSearch:")]
		void SearchDisplayControllerDidBeginSearch (UISearchDisplayController controller);

		// @optional -(void)searchDisplayControllerWillEndSearch:(UISearchDisplayController * _Nonnull)controller __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayControllerWillEndSearch:")]
		void SearchDisplayControllerWillEndSearch (UISearchDisplayController controller);

		// @optional -(void)searchDisplayControllerDidEndSearch:(UISearchDisplayController * _Nonnull)controller __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayControllerDidEndSearch:")]
		void SearchDisplayControllerDidEndSearch (UISearchDisplayController controller);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller didLoadSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:didLoadSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller willUnloadSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:willUnloadSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller willShowSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:willShowSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller didShowSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:didShowSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller willHideSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:willHideSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(void)searchDisplayController:(UISearchDisplayController * _Nonnull)controller didHideSearchResultsTableView:(UITableView * _Nonnull)tableView __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:didHideSearchResultsTableView:")]
		void SearchDisplayController (UISearchDisplayController controller, UITableView tableView);

		// @optional -(int)searchDisplayController:(UISearchDisplayController * _Nonnull)controller shouldReloadTableForSearchString:(NSString * _Nullable)searchString __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:shouldReloadTableForSearchString:")]
		int SearchDisplayController (UISearchDisplayController controller, [NullAllowed] string searchString);

		// @optional -(int)searchDisplayController:(UISearchDisplayController * _Nonnull)controller shouldReloadTableForSearchScope:(NSInteger)searchOption __attribute__((availability(ios, introduced=3.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 3, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[Export ("searchDisplayController:shouldReloadTableForSearchScope:")]
		int SearchDisplayController (UISearchDisplayController controller, nint searchOption);
	}

	// @interface UISearchTextField : UITextField
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(UITextField))]
	interface UISearchTextField
	{
		// @property (copy, nonatomic) NSArray<UISearchToken *> * _Nonnull tokens;
		[Export ("tokens", ArgumentSemantic.Copy)]
		UISearchToken[] Tokens { get; set; }

		// -(void)insertToken:(UISearchToken * _Nonnull)token atIndex:(NSInteger)tokenIndex;
		[Export ("insertToken:atIndex:")]
		void InsertToken (UISearchToken token, nint tokenIndex);

		// -(void)removeTokenAtIndex:(NSInteger)tokenIndex;
		[Export ("removeTokenAtIndex:")]
		void RemoveTokenAtIndex (nint tokenIndex);

		// -(UITextPosition * _Nonnull)positionOfTokenAtIndex:(NSInteger)tokenIndex;
		[Export ("positionOfTokenAtIndex:")]
		UITextPosition PositionOfTokenAtIndex (nint tokenIndex);

		// -(NSArray<UISearchToken *> * _Nonnull)tokensInRange:(UITextRange * _Nonnull)textRange;
		[Export ("tokensInRange:")]
		UISearchToken[] TokensInRange (UITextRange textRange);

		// @property (readonly, nonatomic) UITextRange * _Nonnull textualRange;
		[Export ("textualRange")]
		UITextRange TextualRange { get; }

		// -(void)replaceTextualPortionOfRange:(UITextRange * _Nonnull)textRange withToken:(UISearchToken * _Nonnull)token atIndex:(NSUInteger)tokenIndex;
		[Export ("replaceTextualPortionOfRange:withToken:atIndex:")]
		void ReplaceTextualPortionOfRange (UITextRange textRange, UISearchToken token, nuint tokenIndex);

		// @property (nonatomic, strong) UIColor * _Null_unspecified tokenBackgroundColor;
		[Export ("tokenBackgroundColor", ArgumentSemantic.Strong)]
		UIColor TokenBackgroundColor { get; set; }

		// @property (nonatomic) int allowsDeletingTokens;
		[Export ("allowsDeletingTokens")]
		int AllowsDeletingTokens { get; set; }

		// @property (nonatomic) int allowsCopyingTokens;
		[Export ("allowsCopyingTokens")]
		int AllowsCopyingTokens { get; set; }
	}

	// @interface UISearchToken : NSObject
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISearchToken
	{
		// +(UISearchToken * _Nonnull)tokenWithIcon:(UIImage * _Nullable)icon text:(NSString * _Nonnull)text;
		[Static]
		[Export ("tokenWithIcon:text:")]
		UISearchToken TokenWithIcon ([NullAllowed] UIImage icon, string text);

		// @property (nonatomic, strong) id _Nullable representedObject;
		[NullAllowed, Export ("representedObject", ArgumentSemantic.Strong)]
		NSObject RepresentedObject { get; set; }
	}

	// @protocol UISearchTextFieldDelegate <UITextFieldDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	interface UISearchTextFieldDelegate : IUITextFieldDelegate
	{
		// @optional -(NSItemProvider * _Nonnull)searchTextField:(UISearchTextField * _Nonnull)searchTextField itemProviderForCopyingToken:(UISearchToken * _Nonnull)token;
		[Export ("searchTextField:itemProviderForCopyingToken:")]
		NSItemProvider ItemProviderForCopyingToken (UISearchTextField searchTextField, UISearchToken token);
	}

	// @protocol UISearchTextFieldPasteItem <UITextPasteItem>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface UISearchTextFieldPasteItem : IUITextPasteItem
	{
		// @required -(void)setSearchTokenResult:(UISearchToken * _Nonnull)token;
		[Abstract]
		[Export ("setSearchTokenResult:")]
		void SetSearchTokenResult (UISearchToken token);
	}

	// @interface UITokenSearch (UISearchBar)
	[Category]
	[BaseType (typeof(UISearchBar))]
	interface UISearchBar_UITokenSearch
	{
		// @property (readonly, nonatomic) UISearchTextField * _Nonnull searchTextField;
		[Export ("searchTextField")]
		UISearchTextField SearchTextField { get; }
	}

	// @interface UISegmentedControl : UIControl <NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UISegmentedControl : INSCoding
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray * _Nullable)items;
		[Export ("initWithItems:")]
		[Verify (StronglyTypedNSArray)]
		IntPtr Constructor ([NullAllowed] NSObject[] items);

		// @property (nonatomic) UISegmentedControlStyle segmentedControlStyle __attribute__((availability(ios, introduced=2.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "The segmentedControlStyle property no longer has any effect")]
		[Deprecated (PlatformName.iOS, 7, 0, message: "The segmentedControlStyle property no longer has any effect")]
		[NoTV]
		[Export ("segmentedControlStyle", ArgumentSemantic.Assign)]
		UISegmentedControlStyle SegmentedControlStyle { get; set; }

		// @property (getter = isMomentary, nonatomic) int momentary;
		[Export ("momentary")]
		int Momentary { [Bind ("isMomentary")] get; set; }

		// @property (readonly, nonatomic) NSUInteger numberOfSegments;
		[Export ("numberOfSegments")]
		nuint NumberOfSegments { get; }

		// @property (nonatomic) int apportionsSegmentWidthsByContent __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("apportionsSegmentWidthsByContent")]
		int ApportionsSegmentWidthsByContent { get; set; }

		// -(void)insertSegmentWithTitle:(NSString * _Nullable)title atIndex:(NSUInteger)segment animated:(int)animated;
		[Export ("insertSegmentWithTitle:atIndex:animated:")]
		void InsertSegmentWithTitle ([NullAllowed] string title, nuint segment, int animated);

		// -(void)insertSegmentWithImage:(UIImage * _Nullable)image atIndex:(NSUInteger)segment animated:(int)animated;
		[Export ("insertSegmentWithImage:atIndex:animated:")]
		void InsertSegmentWithImage ([NullAllowed] UIImage image, nuint segment, int animated);

		// -(void)removeSegmentAtIndex:(NSUInteger)segment animated:(int)animated;
		[Export ("removeSegmentAtIndex:animated:")]
		void RemoveSegmentAtIndex (nuint segment, int animated);

		// -(void)removeAllSegments;
		[Export ("removeAllSegments")]
		void RemoveAllSegments ();

		// -(void)setTitle:(NSString * _Nullable)title forSegmentAtIndex:(NSUInteger)segment;
		[Export ("setTitle:forSegmentAtIndex:")]
		void SetTitle ([NullAllowed] string title, nuint segment);

		// -(NSString * _Nullable)titleForSegmentAtIndex:(NSUInteger)segment;
		[Export ("titleForSegmentAtIndex:")]
		[return: NullAllowed]
		string TitleForSegmentAtIndex (nuint segment);

		// -(void)setImage:(UIImage * _Nullable)image forSegmentAtIndex:(NSUInteger)segment;
		[Export ("setImage:forSegmentAtIndex:")]
		void SetImage ([NullAllowed] UIImage image, nuint segment);

		// -(UIImage * _Nullable)imageForSegmentAtIndex:(NSUInteger)segment;
		[Export ("imageForSegmentAtIndex:")]
		[return: NullAllowed]
		UIImage ImageForSegmentAtIndex (nuint segment);

		// -(void)setWidth:(CGFloat)width forSegmentAtIndex:(NSUInteger)segment;
		[Export ("setWidth:forSegmentAtIndex:")]
		void SetWidth (nfloat width, nuint segment);

		// -(CGFloat)widthForSegmentAtIndex:(NSUInteger)segment;
		[Export ("widthForSegmentAtIndex:")]
		nfloat WidthForSegmentAtIndex (nuint segment);

		// -(void)setContentOffset:(CGSize)offset forSegmentAtIndex:(NSUInteger)segment;
		[Export ("setContentOffset:forSegmentAtIndex:")]
		void SetContentOffset (CGSize offset, nuint segment);

		// -(CGSize)contentOffsetForSegmentAtIndex:(NSUInteger)segment;
		[Export ("contentOffsetForSegmentAtIndex:")]
		CGSize ContentOffsetForSegmentAtIndex (nuint segment);

		// -(void)setEnabled:(int)enabled forSegmentAtIndex:(NSUInteger)segment;
		[Export ("setEnabled:forSegmentAtIndex:")]
		void SetEnabled (int enabled, nuint segment);

		// -(int)isEnabledForSegmentAtIndex:(NSUInteger)segment;
		[Export ("isEnabledForSegmentAtIndex:")]
		int IsEnabledForSegmentAtIndex (nuint segment);

		// @property (nonatomic) NSInteger selectedSegmentIndex;
		[Export ("selectedSegmentIndex")]
		nint SelectedSegmentIndex { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable selectedSegmentTintColor __attribute__((availability(ios, introduced=13.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (13, 0)]
		[NullAllowed, Export ("selectedSegmentTintColor", ArgumentSemantic.Strong)]
		UIColor SelectedSegmentTintColor { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setBackgroundImage:forState:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIControlState state, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("backgroundImageForState:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForState (UIControlState state, UIBarMetrics barMetrics);

		// -(void)setDividerImage:(UIImage * _Nullable)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:")]
		void SetDividerImage ([NullAllowed] UIImage dividerImage, UIControlState leftState, UIControlState rightState, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)dividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("dividerImageForLeftSegmentState:rightSegmentState:barMetrics:")]
		[return: NullAllowed]
		UIImage DividerImageForLeftSegmentState (UIControlState leftState, UIControlState rightState, UIBarMetrics barMetrics);

		// -(void)setTitleTextAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attributes forState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setTitleTextAttributes:forState:")]
		void SetTitleTextAttributes ([NullAllowed] NSDictionary<NSString, NSObject> attributes, UIControlState state);

		// -(NSDictionary<NSAttributedStringKey,id> * _Nullable)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("titleTextAttributesForState:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> TitleTextAttributesForState (UIControlState state);

		// -(void)setContentPositionAdjustment:(UIOffset)adjustment forSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setContentPositionAdjustment:forSegmentType:barMetrics:")]
		void SetContentPositionAdjustment (UIOffset adjustment, UISegmentedControlSegment leftCenterRightOrAlone, UIBarMetrics barMetrics);

		// -(UIOffset)contentPositionAdjustmentForSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("contentPositionAdjustmentForSegmentType:barMetrics:")]
		UIOffset ContentPositionAdjustmentForSegmentType (UISegmentedControlSegment leftCenterRightOrAlone, UIBarMetrics barMetrics);
	}

	// @interface SpringLoading (UISegmentedControl) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UISegmentedControl))]
	interface UISegmentedControl_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @interface UISlider : UIControl <NSCoding>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UISlider : INSCoding
	{
		// @property (nonatomic) float value;
		[Export ("value")]
		float Value { get; set; }

		// @property (nonatomic) float minimumValue;
		[Export ("minimumValue")]
		float MinimumValue { get; set; }

		// @property (nonatomic) float maximumValue;
		[Export ("maximumValue")]
		float MaximumValue { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable minimumValueImage;
		[NullAllowed, Export ("minimumValueImage", ArgumentSemantic.Strong)]
		UIImage MinimumValueImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable maximumValueImage;
		[NullAllowed, Export ("maximumValueImage", ArgumentSemantic.Strong)]
		UIImage MaximumValueImage { get; set; }

		// @property (getter = isContinuous, nonatomic) int continuous;
		[Export ("continuous")]
		int Continuous { [Bind ("isContinuous")] get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable minimumTrackTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("minimumTrackTintColor", ArgumentSemantic.Strong)]
		UIColor MinimumTrackTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable maximumTrackTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("maximumTrackTintColor", ArgumentSemantic.Strong)]
		UIColor MaximumTrackTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable thumbTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("thumbTintColor", ArgumentSemantic.Strong)]
		UIColor ThumbTintColor { get; set; }

		// -(void)setValue:(float)value animated:(int)animated;
		[Export ("setValue:animated:")]
		void SetValue (float value, int animated);

		// -(void)setThumbImage:(UIImage * _Nullable)image forState:(UIControlState)state;
		[Export ("setThumbImage:forState:")]
		void SetThumbImage ([NullAllowed] UIImage image, UIControlState state);

		// -(void)setMinimumTrackImage:(UIImage * _Nullable)image forState:(UIControlState)state;
		[Export ("setMinimumTrackImage:forState:")]
		void SetMinimumTrackImage ([NullAllowed] UIImage image, UIControlState state);

		// -(void)setMaximumTrackImage:(UIImage * _Nullable)image forState:(UIControlState)state;
		[Export ("setMaximumTrackImage:forState:")]
		void SetMaximumTrackImage ([NullAllowed] UIImage image, UIControlState state);

		// -(UIImage * _Nullable)thumbImageForState:(UIControlState)state;
		[Export ("thumbImageForState:")]
		[return: NullAllowed]
		UIImage ThumbImageForState (UIControlState state);

		// -(UIImage * _Nullable)minimumTrackImageForState:(UIControlState)state;
		[Export ("minimumTrackImageForState:")]
		[return: NullAllowed]
		UIImage MinimumTrackImageForState (UIControlState state);

		// -(UIImage * _Nullable)maximumTrackImageForState:(UIControlState)state;
		[Export ("maximumTrackImageForState:")]
		[return: NullAllowed]
		UIImage MaximumTrackImageForState (UIControlState state);

		// @property (readonly, nonatomic) UIImage * _Nullable currentThumbImage;
		[NullAllowed, Export ("currentThumbImage")]
		UIImage CurrentThumbImage { get; }

		// @property (readonly, nonatomic) UIImage * _Nullable currentMinimumTrackImage;
		[NullAllowed, Export ("currentMinimumTrackImage")]
		UIImage CurrentMinimumTrackImage { get; }

		// @property (readonly, nonatomic) UIImage * _Nullable currentMaximumTrackImage;
		[NullAllowed, Export ("currentMaximumTrackImage")]
		UIImage CurrentMaximumTrackImage { get; }

		// -(CGRect)minimumValueImageRectForBounds:(CGRect)bounds;
		[Export ("minimumValueImageRectForBounds:")]
		CGRect MinimumValueImageRectForBounds (CGRect bounds);

		// -(CGRect)maximumValueImageRectForBounds:(CGRect)bounds;
		[Export ("maximumValueImageRectForBounds:")]
		CGRect MaximumValueImageRectForBounds (CGRect bounds);

		// -(CGRect)trackRectForBounds:(CGRect)bounds;
		[Export ("trackRectForBounds:")]
		CGRect TrackRectForBounds (CGRect bounds);

		// -(CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value;
		[Export ("thumbRectForBounds:trackRect:value:")]
		CGRect ThumbRectForBounds (CGRect bounds, CGRect rect, float value);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const CGFloat UISplitViewControllerAutomaticDimension __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Field ("UISplitViewControllerAutomaticDimension", "__Internal")]
		nfloat UISplitViewControllerAutomaticDimension { get; }
	}

	// @interface UISplitViewController : UIViewController
	[iOS (3,2)]
	[BaseType (typeof(UIViewController))]
	interface UISplitViewController
	{
		// @property (copy, nonatomic) NSArray<__kindof UIViewController *> * _Nonnull viewControllers;
		[Export ("viewControllers", ArgumentSemantic.Copy)]
		UIViewController[] ViewControllers { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UISplitViewControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UISplitViewControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic) int presentsWithGesture __attribute__((availability(ios, introduced=5.1)));
		[iOS (5, 1)]
		[Export ("presentsWithGesture")]
		int PresentsWithGesture { get; set; }

		// @property (readonly, getter = isCollapsed, nonatomic) int collapsed __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("collapsed")]
		int Collapsed { [Bind ("isCollapsed")] get; }

		// @property (nonatomic) UISplitViewControllerDisplayMode preferredDisplayMode __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("preferredDisplayMode", ArgumentSemantic.Assign)]
		UISplitViewControllerDisplayMode PreferredDisplayMode { get; set; }

		// @property (readonly, nonatomic) UISplitViewControllerDisplayMode displayMode __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("displayMode")]
		UISplitViewControllerDisplayMode DisplayMode { get; }

		// @property (readonly, nonatomic) UIBarButtonItem * _Nonnull displayModeButtonItem __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("displayModeButtonItem")]
		UIBarButtonItem DisplayModeButtonItem { get; }

		// @property (assign, nonatomic) CGFloat preferredPrimaryColumnWidthFraction __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("preferredPrimaryColumnWidthFraction")]
		nfloat PreferredPrimaryColumnWidthFraction { get; set; }

		// @property (assign, nonatomic) CGFloat minimumPrimaryColumnWidth __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("minimumPrimaryColumnWidth")]
		nfloat MinimumPrimaryColumnWidth { get; set; }

		// @property (assign, nonatomic) CGFloat maximumPrimaryColumnWidth __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("maximumPrimaryColumnWidth")]
		nfloat MaximumPrimaryColumnWidth { get; set; }

		// @property (readonly, nonatomic) CGFloat primaryColumnWidth __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[Export ("primaryColumnWidth")]
		nfloat PrimaryColumnWidth { get; }

		// @property (nonatomic) UISplitViewControllerPrimaryEdge primaryEdge __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11, 0), iOS (11, 0)]
		[Export ("primaryEdge", ArgumentSemantic.Assign)]
		UISplitViewControllerPrimaryEdge PrimaryEdge { get; set; }

		// -(void)showViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("showViewController:sender:")]
		void ShowViewController (UIViewController vc, [NullAllowed] NSObject sender);

		// -(void)showDetailViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("showDetailViewController:sender:")]
		void ShowDetailViewController (UIViewController vc, [NullAllowed] NSObject sender);

		// @property (nonatomic) UISplitViewControllerBackgroundStyle primaryBackgroundStyle __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (13, 0)]
		[Export ("primaryBackgroundStyle", ArgumentSemantic.Assign)]
		UISplitViewControllerBackgroundStyle PrimaryBackgroundStyle { get; set; }
	}

	// @protocol UISplitViewControllerDelegate
	[Protocol, Model (AutoGeneratedName = true)]
	interface UISplitViewControllerDelegate
	{
		// @optional -(void)splitViewController:(UISplitViewController * _Nonnull)svc willChangeToDisplayMode:(UISplitViewControllerDisplayMode)displayMode __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("splitViewController:willChangeToDisplayMode:")]
		void SplitViewController (UISplitViewController svc, UISplitViewControllerDisplayMode displayMode);

		// @optional -(UISplitViewControllerDisplayMode)targetDisplayModeForActionInSplitViewController:(UISplitViewController * _Nonnull)svc __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("targetDisplayModeForActionInSplitViewController:")]
		UISplitViewControllerDisplayMode TargetDisplayModeForActionInSplitViewController (UISplitViewController svc);

		// @optional -(int)splitViewController:(UISplitViewController * _Nonnull)splitViewController showViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("splitViewController:showViewController:sender:")]
		int SplitViewController (UISplitViewController splitViewController, UIViewController vc, [NullAllowed] NSObject sender);

		// @optional -(int)splitViewController:(UISplitViewController * _Nonnull)splitViewController showDetailViewController:(UIViewController * _Nonnull)vc sender:(id _Nullable)sender __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("splitViewController:showDetailViewController:sender:")]
		int SplitViewController (UISplitViewController splitViewController, UIViewController vc, [NullAllowed] NSObject sender);

		// @optional -(UIViewController * _Nullable)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("primaryViewControllerForCollapsingSplitViewController:")]
		[return: NullAllowed]
		UIViewController PrimaryViewControllerForCollapsingSplitViewController (UISplitViewController splitViewController);

		// @optional -(UIViewController * _Nullable)primaryViewControllerForExpandingSplitViewController:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("primaryViewControllerForExpandingSplitViewController:")]
		[return: NullAllowed]
		UIViewController PrimaryViewControllerForExpandingSplitViewController (UISplitViewController splitViewController);

		// @optional -(int)splitViewController:(UISplitViewController * _Nonnull)splitViewController collapseSecondaryViewController:(UIViewController * _Nonnull)secondaryViewController ontoPrimaryViewController:(UIViewController * _Nonnull)primaryViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:")]
		int SplitViewController (UISplitViewController splitViewController, UIViewController secondaryViewController, UIViewController primaryViewController);

		// @optional -(UIViewController * _Nullable)splitViewController:(UISplitViewController * _Nonnull)splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController * _Nonnull)primaryViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("splitViewController:separateSecondaryViewControllerFromPrimaryViewController:")]
		[return: NullAllowed]
		UIViewController SplitViewController (UISplitViewController splitViewController, UIViewController primaryViewController);

		// @optional -(UIInterfaceOrientationMask)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("splitViewControllerSupportedInterfaceOrientations:")]
		UIInterfaceOrientationMask SplitViewControllerSupportedInterfaceOrientations (UISplitViewController splitViewController);

		// @optional -(UIInterfaceOrientation)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("splitViewControllerPreferredInterfaceOrientationForPresentation:")]
		UIInterfaceOrientation SplitViewControllerPreferredInterfaceOrientationForPresentation (UISplitViewController splitViewController);

		// @optional -(void)splitViewController:(UISplitViewController * _Nonnull)svc willHideViewController:(UIViewController * _Nonnull)aViewController withBarButtonItem:(UIBarButtonItem * _Nonnull)barButtonItem forPopoverController:(UIPopoverController * _Nonnull)pc __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead")]
		[NoTV]
		[Export ("splitViewController:willHideViewController:withBarButtonItem:forPopoverController:")]
		void SplitViewController (UISplitViewController svc, UIViewController aViewController, UIBarButtonItem barButtonItem, UIPopoverController pc);

		// @optional -(void)splitViewController:(UISplitViewController * _Nonnull)svc willShowViewController:(UIViewController * _Nonnull)aViewController invalidatingBarButtonItem:(UIBarButtonItem * _Nonnull)barButtonItem __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0, message: "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead")]
		[Deprecated (PlatformName.iOS, 8, 0, message: "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead")]
		[NoTV]
		[Export ("splitViewController:willShowViewController:invalidatingBarButtonItem:")]
		void SplitViewController (UISplitViewController svc, UIViewController aViewController, UIBarButtonItem barButtonItem);

		// @optional -(void)splitViewController:(UISplitViewController * _Nonnull)svc popoverController:(UIPopoverController * _Nonnull)pc willPresentViewController:(UIViewController * _Nonnull)aViewController __attribute__((availability(ios, introduced=2.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Export ("splitViewController:popoverController:willPresentViewController:")]
		void SplitViewController (UISplitViewController svc, UIPopoverController pc, UIViewController aViewController);

		// @optional -(int)splitViewController:(UISplitViewController * _Nonnull)svc shouldHideViewController:(UIViewController * _Nonnull)vc inOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(ios, introduced=5.0, deprecated=8.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[Export ("splitViewController:shouldHideViewController:inOrientation:")]
		int SplitViewController (UISplitViewController svc, UIViewController vc, UIInterfaceOrientation orientation);
	}

	// @interface UISplitViewController (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UISplitViewController
	{
		// @property (readonly, nonatomic, strong) UISplitViewController * _Nullable splitViewController;
		[NullAllowed, Export ("splitViewController", ArgumentSemantic.Strong)]
		UISplitViewController SplitViewController { get; }

		// -(void)collapseSecondaryViewController:(UIViewController * _Nonnull)secondaryViewController forSplitViewController:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("collapseSecondaryViewController:forSplitViewController:")]
		void CollapseSecondaryViewController (UIViewController secondaryViewController, UISplitViewController splitViewController);

		// -(UIViewController * _Nullable)separateSecondaryViewControllerForSplitViewController:(UISplitViewController * _Nonnull)splitViewController __attribute__((availability(ios, introduced=8.0)));
		[iOS (8,0)]
		[Export ("separateSecondaryViewControllerForSplitViewController:")]
		[return: NullAllowed]
		UIViewController SeparateSecondaryViewControllerForSplitViewController (UISplitViewController splitViewController);
	}

	// @interface UIStepper : UIControl
	[NoTV, iOS (5,0)]
	[BaseType (typeof(UIControl))]
	interface UIStepper
	{
		// @property (getter = isContinuous, nonatomic) int continuous;
		[Export ("continuous")]
		int Continuous { [Bind ("isContinuous")] get; set; }

		// @property (nonatomic) int autorepeat;
		[Export ("autorepeat")]
		int Autorepeat { get; set; }

		// @property (nonatomic) int wraps;
		[Export ("wraps")]
		int Wraps { get; set; }

		// @property (nonatomic) double value;
		[Export ("value")]
		double Value { get; set; }

		// @property (nonatomic) double minimumValue;
		[Export ("minimumValue")]
		double MinimumValue { get; set; }

		// @property (nonatomic) double maximumValue;
		[Export ("maximumValue")]
		double MaximumValue { get; set; }

		// @property (nonatomic) double stepValue;
		[Export ("stepValue")]
		double StepValue { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)image forState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setBackgroundImage:forState:")]
		void SetBackgroundImage ([NullAllowed] UIImage image, UIControlState state);

		// -(UIImage * _Nullable)backgroundImageForState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("backgroundImageForState:")]
		[return: NullAllowed]
		UIImage BackgroundImageForState (UIControlState state);

		// -(void)setDividerImage:(UIImage * _Nullable)image forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setDividerImage:forLeftSegmentState:rightSegmentState:")]
		void SetDividerImage ([NullAllowed] UIImage image, UIControlState leftState, UIControlState rightState);

		// -(UIImage * _Nullable)dividerImageForLeftSegmentState:(UIControlState)state rightSegmentState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("dividerImageForLeftSegmentState:rightSegmentState:")]
		[return: NullAllowed]
		UIImage DividerImageForLeftSegmentState (UIControlState state, UIControlState state);

		// -(void)setIncrementImage:(UIImage * _Nullable)image forState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setIncrementImage:forState:")]
		void SetIncrementImage ([NullAllowed] UIImage image, UIControlState state);

		// -(UIImage * _Nullable)incrementImageForState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("incrementImageForState:")]
		[return: NullAllowed]
		UIImage IncrementImageForState (UIControlState state);

		// -(void)setDecrementImage:(UIImage * _Nullable)image forState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setDecrementImage:forState:")]
		void SetDecrementImage ([NullAllowed] UIImage image, UIControlState state);

		// -(UIImage * _Nullable)decrementImageForState:(UIControlState)state __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("decrementImageForState:")]
		[return: NullAllowed]
		UIImage DecrementImageForState (UIControlState state);
	}

	// typedef __kindof UIViewController * _Nullable (^UIStoryboardViewControllerCreator)(NSCoder * _Nonnull);
	delegate UIViewController UIStoryboardViewControllerCreator (NSCoder arg0);

	// @interface UIStoryboard : NSObject
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	interface UIStoryboard
	{
		// +(UIStoryboard * _Nonnull)storyboardWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nullable)storyboardBundleOrNil;
		[Static]
		[Export ("storyboardWithName:bundle:")]
		UIStoryboard StoryboardWithName (string name, [NullAllowed] NSBundle storyboardBundleOrNil);

		// -(__kindof UIViewController * _Nullable)instantiateInitialViewController;
		[Export ("instantiateInitialViewController")]
		[Verify (MethodToProperty)]
		UIViewController InstantiateInitialViewController { get; }

		// -(__kindof UIViewController * _Nullable)instantiateInitialViewControllerWithCreator:(UIStoryboardViewControllerCreator _Nullable)block __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("instantiateInitialViewControllerWithCreator:")]
		UIViewController InstantiateInitialViewControllerWithCreator ([NullAllowed] UIStoryboardViewControllerCreator block);

		// -(__kindof UIViewController * _Nonnull)instantiateViewControllerWithIdentifier:(NSString * _Nonnull)identifier;
		[Export ("instantiateViewControllerWithIdentifier:")]
		UIViewController InstantiateViewControllerWithIdentifier (string identifier);

		// -(__kindof UIViewController * _Nonnull)instantiateViewControllerWithIdentifier:(NSString * _Nonnull)identifier creator:(UIStoryboardViewControllerCreator _Nullable)block __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("instantiateViewControllerWithIdentifier:creator:")]
		UIViewController InstantiateViewControllerWithIdentifier (string identifier, [NullAllowed] UIStoryboardViewControllerCreator block);
	}

	// @interface UIStoryboardSegue : NSObject
	[iOS (5,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIStoryboardSegue
	{
		// +(instancetype _Nonnull)segueWithIdentifier:(NSString * _Nullable)identifier source:(UIViewController * _Nonnull)source destination:(UIViewController * _Nonnull)destination performHandler:(void (^ _Nonnull)(void))performHandler __attribute__((availability(ios, introduced=6.0)));
		[iOS (6,0)]
		[Static]
		[Export ("segueWithIdentifier:source:destination:performHandler:")]
		UIStoryboardSegue SegueWithIdentifier ([NullAllowed] string identifier, UIViewController source, UIViewController destination, Action performHandler);

		// -(instancetype _Nonnull)initWithIdentifier:(NSString * _Nullable)identifier source:(UIViewController * _Nonnull)source destination:(UIViewController * _Nonnull)destination __attribute__((objc_designated_initializer));
		[Export ("initWithIdentifier:source:destination:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string identifier, UIViewController source, UIViewController destination);

		// @property (readonly, copy, nonatomic) NSString * _Nullable identifier;
		[NullAllowed, Export ("identifier")]
		string Identifier { get; }

		// @property (readonly, nonatomic) __kindof UIViewController * _Nonnull sourceViewController;
		[Export ("sourceViewController")]
		UIViewController SourceViewController { get; }

		// @property (readonly, nonatomic) __kindof UIViewController * _Nonnull destinationViewController;
		[Export ("destinationViewController")]
		UIViewController DestinationViewController { get; }

		// -(void)perform;
		[Export ("perform")]
		void Perform ();
	}

	// @interface UIStoryboardUnwindSegueSource : NSObject
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIStoryboardUnwindSegueSource
	{
		// @property (readonly) UIViewController * _Nonnull sourceViewController;
		[Export ("sourceViewController")]
		UIViewController SourceViewController { get; }

		// @property (readonly) SEL _Nonnull unwindAction;
		[Export ("unwindAction")]
		Selector UnwindAction { get; }

		// @property (readonly) id _Nullable sender;
		[NullAllowed, Export ("sender")]
		NSObject Sender { get; }
	}

	// @interface UIStoryboardPopoverSegue : UIStoryboardSegue
	[Introduced (PlatformName.iOS, 5, 0, message: "Access destinationViewController.popoverPresentationController from your segue's performHandler or override of -perform")]
	[Deprecated (PlatformName.iOS, 9, 0, message: "Access destinationViewController.popoverPresentationController from your segue's performHandler or override of -perform")]
	[BaseType (typeof(UIStoryboardSegue))]
	interface UIStoryboardPopoverSegue
	{
		// @property (readonly, nonatomic, strong) UIPopoverController * _Nonnull popoverController;
		[Export ("popoverController", ArgumentSemantic.Strong)]
		UIPopoverController PopoverController { get; }
	}

	// @interface UISwitch : UIControl <NSCoding>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UIControl))]
	interface UISwitch : INSCoding
	{
		// @property (nonatomic, strong) UIColor * _Nullable onTintColor __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("onTintColor", ArgumentSemantic.Strong)]
		UIColor OnTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable thumbTintColor __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("thumbTintColor", ArgumentSemantic.Strong)]
		UIColor ThumbTintColor { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable onImage __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("onImage", ArgumentSemantic.Strong)]
		UIImage OnImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable offImage __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("offImage", ArgumentSemantic.Strong)]
		UIImage OffImage { get; set; }

		// @property (getter = isOn, nonatomic) int on;
		[Export ("on")]
		int On { [Bind ("isOn")] get; set; }

		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(void)setOn:(int)on animated:(int)animated;
		[Export ("setOn:animated:")]
		void SetOn (int on, int animated);
	}

	// @interface UITabBar : UIView
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UITabBar
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITabBarDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITabBarDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSArray<UITabBarItem *> * _Nullable items;
		[NullAllowed, Export ("items", ArgumentSemantic.Copy)]
		UITabBarItem[] Items { get; set; }

		// @property (nonatomic, weak) UITabBarItem * _Nullable selectedItem;
		[NullAllowed, Export ("selectedItem", ArgumentSemantic.Weak)]
		UITabBarItem SelectedItem { get; set; }

		// -(void)setItems:(NSArray<UITabBarItem *> * _Nullable)items animated:(int)animated;
		[Export ("setItems:animated:")]
		void SetItems ([NullAllowed] UITabBarItem[] items, int animated);

		// -(void)beginCustomizingItems:(NSArray<UITabBarItem *> * _Nonnull)items __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("beginCustomizingItems:")]
		void BeginCustomizingItems (UITabBarItem[] items);

		// -(int)endCustomizingAnimated:(int)animated __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("endCustomizingAnimated:")]
		int EndCustomizingAnimated (int animated);

		// @property (readonly, getter = isCustomizing, nonatomic) int customizing __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("customizing")]
		int Customizing { [Bind ("isCustomizing")] get; }

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable barTintColor __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[NullAllowed, Export ("barTintColor", ArgumentSemantic.Strong)]
		UIColor BarTintColor { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable unselectedItemTintColor __attribute__((availability(ios, introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (10, 0)]
		[NullAllowed, Export ("unselectedItemTintColor", ArgumentSemantic.Copy)]
		UIColor UnselectedItemTintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable selectedImageTintColor __attribute__((availability(ios, introduced=5.0, deprecated=8.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NoTV]
		[NullAllowed, Export ("selectedImageTintColor", ArgumentSemantic.Strong)]
		UIColor SelectedImageTintColor { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable backgroundImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("backgroundImage", ArgumentSemantic.Strong)]
		UIImage BackgroundImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable selectionIndicatorImage __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[NullAllowed, Export ("selectionIndicatorImage", ArgumentSemantic.Strong)]
		UIImage SelectionIndicatorImage { get; set; }

		// @property (nonatomic, strong) UIImage * _Nullable shadowImage __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6, 0)]
		[NullAllowed, Export ("shadowImage", ArgumentSemantic.Strong)]
		UIImage ShadowImage { get; set; }

		// @property (nonatomic) UITabBarItemPositioning itemPositioning __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("itemPositioning", ArgumentSemantic.Assign)]
		UITabBarItemPositioning ItemPositioning { get; set; }

		// @property (nonatomic) CGFloat itemWidth __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[Export ("itemWidth")]
		nfloat ItemWidth { get; set; }

		// @property (nonatomic) CGFloat itemSpacing __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[Export ("itemSpacing")]
		nfloat ItemSpacing { get; set; }

		// @property (nonatomic) UIBarStyle barStyle __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Export ("barStyle", ArgumentSemantic.Assign)]
		UIBarStyle BarStyle { get; set; }

		// @property (getter = isTranslucent, nonatomic) int translucent __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("translucent")]
		int Translucent { [Bind ("isTranslucent")] get; set; }

		// @property (readwrite, copy, nonatomic) UITabBarAppearance * _Nonnull standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[Export ("standardAppearance", ArgumentSemantic.Copy)]
		UITabBarAppearance StandardAppearance { get; set; }

		// @property (readonly, nonatomic, strong) UIView * _Nonnull leadingAccessoryView __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, NoiOS]
		[Export ("leadingAccessoryView", ArgumentSemantic.Strong)]
		UIView LeadingAccessoryView { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nonnull trailingAccessoryView __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, NoiOS]
		[Export ("trailingAccessoryView", ArgumentSemantic.Strong)]
		UIView TrailingAccessoryView { get; }
	}

	// @protocol UITabBarDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITabBarDelegate
	{
		// @optional -(void)tabBar:(UITabBar * _Nonnull)tabBar didSelectItem:(UITabBarItem * _Nonnull)item;
		[Export ("tabBar:didSelectItem:")]
		void DidSelectItem (UITabBar tabBar, UITabBarItem item);

		// @optional -(void)tabBar:(UITabBar * _Nonnull)tabBar willBeginCustomizingItems:(NSArray<UITabBarItem *> * _Nonnull)items __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tabBar:willBeginCustomizingItems:")]
		void WillBeginCustomizingItems (UITabBar tabBar, UITabBarItem[] items);

		// @optional -(void)tabBar:(UITabBar * _Nonnull)tabBar didBeginCustomizingItems:(NSArray<UITabBarItem *> * _Nonnull)items __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tabBar:didBeginCustomizingItems:")]
		void DidBeginCustomizingItems (UITabBar tabBar, UITabBarItem[] items);

		// @optional -(void)tabBar:(UITabBar * _Nonnull)tabBar willEndCustomizingItems:(NSArray<UITabBarItem *> * _Nonnull)items changed:(int)changed __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tabBar:willEndCustomizingItems:changed:")]
		void WillEndCustomizingItems (UITabBar tabBar, UITabBarItem[] items, int changed);

		// @optional -(void)tabBar:(UITabBar * _Nonnull)tabBar didEndCustomizingItems:(NSArray<UITabBarItem *> * _Nonnull)items changed:(int)changed __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tabBar:didEndCustomizingItems:changed:")]
		void DidEndCustomizingItems (UITabBar tabBar, UITabBarItem[] items, int changed);
	}

	// @interface SpringLoading (UITabBar) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UITabBar))]
	interface UITabBar_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @interface UITabBarController : UIViewController <UITabBarDelegate, NSCoding>
	[iOS (2,0)]
	[BaseType (typeof(UIViewController))]
	interface UITabBarController : IUITabBarDelegate, INSCoding
	{
		// @property (copy, nonatomic) NSArray<__kindof UIViewController *> * _Nullable viewControllers;
		[NullAllowed, Export ("viewControllers", ArgumentSemantic.Copy)]
		UIViewController[] ViewControllers { get; set; }

		// -(void)setViewControllers:(NSArray<__kindof UIViewController *> * _Nullable)viewControllers animated:(int)animated;
		[Export ("setViewControllers:animated:")]
		void SetViewControllers ([NullAllowed] UIViewController[] viewControllers, int animated);

		// @property (assign, nonatomic) __kindof UIViewController * _Nullable selectedViewController;
		[Export ("selectedViewController", ArgumentSemantic.Assign)]
		UIViewController SelectedViewController { get; set; }

		// @property (nonatomic) NSUInteger selectedIndex;
		[Export ("selectedIndex")]
		nuint SelectedIndex { get; set; }

		// @property (readonly, nonatomic) UINavigationController * _Nonnull moreNavigationController __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("moreNavigationController")]
		UINavigationController MoreNavigationController { get; }

		// @property (copy, nonatomic) NSArray<__kindof UIViewController *> * _Nullable customizableViewControllers __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("customizableViewControllers", ArgumentSemantic.Copy)]
		UIViewController[] CustomizableViewControllers { get; set; }

		// @property (readonly, nonatomic) UITabBar * _Nonnull tabBar __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("tabBar")]
		UITabBar TabBar { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITabBarControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITabBarControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @protocol UITabBarControllerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITabBarControllerDelegate
	{
		// @optional -(int)tabBarController:(UITabBarController * _Nonnull)tabBarController shouldSelectViewController:(UIViewController * _Nonnull)viewController __attribute__((availability(ios, introduced=3.0)));
		[iOS (3,0)]
		[Export ("tabBarController:shouldSelectViewController:")]
		int TabBarController (UITabBarController tabBarController, UIViewController viewController);

		// @optional -(void)tabBarController:(UITabBarController * _Nonnull)tabBarController didSelectViewController:(UIViewController * _Nonnull)viewController;
		[Export ("tabBarController:didSelectViewController:")]
		void TabBarController (UITabBarController tabBarController, UIViewController viewController);

		// @optional -(void)tabBarController:(UITabBarController * _Nonnull)tabBarController willBeginCustomizingViewControllers:(NSArray<__kindof UIViewController *> * _Nonnull)viewControllers __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("tabBarController:willBeginCustomizingViewControllers:")]
		void TabBarController (UITabBarController tabBarController, UIViewController[] viewControllers);

		// @optional -(void)tabBarController:(UITabBarController * _Nonnull)tabBarController willEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> * _Nonnull)viewControllers changed:(int)changed __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3,0)]
		[Export ("tabBarController:willEndCustomizingViewControllers:changed:")]
		void TabBarController (UITabBarController tabBarController, UIViewController[] viewControllers, int changed);

		// @optional -(void)tabBarController:(UITabBarController * _Nonnull)tabBarController didEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> * _Nonnull)viewControllers changed:(int)changed __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("tabBarController:didEndCustomizingViewControllers:changed:")]
		void TabBarController (UITabBarController tabBarController, UIViewController[] viewControllers, int changed);

		// @optional -(UIInterfaceOrientationMask)tabBarControllerSupportedInterfaceOrientations:(UITabBarController * _Nonnull)tabBarController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("tabBarControllerSupportedInterfaceOrientations:")]
		UIInterfaceOrientationMask TabBarControllerSupportedInterfaceOrientations (UITabBarController tabBarController);

		// @optional -(UIInterfaceOrientation)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController * _Nonnull)tabBarController __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7,0)]
		[Export ("tabBarControllerPreferredInterfaceOrientationForPresentation:")]
		UIInterfaceOrientation TabBarControllerPreferredInterfaceOrientationForPresentation (UITabBarController tabBarController);

		// @optional -(id<UIViewControllerInteractiveTransitioning> _Nullable)tabBarController:(UITabBarController * _Nonnull)tabBarController interactionControllerForAnimationController:(id<UIViewControllerAnimatedTransitioning> _Nonnull)animationController __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tabBarController:interactionControllerForAnimationController:")]
		[return: NullAllowed]
		UIViewControllerInteractiveTransitioning TabBarController (UITabBarController tabBarController, UIViewControllerAnimatedTransitioning animationController);

		// @optional -(id<UIViewControllerAnimatedTransitioning> _Nullable)tabBarController:(UITabBarController * _Nonnull)tabBarController animationControllerForTransitionFromViewController:(UIViewController * _Nonnull)fromVC toViewController:(UIViewController * _Nonnull)toVC __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("tabBarController:animationControllerForTransitionFromViewController:toViewController:")]
		[return: NullAllowed]
		UIViewControllerAnimatedTransitioning TabBarController (UITabBarController tabBarController, UIViewController fromVC, UIViewController toVC);
	}

	// @interface UITabBarControllerItem (UIViewController)
	[Category]
	[BaseType (typeof(UIViewController))]
	interface UIViewController_UITabBarControllerItem
	{
		// @property (nonatomic, strong) UITabBarItem * _Null_unspecified tabBarItem;
		[Export ("tabBarItem", ArgumentSemantic.Strong)]
		UITabBarItem TabBarItem { get; set; }

		// @property (readonly, nonatomic, strong) UITabBarController * _Nullable tabBarController;
		[NullAllowed, Export ("tabBarController", ArgumentSemantic.Strong)]
		UITabBarController TabBarController { get; }

		// @property (nonatomic, strong) UIScrollView * _Nullable tabBarObservedScrollView __attribute__((availability(tvos, introduced=13.0))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable)));
		[TV (13, 0), NoWatch, NoiOS]
		[NullAllowed, Export ("tabBarObservedScrollView", ArgumentSemantic.Strong)]
		UIScrollView TabBarObservedScrollView { get; set; }
	}

	// @interface UITabBarItem : UIBarItem
	[iOS (2,0)]
	[BaseType (typeof(UIBarItem))]
	interface UITabBarItem
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nullable)title image:(UIImage * _Nullable)image tag:(NSInteger)tag;
		[Export ("initWithTitle:image:tag:")]
		IntPtr Constructor ([NullAllowed] string title, [NullAllowed] UIImage image, nint tag);

		// -(instancetype _Nonnull)initWithTitle:(NSString * _Nullable)title image:(UIImage * _Nullable)image selectedImage:(UIImage * _Nullable)selectedImage __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("initWithTitle:image:selectedImage:")]
		IntPtr Constructor ([NullAllowed] string title, [NullAllowed] UIImage image, [NullAllowed] UIImage selectedImage);

		// -(instancetype _Nonnull)initWithTabBarSystemItem:(UITabBarSystemItem)systemItem tag:(NSInteger)tag;
		[Export ("initWithTabBarSystemItem:tag:")]
		IntPtr Constructor (UITabBarSystemItem systemItem, nint tag);

		// @property (nonatomic, strong) UIImage * _Nullable selectedImage __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("selectedImage", ArgumentSemantic.Strong)]
		UIImage SelectedImage { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable badgeValue;
		[NullAllowed, Export ("badgeValue")]
		string BadgeValue { get; set; }

		// -(void)setFinishedSelectedImage:(UIImage * _Nullable)selectedImage withFinishedUnselectedImage:(UIImage * _Nullable)unselectedImage __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0, message: "Use initWithTitle:image:selectedImage: or the image and selectedImage properties along with UIImageRenderingModeAlwaysOriginal")]
		[Deprecated (PlatformName.iOS, 7, 0, message: "Use initWithTitle:image:selectedImage: or the image and selectedImage properties along with UIImageRenderingModeAlwaysOriginal")]
		[NoTV]
		[Export ("setFinishedSelectedImage:withFinishedUnselectedImage:")]
		void SetFinishedSelectedImage ([NullAllowed] UIImage selectedImage, [NullAllowed] UIImage unselectedImage);

		// -(UIImage * _Nullable)finishedSelectedImage __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[NullAllowed, Export ("finishedSelectedImage")]
		[Verify (MethodToProperty)]
		UIImage FinishedSelectedImage { get; }

		// -(UIImage * _Nullable)finishedUnselectedImage __attribute__((availability(ios, introduced=5.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 5, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[NullAllowed, Export ("finishedUnselectedImage")]
		[Verify (MethodToProperty)]
		UIImage FinishedUnselectedImage { get; }

		// @property (assign, readwrite, nonatomic) UIOffset titlePositionAdjustment __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5, 0)]
		[Export ("titlePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset TitlePositionAdjustment { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable badgeColor __attribute__((availability(ios, introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (10, 0)]
		[NullAllowed, Export ("badgeColor", ArgumentSemantic.Copy)]
		UIColor BadgeColor { get; set; }

		// -(void)setBadgeTextAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)textAttributes forState:(UIControlState)state __attribute__((availability(ios, introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (10,0)]
		[Export ("setBadgeTextAttributes:forState:")]
		void SetBadgeTextAttributes ([NullAllowed] NSDictionary<NSString, NSObject> textAttributes, UIControlState state);

		// -(NSDictionary<NSAttributedStringKey,id> * _Nullable)badgeTextAttributesForState:(UIControlState)state __attribute__((availability(ios, introduced=10.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (10,0)]
		[Export ("badgeTextAttributesForState:")]
		[return: NullAllowed]
		NSDictionary<NSString, NSObject> BadgeTextAttributesForState (UIControlState state);

		// @property (readwrite, copy, nonatomic) UITabBarAppearance * _Nullable standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, introduced=13.0)));
		[TV (13, 0), iOS (13, 0)]
		[NullAllowed, Export ("standardAppearance", ArgumentSemantic.Copy)]
		UITabBarAppearance StandardAppearance { get; set; }
	}

	// @interface SpringLoading (UITabBarItem) <UISpringLoadedInteractionSupporting>
	[Category]
	[BaseType (typeof(UITabBarItem))]
	interface UITabBarItem_SpringLoading : IUISpringLoadedInteractionSupporting
	{
	}

	// @interface UITableViewHeaderFooterView : UIView
	[iOS (6,0)]
	[BaseType (typeof(UIView))]
	interface UITableViewHeaderFooterView
	{
		// -(instancetype _Nonnull)initWithReuseIdentifier:(NSString * _Nullable)reuseIdentifier __attribute__((objc_designated_initializer));
		[Export ("initWithReuseIdentifier:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string reuseIdentifier);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic, strong) UILabel * _Nullable textLabel;
		[NullAllowed, Export ("textLabel", ArgumentSemantic.Strong)]
		UILabel TextLabel { get; }

		// @property (readonly, nonatomic, strong) UILabel * _Nullable detailTextLabel;
		[NullAllowed, Export ("detailTextLabel", ArgumentSemantic.Strong)]
		UILabel DetailTextLabel { get; }

		// @property (readonly, nonatomic, strong) UIView * _Nonnull contentView;
		[Export ("contentView", ArgumentSemantic.Strong)]
		UIView ContentView { get; }

		// @property (nonatomic, strong) UIView * _Nullable backgroundView;
		[NullAllowed, Export ("backgroundView", ArgumentSemantic.Strong)]
		UIView BackgroundView { get; set; }

		// @property (readonly, copy, nonatomic) NSString * _Nullable reuseIdentifier;
		[NullAllowed, Export ("reuseIdentifier")]
		string ReuseIdentifier { get; }

		// -(void)prepareForReuse __attribute__((objc_requires_super));
		[Export ("prepareForReuse")]
		[RequiresSuper]
		void PrepareForReuse ();
	}

	// @interface UITableViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
	[iOS (2,0)]
	[BaseType (typeof(UIViewController))]
	interface UITableViewController : IUITableViewDelegate, IUITableViewDataSource
	{
		// -(instancetype _Nonnull)initWithStyle:(UITableViewStyle)style __attribute__((objc_designated_initializer));
		[Export ("initWithStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (UITableViewStyle style);

		// -(instancetype _Nonnull)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil __attribute__((objc_designated_initializer));
		[Export ("initWithNibName:bundle:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string nibNameOrNil, [NullAllowed] NSBundle nibBundleOrNil);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (nonatomic, strong) UITableView * _Null_unspecified tableView;
		[Export ("tableView", ArgumentSemantic.Strong)]
		UITableView TableView { get; set; }

		// @property (nonatomic) int clearsSelectionOnViewWillAppear __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("clearsSelectionOnViewWillAppear")]
		int ClearsSelectionOnViewWillAppear { get; set; }

		// @property (nonatomic, strong) UIRefreshControl * _Nullable refreshControl __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[NullAllowed, Export ("refreshControl", ArgumentSemantic.Strong)]
		UIRefreshControl RefreshControl { get; set; }
	}

	// @interface UITextChecker : NSObject
	[iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UITextChecker
	{
		// -(NSRange)rangeOfMisspelledWordInString:(NSString * _Nonnull)stringToCheck range:(NSRange)range startingAt:(NSInteger)startingOffset wrap:(int)wrapFlag language:(NSString * _Nonnull)language;
		[Export ("rangeOfMisspelledWordInString:range:startingAt:wrap:language:")]
		NSRange RangeOfMisspelledWordInString (string stringToCheck, NSRange range, nint startingOffset, int wrapFlag, string language);

		// -(NSArray<NSString *> * _Nullable)guessesForWordRange:(NSRange)range inString:(NSString * _Nonnull)string language:(NSString * _Nonnull)language;
		[Export ("guessesForWordRange:inString:language:")]
		[return: NullAllowed]
		string[] GuessesForWordRange (NSRange range, string @string, string language);

		// -(NSArray<NSString *> * _Nullable)completionsForPartialWordRange:(NSRange)range inString:(NSString * _Nonnull)string language:(NSString * _Nonnull)language;
		[Export ("completionsForPartialWordRange:inString:language:")]
		[return: NullAllowed]
		string[] CompletionsForPartialWordRange (NSRange range, string @string, string language);

		// -(void)ignoreWord:(NSString * _Nonnull)wordToIgnore;
		[Export ("ignoreWord:")]
		void IgnoreWord (string wordToIgnore);

		// @property (nonatomic, strong) NSArray<NSString *> * _Nullable ignoredWords;
		[NullAllowed, Export ("ignoredWords", ArgumentSemantic.Strong)]
		string[] IgnoredWords { get; set; }

		// +(void)learnWord:(NSString * _Nonnull)word;
		[Static]
		[Export ("learnWord:")]
		void LearnWord (string word);

		// +(int)hasLearnedWord:(NSString * _Nonnull)word;
		[Static]
		[Export ("hasLearnedWord:")]
		int HasLearnedWord (string word);

		// +(void)unlearnWord:(NSString * _Nonnull)word;
		[Static]
		[Export ("unlearnWord:")]
		void UnlearnWord (string word);

		// @property (readonly, nonatomic, class) NSArray<NSString *> * _Nonnull availableLanguages;
		[Static]
		[Export ("availableLanguages")]
		string[] AvailableLanguages { get; }
	}

	// @protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextViewDelegate : IUIScrollViewDelegate
	{
		// @optional -(int)textViewShouldBeginEditing:(UITextView * _Nonnull)textView;
		[Export ("textViewShouldBeginEditing:")]
		int TextViewShouldBeginEditing (UITextView textView);

		// @optional -(int)textViewShouldEndEditing:(UITextView * _Nonnull)textView;
		[Export ("textViewShouldEndEditing:")]
		int TextViewShouldEndEditing (UITextView textView);

		// @optional -(void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
		[Export ("textViewDidBeginEditing:")]
		void TextViewDidBeginEditing (UITextView textView);

		// @optional -(void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
		[Export ("textViewDidEndEditing:")]
		void TextViewDidEndEditing (UITextView textView);

		// @optional -(int)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text;
		[Export ("textView:shouldChangeTextInRange:replacementText:")]
		int TextView (UITextView textView, NSRange range, string text);

		// @optional -(void)textViewDidChange:(UITextView * _Nonnull)textView;
		[Export ("textViewDidChange:")]
		void TextViewDidChange (UITextView textView);

		// @optional -(void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
		[Export ("textViewDidChangeSelection:")]
		void TextViewDidChangeSelection (UITextView textView);

		// @optional -(int)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("textView:shouldInteractWithURL:inRange:interaction:")]
		int TextView (UITextView textView, NSUrl URL, NSRange characterRange, UITextItemInteraction interaction);

		// @optional -(int)textView:(UITextView * _Nonnull)textView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("textView:shouldInteractWithTextAttachment:inRange:interaction:")]
		int TextView (UITextView textView, NSTextAttachment textAttachment, NSRange characterRange, UITextItemInteraction interaction);

		// @optional -(int)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange __attribute__((availability(ios, introduced=7.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[Export ("textView:shouldInteractWithURL:inRange:")]
		int TextView (UITextView textView, NSUrl URL, NSRange characterRange);

		// @optional -(int)textView:(UITextView * _Nonnull)textView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange __attribute__((availability(ios, introduced=7.0, deprecated=10.0)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 10, 0)]
		[Export ("textView:shouldInteractWithTextAttachment:inRange:")]
		int TextView (UITextView textView, NSTextAttachment textAttachment, NSRange characterRange);
	}

	// @interface UITextView : UIScrollView <UITextInput, UIContentSizeCategoryAdjusting>
	[iOS (2,0)]
	[BaseType (typeof(UIScrollView))]
	interface UITextView : IUITextInput, IUIContentSizeCategoryAdjusting
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITextViewDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITextViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Null_unspecified text;
		[Export ("text")]
		string Text { get; set; }

		// @property (nonatomic, strong) UIFont * _Nullable font;
		[NullAllowed, Export ("font", ArgumentSemantic.Strong)]
		UIFont Font { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable textColor;
		[NullAllowed, Export ("textColor", ArgumentSemantic.Strong)]
		UIColor TextColor { get; set; }

		// @property (nonatomic) NSTextAlignment textAlignment;
		[Export ("textAlignment", ArgumentSemantic.Assign)]
		NSTextAlignment TextAlignment { get; set; }

		// @property (nonatomic) NSRange selectedRange;
		[Export ("selectedRange", ArgumentSemantic.Assign)]
		NSRange SelectedRange { get; set; }

		// @property (getter = isEditable, nonatomic) int editable __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("editable")]
		int Editable { [Bind ("isEditable")] get; set; }

		// @property (getter = isSelectable, nonatomic) int selectable __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("selectable")]
		int Selectable { [Bind ("isSelectable")] get; set; }

		// @property (nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Export ("dataDetectorTypes", ArgumentSemantic.Assign)]
		UIDataDetectorTypes DataDetectorTypes { get; set; }

		// @property (nonatomic) int allowsEditingTextAttributes __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("allowsEditingTextAttributes")]
		int AllowsEditingTextAttributes { get; set; }

		// @property (copy) NSAttributedString * _Null_unspecified attributedText __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("attributedText", ArgumentSemantic.Copy)]
		NSAttributedString AttributedText { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull typingAttributes __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("typingAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TypingAttributes { get; set; }

		// -(void)scrollRangeToVisible:(NSRange)range;
		[Export ("scrollRangeToVisible:")]
		void ScrollRangeToVisible (NSRange range);

		// @property (readwrite, strong) UIView * _Nullable inputView;
		[NullAllowed, Export ("inputView", ArgumentSemantic.Strong)]
		UIView InputView { get; set; }

		// @property (readwrite, strong) UIView * _Nullable inputAccessoryView;
		[NullAllowed, Export ("inputAccessoryView", ArgumentSemantic.Strong)]
		UIView InputAccessoryView { get; set; }

		// @property (nonatomic) int clearsOnInsertion __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("clearsOnInsertion")]
		int ClearsOnInsertion { get; set; }

		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer __attribute__((availability(ios, introduced=7.0))) __attribute__((objc_designated_initializer));
		[iOS (7,0)]
		[Export ("initWithFrame:textContainer:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame, [NullAllowed] NSTextContainer textContainer);

		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (readonly, nonatomic) NSTextContainer * _Nonnull textContainer __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("textContainer")]
		NSTextContainer TextContainer { get; }

		// @property (assign, nonatomic) UIEdgeInsets textContainerInset __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("textContainerInset", ArgumentSemantic.Assign)]
		UIEdgeInsets TextContainerInset { get; set; }

		// @property (readonly, nonatomic) NSLayoutManager * _Nonnull layoutManager __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("layoutManager")]
		NSLayoutManager LayoutManager { get; }

		// @property (readonly, nonatomic, strong) NSTextStorage * _Nonnull textStorage __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("textStorage", ArgumentSemantic.Strong)]
		NSTextStorage TextStorage { get; }

		// @property (copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Null_unspecified linkTextAttributes __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("linkTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> LinkTextAttributes { get; set; }

		// @property (nonatomic) int usesStandardTextScaling __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("usesStandardTextScaling")]
		int UsesStandardTextScaling { get; set; }
	}

	// @interface  (UITextView) <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
	[Category]
	[BaseType (typeof(UITextView))]
	interface UITextView_ : IUITextDraggable, IUITextDroppable, IUITextPasteConfigurationSupporting
	{
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UITextViewTextDidBeginEditingNotification __attribute__((visibility("default")));
		[Field ("UITextViewTextDidBeginEditingNotification", "__Internal")]
		NSString UITextViewTextDidBeginEditingNotification { get; }

		// extern const NSNotificationName _Nonnull UITextViewTextDidChangeNotification __attribute__((visibility("default")));
		[Field ("UITextViewTextDidChangeNotification", "__Internal")]
		NSString UITextViewTextDidChangeNotification { get; }

		// extern const NSNotificationName _Nonnull UITextViewTextDidEndEditingNotification __attribute__((visibility("default")));
		[Field ("UITextViewTextDidEndEditingNotification", "__Internal")]
		NSString UITextViewTextDidEndEditingNotification { get; }
	}

	// @interface UIToolbar : UIView <UIBarPositioning>
	[NoTV, iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIToolbar : IUIBarPositioning
	{
		// @property (nonatomic) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("barStyle", ArgumentSemantic.Assign)]
		UIBarStyle BarStyle { get; set; }

		// @property (copy, nonatomic) NSArray<UIBarButtonItem *> * _Nullable items;
		[NullAllowed, Export ("items", ArgumentSemantic.Copy)]
		UIBarButtonItem[] Items { get; set; }

		// @property (getter = isTranslucent, assign, nonatomic) int translucent __attribute__((availability(ios, introduced=3.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (3, 0)]
		[Export ("translucent")]
		int Translucent { [Bind ("isTranslucent")] get; set; }

		// -(void)setItems:(NSArray<UIBarButtonItem *> * _Nullable)items animated:(int)animated;
		[Export ("setItems:animated:")]
		void SetItems ([NullAllowed] UIBarButtonItem[] items, int animated);

		// @property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
		[Export ("tintColor", ArgumentSemantic.Strong)]
		UIColor TintColor { get; set; }

		// @property (nonatomic, strong) UIColor * _Nullable barTintColor __attribute__((availability(ios, introduced=7.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (7, 0)]
		[NullAllowed, Export ("barTintColor", ArgumentSemantic.Strong)]
		UIColor BarTintColor { get; set; }

		// -(void)setBackgroundImage:(UIImage * _Nullable)backgroundImage forToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("setBackgroundImage:forToolbarPosition:barMetrics:")]
		void SetBackgroundImage ([NullAllowed] UIImage backgroundImage, UIBarPosition topOrBottom, UIBarMetrics barMetrics);

		// -(UIImage * _Nullable)backgroundImageForToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios, introduced=5.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (5,0)]
		[Export ("backgroundImageForToolbarPosition:barMetrics:")]
		[return: NullAllowed]
		UIImage BackgroundImageForToolbarPosition (UIBarPosition topOrBottom, UIBarMetrics barMetrics);

		// -(void)setShadowImage:(UIImage * _Nullable)shadowImage forToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("setShadowImage:forToolbarPosition:")]
		void SetShadowImage ([NullAllowed] UIImage shadowImage, UIBarPosition topOrBottom);

		// -(UIImage * _Nullable)shadowImageForToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios, introduced=6.0))) __attribute__((annotate("ui_appearance_selector")));
		[iOS (6,0)]
		[Export ("shadowImageForToolbarPosition:")]
		[return: NullAllowed]
		UIImage ShadowImageForToolbarPosition (UIBarPosition topOrBottom);

		// @property (readwrite, copy, nonatomic) UIToolbarAppearance * _Nonnull standardAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("standardAppearance", ArgumentSemantic.Copy)]
		UIToolbarAppearance StandardAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UIToolbarAppearance * _Nullable compactAppearance __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("compactAppearance", ArgumentSemantic.Copy)]
		UIToolbarAppearance CompactAppearance { get; set; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIToolbarDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIToolbarDelegate> _Nullable delegate __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @protocol UIToolbarDelegate <UIBarPositioningDelegate>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	interface UIToolbarDelegate : IUIBarPositioningDelegate
	{
	}

	// @interface UIVideoEditorController : UINavigationController
	[NoTV, iOS (3,1)]
	[BaseType (typeof(UINavigationController))]
	interface UIVideoEditorController
	{
		// +(int)canEditVideoAtPath:(NSString * _Nonnull)videoPath __attribute__((availability(ios, introduced=3.1)));
		[iOS (3,1)]
		[Static]
		[Export ("canEditVideoAtPath:")]
		int CanEditVideoAtPath (string videoPath);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSObject<UINavigationControllerDelegate, UIVideoEditorControllerDelegate> Delegate { get; set; }

		// @property (assign, nonatomic) id<UINavigationControllerDelegate,UIVideoEditorControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull videoPath;
		[Export ("videoPath")]
		string VideoPath { get; set; }

		// @property (nonatomic) NSTimeInterval videoMaximumDuration;
		[Export ("videoMaximumDuration")]
		double VideoMaximumDuration { get; set; }

		// @property (nonatomic) UIImagePickerControllerQualityType videoQuality;
		[Export ("videoQuality", ArgumentSemantic.Assign)]
		UIImagePickerControllerQualityType VideoQuality { get; set; }
	}

	// @protocol UIVideoEditorControllerDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIVideoEditorControllerDelegate
	{
		// @optional -(void)videoEditorController:(UIVideoEditorController * _Nonnull)editor didSaveEditedVideoToPath:(NSString * _Nonnull)editedVideoPath;
		[Export ("videoEditorController:didSaveEditedVideoToPath:")]
		void VideoEditorController (UIVideoEditorController editor, string editedVideoPath);

		// @optional -(void)videoEditorController:(UIVideoEditorController * _Nonnull)editor didFailWithError:(NSError * _Nonnull)error;
		[Export ("videoEditorController:didFailWithError:")]
		void VideoEditorController (UIVideoEditorController editor, NSError error);

		// @optional -(void)videoEditorControllerDidCancel:(UIVideoEditorController * _Nonnull)editor;
		[Export ("videoEditorControllerDidCancel:")]
		void VideoEditorControllerDidCancel (UIVideoEditorController editor);
	}

	// @interface UIWebView : UIView <NSCoding, UIScrollViewDelegate>
	[Introduced (PlatformName.iOS, 2, 0, message: "No longer supported; please adopt WKWebView.")]
	[Deprecated (PlatformName.iOS, 12, 0, message: "No longer supported; please adopt WKWebView.")]
	[NoTV, NoMac]
	[BaseType (typeof(UIView))]
	interface UIWebView : INSCoding, IUIScrollViewDelegate
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIWebViewDelegate Delegate { get; set; }

		// @property (assign, nonatomic) id<UIWebViewDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Assign)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, nonatomic, strong) UIScrollView * _Nonnull scrollView __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("scrollView", ArgumentSemantic.Strong)]
		UIScrollView ScrollView { get; }

		// -(void)loadRequest:(NSURLRequest * _Nonnull)request;
		[Export ("loadRequest:")]
		void LoadRequest (NSUrlRequest request);

		// -(void)loadHTMLString:(NSString * _Nonnull)string baseURL:(NSURL * _Nullable)baseURL;
		[Export ("loadHTMLString:baseURL:")]
		void LoadHTMLString (string @string, [NullAllowed] NSUrl baseURL);

		// -(void)loadData:(NSData * _Nonnull)data MIMEType:(NSString * _Nonnull)MIMEType textEncodingName:(NSString * _Nonnull)textEncodingName baseURL:(NSURL * _Nonnull)baseURL;
		[Export ("loadData:MIMEType:textEncodingName:baseURL:")]
		void LoadData (NSData data, string MIMEType, string textEncodingName, NSUrl baseURL);

		// @property (readonly, nonatomic, strong) NSURLRequest * _Nullable request;
		[NullAllowed, Export ("request", ArgumentSemantic.Strong)]
		NSUrlRequest Request { get; }

		// -(void)reload;
		[Export ("reload")]
		void Reload ();

		// -(void)stopLoading;
		[Export ("stopLoading")]
		void StopLoading ();

		// -(void)goBack;
		[Export ("goBack")]
		void GoBack ();

		// -(void)goForward;
		[Export ("goForward")]
		void GoForward ();

		// @property (readonly, getter = canGoBack, nonatomic) int canGoBack;
		[Export ("canGoBack")]
		int CanGoBack { [Bind ("canGoBack")] get; }

		// @property (readonly, getter = canGoForward, nonatomic) int canGoForward;
		[Export ("canGoForward")]
		int CanGoForward { [Bind ("canGoForward")] get; }

		// @property (readonly, getter = isLoading, nonatomic) int loading;
		[Export ("loading")]
		int Loading { [Bind ("isLoading")] get; }

		// -(NSString * _Nullable)stringByEvaluatingJavaScriptFromString:(NSString * _Nonnull)script;
		[Export ("stringByEvaluatingJavaScriptFromString:")]
		[return: NullAllowed]
		string StringByEvaluatingJavaScriptFromString (string script);

		// @property (nonatomic) int scalesPageToFit;
		[Export ("scalesPageToFit")]
		int ScalesPageToFit { get; set; }

		// @property (nonatomic) int detectsPhoneNumbers __attribute__((availability(ios, introduced=2.0, deprecated=3.0)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 0)]
		[Export ("detectsPhoneNumbers")]
		int DetectsPhoneNumbers { get; set; }

		// @property (nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios, introduced=3.0)));
		[iOS (3, 0)]
		[Export ("dataDetectorTypes", ArgumentSemantic.Assign)]
		UIDataDetectorTypes DataDetectorTypes { get; set; }

		// @property (nonatomic) int allowsInlineMediaPlayback __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("allowsInlineMediaPlayback")]
		int AllowsInlineMediaPlayback { get; set; }

		// @property (nonatomic) int mediaPlaybackRequiresUserAction __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[Export ("mediaPlaybackRequiresUserAction")]
		int MediaPlaybackRequiresUserAction { get; set; }

		// @property (nonatomic) int mediaPlaybackAllowsAirPlay __attribute__((availability(ios, introduced=5.0)));
		[iOS (5, 0)]
		[Export ("mediaPlaybackAllowsAirPlay")]
		int MediaPlaybackAllowsAirPlay { get; set; }

		// @property (nonatomic) int suppressesIncrementalRendering __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("suppressesIncrementalRendering")]
		int SuppressesIncrementalRendering { get; set; }

		// @property (nonatomic) int keyboardDisplayRequiresUserAction __attribute__((availability(ios, introduced=6.0)));
		[iOS (6, 0)]
		[Export ("keyboardDisplayRequiresUserAction")]
		int KeyboardDisplayRequiresUserAction { get; set; }

		// @property (nonatomic) UIWebPaginationMode paginationMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("paginationMode", ArgumentSemantic.Assign)]
		UIWebPaginationMode PaginationMode { get; set; }

		// @property (nonatomic) UIWebPaginationBreakingMode paginationBreakingMode __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("paginationBreakingMode", ArgumentSemantic.Assign)]
		UIWebPaginationBreakingMode PaginationBreakingMode { get; set; }

		// @property (nonatomic) CGFloat pageLength __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("pageLength")]
		nfloat PageLength { get; set; }

		// @property (nonatomic) CGFloat gapBetweenPages __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("gapBetweenPages")]
		nfloat GapBetweenPages { get; set; }

		// @property (readonly, nonatomic) NSUInteger pageCount __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Export ("pageCount")]
		nuint PageCount { get; }

		// @property (nonatomic) int allowsPictureInPictureMediaPlayback __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowsPictureInPictureMediaPlayback")]
		int AllowsPictureInPictureMediaPlayback { get; set; }

		// @property (nonatomic) int allowsLinkPreview __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("allowsLinkPreview")]
		int AllowsLinkPreview { get; set; }
	}

	// @protocol UIWebViewDelegate <NSObject>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIWebViewDelegate
	{
		// @optional -(int)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType __attribute__((availability(ios, introduced=2.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "No longer supported.")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "No longer supported.")]
		[Export ("webView:shouldStartLoadWithRequest:navigationType:")]
		int WebView (UIWebView webView, NSUrlRequest request, UIWebViewNavigationType navigationType);

		// @optional -(void)webViewDidStartLoad:(UIWebView * _Nonnull)webView __attribute__((availability(ios, introduced=2.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "No longer supported.")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "No longer supported.")]
		[Export ("webViewDidStartLoad:")]
		void WebViewDidStartLoad (UIWebView webView);

		// @optional -(void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView __attribute__((availability(ios, introduced=2.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "No longer supported.")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "No longer supported.")]
		[Export ("webViewDidFinishLoad:")]
		void WebViewDidFinishLoad (UIWebView webView);

		// @optional -(void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error __attribute__((availability(ios, introduced=2.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 2, 0, message: "No longer supported.")]
		[Deprecated (PlatformName.iOS, 12, 0, message: "No longer supported.")]
		[Export ("webView:didFailLoadWithError:")]
		void WebView (UIWebView webView, NSError error);
	}

	// @interface UIWindow : UIView
	[iOS (2,0)]
	[BaseType (typeof(UIView))]
	interface UIWindow
	{
		// -(instancetype _Nonnull)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("initWithWindowScene:")]
		IntPtr Constructor (UIWindowScene windowScene);

		// @property (nonatomic, weak) UIWindowScene * _Nullable windowScene __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("windowScene", ArgumentSemantic.Weak)]
		UIWindowScene WindowScene { get; set; }

		// @property (nonatomic, setter = setCanResizeToFitContent:) int canResizeToFitContent __attribute__((availability(macCatalyst, introduced=13.0)));
		[Introduced (PlatformName.MacCatalyst, 13, 0)]
		[Export ("canResizeToFitContent")]
		int CanResizeToFitContent { get; [Bind ("setCanResizeToFitContent:")] set; }

		// @property (nonatomic, strong) UIScreen * _Nonnull screen __attribute__((availability(ios, introduced=3.2)));
		[iOS (3, 2)]
		[Export ("screen", ArgumentSemantic.Strong)]
		UIScreen Screen { get; set; }

		// @property (nonatomic) UIWindowLevel windowLevel;
		[Export ("windowLevel")]
		double WindowLevel { get; set; }

		// @property (readonly, getter = isKeyWindow, nonatomic) int keyWindow;
		[Export ("keyWindow")]
		int KeyWindow { [Bind ("isKeyWindow")] get; }

		// -(void)becomeKeyWindow;
		[Export ("becomeKeyWindow")]
		void BecomeKeyWindow ();

		// -(void)resignKeyWindow;
		[Export ("resignKeyWindow")]
		void ResignKeyWindow ();

		// -(void)makeKeyWindow;
		[Export ("makeKeyWindow")]
		void MakeKeyWindow ();

		// -(void)makeKeyAndVisible;
		[Export ("makeKeyAndVisible")]
		void MakeKeyAndVisible ();

		// @property (nonatomic, strong) UIViewController * _Nullable rootViewController __attribute__((availability(ios, introduced=4.0)));
		[iOS (4, 0)]
		[NullAllowed, Export ("rootViewController", ArgumentSemantic.Strong)]
		UIViewController RootViewController { get; set; }

		// -(void)sendEvent:(UIEvent * _Nonnull)event;
		[Export ("sendEvent:")]
		void SendEvent (UIEvent @event);

		// -(CGPoint)convertPoint:(CGPoint)point toWindow:(UIWindow * _Nullable)window;
		[Export ("convertPoint:toWindow:")]
		CGPoint ConvertPoint (CGPoint point, [NullAllowed] UIWindow window);

		// -(CGPoint)convertPoint:(CGPoint)point fromWindow:(UIWindow * _Nullable)window;
		[Export ("convertPoint:fromWindow:")]
		CGPoint ConvertPoint (CGPoint point, [NullAllowed] UIWindow window);

		// -(CGRect)convertRect:(CGRect)rect toWindow:(UIWindow * _Nullable)window;
		[Export ("convertRect:toWindow:")]
		CGRect ConvertRect (CGRect rect, [NullAllowed] UIWindow window);

		// -(CGRect)convertRect:(CGRect)rect fromWindow:(UIWindow * _Nullable)window;
		[Export ("convertRect:fromWindow:")]
		CGRect ConvertRect (CGRect rect, [NullAllowed] UIWindow window);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIWindowLevel UIWindowLevelNormal __attribute__((visibility("default")));
		[Field ("UIWindowLevelNormal", "__Internal")]
		double UIWindowLevelNormal { get; }

		// extern const UIWindowLevel UIWindowLevelAlert __attribute__((visibility("default")));
		[Field ("UIWindowLevelAlert", "__Internal")]
		double UIWindowLevelAlert { get; }

		// extern const UIWindowLevel UIWindowLevelStatusBar __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIWindowLevelStatusBar", "__Internal")]
		double UIWindowLevelStatusBar { get; }

		// extern const NSNotificationName _Nonnull UIWindowDidBecomeVisibleNotification __attribute__((visibility("default")));
		[Field ("UIWindowDidBecomeVisibleNotification", "__Internal")]
		NSString UIWindowDidBecomeVisibleNotification { get; }

		// extern const NSNotificationName _Nonnull UIWindowDidBecomeHiddenNotification __attribute__((visibility("default")));
		[Field ("UIWindowDidBecomeHiddenNotification", "__Internal")]
		NSString UIWindowDidBecomeHiddenNotification { get; }

		// extern const NSNotificationName _Nonnull UIWindowDidBecomeKeyNotification __attribute__((visibility("default")));
		[Field ("UIWindowDidBecomeKeyNotification", "__Internal")]
		NSString UIWindowDidBecomeKeyNotification { get; }

		// extern const NSNotificationName _Nonnull UIWindowDidResignKeyNotification __attribute__((visibility("default")));
		[Field ("UIWindowDidResignKeyNotification", "__Internal")]
		NSString UIWindowDidResignKeyNotification { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardWillShowNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIKeyboardWillShowNotification", "__Internal")]
		NSString UIKeyboardWillShowNotification { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardDidShowNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIKeyboardDidShowNotification", "__Internal")]
		NSString UIKeyboardDidShowNotification { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardWillHideNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIKeyboardWillHideNotification", "__Internal")]
		NSString UIKeyboardWillHideNotification { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardDidHideNotification __attribute__((visibility("default"))) __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Field ("UIKeyboardDidHideNotification", "__Internal")]
		NSString UIKeyboardDidHideNotification { get; }

		// extern NSString *const _Nonnull UIKeyboardFrameBeginUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 2)]
		[Field ("UIKeyboardFrameBeginUserInfoKey", "__Internal")]
		NSString UIKeyboardFrameBeginUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardFrameEndUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.2))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 2)]
		[Field ("UIKeyboardFrameEndUserInfoKey", "__Internal")]
		NSString UIKeyboardFrameEndUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardAnimationDurationUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UIKeyboardAnimationDurationUserInfoKey", "__Internal")]
		NSString UIKeyboardAnimationDurationUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardAnimationCurveUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (3, 0)]
		[Field ("UIKeyboardAnimationCurveUserInfoKey", "__Internal")]
		NSString UIKeyboardAnimationCurveUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardIsLocalUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[Field ("UIKeyboardIsLocalUserInfoKey", "__Internal")]
		NSString UIKeyboardIsLocalUserInfoKey { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardWillChangeFrameNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Field ("UIKeyboardWillChangeFrameNotification", "__Internal")]
		NSString UIKeyboardWillChangeFrameNotification { get; }

		// extern const NSNotificationName _Nonnull UIKeyboardDidChangeFrameNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=5.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (5, 0)]
		[Field ("UIKeyboardDidChangeFrameNotification", "__Internal")]
		NSString UIKeyboardDidChangeFrameNotification { get; }

		// extern NSString *const _Nonnull UIKeyboardCenterBeginUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=2.0, deprecated=3.2))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 2)]
		[NoTV]
		[Field ("UIKeyboardCenterBeginUserInfoKey", "__Internal")]
		NSString UIKeyboardCenterBeginUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardCenterEndUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=2.0, deprecated=3.2))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 2)]
		[NoTV]
		[Field ("UIKeyboardCenterEndUserInfoKey", "__Internal")]
		NSString UIKeyboardCenterEndUserInfoKey { get; }

		// extern NSString *const _Nonnull UIKeyboardBoundsUserInfoKey __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=2.0, deprecated=3.2))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 2, 0)]
		[Deprecated (PlatformName.iOS, 3, 2)]
		[NoTV]
		[Field ("UIKeyboardBoundsUserInfoKey", "__Internal")]
		NSString UIKeyboardBoundsUserInfoKey { get; }
	}

	// @interface UIDragItem : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDragItem
	{
		// -(instancetype _Nonnull)initWithItemProvider:(NSItemProvider * _Nonnull)itemProvider __attribute__((objc_designated_initializer));
		[Export ("initWithItemProvider:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSItemProvider itemProvider);

		// @property (readonly, nonatomic) __kindof NSItemProvider * _Nonnull itemProvider;
		[Export ("itemProvider")]
		NSItemProvider ItemProvider { get; }

		// @property (nonatomic, strong) id _Nullable localObject;
		[NullAllowed, Export ("localObject", ArgumentSemantic.Strong)]
		NSObject LocalObject { get; set; }

		// @property (copy, nonatomic) UIDragPreview * _Nullable (^ _Nullable)(void) previewProvider;
		[NullAllowed, Export ("previewProvider", ArgumentSemantic.Copy)]
		Func<UIDragPreview> PreviewProvider { get; set; }
	}

	// @interface UIDragPreview : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDragPreview : INSCopying
	{
		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view parameters:(UIDragPreviewParameters * _Nonnull)parameters __attribute__((objc_designated_initializer));
		[Export ("initWithView:parameters:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIView view, UIDragPreviewParameters parameters);

		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view;
		[Export ("initWithView:")]
		IntPtr Constructor (UIView view);

		// @property (readonly, nonatomic) UIView * _Nonnull view;
		[Export ("view")]
		UIView View { get; }

		// @property (readonly, copy, nonatomic) UIDragPreviewParameters * _Nonnull parameters;
		[Export ("parameters", ArgumentSemantic.Copy)]
		UIDragPreviewParameters Parameters { get; }
	}

	// @interface UIPreviewParameters : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UIPreviewParameters : INSCopying
	{
		// -(instancetype _Nonnull)initWithTextLineRects:(NSArray<NSValue *> * _Nonnull)textLineRects;
		[Export ("initWithTextLineRects:")]
		IntPtr Constructor (NSValue[] textLineRects);

		// @property (copy, nonatomic) UIBezierPath * _Nullable visiblePath;
		[NullAllowed, Export ("visiblePath", ArgumentSemantic.Copy)]
		UIBezierPath VisiblePath { get; set; }

		// @property (copy, nonatomic) UIColor * _Null_unspecified backgroundColor;
		[Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }
	}

	// @interface UIDragPreviewParameters : UIPreviewParameters
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIPreviewParameters))]
	interface UIDragPreviewParameters
	{
	}

	// @protocol UIDragDropSession <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIDragDropSession
	{
		// @required @property (readonly, nonatomic) NSArray<UIDragItem *> * _Nonnull items;
		[Abstract]
		[Export ("items")]
		UIDragItem[] Items { get; }

		// @required -(CGPoint)locationInView:(UIView * _Nonnull)view;
		[Abstract]
		[Export ("locationInView:")]
		CGPoint LocationInView (UIView view);

		// @required @property (readonly, nonatomic) int allowsMoveOperation;
		[Abstract]
		[Export ("allowsMoveOperation")]
		int AllowsMoveOperation { get; }

		// @required @property (readonly, getter = isRestrictedToDraggingApplication, nonatomic) int restrictedToDraggingApplication;
		[Abstract]
		[Export ("restrictedToDraggingApplication")]
		int RestrictedToDraggingApplication { [Bind ("isRestrictedToDraggingApplication")] get; }

		// @required -(int)hasItemsConformingToTypeIdentifiers:(NSArray<NSString *> * _Nonnull)typeIdentifiers;
		[Abstract]
		[Export ("hasItemsConformingToTypeIdentifiers:")]
		int HasItemsConformingToTypeIdentifiers (string[] typeIdentifiers);

		// @required -(int)canLoadObjectsOfClass:(Class<NSItemProviderReading> _Nonnull)aClass;
		[Abstract]
		[Export ("canLoadObjectsOfClass:")]
		int CanLoadObjectsOfClass (NSItemProviderReading aClass);
	}

	// @protocol UIDragSession <UIDragDropSession>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UIDragSession : IUIDragDropSession
	{
		// @required @property (nonatomic, strong) id _Nullable localContext;
		[Abstract]
		[NullAllowed, Export ("localContext", ArgumentSemantic.Strong)]
		NSObject LocalContext { get; set; }
	}

	// @protocol UIDropSession <UIDragDropSession, NSProgressReporting>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	interface UIDropSession : IUIDragDropSession, INSProgressReporting
	{
		// @required @property (readonly, nonatomic) id<UIDragSession> _Nullable localDragSession;
		[Abstract]
		[NullAllowed, Export ("localDragSession")]
		UIDragSession LocalDragSession { get; }

		// @required @property (nonatomic) UIDropSessionProgressIndicatorStyle progressIndicatorStyle;
		[Abstract]
		[Export ("progressIndicatorStyle", ArgumentSemantic.Assign)]
		UIDropSessionProgressIndicatorStyle ProgressIndicatorStyle { get; set; }

		// @required -(NSProgress * _Nonnull)loadObjectsOfClass:(Class<NSItemProviderReading> _Nonnull)aClass completion:(void (^ _Nonnull)(NSArray<__kindof id<NSItemProviderReading>> * _Nonnull))completion;
		[Abstract]
		[Export ("loadObjectsOfClass:completion:")]
		NSProgress Completion (NSItemProviderReading aClass, Action<NSArray<NSItemProviderReading>> completion);
	}

	// @interface UIPreviewTarget : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIPreviewTarget : INSCopying
	{
		// -(instancetype _Nonnull)initWithContainer:(UIView * _Nonnull)container center:(CGPoint)center transform:(CGAffineTransform)transform __attribute__((objc_designated_initializer));
		[Export ("initWithContainer:center:transform:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIView container, CGPoint center, CGAffineTransform transform);

		// -(instancetype _Nonnull)initWithContainer:(UIView * _Nonnull)container center:(CGPoint)center;
		[Export ("initWithContainer:center:")]
		IntPtr Constructor (UIView container, CGPoint center);

		// @property (readonly, nonatomic) UIView * _Nonnull container;
		[Export ("container")]
		UIView Container { get; }

		// @property (readonly, nonatomic) CGPoint center;
		[Export ("center")]
		CGPoint Center { get; }

		// @property (readonly, nonatomic) CGAffineTransform transform;
		[Export ("transform")]
		CGAffineTransform Transform { get; }
	}

	// @interface UITargetedPreview : NSObject <NSCopying>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITargetedPreview : INSCopying
	{
		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view parameters:(__kindof UIPreviewParameters * _Nonnull)parameters target:(__kindof UIPreviewTarget * _Nonnull)target __attribute__((objc_designated_initializer));
		[Export ("initWithView:parameters:target:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIView view, UIPreviewParameters parameters, UIPreviewTarget target);

		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view parameters:(__kindof UIPreviewParameters * _Nonnull)parameters;
		[Export ("initWithView:parameters:")]
		IntPtr Constructor (UIView view, UIPreviewParameters parameters);

		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view;
		[Export ("initWithView:")]
		IntPtr Constructor (UIView view);

		// @property (readonly, nonatomic) __kindof UIPreviewTarget * _Nonnull target;
		[Export ("target")]
		UIPreviewTarget Target { get; }

		// @property (readonly, nonatomic) UIView * _Nonnull view;
		[Export ("view")]
		UIView View { get; }

		// @property (readonly, copy, nonatomic) __kindof UIPreviewParameters * _Nonnull parameters;
		[Export ("parameters", ArgumentSemantic.Copy)]
		UIPreviewParameters Parameters { get; }

		// @property (readonly, nonatomic) CGSize size;
		[Export ("size")]
		CGSize Size { get; }

		// -(__kindof UITargetedPreview * _Nonnull)retargetedPreviewWithTarget:(__kindof UIPreviewTarget * _Nonnull)newTarget;
		[Export ("retargetedPreviewWithTarget:")]
		UITargetedPreview RetargetedPreviewWithTarget (UIPreviewTarget newTarget);
	}

	// @interface UIDragPreviewTarget : UIPreviewTarget
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIPreviewTarget))]
	interface UIDragPreviewTarget
	{
	}

	// @interface UITargetedDragPreview : UITargetedPreview
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UITargetedPreview))]
	interface UITargetedDragPreview
	{
		// -(UITargetedDragPreview * _Nonnull)retargetedPreviewWithTarget:(UIDragPreviewTarget * _Nonnull)newTarget;
		[Export ("retargetedPreviewWithTarget:")]
		UITargetedDragPreview RetargetedPreviewWithTarget (UIDragPreviewTarget newTarget);
	}

	// @interface UISpringLoadedInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISpringLoadedInteraction : IUIInteraction
	{
		// -(instancetype _Nonnull)initWithInteractionBehavior:(id<UISpringLoadedInteractionBehavior> _Nullable)interactionBehavior interactionEffect:(id<UISpringLoadedInteractionEffect> _Nullable)interactionEffect activationHandler:(void (^ _Nonnull)(UISpringLoadedInteraction * _Nonnull, id<UISpringLoadedInteractionContext> _Nonnull))handler __attribute__((objc_designated_initializer));
		[Export ("initWithInteractionBehavior:interactionEffect:activationHandler:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] UISpringLoadedInteractionBehavior interactionBehavior, [NullAllowed] UISpringLoadedInteractionEffect interactionEffect, Action<UISpringLoadedInteraction, UISpringLoadedInteractionContext> handler);

		// -(instancetype _Nonnull)initWithActivationHandler:(void (^ _Nonnull)(UISpringLoadedInteraction * _Nonnull, id<UISpringLoadedInteractionContext> _Nonnull))handler;
		[Export ("initWithActivationHandler:")]
		IntPtr Constructor (Action<UISpringLoadedInteraction, UISpringLoadedInteractionContext> handler);

		// @property (readonly, nonatomic, strong) id<UISpringLoadedInteractionBehavior> _Nonnull interactionBehavior;
		[Export ("interactionBehavior", ArgumentSemantic.Strong)]
		UISpringLoadedInteractionBehavior InteractionBehavior { get; }

		// @property (readonly, nonatomic, strong) id<UISpringLoadedInteractionEffect> _Nonnull interactionEffect;
		[Export ("interactionEffect", ArgumentSemantic.Strong)]
		UISpringLoadedInteractionEffect InteractionEffect { get; }
	}

	// @protocol UISpringLoadedInteractionBehavior <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UISpringLoadedInteractionBehavior
	{
		// @required -(int)shouldAllowInteraction:(UISpringLoadedInteraction * _Nonnull)interaction withContext:(id<UISpringLoadedInteractionContext> _Nonnull)context;
		[Abstract]
		[Export ("shouldAllowInteraction:withContext:")]
		int ShouldAllowInteraction (UISpringLoadedInteraction interaction, UISpringLoadedInteractionContext context);

		// @optional -(void)interactionDidFinish:(UISpringLoadedInteraction * _Nonnull)interaction;
		[Export ("interactionDidFinish:")]
		void InteractionDidFinish (UISpringLoadedInteraction interaction);
	}

	// @protocol UISpringLoadedInteractionEffect <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UISpringLoadedInteractionEffect
	{
		// @required -(void)interaction:(UISpringLoadedInteraction * _Nonnull)interaction didChangeWithContext:(id<UISpringLoadedInteractionContext> _Nonnull)context;
		[Abstract]
		[Export ("interaction:didChangeWithContext:")]
		void DidChangeWithContext (UISpringLoadedInteraction interaction, UISpringLoadedInteractionContext context);
	}

	// @protocol UISpringLoadedInteractionContext <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (11,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UISpringLoadedInteractionContext
	{
		// @required @property (readonly, nonatomic) UISpringLoadedInteractionEffectState state;
		[Abstract]
		[Export ("state")]
		UISpringLoadedInteractionEffectState State { get; }

		// @required @property (nonatomic, strong) UIView * _Nullable targetView;
		[Abstract]
		[NullAllowed, Export ("targetView", ArgumentSemantic.Strong)]
		UIView TargetView { get; set; }

		// @required @property (nonatomic, strong) id _Nullable targetItem;
		[Abstract]
		[NullAllowed, Export ("targetItem", ArgumentSemantic.Strong)]
		NSObject TargetItem { get; set; }

		// @required -(CGPoint)locationInView:(UIView * _Nullable)view;
		[Abstract]
		[Export ("locationInView:")]
		CGPoint LocationInView ([NullAllowed] UIView view);
	}

	// @interface UIBarAppearance : NSObject <NSCopying, NSSecureCoding>
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UIBarAppearance : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nonnull)initWithIdiom:(UIUserInterfaceIdiom)idiom __attribute__((objc_designated_initializer));
		[Export ("initWithIdiom:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIUserInterfaceIdiom idiom);

		// @property (readonly, assign, nonatomic) UIUserInterfaceIdiom idiom;
		[Export ("idiom", ArgumentSemantic.Assign)]
		UIUserInterfaceIdiom Idiom { get; }

		// -(instancetype _Nonnull)initWithBarAppearance:(UIBarAppearance * _Nonnull)barAppearance __attribute__((objc_designated_initializer));
		[Export ("initWithBarAppearance:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIBarAppearance barAppearance);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)copy;
		[Export ("copy")]
		UIBarAppearance Copy ();

		// -(void)configureWithDefaultBackground;
		[Export ("configureWithDefaultBackground")]
		void ConfigureWithDefaultBackground ();

		// -(void)configureWithOpaqueBackground;
		[Export ("configureWithOpaqueBackground")]
		void ConfigureWithOpaqueBackground ();

		// -(void)configureWithTransparentBackground;
		[Export ("configureWithTransparentBackground")]
		void ConfigureWithTransparentBackground ();

		// @property (readwrite, copy, nonatomic) UIBlurEffect * _Nullable backgroundEffect;
		[NullAllowed, Export ("backgroundEffect", ArgumentSemantic.Copy)]
		UIBlurEffect BackgroundEffect { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable backgroundColor;
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (readwrite, nonatomic, strong) UIImage * _Nullable backgroundImage;
		[NullAllowed, Export ("backgroundImage", ArgumentSemantic.Strong)]
		UIImage BackgroundImage { get; set; }

		// @property (assign, readwrite, nonatomic) UIViewContentMode backgroundImageContentMode;
		[Export ("backgroundImageContentMode", ArgumentSemantic.Assign)]
		UIViewContentMode BackgroundImageContentMode { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable shadowColor;
		[NullAllowed, Export ("shadowColor", ArgumentSemantic.Copy)]
		UIColor ShadowColor { get; set; }

		// @property (readwrite, nonatomic, strong) UIImage * _Nullable shadowImage;
		[NullAllowed, Export ("shadowImage", ArgumentSemantic.Strong)]
		UIImage ShadowImage { get; set; }
	}

	// @interface UIBarButtonItemStateAppearance : NSObject
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIBarButtonItemStateAppearance
	{
		// @property (readwrite, copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull titleTextAttributes;
		[Export ("titleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TitleTextAttributes { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset titlePositionAdjustment;
		[Export ("titlePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset TitlePositionAdjustment { get; set; }

		// @property (readwrite, nonatomic, strong) UIImage * _Nullable backgroundImage;
		[NullAllowed, Export ("backgroundImage", ArgumentSemantic.Strong)]
		UIImage BackgroundImage { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset backgroundImagePositionAdjustment;
		[Export ("backgroundImagePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset BackgroundImagePositionAdjustment { get; set; }
	}

	// @interface UIBarButtonItemAppearance : NSObject <NSCopying, NSSecureCoding>
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UIBarButtonItemAppearance : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nonnull)initWithStyle:(UIBarButtonItemStyle)style __attribute__((objc_designated_initializer));
		[Export ("initWithStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIBarButtonItemStyle style);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)copy;
		[Export ("copy")]
		UIBarButtonItemAppearance Copy ();

		// -(void)configureWithDefaultForStyle:(UIBarButtonItemStyle)style;
		[Export ("configureWithDefaultForStyle:")]
		void ConfigureWithDefaultForStyle (UIBarButtonItemStyle style);

		// @property (readonly, nonatomic, strong) UIBarButtonItemStateAppearance * _Nonnull normal;
		[Export ("normal", ArgumentSemantic.Strong)]
		UIBarButtonItemStateAppearance Normal { get; }

		// @property (readonly, nonatomic, strong) UIBarButtonItemStateAppearance * _Nonnull highlighted;
		[Export ("highlighted", ArgumentSemantic.Strong)]
		UIBarButtonItemStateAppearance Highlighted { get; }

		// @property (readonly, nonatomic, strong) UIBarButtonItemStateAppearance * _Nonnull disabled;
		[Export ("disabled", ArgumentSemantic.Strong)]
		UIBarButtonItemStateAppearance Disabled { get; }

		// @property (readonly, nonatomic, strong) UIBarButtonItemStateAppearance * _Nonnull focused;
		[Export ("focused", ArgumentSemantic.Strong)]
		UIBarButtonItemStateAppearance Focused { get; }
	}

	// @interface UINavigationBarAppearance : UIBarAppearance
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(UIBarAppearance))]
	interface UINavigationBarAppearance
	{
		// @property (readwrite, copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull titleTextAttributes;
		[Export ("titleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TitleTextAttributes { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset titlePositionAdjustment;
		[Export ("titlePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset TitlePositionAdjustment { get; set; }

		// @property (readwrite, copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull largeTitleTextAttributes;
		[Export ("largeTitleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> LargeTitleTextAttributes { get; set; }

		// @property (readwrite, copy, nonatomic) UIBarButtonItemAppearance * _Nonnull buttonAppearance;
		[Export ("buttonAppearance", ArgumentSemantic.Copy)]
		UIBarButtonItemAppearance ButtonAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UIBarButtonItemAppearance * _Nonnull doneButtonAppearance;
		[Export ("doneButtonAppearance", ArgumentSemantic.Copy)]
		UIBarButtonItemAppearance DoneButtonAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UIBarButtonItemAppearance * _Nonnull backButtonAppearance;
		[Export ("backButtonAppearance", ArgumentSemantic.Copy)]
		UIBarButtonItemAppearance BackButtonAppearance { get; set; }

		// @property (readonly, nonatomic, strong) UIImage * _Nonnull backIndicatorImage;
		[Export ("backIndicatorImage", ArgumentSemantic.Strong)]
		UIImage BackIndicatorImage { get; }

		// @property (readonly, nonatomic, strong) UIImage * _Nonnull backIndicatorTransitionMaskImage;
		[Export ("backIndicatorTransitionMaskImage", ArgumentSemantic.Strong)]
		UIImage BackIndicatorTransitionMaskImage { get; }

		// -(void)setBackIndicatorImage:(UIImage * _Nullable)backIndicatorImage transitionMaskImage:(UIImage * _Nullable)backIndicatorTransitionMaskImage;
		[Export ("setBackIndicatorImage:transitionMaskImage:")]
		void SetBackIndicatorImage ([NullAllowed] UIImage backIndicatorImage, [NullAllowed] UIImage backIndicatorTransitionMaskImage);
	}

	// @interface UIToolbarAppearance : UIBarAppearance
	[iOS (13,0)]
	[BaseType (typeof(UIBarAppearance))]
	interface UIToolbarAppearance
	{
		// @property (readwrite, copy, nonatomic) UIBarButtonItemAppearance * _Nonnull buttonAppearance;
		[Export ("buttonAppearance", ArgumentSemantic.Copy)]
		UIBarButtonItemAppearance ButtonAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UIBarButtonItemAppearance * _Nonnull doneButtonAppearance;
		[Export ("doneButtonAppearance", ArgumentSemantic.Copy)]
		UIBarButtonItemAppearance DoneButtonAppearance { get; set; }
	}

	// @interface UITabBarItemStateAppearance : NSObject
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITabBarItemStateAppearance
	{
		// @property (readwrite, copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull titleTextAttributes;
		[Export ("titleTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> TitleTextAttributes { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset titlePositionAdjustment;
		[Export ("titlePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset TitlePositionAdjustment { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable iconColor;
		[NullAllowed, Export ("iconColor", ArgumentSemantic.Copy)]
		UIColor IconColor { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset badgePositionAdjustment;
		[Export ("badgePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset BadgePositionAdjustment { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable badgeBackgroundColor;
		[NullAllowed, Export ("badgeBackgroundColor", ArgumentSemantic.Copy)]
		UIColor BadgeBackgroundColor { get; set; }

		// @property (readwrite, copy, nonatomic) NSDictionary<NSAttributedStringKey,id> * _Nonnull badgeTextAttributes;
		[Export ("badgeTextAttributes", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> BadgeTextAttributes { get; set; }

		// @property (assign, readwrite, nonatomic) UIOffset badgeTitlePositionAdjustment;
		[Export ("badgeTitlePositionAdjustment", ArgumentSemantic.Assign)]
		UIOffset BadgeTitlePositionAdjustment { get; set; }
	}

	// @interface UITabBarItemAppearance : NSObject <NSCopying, NSSecureCoding>
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UITabBarItemAppearance : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nonnull)initWithStyle:(UITabBarItemAppearanceStyle)style __attribute__((objc_designated_initializer));
		[Export ("initWithStyle:")]
		[DesignatedInitializer]
		IntPtr Constructor (UITabBarItemAppearanceStyle style);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)copy;
		[Export ("copy")]
		UITabBarItemAppearance Copy ();

		// -(void)configureWithDefaultForStyle:(UITabBarItemAppearanceStyle)style;
		[Export ("configureWithDefaultForStyle:")]
		void ConfigureWithDefaultForStyle (UITabBarItemAppearanceStyle style);

		// @property (readonly, nonatomic, strong) UITabBarItemStateAppearance * _Nonnull normal;
		[Export ("normal", ArgumentSemantic.Strong)]
		UITabBarItemStateAppearance Normal { get; }

		// @property (readonly, nonatomic, strong) UITabBarItemStateAppearance * _Nonnull selected;
		[Export ("selected", ArgumentSemantic.Strong)]
		UITabBarItemStateAppearance Selected { get; }

		// @property (readonly, nonatomic, strong) UITabBarItemStateAppearance * _Nonnull disabled;
		[Export ("disabled", ArgumentSemantic.Strong)]
		UITabBarItemStateAppearance Disabled { get; }

		// @property (readonly, nonatomic, strong) UITabBarItemStateAppearance * _Nonnull focused;
		[Export ("focused", ArgumentSemantic.Strong)]
		UITabBarItemStateAppearance Focused { get; }
	}

	// @interface UITabBarAppearance : UIBarAppearance
	[TV (13,0), iOS (13,0)]
	[BaseType (typeof(UIBarAppearance))]
	interface UITabBarAppearance
	{
		// @property (readwrite, copy, nonatomic) UITabBarItemAppearance * _Nonnull stackedLayoutAppearance;
		[Export ("stackedLayoutAppearance", ArgumentSemantic.Copy)]
		UITabBarItemAppearance StackedLayoutAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UITabBarItemAppearance * _Nonnull inlineLayoutAppearance;
		[Export ("inlineLayoutAppearance", ArgumentSemantic.Copy)]
		UITabBarItemAppearance InlineLayoutAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UITabBarItemAppearance * _Nonnull compactInlineLayoutAppearance;
		[Export ("compactInlineLayoutAppearance", ArgumentSemantic.Copy)]
		UITabBarItemAppearance CompactInlineLayoutAppearance { get; set; }

		// @property (readwrite, copy, nonatomic) UIColor * _Nullable selectionIndicatorTintColor;
		[NullAllowed, Export ("selectionIndicatorTintColor", ArgumentSemantic.Copy)]
		UIColor SelectionIndicatorTintColor { get; set; }

		// @property (readwrite, nonatomic, strong) UIImage * _Nullable selectionIndicatorImage;
		[NullAllowed, Export ("selectionIndicatorImage", ArgumentSemantic.Strong)]
		UIImage SelectionIndicatorImage { get; set; }

		// @property (assign, readwrite, nonatomic) UITabBarItemPositioning stackedItemPositioning;
		[Export ("stackedItemPositioning", ArgumentSemantic.Assign)]
		UITabBarItemPositioning StackedItemPositioning { get; set; }

		// @property (assign, readwrite, nonatomic) CGFloat stackedItemWidth;
		[Export ("stackedItemWidth")]
		nfloat StackedItemWidth { get; set; }

		// @property (assign, readwrite, nonatomic) CGFloat stackedItemSpacing;
		[Export ("stackedItemSpacing")]
		nfloat StackedItemSpacing { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIActivityItemsConfigurationMetadataKey _Nonnull UIActivityItemsConfigurationMetadataKeyTitle __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UIActivityItemsConfigurationMetadataKeyTitle", "__Internal")]
		NSString UIActivityItemsConfigurationMetadataKeyTitle { get; }

		// extern const UIActivityItemsConfigurationMetadataKey _Nonnull UIActivityItemsConfigurationMetadataKeyMessageBody __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UIActivityItemsConfigurationMetadataKeyMessageBody", "__Internal")]
		NSString UIActivityItemsConfigurationMetadataKeyMessageBody { get; }

		// extern const UIActivityItemsConfigurationPreviewIntent _Nonnull UIActivityItemsConfigurationPreviewIntentFullSize __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UIActivityItemsConfigurationPreviewIntentFullSize", "__Internal")]
		NSString UIActivityItemsConfigurationPreviewIntentFullSize { get; }

		// extern const UIActivityItemsConfigurationPreviewIntent _Nonnull UIActivityItemsConfigurationPreviewIntentThumbnail __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UIActivityItemsConfigurationPreviewIntentThumbnail", "__Internal")]
		NSString UIActivityItemsConfigurationPreviewIntentThumbnail { get; }

		// extern const UIActivityItemsConfigurationInteraction _Nonnull UIActivityItemsConfigurationInteractionShare __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[Field ("UIActivityItemsConfigurationInteractionShare", "__Internal")]
		NSString UIActivityItemsConfigurationInteractionShare { get; }
	}

	// @protocol UIActivityItemsConfigurationReading <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIActivityItemsConfigurationReading
	{
		// @required @property (readonly, copy, nonatomic) NSArray<NSItemProvider *> * _Nonnull itemProvidersForActivityItemsConfiguration;
		[Abstract]
		[Export ("itemProvidersForActivityItemsConfiguration", ArgumentSemantic.Copy)]
		NSItemProvider[] ItemProvidersForActivityItemsConfiguration { get; }

		// @optional -(int)activityItemsConfigurationSupportsInteraction:(UIActivityItemsConfigurationInteraction _Nonnull)interaction __attribute__((swift_name("activityItemsConfigurationSupports(interaction:)")));
		[Export ("activityItemsConfigurationSupportsInteraction:")]
		int ActivityItemsConfigurationSupportsInteraction (string interaction);

		// @optional -(id _Nullable)activityItemsConfigurationMetadataForKey:(UIActivityItemsConfigurationMetadataKey _Nonnull)key __attribute__((swift_name("activityItemsConfigurationMetadata(key:)")));
		[Export ("activityItemsConfigurationMetadataForKey:")]
		[return: NullAllowed]
		NSObject ActivityItemsConfigurationMetadataForKey (string key);

		// @optional -(id _Nullable)activityItemsConfigurationMetadataForItemAtIndex:(NSInteger)index key:(UIActivityItemsConfigurationMetadataKey _Nonnull)key;
		[Export ("activityItemsConfigurationMetadataForItemAtIndex:key:")]
		[return: NullAllowed]
		NSObject ActivityItemsConfigurationMetadataForItemAtIndex (nint index, string key);

		// @optional -(NSItemProvider * _Nullable)activityItemsConfigurationPreviewForItemAtIndex:(NSInteger)index intent:(UIActivityItemsConfigurationPreviewIntent _Nonnull)intent suggestedSize:(CGSize)suggestedSize;
		[Export ("activityItemsConfigurationPreviewForItemAtIndex:intent:suggestedSize:")]
		[return: NullAllowed]
		NSItemProvider ActivityItemsConfigurationPreviewForItemAtIndex (nint index, string intent, CGSize suggestedSize);

		// @optional @property (readonly, copy, nonatomic) NSArray<UIActivity *> * _Nullable applicationActivitiesForActivityItemsConfiguration;
		[NullAllowed, Export ("applicationActivitiesForActivityItemsConfiguration", ArgumentSemantic.Copy)]
		UIActivity[] ApplicationActivitiesForActivityItemsConfiguration { get; }
	}

	// @interface UIActivityItemsConfiguration : NSObject <UIActivityItemsConfigurationReading>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIActivityItemsConfiguration : IUIActivityItemsConfigurationReading
	{
		// @property (nonatomic, strong) id _Nullable localObject;
		[NullAllowed, Export ("localObject", ArgumentSemantic.Strong)]
		NSObject LocalObject { get; set; }

		// @property (copy, nonatomic) NSArray<UIActivityItemsConfigurationInteraction> * _Nonnull supportedInteractions;
		[Export ("supportedInteractions", ArgumentSemantic.Copy)]
		string[] SupportedInteractions { get; set; }

		// @property (nonatomic, strong) id  _Nullable (^ _Nullable)(UIActivityItemsConfigurationMetadataKey _Nonnull) metadataProvider;
		[NullAllowed, Export ("metadataProvider", ArgumentSemantic.Strong)]
		Func<NSString, NSObject> MetadataProvider { get; set; }

		// @property (nonatomic, strong) id  _Nullable (^ _Nullable)(NSInteger, UIActivityItemsConfigurationMetadataKey _Nonnull) perItemMetadataProvider;
		[NullAllowed, Export ("perItemMetadataProvider", ArgumentSemantic.Strong)]
		Func<nint, NSString, NSObject> PerItemMetadataProvider { get; set; }

		// @property (nonatomic, strong) NSItemProvider * _Nullable (^ _Nullable)(NSInteger, UIActivityItemsConfigurationPreviewIntent _Nonnull, CGSize) previewProvider;
		[NullAllowed, Export ("previewProvider", ArgumentSemantic.Strong)]
		Func<nint, NSString, CGSize, NSItemProvider> PreviewProvider { get; set; }

		// @property (nonatomic, strong) NSArray<UIActivity *> * _Nonnull (^ _Nullable)(void) applicationActivitiesProvider;
		[NullAllowed, Export ("applicationActivitiesProvider", ArgumentSemantic.Strong)]
		Func<NSArray<UIActivity>> ApplicationActivitiesProvider { get; set; }

		// +(instancetype _Nonnull)activityItemsConfigurationWithObjects:(NSArray<id<NSItemProviderWriting>> * _Nonnull)objects;
		[Static]
		[Export ("activityItemsConfigurationWithObjects:")]
		UIActivityItemsConfiguration ActivityItemsConfigurationWithObjects (NSItemProviderWriting[] objects);

		// +(instancetype _Nonnull)activityItemsConfigurationWithItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders;
		[Static]
		[Export ("activityItemsConfigurationWithItemProviders:")]
		UIActivityItemsConfiguration ActivityItemsConfigurationWithItemProviders (NSItemProvider[] itemProviders);

		// -(instancetype _Nonnull)initWithObjects:(NSArray<id<NSItemProviderWriting>> * _Nonnull)objects __attribute__((objc_designated_initializer));
		[Export ("initWithObjects:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSItemProviderWriting[] objects);

		// -(instancetype _Nonnull)initWithItemProviders:(NSArray<NSItemProvider *> * _Nonnull)itemProviders __attribute__((objc_designated_initializer));
		[Export ("initWithItemProviders:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSItemProvider[] itemProviders);
	}

	// @interface UIActivityItemsConfiguration (UIResponder)
	[NoWatch, NoTV, iOS (13,0)]
	[Category]
	[BaseType (typeof(UIResponder))]
	interface UIResponder_UIActivityItemsConfiguration
	{
		// @property (nonatomic, strong) id<UIActivityItemsConfigurationReading> _Nullable activityItemsConfiguration __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable))) __attribute__((availability(watchos, unavailable)));
		[NoWatch, NoTV, iOS (13, 0)]
		[NullAllowed, Export ("activityItemsConfiguration", ArgumentSemantic.Strong)]
		UIActivityItemsConfigurationReading ActivityItemsConfiguration { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSAttributedStringKey _Nonnull NSFontAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSFontAttributeName", "__Internal")]
		NSString NSFontAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSParagraphStyleAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSParagraphStyleAttributeName", "__Internal")]
		NSString NSParagraphStyleAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSForegroundColorAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSForegroundColorAttributeName", "__Internal")]
		NSString NSForegroundColorAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSBackgroundColorAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSBackgroundColorAttributeName", "__Internal")]
		NSString NSBackgroundColorAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSLigatureAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSLigatureAttributeName", "__Internal")]
		NSString NSLigatureAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSKernAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSKernAttributeName", "__Internal")]
		NSString NSKernAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSStrikethroughStyleAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSStrikethroughStyleAttributeName", "__Internal")]
		NSString NSStrikethroughStyleAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSUnderlineStyleAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSUnderlineStyleAttributeName", "__Internal")]
		NSString NSUnderlineStyleAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSStrokeColorAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSStrokeColorAttributeName", "__Internal")]
		NSString NSStrokeColorAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSStrokeWidthAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSStrokeWidthAttributeName", "__Internal")]
		NSString NSStrokeWidthAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSShadowAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Field ("NSShadowAttributeName", "__Internal")]
		NSString NSShadowAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSTextEffectAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 10), iOS (7, 0)]
		[Field ("NSTextEffectAttributeName", "__Internal")]
		NSString NSTextEffectAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSAttachmentAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSAttachmentAttributeName", "__Internal")]
		NSString NSAttachmentAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSLinkAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSLinkAttributeName", "__Internal")]
		NSString NSLinkAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSBaselineOffsetAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSBaselineOffsetAttributeName", "__Internal")]
		NSString NSBaselineOffsetAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSUnderlineColorAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSUnderlineColorAttributeName", "__Internal")]
		NSString NSUnderlineColorAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSStrikethroughColorAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSStrikethroughColorAttributeName", "__Internal")]
		NSString NSStrikethroughColorAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSObliquenessAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSObliquenessAttributeName", "__Internal")]
		NSString NSObliquenessAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSExpansionAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSExpansionAttributeName", "__Internal")]
		NSString NSExpansionAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSWritingDirectionAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 6), iOS (7, 0)]
		[Field ("NSWritingDirectionAttributeName", "__Internal")]
		NSString NSWritingDirectionAttributeName { get; }

		// extern const NSAttributedStringKey _Nonnull NSVerticalGlyphFormAttributeName __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 7), iOS (6, 0)]
		[Field ("NSVerticalGlyphFormAttributeName", "__Internal")]
		NSString NSVerticalGlyphFormAttributeName { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSTextEffectStyle _Nonnull NSTextEffectLetterpressStyle __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.10))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 10), iOS (7, 0)]
		[Field ("NSTextEffectLetterpressStyle", "__Internal")]
		NSString NSTextEffectLetterpressStyle { get; }
	}

	// @interface NSAttributedStringAttributeFixing (NSMutableAttributedString)
	[Category]
	[BaseType (typeof(NSMutableAttributedString))]
	interface NSMutableAttributedString_NSAttributedStringAttributeFixing
	{
		// -(void)fixAttributesInRange:(NSRange)range __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("fixAttributesInRange:")]
		void FixAttributesInRange (NSRange range);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSAttributedStringDocumentType _Nonnull NSPlainTextDocumentType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSPlainTextDocumentType", "__Internal")]
		NSString NSPlainTextDocumentType { get; }

		// extern const NSAttributedStringDocumentType _Nonnull NSRTFTextDocumentType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSRTFTextDocumentType", "__Internal")]
		NSString NSRTFTextDocumentType { get; }

		// extern const NSAttributedStringDocumentType _Nonnull NSRTFDTextDocumentType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSRTFDTextDocumentType", "__Internal")]
		NSString NSRTFDTextDocumentType { get; }

		// extern const NSAttributedStringDocumentType _Nonnull NSHTMLTextDocumentType __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSHTMLTextDocumentType", "__Internal")]
		NSString NSHTMLTextDocumentType { get; }

		// extern const NSTextLayoutSectionKey _Nonnull NSTextLayoutSectionOrientation __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 7), iOS (7, 0)]
		[Field ("NSTextLayoutSectionOrientation", "__Internal")]
		NSString NSTextLayoutSectionOrientation { get; }

		// extern const NSTextLayoutSectionKey _Nonnull NSTextLayoutSectionRange __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 7), iOS (7, 0)]
		[Field ("NSTextLayoutSectionRange", "__Internal")]
		NSString NSTextLayoutSectionRange { get; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSDocumentTypeDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSDocumentTypeDocumentAttribute", "__Internal")]
		NSString NSDocumentTypeDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSCharacterEncodingDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSCharacterEncodingDocumentAttribute", "__Internal")]
		NSString NSCharacterEncodingDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSDefaultAttributesDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Field ("NSDefaultAttributesDocumentAttribute", "__Internal")]
		NSString NSDefaultAttributesDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSPaperSizeDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSPaperSizeDocumentAttribute", "__Internal")]
		NSString NSPaperSizeDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSPaperMarginDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Field ("NSPaperMarginDocumentAttribute", "__Internal")]
		NSString NSPaperMarginDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSViewSizeDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSViewSizeDocumentAttribute", "__Internal")]
		NSString NSViewSizeDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSViewZoomDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSViewZoomDocumentAttribute", "__Internal")]
		NSString NSViewZoomDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSViewModeDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSViewModeDocumentAttribute", "__Internal")]
		NSString NSViewModeDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSReadOnlyDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSReadOnlyDocumentAttribute", "__Internal")]
		NSString NSReadOnlyDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSBackgroundColorDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSBackgroundColorDocumentAttribute", "__Internal")]
		NSString NSBackgroundColorDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSHyphenationFactorDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSHyphenationFactorDocumentAttribute", "__Internal")]
		NSString NSHyphenationFactorDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSDefaultTabIntervalDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSDefaultTabIntervalDocumentAttribute", "__Internal")]
		NSString NSDefaultTabIntervalDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSTextLayoutSectionsAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 7), iOS (7, 0)]
		[Field ("NSTextLayoutSectionsAttribute", "__Internal")]
		NSString NSTextLayoutSectionsAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSTextScalingDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("NSTextScalingDocumentAttribute", "__Internal")]
		NSString NSTextScalingDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSSourceTextScalingDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("NSSourceTextScalingDocumentAttribute", "__Internal")]
		NSString NSSourceTextScalingDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentAttributeKey _Nonnull NSCocoaVersionDocumentAttribute __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 4), iOS (13, 0)]
		[Field ("NSCocoaVersionDocumentAttribute", "__Internal")]
		NSString NSCocoaVersionDocumentAttribute { get; }

		// extern const NSAttributedStringDocumentReadingOptionKey _Nonnull NSDocumentTypeDocumentOption __attribute__((visibility("default")));
		[Field ("NSDocumentTypeDocumentOption", "__Internal")]
		NSString NSDocumentTypeDocumentOption { get; }

		// extern const NSAttributedStringDocumentReadingOptionKey _Nonnull NSDefaultAttributesDocumentOption __attribute__((visibility("default")));
		[Field ("NSDefaultAttributesDocumentOption", "__Internal")]
		NSString NSDefaultAttributesDocumentOption { get; }

		// extern const NSAttributedStringDocumentReadingOptionKey _Nonnull NSCharacterEncodingDocumentOption __attribute__((visibility("default")));
		[Field ("NSCharacterEncodingDocumentOption", "__Internal")]
		NSString NSCharacterEncodingDocumentOption { get; }

		// extern const NSAttributedStringDocumentReadingOptionKey _Nonnull NSTargetTextScalingDocumentOption __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("NSTargetTextScalingDocumentOption", "__Internal")]
		NSString NSTargetTextScalingDocumentOption { get; }

		// extern const NSAttributedStringDocumentReadingOptionKey _Nonnull NSSourceTextScalingDocumentOption __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0)));
		[Mac (10, 15), iOS (13, 0)]
		[Field ("NSSourceTextScalingDocumentOption", "__Internal")]
		NSString NSSourceTextScalingDocumentOption { get; }
	}

	// @interface NSAttributedStringDocumentFormats (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSAttributedStringDocumentFormats
	{
		// -(instancetype _Nullable)initWithURL:(NSURL * _Nonnull)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey,id> * _Nonnull)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.4))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,4), iOS (9,0)]
		[Export ("initWithURL:options:documentAttributes:error:")]
		IntPtr Constructor (NSUrl url, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);

		// -(instancetype _Nullable)initWithData:(NSData * _Nonnull)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey,id> * _Nonnull)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("initWithData:options:documentAttributes:error:")]
		IntPtr Constructor (NSData data, NSDictionary<NSString, NSObject> options, [NullAllowed] out NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);

		// -(NSData * _Nullable)dataFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nonnull)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("dataFromRange:documentAttributes:error:")]
		[return: NullAllowed]
		NSData DataFromRange (NSRange range, NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);

		// -(NSFileWrapper * _Nullable)fileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nonnull)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("fileWrapperFromRange:documentAttributes:error:")]
		[return: NullAllowed]
		NSFileWrapper FileWrapperFromRange (NSRange range, NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);
	}

	// @interface NSMutableAttributedStringDocumentFormats (NSMutableAttributedString)
	[Category]
	[BaseType (typeof(NSMutableAttributedString))]
	interface NSMutableAttributedString_NSMutableAttributedStringDocumentFormats
	{
		// -(int)readFromURL:(NSURL * _Nonnull)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey,id> * _Nonnull)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,5), iOS (9,0)]
		[Export ("readFromURL:options:documentAttributes:error:")]
		int ReadFromURL (NSUrl url, NSDictionary<NSString, NSObject> opts, [NullAllowed] out NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);

		// -(int)readFromData:(NSData * _Nonnull)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey,id> * _Nonnull)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey,id> * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("readFromData:options:documentAttributes:error:")]
		int ReadFromData (NSData data, NSDictionary<NSString, NSObject> opts, [NullAllowed] out NSDictionary<NSString, NSObject> dict, [NullAllowed] out NSError error);
	}

	// @interface NSAttributedStringKitAdditions (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSAttributedStringKitAdditions
	{
		// -(int)containsAttachmentsInRange:(NSRange)range __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,11), iOS (9,0)]
		[Export ("containsAttachmentsInRange:")]
		int ContainsAttachmentsInRange (NSRange range);
	}

	// @interface NSAttributedString_ItemProvider (NSAttributedString) <NSItemProviderReading, NSItemProviderWriting>
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSAttributedString_ItemProvider : INSItemProviderReading, INSItemProviderWriting
	{
	}

	// @interface NSDeprecatedKitAdditions (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSDeprecatedKitAdditions
	{
		// -(instancetype _Nullable)initWithFileURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nonnull)options documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=7.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Export ("initWithFileURL:options:documentAttributes:error:")]
		IntPtr Constructor (NSUrl url, NSDictionary options, [NullAllowed] out NSDictionary dict, [NullAllowed] out NSError error);
	}

	// @interface NSDeprecatedKitAdditions (NSMutableAttributedString)
	[Category]
	[BaseType (typeof(NSMutableAttributedString))]
	interface NSMutableAttributedString_NSDeprecatedKitAdditions
	{
		// -(int)readFromFileURL:(NSURL * _Nonnull)url options:(NSDictionary * _Nonnull)opts documentAttributes:(NSDictionary * _Nullable * _Nullable)dict error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=7.0, deprecated=9.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 9, 0)]
		[NoTV]
		[Export ("readFromFileURL:options:documentAttributes:error:")]
		int ReadFromFileURL (NSUrl url, NSDictionary opts, [NullAllowed] out NSDictionary dict, [NullAllowed] out NSError error);
	}

	// audit-objc-generics: @interface NSLayoutAnchor<AnchorType> : NSObject <NSCopying, NSCoding>
	[Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface NSLayoutAnchor : INSCopying, INSCoding
	{
		// -(NSLayoutConstraint * _Nonnull)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor __attribute__((warn_unused_result));
		[Export ("constraintEqualToAnchor:")]
		NSLayoutConstraint ConstraintEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor __attribute__((warn_unused_result));
		[Export ("constraintGreaterThanOrEqualToAnchor:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor __attribute__((warn_unused_result));
		[Export ("constraintLessThanOrEqualToAnchor:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor);

		// -(NSLayoutConstraint * _Nonnull)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintEqualToAnchor:constant:")]
		NSLayoutConstraint ConstraintEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor, nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintGreaterThanOrEqualToAnchor:constant:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor, nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> * _Nonnull)anchor constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintLessThanOrEqualToAnchor:constant:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (NSLayoutAnchor`1<NSObject> anchor, nfloat c);

		// @property (readonly, copy) NSString * _Nonnull name __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 12)]
		[Export ("name")]
		string Name { get; }

		// @property (readonly, weak) id _Nullable item __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 12)]
		[NullAllowed, Export ("item", ArgumentSemantic.Weak)]
		NSObject Item { get; }

		// @property (readonly) int hasAmbiguousLayout __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 12)]
		[Export ("hasAmbiguousLayout")]
		int HasAmbiguousLayout { get; }

		// @property (readonly) NSArray<NSLayoutConstraint *> * _Nonnull constraintsAffectingLayout __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, unavailable))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, NoiOS, Mac (10, 12)]
		[Export ("constraintsAffectingLayout")]
		NSLayoutConstraint[] ConstraintsAffectingLayout { get; }
	}

	// @interface NSLayoutXAxisAnchor : NSLayoutAnchor
	[Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSLayoutAnchor`1))]
	interface NSLayoutXAxisAnchor
	{
		// -(NSLayoutDimension * _Nonnull)anchorWithOffsetToAnchor:(NSLayoutXAxisAnchor * _Nonnull)otherAnchor __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(tvos, introduced=10.0)));
		[TV (10,0), Mac (10,12), iOS (10,0)]
		[Export ("anchorWithOffsetToAnchor:")]
		NSLayoutDimension AnchorWithOffsetToAnchor (NSLayoutXAxisAnchor otherAnchor);
	}

	// @interface NSLayoutYAxisAnchor : NSLayoutAnchor
	[Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSLayoutAnchor`1))]
	interface NSLayoutYAxisAnchor
	{
		// -(NSLayoutDimension * _Nonnull)anchorWithOffsetToAnchor:(NSLayoutYAxisAnchor * _Nonnull)otherAnchor __attribute__((availability(macos, introduced=10.12))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(tvos, introduced=10.0)));
		[TV (10,0), Mac (10,12), iOS (10,0)]
		[Export ("anchorWithOffsetToAnchor:")]
		NSLayoutDimension AnchorWithOffsetToAnchor (NSLayoutYAxisAnchor otherAnchor);
	}

	// @interface NSLayoutDimension : NSLayoutAnchor
	[Mac (10,11), iOS (9,0)]
	[BaseType (typeof(NSLayoutAnchor`1))]
	interface NSLayoutDimension
	{
		// -(NSLayoutConstraint * _Nonnull)constraintEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintEqualToConstant:")]
		NSLayoutConstraint ConstraintEqualToConstant (nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintGreaterThanOrEqualToConstant:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToConstant (nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToConstant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintLessThanOrEqualToConstant:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToConstant (nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));
		[Export ("constraintEqualToAnchor:multiplier:")]
		NSLayoutConstraint ConstraintEqualToAnchor (NSLayoutDimension anchor, nfloat m);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));
		[Export ("constraintGreaterThanOrEqualToAnchor:multiplier:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (NSLayoutDimension anchor, nfloat m);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m __attribute__((warn_unused_result));
		[Export ("constraintLessThanOrEqualToAnchor:multiplier:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (NSLayoutDimension anchor, nfloat m);

		// -(NSLayoutConstraint * _Nonnull)constraintEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintEqualToAnchor:multiplier:constant:")]
		NSLayoutConstraint ConstraintEqualToAnchor (NSLayoutDimension anchor, nfloat m, nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintGreaterThanOrEqualToAnchor:multiplier:constant:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToAnchor (NSLayoutDimension anchor, nfloat m, nfloat c);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToAnchor:(NSLayoutDimension * _Nonnull)anchor multiplier:(CGFloat)m constant:(CGFloat)c __attribute__((warn_unused_result));
		[Export ("constraintLessThanOrEqualToAnchor:multiplier:constant:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToAnchor (NSLayoutDimension anchor, nfloat m, nfloat c);
	}

	// @interface UIViewDynamicSystemSpacingSupport (NSLayoutXAxisAnchor)
	[Category]
	[BaseType (typeof(NSLayoutXAxisAnchor))]
	interface NSLayoutXAxisAnchor_UIViewDynamicSystemSpacingSupport
	{
		// -(NSLayoutConstraint * _Nonnull)constraintEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintEqualToSystemSpacingAfterAnchor:multiplier:")]
		NSLayoutConstraint ConstraintEqualToSystemSpacingAfterAnchor (NSLayoutXAxisAnchor anchor, nfloat multiplier);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToSystemSpacingAfterAnchor (NSLayoutXAxisAnchor anchor, nfloat multiplier);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToSystemSpacingAfterAnchor (NSLayoutXAxisAnchor anchor, nfloat multiplier);
	}

	// @interface UIViewDynamicSystemSpacingSupport (NSLayoutYAxisAnchor)
	[Category]
	[BaseType (typeof(NSLayoutYAxisAnchor))]
	interface NSLayoutYAxisAnchor_UIViewDynamicSystemSpacingSupport
	{
		// -(NSLayoutConstraint * _Nonnull)constraintEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintEqualToSystemSpacingBelowAnchor:multiplier:")]
		NSLayoutConstraint ConstraintEqualToSystemSpacingBelowAnchor (NSLayoutYAxisAnchor anchor, nfloat multiplier);

		// -(NSLayoutConstraint * _Nonnull)constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:")]
		NSLayoutConstraint ConstraintGreaterThanOrEqualToSystemSpacingBelowAnchor (NSLayoutYAxisAnchor anchor, nfloat multiplier);

		// -(NSLayoutConstraint * _Nonnull)constraintLessThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor * _Nonnull)anchor multiplier:(CGFloat)multiplier __attribute__((warn_unused_result)) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:")]
		NSLayoutConstraint ConstraintLessThanOrEqualToSystemSpacingBelowAnchor (NSLayoutYAxisAnchor anchor, nfloat multiplier);
	}

	// @interface UIStackView : UIView
	[iOS (9,0)]
	[BaseType (typeof(UIView))]
	interface UIStackView
	{
		// -(instancetype _Nonnull)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
		[Export ("initWithFrame:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGRect frame);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// -(instancetype _Nonnull)initWithArrangedSubviews:(NSArray<__kindof UIView *> * _Nonnull)views;
		[Export ("initWithArrangedSubviews:")]
		IntPtr Constructor (UIView[] views);

		// @property (readonly, copy, nonatomic) NSArray<__kindof UIView *> * _Nonnull arrangedSubviews;
		[Export ("arrangedSubviews", ArgumentSemantic.Copy)]
		UIView[] ArrangedSubviews { get; }

		// -(void)addArrangedSubview:(UIView * _Nonnull)view;
		[Export ("addArrangedSubview:")]
		void AddArrangedSubview (UIView view);

		// -(void)removeArrangedSubview:(UIView * _Nonnull)view;
		[Export ("removeArrangedSubview:")]
		void RemoveArrangedSubview (UIView view);

		// -(void)insertArrangedSubview:(UIView * _Nonnull)view atIndex:(NSUInteger)stackIndex;
		[Export ("insertArrangedSubview:atIndex:")]
		void InsertArrangedSubview (UIView view, nuint stackIndex);

		// @property (nonatomic) UILayoutConstraintAxis axis;
		[Export ("axis", ArgumentSemantic.Assign)]
		UILayoutConstraintAxis Axis { get; set; }

		// @property (nonatomic) UIStackViewDistribution distribution;
		[Export ("distribution", ArgumentSemantic.Assign)]
		UIStackViewDistribution Distribution { get; set; }

		// @property (nonatomic) UIStackViewAlignment alignment;
		[Export ("alignment", ArgumentSemantic.Assign)]
		UIStackViewAlignment Alignment { get; set; }

		// @property (nonatomic) CGFloat spacing;
		[Export ("spacing")]
		nfloat Spacing { get; set; }

		// -(void)setCustomSpacing:(CGFloat)spacing afterView:(UIView * _Nonnull)arrangedSubview __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("setCustomSpacing:afterView:")]
		void SetCustomSpacing (nfloat spacing, UIView arrangedSubview);

		// -(CGFloat)customSpacingAfterView:(UIView * _Nonnull)arrangedSubview __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, introduced=11.0)));
		[TV (11,0), iOS (11,0)]
		[Export ("customSpacingAfterView:")]
		nfloat CustomSpacingAfterView (UIView arrangedSubview);

		// @property (getter = isBaselineRelativeArrangement, nonatomic) int baselineRelativeArrangement;
		[Export ("baselineRelativeArrangement")]
		int BaselineRelativeArrangement { [Bind ("isBaselineRelativeArrangement")] get; set; }

		// @property (getter = isLayoutMarginsRelativeArrangement, nonatomic) int layoutMarginsRelativeArrangement;
		[Export ("layoutMarginsRelativeArrangement")]
		int LayoutMarginsRelativeArrangement { [Bind ("isLayoutMarginsRelativeArrangement")] get; set; }
	}

	// @interface NSTextStorage : NSMutableAttributedString <NSSecureCoding>
	[Mac (10,0), iOS (7,0)]
	[BaseType (typeof(NSMutableAttributedString))]
	interface NSTextStorage : INSSecureCoding
	{
		// @property (readonly, copy, nonatomic) NSArray<NSLayoutManager *> * _Nonnull layoutManagers;
		[Export ("layoutManagers", ArgumentSemantic.Copy)]
		NSLayoutManager[] LayoutManagers { get; }

		// -(void)addLayoutManager:(NSLayoutManager * _Nonnull)aLayoutManager;
		[Export ("addLayoutManager:")]
		void AddLayoutManager (NSLayoutManager aLayoutManager);

		// -(void)removeLayoutManager:(NSLayoutManager * _Nonnull)aLayoutManager;
		[Export ("removeLayoutManager:")]
		void RemoveLayoutManager (NSLayoutManager aLayoutManager);

		// @property (readonly, nonatomic) NSTextStorageEditActions editedMask;
		[Export ("editedMask")]
		NSTextStorageEditActions EditedMask { get; }

		// @property (readonly, nonatomic) NSRange editedRange;
		[Export ("editedRange")]
		NSRange EditedRange { get; }

		// @property (readonly, nonatomic) NSInteger changeInLength;
		[Export ("changeInLength")]
		nint ChangeInLength { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSTextStorageDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<NSTextStorageDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(void)edited:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta;
		[Export ("edited:range:changeInLength:")]
		void Edited (NSTextStorageEditActions editedMask, NSRange editedRange, nint delta);

		// -(void)processEditing;
		[Export ("processEditing")]
		void ProcessEditing ();

		// @property (readonly, nonatomic) int fixesAttributesLazily;
		[Export ("fixesAttributesLazily")]
		int FixesAttributesLazily { get; }

		// -(void)invalidateAttributesInRange:(NSRange)range;
		[Export ("invalidateAttributesInRange:")]
		void InvalidateAttributesInRange (NSRange range);

		// -(void)ensureAttributesAreFixedInRange:(NSRange)range;
		[Export ("ensureAttributesAreFixedInRange:")]
		void EnsureAttributesAreFixedInRange (NSRange range);
	}

	// @protocol NSTextStorageDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSTextStorageDelegate
	{
		// @optional -(void)textStorage:(NSTextStorage * _Nonnull)textStorage willProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("textStorage:willProcessEditing:range:changeInLength:")]
		void WillProcessEditing (NSTextStorage textStorage, NSTextStorageEditActions editedMask, NSRange editedRange, nint delta);

		// @optional -(void)textStorage:(NSTextStorage * _Nonnull)textStorage didProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("textStorage:didProcessEditing:range:changeInLength:")]
		void DidProcessEditing (NSTextStorage textStorage, NSTextStorageEditActions editedMask, NSRange editedRange, nint delta);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull NSTextStorageWillProcessEditingNotification __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSTextStorageWillProcessEditingNotification", "__Internal")]
		NSString NSTextStorageWillProcessEditingNotification { get; }

		// extern const NSNotificationName _Nonnull NSTextStorageDidProcessEditingNotification __attribute__((visibility("default"))) __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 0), iOS (7, 0)]
		[Field ("NSTextStorageDidProcessEditingNotification", "__Internal")]
		NSString NSTextStorageDidProcessEditingNotification { get; }
	}

	// @protocol NSTextLayoutOrientationProvider
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	interface NSTextLayoutOrientationProvider
	{
		// @required @property (readonly, nonatomic) NSTextLayoutOrientation layoutOrientation __attribute__((availability(macos, introduced=10.7))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 7), iOS (7, 0)]
		[Abstract]
		[Export ("layoutOrientation")]
		NSTextLayoutOrientation LayoutOrientation { get; }
	}

	// @interface NSLayoutManager : NSObject <NSSecureCoding>
	[Mac (10,0), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSLayoutManager : INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (assign, nonatomic) NSTextStorage * _Nullable textStorage;
		[NullAllowed, Export ("textStorage", ArgumentSemantic.Assign)]
		NSTextStorage TextStorage { get; set; }

		// @property (readonly, nonatomic) NSArray<NSTextContainer *> * _Nonnull textContainers;
		[Export ("textContainers")]
		NSTextContainer[] TextContainers { get; }

		// -(void)addTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("addTextContainer:")]
		void AddTextContainer (NSTextContainer container);

		// -(void)insertTextContainer:(NSTextContainer * _Nonnull)container atIndex:(NSUInteger)index;
		[Export ("insertTextContainer:atIndex:")]
		void InsertTextContainer (NSTextContainer container, nuint index);

		// -(void)removeTextContainerAtIndex:(NSUInteger)index;
		[Export ("removeTextContainerAtIndex:")]
		void RemoveTextContainerAtIndex (nuint index);

		// -(void)textContainerChangedGeometry:(NSTextContainer * _Nonnull)container;
		[Export ("textContainerChangedGeometry:")]
		void TextContainerChangedGeometry (NSTextContainer container);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		NSLayoutManagerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<NSLayoutManagerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic) int showsInvisibleCharacters;
		[Export ("showsInvisibleCharacters")]
		int ShowsInvisibleCharacters { get; set; }

		// @property (nonatomic) int showsControlCharacters;
		[Export ("showsControlCharacters")]
		int ShowsControlCharacters { get; set; }

		// @property (nonatomic) int usesFontLeading;
		[Export ("usesFontLeading")]
		int UsesFontLeading { get; set; }

		// @property (nonatomic) int allowsNonContiguousLayout __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 5), iOS (7, 0)]
		[Export ("allowsNonContiguousLayout")]
		int AllowsNonContiguousLayout { get; set; }

		// @property (readonly, nonatomic) int hasNonContiguousLayout __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 5), iOS (7, 0)]
		[Export ("hasNonContiguousLayout")]
		int HasNonContiguousLayout { get; }

		// @property int limitsLayoutForSuspiciousContents __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=12.0))) __attribute__((availability(watchos, introduced=5.0))) __attribute__((availability(tvos, introduced=12.0)));
		[Watch (5, 0), TV (12, 0), Mac (10, 14), iOS (12, 0)]
		[Export ("limitsLayoutForSuspiciousContents")]
		int LimitsLayoutForSuspiciousContents { get; set; }

		// @property int usesDefaultHyphenation __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6, 0), TV (13, 0), Mac (10, 15), iOS (13, 0)]
		[Export ("usesDefaultHyphenation")]
		int UsesDefaultHyphenation { get; set; }

		// -(void)invalidateGlyphsForCharacterRange:(NSRange)charRange changeInLength:(NSInteger)delta actualCharacterRange:(NSRangePointer _Nullable)actualCharRange;
		[Export ("invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:")]
		unsafe void InvalidateGlyphsForCharacterRange (NSRange charRange, nint delta, [NullAllowed] NSRangePointer* actualCharRange);

		// -(void)invalidateLayoutForCharacterRange:(NSRange)charRange actualCharacterRange:(NSRangePointer _Nullable)actualCharRange __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,5), iOS (7,0)]
		[Export ("invalidateLayoutForCharacterRange:actualCharacterRange:")]
		unsafe void InvalidateLayoutForCharacterRange (NSRange charRange, [NullAllowed] NSRangePointer* actualCharRange);

		// -(void)invalidateDisplayForCharacterRange:(NSRange)charRange;
		[Export ("invalidateDisplayForCharacterRange:")]
		void InvalidateDisplayForCharacterRange (NSRange charRange);

		// -(void)invalidateDisplayForGlyphRange:(NSRange)glyphRange;
		[Export ("invalidateDisplayForGlyphRange:")]
		void InvalidateDisplayForGlyphRange (NSRange glyphRange);

		// -(void)processEditingForTextStorage:(NSTextStorage * _Nonnull)textStorage edited:(NSTextStorageEditActions)editMask range:(NSRange)newCharRange changeInLength:(NSInteger)delta invalidatedRange:(NSRange)invalidatedCharRange __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:")]
		void ProcessEditingForTextStorage (NSTextStorage textStorage, NSTextStorageEditActions editMask, NSRange newCharRange, nint delta, NSRange invalidatedCharRange);

		// -(void)ensureGlyphsForCharacterRange:(NSRange)charRange;
		[Export ("ensureGlyphsForCharacterRange:")]
		void EnsureGlyphsForCharacterRange (NSRange charRange);

		// -(void)ensureGlyphsForGlyphRange:(NSRange)glyphRange;
		[Export ("ensureGlyphsForGlyphRange:")]
		void EnsureGlyphsForGlyphRange (NSRange glyphRange);

		// -(void)ensureLayoutForCharacterRange:(NSRange)charRange;
		[Export ("ensureLayoutForCharacterRange:")]
		void EnsureLayoutForCharacterRange (NSRange charRange);

		// -(void)ensureLayoutForGlyphRange:(NSRange)glyphRange;
		[Export ("ensureLayoutForGlyphRange:")]
		void EnsureLayoutForGlyphRange (NSRange glyphRange);

		// -(void)ensureLayoutForTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("ensureLayoutForTextContainer:")]
		void EnsureLayoutForTextContainer (NSTextContainer container);

		// -(void)ensureLayoutForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("ensureLayoutForBoundingRect:inTextContainer:")]
		void EnsureLayoutForBoundingRect (CGRect bounds, NSTextContainer container);

		// -(void)setGlyphs:(const CGGlyph * _Nonnull)glyphs properties:(const NSGlyphProperty * _Nonnull)props characterIndexes:(const NSUInteger * _Nonnull)charIndexes font:(UIFont * _Nonnull)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("setGlyphs:properties:characterIndexes:font:forGlyphRange:")]
		unsafe void SetGlyphs (ushort* glyphs, NSGlyphProperty* props, nuint* charIndexes, UIFont aFont, NSRange glyphRange);

		// @property (readonly, nonatomic) NSUInteger numberOfGlyphs;
		[Export ("numberOfGlyphs")]
		nuint NumberOfGlyphs { get; }

		// -(CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(int * _Nullable)isValidIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("CGGlyphAtIndex:isValidIndex:")]
		unsafe ushort CGGlyphAtIndex (nuint glyphIndex, [NullAllowed] int* isValidIndex);

		// -(CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("CGGlyphAtIndex:")]
		ushort CGGlyphAtIndex (nuint glyphIndex);

		// -(int)isValidGlyphIndex:(NSUInteger)glyphIndex __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(watchos, introduced=2.0))) __attribute__((availability(tvos, introduced=9.0)));
		[Watch (2,0), TV (9,0), Mac (10,0), iOS (7,0)]
		[Export ("isValidGlyphIndex:")]
		int IsValidGlyphIndex (nuint glyphIndex);

		// -(NSGlyphProperty)propertyForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,5), iOS (7,0)]
		[Export ("propertyForGlyphAtIndex:")]
		NSGlyphProperty PropertyForGlyphAtIndex (nuint glyphIndex);

		// -(NSUInteger)characterIndexForGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("characterIndexForGlyphAtIndex:")]
		nuint CharacterIndexForGlyphAtIndex (nuint glyphIndex);

		// -(NSUInteger)glyphIndexForCharacterAtIndex:(NSUInteger)charIndex;
		[Export ("glyphIndexForCharacterAtIndex:")]
		nuint GlyphIndexForCharacterAtIndex (nuint charIndex);

		// -(NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(CGGlyph * _Nullable)glyphBuffer properties:(NSGlyphProperty * _Nullable)props characterIndexes:(NSUInteger * _Nullable)charIndexBuffer bidiLevels:(unsigned char * _Nullable)bidiLevelBuffer __attribute__((availability(macos, introduced=10.5))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,5), iOS (7,0)]
		[Export ("getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:")]
		unsafe nuint GetGlyphsInRange (NSRange glyphRange, [NullAllowed] ushort* glyphBuffer, [NullAllowed] NSGlyphProperty* props, [NullAllowed] nuint* charIndexBuffer, [NullAllowed] byte* bidiLevelBuffer);

		// -(void)setTextContainer:(NSTextContainer * _Nonnull)container forGlyphRange:(NSRange)glyphRange;
		[Export ("setTextContainer:forGlyphRange:")]
		void SetTextContainer (NSTextContainer container, NSRange glyphRange);

		// -(void)setLineFragmentRect:(CGRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(CGRect)usedRect;
		[Export ("setLineFragmentRect:forGlyphRange:usedRect:")]
		void SetLineFragmentRect (CGRect fragmentRect, NSRange glyphRange, CGRect usedRect);

		// -(void)setExtraLineFragmentRect:(CGRect)fragmentRect usedRect:(CGRect)usedRect textContainer:(NSTextContainer * _Nonnull)container;
		[Export ("setExtraLineFragmentRect:usedRect:textContainer:")]
		void SetExtraLineFragmentRect (CGRect fragmentRect, CGRect usedRect, NSTextContainer container);

		// -(void)setLocation:(CGPoint)location forStartOfGlyphRange:(NSRange)glyphRange;
		[Export ("setLocation:forStartOfGlyphRange:")]
		void SetLocation (CGPoint location, NSRange glyphRange);

		// -(void)setNotShownAttribute:(int)flag forGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("setNotShownAttribute:forGlyphAtIndex:")]
		void SetNotShownAttribute (int flag, nuint glyphIndex);

		// -(void)setDrawsOutsideLineFragment:(int)flag forGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("setDrawsOutsideLineFragment:forGlyphAtIndex:")]
		void SetDrawsOutsideLineFragment (int flag, nuint glyphIndex);

		// -(void)setAttachmentSize:(CGSize)attachmentSize forGlyphRange:(NSRange)glyphRange;
		[Export ("setAttachmentSize:forGlyphRange:")]
		void SetAttachmentSize (CGSize attachmentSize, NSRange glyphRange);

		// -(void)getFirstUnlaidCharacterIndex:(NSUInteger * _Nullable)charIndex glyphIndex:(NSUInteger * _Nullable)glyphIndex;
		[Export ("getFirstUnlaidCharacterIndex:glyphIndex:")]
		unsafe void GetFirstUnlaidCharacterIndex ([NullAllowed] nuint* charIndex, [NullAllowed] nuint* glyphIndex);

		// -(NSUInteger)firstUnlaidCharacterIndex;
		[Export ("firstUnlaidCharacterIndex")]
		[Verify (MethodToProperty)]
		nuint FirstUnlaidCharacterIndex { get; }

		// -(NSUInteger)firstUnlaidGlyphIndex;
		[Export ("firstUnlaidGlyphIndex")]
		[Verify (MethodToProperty)]
		nuint FirstUnlaidGlyphIndex { get; }

		// -(NSTextContainer * _Nullable)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange;
		[Export ("textContainerForGlyphAtIndex:effectiveRange:")]
		[return: NullAllowed]
		unsafe NSTextContainer TextContainerForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange);

		// -(NSTextContainer * _Nullable)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange withoutAdditionalLayout:(int)flag __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:")]
		[return: NullAllowed]
		unsafe NSTextContainer TextContainerForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange, int flag);

		// -(CGRect)usedRectForTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("usedRectForTextContainer:")]
		CGRect UsedRectForTextContainer (NSTextContainer container);

		// -(CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange;
		[Export ("lineFragmentRectForGlyphAtIndex:effectiveRange:")]
		unsafe CGRect LineFragmentRectForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange);

		// -(CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange withoutAdditionalLayout:(int)flag __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:")]
		unsafe CGRect LineFragmentRectForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange, int flag);

		// -(CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange;
		[Export ("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:")]
		unsafe CGRect LineFragmentUsedRectForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange);

		// -(CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(NSRangePointer _Nullable)effectiveGlyphRange withoutAdditionalLayout:(int)flag __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:")]
		unsafe CGRect LineFragmentUsedRectForGlyphAtIndex (nuint glyphIndex, [NullAllowed] NSRangePointer* effectiveGlyphRange, int flag);

		// @property (readonly, nonatomic) CGRect extraLineFragmentRect;
		[Export ("extraLineFragmentRect")]
		CGRect ExtraLineFragmentRect { get; }

		// @property (readonly, nonatomic) CGRect extraLineFragmentUsedRect;
		[Export ("extraLineFragmentUsedRect")]
		CGRect ExtraLineFragmentUsedRect { get; }

		// @property (readonly, nonatomic) NSTextContainer * _Nullable extraLineFragmentTextContainer;
		[NullAllowed, Export ("extraLineFragmentTextContainer")]
		NSTextContainer ExtraLineFragmentTextContainer { get; }

		// -(CGPoint)locationForGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("locationForGlyphAtIndex:")]
		CGPoint LocationForGlyphAtIndex (nuint glyphIndex);

		// -(int)notShownAttributeForGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("notShownAttributeForGlyphAtIndex:")]
		int NotShownAttributeForGlyphAtIndex (nuint glyphIndex);

		// -(int)drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("drawsOutsideLineFragmentForGlyphAtIndex:")]
		int DrawsOutsideLineFragmentForGlyphAtIndex (nuint glyphIndex);

		// -(CGSize)attachmentSizeForGlyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("attachmentSizeForGlyphAtIndex:")]
		CGSize AttachmentSizeForGlyphAtIndex (nuint glyphIndex);

		// -(NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("truncatedGlyphRangeInLineFragmentForGlyphAtIndex:")]
		NSRange TruncatedGlyphRangeInLineFragmentForGlyphAtIndex (nuint glyphIndex);

		// -(NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(NSRangePointer _Nullable)actualCharRange;
		[Export ("glyphRangeForCharacterRange:actualCharacterRange:")]
		unsafe NSRange GlyphRangeForCharacterRange (NSRange charRange, [NullAllowed] NSRangePointer* actualCharRange);

		// -(NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(NSRangePointer _Nullable)actualGlyphRange;
		[Export ("characterRangeForGlyphRange:actualGlyphRange:")]
		unsafe NSRange CharacterRangeForGlyphRange (NSRange glyphRange, [NullAllowed] NSRangePointer* actualGlyphRange);

		// -(NSRange)glyphRangeForTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("glyphRangeForTextContainer:")]
		NSRange GlyphRangeForTextContainer (NSTextContainer container);

		// -(NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger)glyphIndex;
		[Export ("rangeOfNominallySpacedGlyphsContainingIndex:")]
		NSRange RangeOfNominallySpacedGlyphsContainingIndex (nuint glyphIndex);

		// -(CGRect)boundingRectForGlyphRange:(NSRange)glyphRange inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("boundingRectForGlyphRange:inTextContainer:")]
		CGRect BoundingRectForGlyphRange (NSRange glyphRange, NSTextContainer container);

		// -(NSRange)glyphRangeForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("glyphRangeForBoundingRect:inTextContainer:")]
		NSRange GlyphRangeForBoundingRect (CGRect bounds, NSTextContainer container);

		// -(NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(CGRect)bounds inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:")]
		NSRange GlyphRangeForBoundingRectWithoutAdditionalLayout (CGRect bounds, NSTextContainer container);

		// -(NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer * _Nonnull)container fractionOfDistanceThroughGlyph:(CGFloat * _Nullable)partialFraction;
		[Export ("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:")]
		unsafe nuint GlyphIndexForPoint (CGPoint point, NSTextContainer container, [NullAllowed] nfloat* partialFraction);

		// -(NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("glyphIndexForPoint:inTextContainer:")]
		nuint GlyphIndexForPoint (CGPoint point, NSTextContainer container);

		// -(CGFloat)fractionOfDistanceThroughGlyphForPoint:(CGPoint)point inTextContainer:(NSTextContainer * _Nonnull)container;
		[Export ("fractionOfDistanceThroughGlyphForPoint:inTextContainer:")]
		nfloat FractionOfDistanceThroughGlyphForPoint (CGPoint point, NSTextContainer container);

		// -(NSUInteger)characterIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer * _Nonnull)container fractionOfDistanceBetweenInsertionPoints:(CGFloat * _Nullable)partialFraction;
		[Export ("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:")]
		unsafe nuint CharacterIndexForPoint (CGPoint point, NSTextContainer container, [NullAllowed] nfloat* partialFraction);

		// -(NSUInteger)getLineFragmentInsertionPointsForCharacterAtIndex:(NSUInteger)charIndex alternatePositions:(int)aFlag inDisplayOrder:(int)dFlag positions:(CGFloat * _Nullable)positions characterIndexes:(NSUInteger * _Nullable)charIndexes;
		[Export ("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:")]
		unsafe nuint GetLineFragmentInsertionPointsForCharacterAtIndex (nuint charIndex, int aFlag, int dFlag, [NullAllowed] nfloat* positions, [NullAllowed] nuint* charIndexes);

		// -(void)enumerateLineFragmentsForGlyphRange:(NSRange)glyphRange usingBlock:(void (^ _Nonnull)(CGRect, CGRect, NSTextContainer * _Nonnull, NSRange, int * _Nonnull))block __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("enumerateLineFragmentsForGlyphRange:usingBlock:")]
		unsafe void EnumerateLineFragmentsForGlyphRange (NSRange glyphRange, Action<CGRect, CGRect, NSTextContainer, NSRange, int*> block);

		// -(void)enumerateEnclosingRectsForGlyphRange:(NSRange)glyphRange withinSelectedGlyphRange:(NSRange)selectedRange inTextContainer:(NSTextContainer * _Nonnull)textContainer usingBlock:(void (^ _Nonnull)(CGRect, int * _Nonnull))block __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:")]
		unsafe void EnumerateEnclosingRectsForGlyphRange (NSRange glyphRange, NSRange selectedRange, NSTextContainer textContainer, Action<CGRect, int*> block);

		// -(void)drawBackgroundForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;
		[Export ("drawBackgroundForGlyphRange:atPoint:")]
		void DrawBackgroundForGlyphRange (NSRange glyphsToShow, CGPoint origin);

		// -(void)drawGlyphsForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;
		[Export ("drawGlyphsForGlyphRange:atPoint:")]
		void DrawGlyphsForGlyphRange (NSRange glyphsToShow, CGPoint origin);

		// -(void)showCGGlyphs:(const CGGlyph * _Nonnull)glyphs positions:(const CGPoint * _Nonnull)positions count:(NSInteger)glyphCount font:(UIFont * _Nonnull)font textMatrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSAttributedStringKey,id> * _Nonnull)attributes inContext:(CGContextRef _Nonnull)CGContext __attribute__((availability(macos, introduced=10.15))) __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(watchos, introduced=6.0))) __attribute__((availability(tvos, introduced=13.0)));
		[Watch (6,0), TV (13,0), Mac (10,15), iOS (13,0)]
		[Export ("showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:")]
		unsafe void ShowCGGlyphs (ushort* glyphs, CGPoint* positions, nint glyphCount, UIFont font, CGAffineTransform textMatrix, NSDictionary<NSString, NSObject> attributes, CGContextRef* CGContext);

		// -(void)fillBackgroundRectArray:(const CGRect * _Nonnull)rectArray count:(NSUInteger)rectCount forCharacterRange:(NSRange)charRange color:(UIColor * _Nonnull)color __attribute__((availability(macos, introduced=10.6))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,6), iOS (7,0)]
		[Export ("fillBackgroundRectArray:count:forCharacterRange:color:")]
		unsafe void FillBackgroundRectArray (CGRect* rectArray, nuint rectCount, NSRange charRange, UIColor color);

		// -(void)drawUnderlineForGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
		[Export ("drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:")]
		void DrawUnderlineForGlyphRange (NSRange glyphRange, NSUnderlineStyle underlineVal, nfloat baselineOffset, CGRect lineRect, NSRange lineGlyphRange, CGPoint containerOrigin);

		// -(void)underlineGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
		[Export ("underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:")]
		void UnderlineGlyphRange (NSRange glyphRange, NSUnderlineStyle underlineVal, CGRect lineRect, NSRange lineGlyphRange, CGPoint containerOrigin);

		// -(void)drawStrikethroughForGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
		[Export ("drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:")]
		void DrawStrikethroughForGlyphRange (NSRange glyphRange, NSUnderlineStyle strikethroughVal, nfloat baselineOffset, CGRect lineRect, NSRange lineGlyphRange, CGPoint containerOrigin);

		// -(void)strikethroughGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
		[Export ("strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:")]
		void StrikethroughGlyphRange (NSRange glyphRange, NSUnderlineStyle strikethroughVal, CGRect lineRect, NSRange lineGlyphRange, CGPoint containerOrigin);
	}

	// @protocol NSLayoutManagerDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface NSLayoutManagerDelegate
	{
		// @optional -(NSUInteger)layoutManager:(NSLayoutManager * _Nonnull)layoutManager shouldGenerateGlyphs:(const CGGlyph * _Nonnull)glyphs properties:(const NSGlyphProperty * _Nonnull)props characterIndexes:(const NSUInteger * _Nonnull)charIndexes font:(UIFont * _Nonnull)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:")]
		unsafe nuint LayoutManager (NSLayoutManager layoutManager, ushort* glyphs, NSGlyphProperty* props, nuint* charIndexes, UIFont aFont, NSRange glyphRange);

		// @optional -(CGFloat)layoutManager:(NSLayoutManager * _Nonnull)layoutManager lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")]
		nfloat LayoutManager (NSLayoutManager layoutManager, nuint glyphIndex, CGRect rect);

		// @optional -(CGFloat)layoutManager:(NSLayoutManager * _Nonnull)layoutManager paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:")]
		nfloat LayoutManager (NSLayoutManager layoutManager, nuint glyphIndex, CGRect rect);

		// @optional -(CGFloat)layoutManager:(NSLayoutManager * _Nonnull)layoutManager paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:")]
		nfloat LayoutManager (NSLayoutManager layoutManager, nuint glyphIndex, CGRect rect);

		// @optional -(NSControlCharacterAction)layoutManager:(NSLayoutManager * _Nonnull)layoutManager shouldUseAction:(NSControlCharacterAction)action forControlCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:shouldUseAction:forControlCharacterAtIndex:")]
		NSControlCharacterAction LayoutManager (NSLayoutManager layoutManager, NSControlCharacterAction action, nuint charIndex);

		// @optional -(int)layoutManager:(NSLayoutManager * _Nonnull)layoutManager shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:")]
		int LayoutManager (NSLayoutManager layoutManager, nuint charIndex);

		// @optional -(int)layoutManager:(NSLayoutManager * _Nonnull)layoutManager shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:")]
		int LayoutManager (NSLayoutManager layoutManager, nuint charIndex);

		// @optional -(CGRect)layoutManager:(NSLayoutManager * _Nonnull)layoutManager boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer * _Nonnull)textContainer proposedLineFragment:(CGRect)proposedRect glyphPosition:(CGPoint)glyphPosition characterIndex:(NSUInteger)charIndex __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:")]
		CGRect LayoutManager (NSLayoutManager layoutManager, nuint glyphIndex, NSTextContainer textContainer, CGRect proposedRect, CGPoint glyphPosition, nuint charIndex);

		// @optional -(int)layoutManager:(NSLayoutManager * _Nonnull)layoutManager shouldSetLineFragmentRect:(CGRect * _Nonnull)lineFragmentRect lineFragmentUsedRect:(CGRect * _Nonnull)lineFragmentUsedRect baselineOffset:(CGFloat * _Nonnull)baselineOffset inTextContainer:(NSTextContainer * _Nonnull)textContainer forGlyphRange:(NSRange)glyphRange __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,11), iOS (9,0)]
		[Export ("layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:")]
		unsafe int LayoutManager (NSLayoutManager layoutManager, CGRect* lineFragmentRect, CGRect* lineFragmentUsedRect, nfloat* baselineOffset, NSTextContainer textContainer, NSRange glyphRange);

		// @optional -(void)layoutManagerDidInvalidateLayout:(NSLayoutManager * _Nonnull)sender __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("layoutManagerDidInvalidateLayout:")]
		void LayoutManagerDidInvalidateLayout (NSLayoutManager sender);

		// @optional -(void)layoutManager:(NSLayoutManager * _Nonnull)layoutManager didCompleteLayoutForTextContainer:(NSTextContainer * _Nullable)textContainer atEnd:(int)layoutFinishedFlag __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("layoutManager:didCompleteLayoutForTextContainer:atEnd:")]
		void LayoutManager (NSLayoutManager layoutManager, [NullAllowed] NSTextContainer textContainer, int layoutFinishedFlag);

		// @optional -(void)layoutManager:(NSLayoutManager * _Nonnull)layoutManager textContainer:(NSTextContainer * _Nonnull)textContainer didChangeGeometryFromSize:(CGSize)oldSize __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("layoutManager:textContainer:didChangeGeometryFromSize:")]
		void LayoutManager (NSLayoutManager layoutManager, NSTextContainer textContainer, CGSize oldSize);
	}

	// @interface NSLayoutManagerDeprecated (NSLayoutManager)
	[Category]
	[BaseType (typeof(NSLayoutManager))]
	interface NSLayoutManager_NSLayoutManagerDeprecated
	{
		// -(CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(int * _Nullable)isValidIndex;
		[Export ("glyphAtIndex:isValidIndex:")]
		unsafe ushort GlyphAtIndex (nuint glyphIndex, [NullAllowed] int* isValidIndex);

		// -(CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex;
		[Export ("glyphAtIndex:")]
		ushort GlyphAtIndex (nuint glyphIndex);

		// @property CGFloat hyphenationFactor __attribute__((availability(macos, introduced=10.0, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0))) __attribute__((availability(macCatalyst, unavailable)));
		[Introduced (PlatformName.MacOSX, 10, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Deprecated (PlatformName.MacOSX, 10, 15, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Introduced (PlatformName.iOS, 7, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Deprecated (PlatformName.iOS, 13, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Introduced (PlatformName.WatchOS, 2, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Deprecated (PlatformName.WatchOS, 6, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Introduced (PlatformName.TvOS, 9, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Deprecated (PlatformName.TvOS, 13, 0, message: "Please use usesDefaultHyphenation or -[NSParagraphStyle hyphenationFactor] instead.")]
		[Unavailable (PlatformName.MacCatalyst)]
		[Advice ("This API is not available when using UIKit on macOS.")]
		[Export ("hyphenationFactor")]
		nfloat HyphenationFactor { get; set; }

		// -(void)showCGGlyphs:(const CGGlyph * _Nonnull)glyphs positions:(const CGPoint * _Nonnull)positions count:(NSUInteger)glyphCount font:(UIFont * _Nonnull)font matrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSAttributedStringKey,id> * _Nonnull)attributes inContext:(CGContextRef _Nonnull)graphicsContext __attribute__((availability(macos, introduced=10.7, deprecated=10.15))) __attribute__((availability(ios, introduced=7.0, deprecated=13.0))) __attribute__((availability(watchos, introduced=2.0, deprecated=6.0))) __attribute__((availability(tvos, introduced=9.0, deprecated=13.0))) __attribute__((availability(macCatalyst, unavailable)));
		[Introduced (PlatformName.MacOSX, 10, 7)]
		[Deprecated (PlatformName.MacOSX, 10, 15)]
		[Introduced (PlatformName.iOS, 7, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Introduced (PlatformName.WatchOS, 2, 0)]
		[Deprecated (PlatformName.WatchOS, 6, 0)]
		[Introduced (PlatformName.TvOS, 9, 0)]
		[Deprecated (PlatformName.TvOS, 13, 0)]
		[Unavailable (PlatformName.MacCatalyst)]
		[Advice ("This API is not available when using UIKit on macOS.")]
		[Export ("showCGGlyphs:positions:count:font:matrix:attributes:inContext:")]
		unsafe void ShowCGGlyphs (ushort* glyphs, CGPoint* positions, nuint glyphCount, UIFont font, CGAffineTransform textMatrix, NSDictionary<NSString, NSObject> attributes, CGContextRef* graphicsContext);
	}

	// @interface NSShadow : NSObject <NSCopying, NSSecureCoding>
	[iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface NSShadow : INSCopying, INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (assign, nonatomic) CGSize shadowOffset;
		[Export ("shadowOffset", ArgumentSemantic.Assign)]
		CGSize ShadowOffset { get; set; }

		// @property (assign, nonatomic) CGFloat shadowBlurRadius;
		[Export ("shadowBlurRadius")]
		nfloat ShadowBlurRadius { get; set; }

		// @property (nonatomic, strong) id _Nullable shadowColor;
		[NullAllowed, Export ("shadowColor", ArgumentSemantic.Strong)]
		NSObject ShadowColor { get; set; }
	}

	// @interface NSStringDrawingContext : NSObject
	[Mac (10,11), iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface NSStringDrawingContext
	{
		// @property (nonatomic) CGFloat minimumScaleFactor;
		[Export ("minimumScaleFactor")]
		nfloat MinimumScaleFactor { get; set; }

		// @property (readonly, nonatomic) CGFloat actualScaleFactor;
		[Export ("actualScaleFactor")]
		nfloat ActualScaleFactor { get; }

		// @property (readonly, nonatomic) CGRect totalBounds;
		[Export ("totalBounds")]
		CGRect TotalBounds { get; }
	}

	// @interface NSStringDrawing (NSString)
	[Category]
	[BaseType (typeof(NSString))]
	interface NSString_NSStringDrawing
	{
		// -(CGSize)sizeWithAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attrs __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("sizeWithAttributes:")]
		CGSize SizeWithAttributes ([NullAllowed] NSDictionary<NSString, NSObject> attrs);

		// -(void)drawAtPoint:(CGPoint)point withAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attrs __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("drawAtPoint:withAttributes:")]
		void DrawAtPoint (CGPoint point, [NullAllowed] NSDictionary<NSString, NSObject> attrs);

		// -(void)drawInRect:(CGRect)rect withAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attrs __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,0), iOS (7,0)]
		[Export ("drawInRect:withAttributes:")]
		void DrawInRect (CGRect rect, [NullAllowed] NSDictionary<NSString, NSObject> attrs);
	}

	// @interface NSStringDrawing (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSStringDrawing
	{
		// -(CGSize)size __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10, 0), iOS (6, 0)]
		[Export ("size")]
		[Verify (MethodToProperty)]
		CGSize Size { get; }

		// -(void)drawAtPoint:(CGPoint)point __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10,0), iOS (6,0)]
		[Export ("drawAtPoint:")]
		void DrawAtPoint (CGPoint point);

		// -(void)drawInRect:(CGRect)rect __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10,0), iOS (6,0)]
		[Export ("drawInRect:")]
		void DrawInRect (CGRect rect);
	}

	// @interface NSExtendedStringDrawing (NSString)
	[Category]
	[BaseType (typeof(NSString))]
	interface NSString_NSExtendedStringDrawing
	{
		// -(void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options attributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attributes context:(NSStringDrawingContext * _Nullable)context __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("drawWithRect:options:attributes:context:")]
		void DrawWithRect (CGRect rect, NSStringDrawingOptions options, [NullAllowed] NSDictionary<NSString, NSObject> attributes, [NullAllowed] NSStringDrawingContext context);

		// -(CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary<NSAttributedStringKey,id> * _Nullable)attributes context:(NSStringDrawingContext * _Nullable)context __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("boundingRectWithSize:options:attributes:context:")]
		CGRect BoundingRectWithSize (CGSize size, NSStringDrawingOptions options, [NullAllowed] NSDictionary<NSString, NSObject> attributes, [NullAllowed] NSStringDrawingContext context);
	}

	// @interface NSExtendedStringDrawing (NSAttributedString)
	[Category]
	[BaseType (typeof(NSAttributedString))]
	interface NSAttributedString_NSExtendedStringDrawing
	{
		// -(void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options context:(NSStringDrawingContext * _Nullable)context __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10,11), iOS (6,0)]
		[Export ("drawWithRect:options:context:")]
		void DrawWithRect (CGRect rect, NSStringDrawingOptions options, [NullAllowed] NSStringDrawingContext context);

		// -(CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options context:(NSStringDrawingContext * _Nullable)context __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=6.0)));
		[Mac (10,11), iOS (6,0)]
		[Export ("boundingRectWithSize:options:context:")]
		CGRect BoundingRectWithSize (CGSize size, NSStringDrawingOptions options, [NullAllowed] NSStringDrawingContext context);
	}

	// @interface NSStringDrawingContextDeprecated (NSStringDrawingContext)
	[Category]
	[BaseType (typeof(NSStringDrawingContext))]
	interface NSStringDrawingContext_NSStringDrawingContextDeprecated
	{
		// @property (nonatomic) CGFloat minimumTrackingAdjustment __attribute__((availability(ios, introduced=6.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("minimumTrackingAdjustment")]
		nfloat MinimumTrackingAdjustment { get; set; }

		// @property (readonly, nonatomic) CGFloat actualTrackingAdjustment __attribute__((availability(ios, introduced=6.0, deprecated=7.0))) __attribute__((availability(tvos, unavailable)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 7, 0)]
		[NoTV]
		[Export ("actualTrackingAdjustment")]
		nfloat ActualTrackingAdjustment { get; }
	}

	// @interface NSTextContainer : NSObject <NSSecureCoding, NSTextLayoutOrientationProvider>
	[Mac (10,0), iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface NSTextContainer : INSSecureCoding, INSTextLayoutOrientationProvider
	{
		// -(instancetype _Nonnull)initWithSize:(CGSize)size __attribute__((objc_designated_initializer)) __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("initWithSize:")]
		[DesignatedInitializer]
		IntPtr Constructor (CGSize size);

		// -(instancetype _Nonnull)initWithCoder:(NSCoder * _Nonnull)coder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder coder);

		// @property (assign, nonatomic) NSLayoutManager * _Nullable layoutManager;
		[NullAllowed, Export ("layoutManager", ArgumentSemantic.Assign)]
		NSLayoutManager LayoutManager { get; set; }

		// -(void)replaceLayoutManager:(NSLayoutManager * _Nonnull)newLayoutManager __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10,0), iOS (9,0)]
		[Export ("replaceLayoutManager:")]
		void ReplaceLayoutManager (NSLayoutManager newLayoutManager);

		// @property (nonatomic) CGSize size __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Export ("size", ArgumentSemantic.Assign)]
		CGSize Size { get; set; }

		// @property (copy, nonatomic) NSArray<UIBezierPath *> * _Nonnull exclusionPaths __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Export ("exclusionPaths", ArgumentSemantic.Copy)]
		UIBezierPath[] ExclusionPaths { get; set; }

		// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Export ("lineBreakMode", ArgumentSemantic.Assign)]
		NSLineBreakMode LineBreakMode { get; set; }

		// @property (nonatomic) CGFloat lineFragmentPadding;
		[Export ("lineFragmentPadding")]
		nfloat LineFragmentPadding { get; set; }

		// @property (nonatomic) NSUInteger maximumNumberOfLines __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10, 11), iOS (7, 0)]
		[Export ("maximumNumberOfLines")]
		nuint MaximumNumberOfLines { get; set; }

		// -(CGRect)lineFragmentRectForProposedRect:(CGRect)proposedRect atIndex:(NSUInteger)characterIndex writingDirection:(NSWritingDirection)baseWritingDirection remainingRect:(CGRect * _Nullable)remainingRect __attribute__((availability(macos, introduced=10.11))) __attribute__((availability(ios, introduced=7.0)));
		[Mac (10,11), iOS (7,0)]
		[Export ("lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:")]
		unsafe CGRect LineFragmentRectForProposedRect (CGRect proposedRect, nuint characterIndex, NSWritingDirection baseWritingDirection, [NullAllowed] CGRect* remainingRect);

		// @property (readonly, getter = isSimpleRectangularTextContainer, nonatomic) int simpleRectangularTextContainer __attribute__((availability(macos, introduced=10.0))) __attribute__((availability(ios, introduced=9.0)));
		[Mac (10, 0), iOS (9, 0)]
		[Export ("simpleRectangularTextContainer")]
		int SimpleRectangularTextContainer { [Bind ("isSimpleRectangularTextContainer")] get; }

		// @property (nonatomic) int widthTracksTextView;
		[Export ("widthTracksTextView")]
		int WidthTracksTextView { get; set; }

		// @property (nonatomic) int heightTracksTextView;
		[Export ("heightTracksTextView")]
		int HeightTracksTextView { get; set; }
	}

	// @interface UIPreviewInteraction : NSObject
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIPreviewInteraction
	{
		// -(instancetype _Nonnull)initWithView:(UIView * _Nonnull)view __attribute__((objc_designated_initializer));
		[Export ("initWithView:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIView view);

		// @property (readonly, nonatomic, weak) UIView * _Nullable view;
		[NullAllowed, Export ("view", ArgumentSemantic.Weak)]
		UIView View { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPreviewInteractionDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPreviewInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// -(CGPoint)locationInCoordinateSpace:(id<UICoordinateSpace> _Nullable)coordinateSpace;
		[Export ("locationInCoordinateSpace:")]
		CGPoint LocationInCoordinateSpace ([NullAllowed] UICoordinateSpace coordinateSpace);

		// -(void)cancelInteraction;
		[Export ("cancelInteraction")]
		void CancelInteraction ();
	}

	// @protocol UIPreviewInteractionDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPreviewInteractionDelegate
	{
		// @required -(void)previewInteraction:(UIPreviewInteraction * _Nonnull)previewInteraction didUpdatePreviewTransition:(CGFloat)transitionProgress ended:(int)ended __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (10,0)]
		[Abstract]
		[Export ("previewInteraction:didUpdatePreviewTransition:ended:")]
		void PreviewInteraction (UIPreviewInteraction previewInteraction, nfloat transitionProgress, int ended);

		// @required -(void)previewInteractionDidCancel:(UIPreviewInteraction * _Nonnull)previewInteraction __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (10,0)]
		[Abstract]
		[Export ("previewInteractionDidCancel:")]
		void PreviewInteractionDidCancel (UIPreviewInteraction previewInteraction);

		// @optional -(int)previewInteractionShouldBegin:(UIPreviewInteraction * _Nonnull)previewInteraction __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (10,0)]
		[Export ("previewInteractionShouldBegin:")]
		int PreviewInteractionShouldBegin (UIPreviewInteraction previewInteraction);

		// @optional -(void)previewInteraction:(UIPreviewInteraction * _Nonnull)previewInteraction didUpdateCommitTransition:(CGFloat)transitionProgress ended:(int)ended __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (10,0)]
		[Export ("previewInteraction:didUpdateCommitTransition:ended:")]
		void PreviewInteraction (UIPreviewInteraction previewInteraction, nfloat transitionProgress, int ended);
	}

	// @protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>
	[NoTV]
	[Protocol, Model (AutoGeneratedName = true)]
	interface UIPopoverPresentationControllerDelegate : IUIAdaptivePresentationControllerDelegate
	{
		// @optional -(void)prepareForPopoverPresentation:(UIPopoverPresentationController * _Nonnull)popoverPresentationController;
		[Export ("prepareForPopoverPresentation:")]
		void PrepareForPopoverPresentation (UIPopoverPresentationController popoverPresentationController);

		// @optional -(int)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController * _Nonnull)popoverPresentationController __attribute__((availability(ios, introduced=8.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("popoverPresentationControllerShouldDismissPopover:")]
		int PopoverPresentationControllerShouldDismissPopover (UIPopoverPresentationController popoverPresentationController);

		// @optional -(void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController * _Nonnull)popoverPresentationController __attribute__((availability(ios, introduced=8.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 8, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("popoverPresentationControllerDidDismissPopover:")]
		void PopoverPresentationControllerDidDismissPopover (UIPopoverPresentationController popoverPresentationController);

		// @optional -(void)popoverPresentationController:(UIPopoverPresentationController * _Nonnull)popoverPresentationController willRepositionPopoverToRect:(CGRect * _Nonnull)rect inView:(UIView * _Nonnull * _Nonnull)view;
		[Export ("popoverPresentationController:willRepositionPopoverToRect:inView:")]
		unsafe void PopoverPresentationController (UIPopoverPresentationController popoverPresentationController, CGRect* rect, out UIView view);
	}

	// @interface UIPopoverPresentationController : UIPresentationController
	[NoTV, iOS (8,0)]
	[BaseType (typeof(UIPresentationController))]
	interface UIPopoverPresentationController
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPopoverPresentationControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPopoverPresentationControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) UIPopoverArrowDirection permittedArrowDirections;
		[Export ("permittedArrowDirections", ArgumentSemantic.Assign)]
		UIPopoverArrowDirection PermittedArrowDirections { get; set; }

		// @property (nonatomic, strong) UIView * _Nullable sourceView;
		[NullAllowed, Export ("sourceView", ArgumentSemantic.Strong)]
		UIView SourceView { get; set; }

		// @property (assign, nonatomic) CGRect sourceRect;
		[Export ("sourceRect", ArgumentSemantic.Assign)]
		CGRect SourceRect { get; set; }

		// @property (assign, nonatomic) int canOverlapSourceViewRect __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("canOverlapSourceViewRect")]
		int CanOverlapSourceViewRect { get; set; }

		// @property (nonatomic, strong) UIBarButtonItem * _Nullable barButtonItem;
		[NullAllowed, Export ("barButtonItem", ArgumentSemantic.Strong)]
		UIBarButtonItem BarButtonItem { get; set; }

		// @property (readonly, nonatomic) UIPopoverArrowDirection arrowDirection;
		[Export ("arrowDirection")]
		UIPopoverArrowDirection ArrowDirection { get; }

		// @property (copy, nonatomic) NSArray<UIView *> * _Nullable passthroughViews;
		[NullAllowed, Export ("passthroughViews", ArgumentSemantic.Copy)]
		UIView[] PassthroughViews { get; set; }

		// @property (copy, nonatomic) UIColor * _Nullable backgroundColor;
		[NullAllowed, Export ("backgroundColor", ArgumentSemantic.Copy)]
		UIColor BackgroundColor { get; set; }

		// @property (readwrite, nonatomic) UIEdgeInsets popoverLayoutMargins;
		[Export ("popoverLayoutMargins", ArgumentSemantic.Assign)]
		UIEdgeInsets PopoverLayoutMargins { get; set; }

		// @property (readwrite, nonatomic, strong) Class<UIPopoverBackgroundViewMethods> _Nullable popoverBackgroundViewClass;
		[NullAllowed, Export ("popoverBackgroundViewClass", ArgumentSemantic.Strong)]
		UIPopoverBackgroundViewMethods PopoverBackgroundViewClass { get; set; }
	}

	// @protocol UIDynamicAnimatorDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDynamicAnimatorDelegate
	{
		// @optional -(void)dynamicAnimatorWillResume:(UIDynamicAnimator * _Nonnull)animator;
		[Export ("dynamicAnimatorWillResume:")]
		void DynamicAnimatorWillResume (UIDynamicAnimator animator);

		// @optional -(void)dynamicAnimatorDidPause:(UIDynamicAnimator * _Nonnull)animator;
		[Export ("dynamicAnimatorDidPause:")]
		void DynamicAnimatorDidPause (UIDynamicAnimator animator);
	}

	// @interface UIDynamicAnimator : NSObject
	[iOS (7,0)]
	[BaseType (typeof(NSObject))]
	interface UIDynamicAnimator
	{
		// -(instancetype _Nonnull)initWithReferenceView:(UIView * _Nonnull)view __attribute__((objc_designated_initializer));
		[Export ("initWithReferenceView:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIView view);

		// -(void)addBehavior:(UIDynamicBehavior * _Nonnull)behavior;
		[Export ("addBehavior:")]
		void AddBehavior (UIDynamicBehavior behavior);

		// -(void)removeBehavior:(UIDynamicBehavior * _Nonnull)behavior;
		[Export ("removeBehavior:")]
		void RemoveBehavior (UIDynamicBehavior behavior);

		// -(void)removeAllBehaviors;
		[Export ("removeAllBehaviors")]
		void RemoveAllBehaviors ();

		// @property (readonly, nonatomic) UIView * _Nullable referenceView;
		[NullAllowed, Export ("referenceView")]
		UIView ReferenceView { get; }

		// @property (readonly, copy, nonatomic) NSArray<__kindof UIDynamicBehavior *> * _Nonnull behaviors;
		[Export ("behaviors", ArgumentSemantic.Copy)]
		UIDynamicBehavior[] Behaviors { get; }

		// -(NSArray<id<UIDynamicItem>> * _Nonnull)itemsInRect:(CGRect)rect;
		[Export ("itemsInRect:")]
		UIDynamicItem[] ItemsInRect (CGRect rect);

		// -(void)updateItemUsingCurrentState:(id<UIDynamicItem> _Nonnull)item;
		[Export ("updateItemUsingCurrentState:")]
		void UpdateItemUsingCurrentState (UIDynamicItem item);

		// @property (readonly, getter = isRunning, nonatomic) int running;
		[Export ("running")]
		int Running { [Bind ("isRunning")] get; }

		// @property (readonly, nonatomic) NSTimeInterval elapsedTime;
		[Export ("elapsedTime")]
		double ElapsedTime { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDynamicAnimatorDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIDynamicAnimatorDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }
	}

	// @interface UICollectionViewAdditions (UIDynamicAnimator)
	[Category]
	[BaseType (typeof(UIDynamicAnimator))]
	interface UIDynamicAnimator_UICollectionViewAdditions
	{
		// -(instancetype _Nonnull)initWithCollectionViewLayout:(UICollectionViewLayout * _Nonnull)layout;
		[Export ("initWithCollectionViewLayout:")]
		IntPtr Constructor (UICollectionViewLayout layout);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForCellAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForCellAtIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForCellAtIndexPath (NSIndexPath indexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForSupplementaryViewOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForSupplementaryViewOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForSupplementaryViewOfKind (string kind, NSIndexPath indexPath);

		// -(UICollectionViewLayoutAttributes * _Nullable)layoutAttributesForDecorationViewOfKind:(NSString * _Nonnull)decorationViewKind atIndexPath:(NSIndexPath * _Nonnull)indexPath;
		[Export ("layoutAttributesForDecorationViewOfKind:atIndexPath:")]
		[return: NullAllowed]
		UICollectionViewLayoutAttributes LayoutAttributesForDecorationViewOfKind (string decorationViewKind, NSIndexPath indexPath);
	}

	// @interface UIPushBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UIPushBehavior
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray<id<UIDynamicItem>> * _Nonnull)items mode:(UIPushBehaviorMode)mode __attribute__((objc_designated_initializer));
		[Export ("initWithItems:mode:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem[] items, UIPushBehaviorMode mode);

		// -(void)addItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addItem:")]
		void AddItem (UIDynamicItem item);

		// -(void)removeItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("removeItem:")]
		void RemoveItem (UIDynamicItem item);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// -(UIOffset)targetOffsetFromCenterForItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("targetOffsetFromCenterForItem:")]
		UIOffset TargetOffsetFromCenterForItem (UIDynamicItem item);

		// -(void)setTargetOffsetFromCenter:(UIOffset)o forItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("setTargetOffsetFromCenter:forItem:")]
		void SetTargetOffsetFromCenter (UIOffset o, UIDynamicItem item);

		// @property (readonly, nonatomic) UIPushBehaviorMode mode;
		[Export ("mode")]
		UIPushBehaviorMode Mode { get; }

		// @property (readwrite, nonatomic) int active;
		[Export ("active")]
		int Active { get; set; }

		// @property (readwrite, nonatomic) CGFloat angle;
		[Export ("angle")]
		nfloat Angle { get; set; }

		// @property (readwrite, nonatomic) CGFloat magnitude;
		[Export ("magnitude")]
		nfloat Magnitude { get; set; }

		// @property (readwrite, nonatomic) CGVector pushDirection;
		[Export ("pushDirection", ArgumentSemantic.Assign)]
		CGVector PushDirection { get; set; }

		// -(void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;
		[Export ("setAngle:magnitude:")]
		void SetAngle (nfloat angle, nfloat magnitude);
	}

	// @interface UISnapBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UISnapBehavior
	{
		// -(instancetype _Nonnull)initWithItem:(id<UIDynamicItem> _Nonnull)item snapToPoint:(CGPoint)point __attribute__((objc_designated_initializer));
		[Export ("initWithItem:snapToPoint:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem item, CGPoint point);

		// @property (assign, nonatomic) CGPoint snapPoint __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("snapPoint", ArgumentSemantic.Assign)]
		CGPoint SnapPoint { get; set; }

		// @property (assign, nonatomic) CGFloat damping;
		[Export ("damping")]
		nfloat Damping { get; set; }
	}

	// @interface UIDynamicItemBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UIDynamicItemBehavior
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray<id<UIDynamicItem>> * _Nonnull)items __attribute__((objc_designated_initializer));
		[Export ("initWithItems:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem[] items);

		// -(void)addItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addItem:")]
		void AddItem (UIDynamicItem item);

		// -(void)removeItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("removeItem:")]
		void RemoveItem (UIDynamicItem item);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// @property (readwrite, nonatomic) CGFloat elasticity;
		[Export ("elasticity")]
		nfloat Elasticity { get; set; }

		// @property (readwrite, nonatomic) CGFloat friction;
		[Export ("friction")]
		nfloat Friction { get; set; }

		// @property (readwrite, nonatomic) CGFloat density;
		[Export ("density")]
		nfloat Density { get; set; }

		// @property (readwrite, nonatomic) CGFloat resistance;
		[Export ("resistance")]
		nfloat Resistance { get; set; }

		// @property (readwrite, nonatomic) CGFloat angularResistance;
		[Export ("angularResistance")]
		nfloat AngularResistance { get; set; }

		// @property (readwrite, nonatomic) CGFloat charge __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("charge")]
		nfloat Charge { get; set; }

		// @property (getter = isAnchored, nonatomic) int anchored __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("anchored")]
		int Anchored { [Bind ("isAnchored")] get; set; }

		// @property (readwrite, nonatomic) int allowsRotation;
		[Export ("allowsRotation")]
		int AllowsRotation { get; set; }

		// -(void)addLinearVelocity:(CGPoint)velocity forItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addLinearVelocity:forItem:")]
		void AddLinearVelocity (CGPoint velocity, UIDynamicItem item);

		// -(CGPoint)linearVelocityForItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("linearVelocityForItem:")]
		CGPoint LinearVelocityForItem (UIDynamicItem item);

		// -(void)addAngularVelocity:(CGFloat)velocity forItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addAngularVelocity:forItem:")]
		void AddAngularVelocity (nfloat velocity, UIDynamicItem item);

		// -(CGFloat)angularVelocityForItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("angularVelocityForItem:")]
		nfloat AngularVelocityForItem (UIDynamicItem item);
	}

	// @interface UIFieldBehavior : UIDynamicBehavior
	[iOS (9,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	[DisableDefaultCtor]
	interface UIFieldBehavior
	{
		// -(void)addItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addItem:")]
		void AddItem (UIDynamicItem item);

		// -(void)removeItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("removeItem:")]
		void RemoveItem (UIDynamicItem item);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// @property (assign, nonatomic) CGPoint position;
		[Export ("position", ArgumentSemantic.Assign)]
		CGPoint Position { get; set; }

		// @property (nonatomic, strong) UIRegion * _Nonnull region;
		[Export ("region", ArgumentSemantic.Strong)]
		UIRegion Region { get; set; }

		// @property (assign, nonatomic) CGFloat strength;
		[Export ("strength")]
		nfloat Strength { get; set; }

		// @property (assign, nonatomic) CGFloat falloff;
		[Export ("falloff")]
		nfloat Falloff { get; set; }

		// @property (assign, nonatomic) CGFloat minimumRadius;
		[Export ("minimumRadius")]
		nfloat MinimumRadius { get; set; }

		// @property (assign, nonatomic) CGVector direction;
		[Export ("direction", ArgumentSemantic.Assign)]
		CGVector Direction { get; set; }

		// @property (assign, nonatomic) CGFloat smoothness;
		[Export ("smoothness")]
		nfloat Smoothness { get; set; }

		// @property (assign, nonatomic) CGFloat animationSpeed;
		[Export ("animationSpeed")]
		nfloat AnimationSpeed { get; set; }

		// +(instancetype _Nonnull)dragField;
		[Static]
		[Export ("dragField")]
		UIFieldBehavior DragField ();

		// +(instancetype _Nonnull)vortexField;
		[Static]
		[Export ("vortexField")]
		UIFieldBehavior VortexField ();

		// +(instancetype _Nonnull)radialGravityFieldWithPosition:(CGPoint)position;
		[Static]
		[Export ("radialGravityFieldWithPosition:")]
		UIFieldBehavior RadialGravityFieldWithPosition (CGPoint position);

		// +(instancetype _Nonnull)linearGravityFieldWithVector:(CGVector)direction;
		[Static]
		[Export ("linearGravityFieldWithVector:")]
		UIFieldBehavior LinearGravityFieldWithVector (CGVector direction);

		// +(instancetype _Nonnull)velocityFieldWithVector:(CGVector)direction;
		[Static]
		[Export ("velocityFieldWithVector:")]
		UIFieldBehavior VelocityFieldWithVector (CGVector direction);

		// +(instancetype _Nonnull)noiseFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;
		[Static]
		[Export ("noiseFieldWithSmoothness:animationSpeed:")]
		UIFieldBehavior NoiseFieldWithSmoothness (nfloat smoothness, nfloat speed);

		// +(instancetype _Nonnull)turbulenceFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;
		[Static]
		[Export ("turbulenceFieldWithSmoothness:animationSpeed:")]
		UIFieldBehavior TurbulenceFieldWithSmoothness (nfloat smoothness, nfloat speed);

		// +(instancetype _Nonnull)springField;
		[Static]
		[Export ("springField")]
		UIFieldBehavior SpringField ();

		// +(instancetype _Nonnull)electricField;
		[Static]
		[Export ("electricField")]
		UIFieldBehavior ElectricField ();

		// +(instancetype _Nonnull)magneticField;
		[Static]
		[Export ("magneticField")]
		UIFieldBehavior MagneticField ();

		// +(instancetype _Nonnull)fieldWithEvaluationBlock:(CGVector (^ _Nonnull)(UIFieldBehavior * _Nonnull, CGPoint, CGVector, CGFloat, CGFloat, NSTimeInterval))block;
		[Static]
		[Export ("fieldWithEvaluationBlock:")]
		UIFieldBehavior FieldWithEvaluationBlock (Func<UIFieldBehavior, CGPoint, CGVector, nfloat, nfloat, double, CGVector> block);
	}

	// @interface UIGravityBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UIGravityBehavior
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray<id<UIDynamicItem>> * _Nonnull)items __attribute__((objc_designated_initializer));
		[Export ("initWithItems:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem[] items);

		// -(void)addItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addItem:")]
		void AddItem (UIDynamicItem item);

		// -(void)removeItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("removeItem:")]
		void RemoveItem (UIDynamicItem item);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// @property (readwrite, nonatomic) CGVector gravityDirection;
		[Export ("gravityDirection", ArgumentSemantic.Assign)]
		CGVector GravityDirection { get; set; }

		// @property (readwrite, nonatomic) CGFloat angle;
		[Export ("angle")]
		nfloat Angle { get; set; }

		// @property (readwrite, nonatomic) CGFloat magnitude;
		[Export ("magnitude")]
		nfloat Magnitude { get; set; }

		// -(void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;
		[Export ("setAngle:magnitude:")]
		void SetAngle (nfloat angle, nfloat magnitude);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIFloatRange UIFloatRangeZero __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFloatRangeZero", "__Internal")]
		UIFloatRange UIFloatRangeZero { get; }

		// extern const UIFloatRange UIFloatRangeInfinite __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Field ("UIFloatRangeInfinite", "__Internal")]
		UIFloatRange UIFloatRangeInfinite { get; }
	}

	// @interface UIAttachmentBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UIAttachmentBehavior
	{
		// -(instancetype _Nonnull)initWithItem:(id<UIDynamicItem> _Nonnull)item attachedToAnchor:(CGPoint)point;
		[Export ("initWithItem:attachedToAnchor:")]
		IntPtr Constructor (UIDynamicItem item, CGPoint point);

		// -(instancetype _Nonnull)initWithItem:(id<UIDynamicItem> _Nonnull)item offsetFromCenter:(UIOffset)offset attachedToAnchor:(CGPoint)point __attribute__((objc_designated_initializer));
		[Export ("initWithItem:offsetFromCenter:attachedToAnchor:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem item, UIOffset offset, CGPoint point);

		// -(instancetype _Nonnull)initWithItem:(id<UIDynamicItem> _Nonnull)item1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2;
		[Export ("initWithItem:attachedToItem:")]
		IntPtr Constructor (UIDynamicItem item1, UIDynamicItem item2);

		// -(instancetype _Nonnull)initWithItem:(id<UIDynamicItem> _Nonnull)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((objc_designated_initializer));
		[Export ("initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem item1, UIOffset offset1, UIDynamicItem item2, UIOffset offset2);

		// +(instancetype _Nonnull)slidingAttachmentWithItem:(id<UIDynamicItem> _Nonnull)item1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2 attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("slidingAttachmentWithItem:attachedToItem:attachmentAnchor:axisOfTranslation:")]
		UIAttachmentBehavior SlidingAttachmentWithItem (UIDynamicItem item1, UIDynamicItem item2, CGPoint point, CGVector axis);

		// +(instancetype _Nonnull)slidingAttachmentWithItem:(id<UIDynamicItem> _Nonnull)item attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("slidingAttachmentWithItem:attachmentAnchor:axisOfTranslation:")]
		UIAttachmentBehavior SlidingAttachmentWithItem (UIDynamicItem item, CGPoint point, CGVector axis);

		// +(instancetype _Nonnull)limitAttachmentWithItem:(id<UIDynamicItem> _Nonnull)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("limitAttachmentWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:")]
		UIAttachmentBehavior LimitAttachmentWithItem (UIDynamicItem item1, UIOffset offset1, UIDynamicItem item2, UIOffset offset2);

		// +(instancetype _Nonnull)fixedAttachmentWithItem:(id<UIDynamicItem> _Nonnull)item1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("fixedAttachmentWithItem:attachedToItem:attachmentAnchor:")]
		UIAttachmentBehavior FixedAttachmentWithItem (UIDynamicItem item1, UIDynamicItem item2, CGPoint point);

		// +(instancetype _Nonnull)pinAttachmentWithItem:(id<UIDynamicItem> _Nonnull)item1 attachedToItem:(id<UIDynamicItem> _Nonnull)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Static]
		[Export ("pinAttachmentWithItem:attachedToItem:attachmentAnchor:")]
		UIAttachmentBehavior PinAttachmentWithItem (UIDynamicItem item1, UIDynamicItem item2, CGPoint point);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// @property (readonly, nonatomic) UIAttachmentBehaviorType attachedBehaviorType;
		[Export ("attachedBehaviorType")]
		UIAttachmentBehaviorType AttachedBehaviorType { get; }

		// @property (readwrite, nonatomic) CGPoint anchorPoint;
		[Export ("anchorPoint", ArgumentSemantic.Assign)]
		CGPoint AnchorPoint { get; set; }

		// @property (readwrite, nonatomic) CGFloat length;
		[Export ("length")]
		nfloat Length { get; set; }

		// @property (readwrite, nonatomic) CGFloat damping;
		[Export ("damping")]
		nfloat Damping { get; set; }

		// @property (readwrite, nonatomic) CGFloat frequency;
		[Export ("frequency")]
		nfloat Frequency { get; set; }

		// @property (readwrite, nonatomic) CGFloat frictionTorque __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("frictionTorque")]
		nfloat FrictionTorque { get; set; }

		// @property (readwrite, nonatomic) UIFloatRange attachmentRange __attribute__((availability(ios, introduced=9.0)));
		[iOS (9, 0)]
		[Export ("attachmentRange", ArgumentSemantic.Assign)]
		UIFloatRange AttachmentRange { get; set; }
	}

	// @protocol UICollisionBehaviorDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UICollisionBehaviorDelegate
	{
		// @optional -(void)collisionBehavior:(UICollisionBehavior * _Nonnull)behavior beganContactForItem:(id<UIDynamicItem> _Nonnull)item1 withItem:(id<UIDynamicItem> _Nonnull)item2 atPoint:(CGPoint)p;
		[Export ("collisionBehavior:beganContactForItem:withItem:atPoint:")]
		void BeganContactForItem (UICollisionBehavior behavior, UIDynamicItem item1, UIDynamicItem item2, CGPoint p);

		// @optional -(void)collisionBehavior:(UICollisionBehavior * _Nonnull)behavior endedContactForItem:(id<UIDynamicItem> _Nonnull)item1 withItem:(id<UIDynamicItem> _Nonnull)item2;
		[Export ("collisionBehavior:endedContactForItem:withItem:")]
		void EndedContactForItem (UICollisionBehavior behavior, UIDynamicItem item1, UIDynamicItem item2);

		// @optional -(void)collisionBehavior:(UICollisionBehavior * _Nonnull)behavior beganContactForItem:(id<UIDynamicItem> _Nonnull)item withBoundaryIdentifier:(id<NSCopying> _Nullable)identifier atPoint:(CGPoint)p;
		[Export ("collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:")]
		void BeganContactForItem (UICollisionBehavior behavior, UIDynamicItem item, [NullAllowed] NSCopying identifier, CGPoint p);

		// @optional -(void)collisionBehavior:(UICollisionBehavior * _Nonnull)behavior endedContactForItem:(id<UIDynamicItem> _Nonnull)item withBoundaryIdentifier:(id<NSCopying> _Nullable)identifier;
		[Export ("collisionBehavior:endedContactForItem:withBoundaryIdentifier:")]
		void EndedContactForItem (UICollisionBehavior behavior, UIDynamicItem item, [NullAllowed] NSCopying identifier);
	}

	// @interface UICollisionBehavior : UIDynamicBehavior
	[iOS (7,0)]
	[BaseType (typeof(UIDynamicBehavior))]
	interface UICollisionBehavior
	{
		// -(instancetype _Nonnull)initWithItems:(NSArray<id<UIDynamicItem>> * _Nonnull)items __attribute__((objc_designated_initializer));
		[Export ("initWithItems:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIDynamicItem[] items);

		// -(void)addItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("addItem:")]
		void AddItem (UIDynamicItem item);

		// -(void)removeItem:(id<UIDynamicItem> _Nonnull)item;
		[Export ("removeItem:")]
		void RemoveItem (UIDynamicItem item);

		// @property (readonly, copy, nonatomic) NSArray<id<UIDynamicItem>> * _Nonnull items;
		[Export ("items", ArgumentSemantic.Copy)]
		UIDynamicItem[] Items { get; }

		// @property (readwrite, nonatomic) UICollisionBehaviorMode collisionMode;
		[Export ("collisionMode", ArgumentSemantic.Assign)]
		UICollisionBehaviorMode CollisionMode { get; set; }

		// @property (readwrite, nonatomic) int translatesReferenceBoundsIntoBoundary;
		[Export ("translatesReferenceBoundsIntoBoundary")]
		int TranslatesReferenceBoundsIntoBoundary { get; set; }

		// -(void)setTranslatesReferenceBoundsIntoBoundaryWithInsets:(UIEdgeInsets)insets;
		[Export ("setTranslatesReferenceBoundsIntoBoundaryWithInsets:")]
		void SetTranslatesReferenceBoundsIntoBoundaryWithInsets (UIEdgeInsets insets);

		// -(void)addBoundaryWithIdentifier:(id<NSCopying> _Nonnull)identifier forPath:(UIBezierPath * _Nonnull)bezierPath;
		[Export ("addBoundaryWithIdentifier:forPath:")]
		void AddBoundaryWithIdentifier (NSCopying identifier, UIBezierPath bezierPath);

		// -(void)addBoundaryWithIdentifier:(id<NSCopying> _Nonnull)identifier fromPoint:(CGPoint)p1 toPoint:(CGPoint)p2;
		[Export ("addBoundaryWithIdentifier:fromPoint:toPoint:")]
		void AddBoundaryWithIdentifier (NSCopying identifier, CGPoint p1, CGPoint p2);

		// -(UIBezierPath * _Nullable)boundaryWithIdentifier:(id<NSCopying> _Nonnull)identifier;
		[Export ("boundaryWithIdentifier:")]
		[return: NullAllowed]
		UIBezierPath BoundaryWithIdentifier (NSCopying identifier);

		// -(void)removeBoundaryWithIdentifier:(id<NSCopying> _Nonnull)identifier;
		[Export ("removeBoundaryWithIdentifier:")]
		void RemoveBoundaryWithIdentifier (NSCopying identifier);

		// @property (readonly, copy, nonatomic) NSArray<id<NSCopying>> * _Nullable boundaryIdentifiers;
		[NullAllowed, Export ("boundaryIdentifiers", ArgumentSemantic.Copy)]
		NSCopying[] BoundaryIdentifiers { get; }

		// -(void)removeAllBoundaries;
		[Export ("removeAllBoundaries")]
		void RemoveAllBoundaries ();

		[Wrap ("WeakCollisionDelegate")]
		[NullAllowed]
		UICollisionBehaviorDelegate CollisionDelegate { get; set; }

		// @property (readwrite, nonatomic, weak) id<UICollisionBehaviorDelegate> _Nullable collisionDelegate;
		[NullAllowed, Export ("collisionDelegate", ArgumentSemantic.Weak)]
		NSObject WeakCollisionDelegate { get; set; }
	}

	// @interface UIRegion : NSObject <NSCopying, NSCoding>
	[iOS (9,0)]
	[BaseType (typeof(NSObject))]
	interface UIRegion : INSCopying, INSCoding
	{
		// @property (readonly, nonatomic, class) UIRegion * _Nonnull infiniteRegion;
		[Static]
		[Export ("infiniteRegion")]
		UIRegion InfiniteRegion { get; }

		// -(instancetype _Nonnull)initWithRadius:(CGFloat)radius;
		[Export ("initWithRadius:")]
		IntPtr Constructor (nfloat radius);

		// -(instancetype _Nonnull)initWithSize:(CGSize)size;
		[Export ("initWithSize:")]
		IntPtr Constructor (CGSize size);

		// -(instancetype _Nonnull)inverseRegion;
		[Export ("inverseRegion")]
		UIRegion InverseRegion ();

		// -(instancetype _Nonnull)regionByUnionWithRegion:(UIRegion * _Nonnull)region;
		[Export ("regionByUnionWithRegion:")]
		UIRegion RegionByUnionWithRegion (UIRegion region);

		// -(instancetype _Nonnull)regionByDifferenceFromRegion:(UIRegion * _Nonnull)region;
		[Export ("regionByDifferenceFromRegion:")]
		UIRegion RegionByDifferenceFromRegion (UIRegion region);

		// -(instancetype _Nonnull)regionByIntersectionWithRegion:(UIRegion * _Nonnull)region;
		[Export ("regionByIntersectionWithRegion:")]
		UIRegion RegionByIntersectionWithRegion (UIRegion region);

		// -(int)containsPoint:(CGPoint)point;
		[Export ("containsPoint:")]
		int ContainsPoint (CGPoint point);
	}

	// @interface UITextDragPreviewRenderer : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITextDragPreviewRenderer
	{
		// -(instancetype _Nonnull)initWithLayoutManager:(NSLayoutManager * _Nonnull)layoutManager range:(NSRange)range;
		[Export ("initWithLayoutManager:range:")]
		IntPtr Constructor (NSLayoutManager layoutManager, NSRange range);

		// -(instancetype _Nonnull)initWithLayoutManager:(NSLayoutManager * _Nonnull)layoutManager range:(NSRange)range unifyRects:(int)unifyRects __attribute__((objc_designated_initializer));
		[Export ("initWithLayoutManager:range:unifyRects:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSLayoutManager layoutManager, NSRange range, int unifyRects);

		// @property (readonly, nonatomic) NSLayoutManager * _Nonnull layoutManager;
		[Export ("layoutManager")]
		NSLayoutManager LayoutManager { get; }

		// @property (readonly, nonatomic) UIImage * _Nonnull image;
		[Export ("image")]
		UIImage Image { get; }

		// @property (readonly, nonatomic) CGRect firstLineRect;
		[Export ("firstLineRect")]
		CGRect FirstLineRect { get; }

		// @property (readonly, nonatomic) CGRect bodyRect;
		[Export ("bodyRect")]
		CGRect BodyRect { get; }

		// @property (readonly, nonatomic) CGRect lastLineRect;
		[Export ("lastLineRect")]
		CGRect LastLineRect { get; }

		// -(void)adjustFirstLineRect:(CGRect * _Nonnull)firstLineRect bodyRect:(CGRect * _Nonnull)bodyRect lastLineRect:(CGRect * _Nonnull)lastLineRect textOrigin:(CGPoint)origin;
		[Export ("adjustFirstLineRect:bodyRect:lastLineRect:textOrigin:")]
		unsafe void AdjustFirstLineRect (CGRect* firstLineRect, CGRect* bodyRect, CGRect* lastLineRect, CGPoint origin);
	}

	// @interface URLPreviews (UIDragPreview)
	[Category]
	[BaseType (typeof(UIDragPreview))]
	interface UIDragPreview_URLPreviews
	{
		// +(instancetype _Nonnull)previewForURL:(NSURL * _Nonnull)url __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Static]
		[Export ("previewForURL:")]
		UIDragPreview PreviewForURL (NSUrl url);

		// +(instancetype _Nonnull)previewForURL:(NSURL * _Nonnull)url title:(NSString * _Nullable)title __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Static]
		[Export ("previewForURL:title:")]
		UIDragPreview PreviewForURL (NSUrl url, [NullAllowed] string title);
	}

	// @interface URLPreviews (UITargetedDragPreview)
	[Category]
	[BaseType (typeof(UITargetedDragPreview))]
	interface UITargetedDragPreview_URLPreviews
	{
		// +(instancetype _Nonnull)previewForURL:(NSURL * _Nonnull)url target:(UIDragPreviewTarget * _Nonnull)target __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Static]
		[Export ("previewForURL:target:")]
		UITargetedDragPreview PreviewForURL (NSUrl url, UIDragPreviewTarget target);

		// +(instancetype _Nonnull)previewForURL:(NSURL * _Nonnull)url title:(NSString * _Nullable)title target:(UIDragPreviewTarget * _Nonnull)target __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11,0)]
		[Static]
		[Export ("previewForURL:title:target:")]
		UITargetedDragPreview PreviewForURL (NSUrl url, [NullAllowed] string title, UIDragPreviewTarget target);
	}

	// @interface UIViewPropertyAnimator : NSObject <UIViewImplicitlyAnimating, NSCopying>
	[iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIViewPropertyAnimator : IUIViewImplicitlyAnimating, INSCopying
	{
		// @property (readonly, copy, nonatomic) id<UITimingCurveProvider> _Nullable timingParameters;
		[NullAllowed, Export ("timingParameters", ArgumentSemantic.Copy)]
		UITimingCurveProvider TimingParameters { get; }

		// @property (readonly, nonatomic) NSTimeInterval duration;
		[Export ("duration")]
		double Duration { get; }

		// @property (readonly, nonatomic) NSTimeInterval delay;
		[Export ("delay")]
		double Delay { get; }

		// @property (getter = isUserInteractionEnabled, nonatomic) int userInteractionEnabled;
		[Export ("userInteractionEnabled")]
		int UserInteractionEnabled { [Bind ("isUserInteractionEnabled")] get; set; }

		// @property (getter = isManualHitTestingEnabled, nonatomic) int manualHitTestingEnabled;
		[Export ("manualHitTestingEnabled")]
		int ManualHitTestingEnabled { [Bind ("isManualHitTestingEnabled")] get; set; }

		// @property (getter = isInterruptible, nonatomic) int interruptible;
		[Export ("interruptible")]
		int Interruptible { [Bind ("isInterruptible")] get; set; }

		// @property (nonatomic) int scrubsLinearly __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("scrubsLinearly")]
		int ScrubsLinearly { get; set; }

		// @property (nonatomic) int pausesOnCompletion __attribute__((availability(ios, introduced=11.0)));
		[iOS (11, 0)]
		[Export ("pausesOnCompletion")]
		int PausesOnCompletion { get; set; }

		// -(instancetype _Nonnull)initWithDuration:(NSTimeInterval)duration timingParameters:(id<UITimingCurveProvider> _Nonnull)parameters __attribute__((objc_designated_initializer));
		[Export ("initWithDuration:timingParameters:")]
		[DesignatedInitializer]
		IntPtr Constructor (double duration, UITimingCurveProvider parameters);

		// -(instancetype _Nonnull)initWithDuration:(NSTimeInterval)duration curve:(UIViewAnimationCurve)curve animations:(void (^ _Nullable)(void))animations;
		[Export ("initWithDuration:curve:animations:")]
		IntPtr Constructor (double duration, UIViewAnimationCurve curve, [NullAllowed] Action animations);

		// -(instancetype _Nonnull)initWithDuration:(NSTimeInterval)duration controlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 animations:(void (^ _Nullable)(void))animations;
		[Export ("initWithDuration:controlPoint1:controlPoint2:animations:")]
		IntPtr Constructor (double duration, CGPoint point1, CGPoint point2, [NullAllowed] Action animations);

		// -(instancetype _Nonnull)initWithDuration:(NSTimeInterval)duration dampingRatio:(CGFloat)ratio animations:(void (^ _Nullable)(void))animations;
		[Export ("initWithDuration:dampingRatio:animations:")]
		IntPtr Constructor (double duration, nfloat ratio, [NullAllowed] Action animations);

		// +(instancetype _Nonnull)runningPropertyAnimatorWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^ _Nonnull)(void))animations completion:(void (^ _Nullable)(UIViewAnimatingPosition))completion;
		[Static]
		[Export ("runningPropertyAnimatorWithDuration:delay:options:animations:completion:")]
		UIViewPropertyAnimator RunningPropertyAnimatorWithDuration (double duration, double delay, UIViewAnimationOptions options, Action animations, [NullAllowed] Action<UIViewAnimatingPosition> completion);

		// -(void)addAnimations:(void (^ _Nonnull)(void))animation delayFactor:(CGFloat)delayFactor;
		[Export ("addAnimations:delayFactor:")]
		void AddAnimations (Action animation, nfloat delayFactor);

		// -(void)addAnimations:(void (^ _Nonnull)(void))animation;
		[Export ("addAnimations:")]
		void AddAnimations (Action animation);

		// -(void)addCompletion:(void (^ _Nonnull)(UIViewAnimatingPosition))completion;
		[Export ("addCompletion:")]
		void AddCompletion (Action<UIViewAnimatingPosition> completion);

		// -(void)continueAnimationWithTimingParameters:(id<UITimingCurveProvider> _Nullable)parameters durationFactor:(CGFloat)durationFactor;
		[Export ("continueAnimationWithTimingParameters:durationFactor:")]
		void ContinueAnimationWithTimingParameters ([NullAllowed] UITimingCurveProvider parameters, nfloat durationFactor);
	}

	// @interface UIFeedbackGenerator : NSObject
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(NSObject))]
	interface UIFeedbackGenerator
	{
		// -(void)prepare;
		[Export ("prepare")]
		void Prepare ();
	}

	// @interface UISelectionFeedbackGenerator : UIFeedbackGenerator
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(UIFeedbackGenerator))]
	interface UISelectionFeedbackGenerator
	{
		// -(void)selectionChanged;
		[Export ("selectionChanged")]
		void SelectionChanged ();
	}

	// @interface UIImpactFeedbackGenerator : UIFeedbackGenerator
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(UIFeedbackGenerator))]
	interface UIImpactFeedbackGenerator
	{
		// -(instancetype _Nonnull)initWithStyle:(UIImpactFeedbackStyle)style;
		[Export ("initWithStyle:")]
		IntPtr Constructor (UIImpactFeedbackStyle style);

		// -(void)impactOccurred;
		[Export ("impactOccurred")]
		void ImpactOccurred ();

		// -(void)impactOccurredWithIntensity:(CGFloat)intensity __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("impactOccurredWithIntensity:")]
		void ImpactOccurredWithIntensity (nfloat intensity);
	}

	// @interface UINotificationFeedbackGenerator : UIFeedbackGenerator
	[NoWatch, NoTV, iOS (10,0)]
	[BaseType (typeof(UIFeedbackGenerator))]
	interface UINotificationFeedbackGenerator
	{
		// -(void)notificationOccurred:(UINotificationFeedbackType)notificationType;
		[Export ("notificationOccurred:")]
		void NotificationOccurred (UINotificationFeedbackType notificationType);
	}

	// @protocol UITextInteractionDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextInteractionDelegate
	{
		// @optional -(int)interactionShouldBegin:(UITextInteraction * _Nonnull)interaction atPoint:(CGPoint)point;
		[Export ("interactionShouldBegin:atPoint:")]
		int InteractionShouldBegin (UITextInteraction interaction, CGPoint point);

		// @optional -(void)interactionWillBegin:(UITextInteraction * _Nonnull)interaction;
		[Export ("interactionWillBegin:")]
		void InteractionWillBegin (UITextInteraction interaction);

		// @optional -(void)interactionDidEnd:(UITextInteraction * _Nonnull)interaction;
		[Export ("interactionDidEnd:")]
		void InteractionDidEnd (UITextInteraction interaction);
	}

	// @interface UITextInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UITextInteraction : IUIInteraction
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITextInteractionDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITextInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic, weak) UIResponder<UITextInput> * _Nullable textInput;
		[NullAllowed, Export ("textInput", ArgumentSemantic.Weak)]
		UITextInput TextInput { get; set; }

		// @property (readonly, nonatomic) UITextInteractionMode textInteractionMode;
		[Export ("textInteractionMode")]
		UITextInteractionMode TextInteractionMode { get; }

		// @property (readonly, nonatomic) NSArray<UIGestureRecognizer *> * _Nonnull gesturesForFailureRequirements;
		[Export ("gesturesForFailureRequirements")]
		UIGestureRecognizer[] GesturesForFailureRequirements { get; }

		// +(instancetype _Nonnull)textInteractionForMode:(UITextInteractionMode)mode;
		[Static]
		[Export ("textInteractionForMode:")]
		UITextInteraction TextInteractionForMode (UITextInteractionMode mode);
	}

	// @interface UIGestureRecognizerProtected (UIGestureRecognizer)
	[Category]
	[BaseType (typeof(UIGestureRecognizer))]
	interface UIGestureRecognizer_UIGestureRecognizerProtected
	{
		// @property (readwrite, nonatomic) UIGestureRecognizerState state;
		[Export ("state", ArgumentSemantic.Assign)]
		UIGestureRecognizerState State { get; set; }

		// -(void)ignoreTouch:(UITouch * _Nonnull)touch forEvent:(UIEvent * _Nonnull)event;
		[Export ("ignoreTouch:forEvent:")]
		void IgnoreTouch (UITouch touch, UIEvent @event);

		// -(void)ignorePress:(UIPress * _Nonnull)button forEvent:(UIPressesEvent * _Nonnull)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("ignorePress:forEvent:")]
		void IgnorePress (UIPress button, UIPressesEvent @event);

		// -(void)reset;
		[Export ("reset")]
		void Reset ();

		// -(int)canPreventGestureRecognizer:(UIGestureRecognizer * _Nonnull)preventedGestureRecognizer;
		[Export ("canPreventGestureRecognizer:")]
		int CanPreventGestureRecognizer (UIGestureRecognizer preventedGestureRecognizer);

		// -(int)canBePreventedByGestureRecognizer:(UIGestureRecognizer * _Nonnull)preventingGestureRecognizer;
		[Export ("canBePreventedByGestureRecognizer:")]
		int CanBePreventedByGestureRecognizer (UIGestureRecognizer preventingGestureRecognizer);

		// -(int)shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("shouldRequireFailureOfGestureRecognizer:")]
		int ShouldRequireFailureOfGestureRecognizer (UIGestureRecognizer otherGestureRecognizer);

		// -(int)shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer __attribute__((availability(ios, introduced=7.0)));
		[iOS (7,0)]
		[Export ("shouldBeRequiredToFailByGestureRecognizer:")]
		int ShouldBeRequiredToFailByGestureRecognizer (UIGestureRecognizer otherGestureRecognizer);

		// -(void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
		[Export ("touchesBegan:withEvent:")]
		void TouchesBegan (NSSet<UITouch> touches, UIEvent @event);

		// -(void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
		[Export ("touchesMoved:withEvent:")]
		void TouchesMoved (NSSet<UITouch> touches, UIEvent @event);

		// -(void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
		[Export ("touchesEnded:withEvent:")]
		void TouchesEnded (NSSet<UITouch> touches, UIEvent @event);

		// -(void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nonnull)event;
		[Export ("touchesCancelled:withEvent:")]
		void TouchesCancelled (NSSet<UITouch> touches, UIEvent @event);

		// -(void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> * _Nonnull)touches __attribute__((availability(ios, introduced=9.1)));
		[iOS (9,1)]
		[Export ("touchesEstimatedPropertiesUpdated:")]
		void TouchesEstimatedPropertiesUpdated (NSSet<UITouch> touches);

		// -(void)pressesBegan:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nonnull)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesBegan:withEvent:")]
		void PressesBegan (NSSet<UIPress> presses, UIPressesEvent @event);

		// -(void)pressesChanged:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nonnull)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesChanged:withEvent:")]
		void PressesChanged (NSSet<UIPress> presses, UIPressesEvent @event);

		// -(void)pressesEnded:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nonnull)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesEnded:withEvent:")]
		void PressesEnded (NSSet<UIPress> presses, UIPressesEvent @event);

		// -(void)pressesCancelled:(NSSet<UIPress *> * _Nonnull)presses withEvent:(UIPressesEvent * _Nonnull)event __attribute__((availability(ios, introduced=9.0)));
		[iOS (9,0)]
		[Export ("pressesCancelled:withEvent:")]
		void PressesCancelled (NSSet<UIPress> presses, UIPressesEvent @event);
	}

	// typedef void (^UIGraphicsDrawingActions)(__kindof UIGraphicsRendererContext * _Nonnull);
	delegate void UIGraphicsDrawingActions (UIGraphicsRendererContext arg0);

	// @interface UIGraphicsRendererProtected (UIGraphicsRenderer)
	[Category]
	[BaseType (typeof(UIGraphicsRenderer))]
	interface UIGraphicsRenderer_UIGraphicsRendererProtected
	{
		// +(Class _Nonnull)rendererContextClass __attribute__((availability(ios, introduced=10.0)));
		[iOS (10, 0)]
		[Static]
		[Export ("rendererContextClass")]
		[Verify (MethodToProperty)]
		Class RendererContextClass { get; }

		// +(CGContextRef _Nullable)contextWithFormat:(UIGraphicsRendererFormat * _Nonnull)format __attribute__((cf_returns_retained)) __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("contextWithFormat:")]
		[return: NullAllowed]
		unsafe CGContextRef* ContextWithFormat (UIGraphicsRendererFormat format);

		// +(void)prepareCGContext:(CGContextRef _Nonnull)context withRendererContext:(UIGraphicsRendererContext * _Nonnull)rendererContext __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Static]
		[Export ("prepareCGContext:withRendererContext:")]
		unsafe void PrepareCGContext (CGContextRef* context, UIGraphicsRendererContext rendererContext);

		// -(int)runDrawingActions:(UIGraphicsDrawingActions _Nonnull)drawingActions completionActions:(UIGraphicsDrawingActions _Nullable)completionActions error:(NSError * _Nullable * _Nullable)error __attribute__((availability(ios, introduced=10.0)));
		[iOS (10,0)]
		[Export ("runDrawingActions:completionActions:error:")]
		int RunDrawingActions (UIGraphicsDrawingActions drawingActions, [NullAllowed] UIGraphicsDrawingActions completionActions, [NullAllowed] out NSError error);
	}

	// @interface UIPencilInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (12,1)]
	[BaseType (typeof(NSObject))]
	interface UIPencilInteraction : IUIInteraction
	{
		// @property (readonly, nonatomic, class) UIPencilPreferredAction preferredTapAction;
		[Static]
		[Export ("preferredTapAction")]
		UIPencilPreferredAction PreferredTapAction { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIPencilInteractionDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIPencilInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (getter = isEnabled, nonatomic) int enabled;
		[Export ("enabled")]
		int Enabled { [Bind ("isEnabled")] get; set; }
	}

	// @protocol UIPencilInteractionDelegate <NSObject>
	[NoWatch, NoTV, iOS (12,1)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIPencilInteractionDelegate
	{
		// @optional -(void)pencilInteractionDidTap:(UIPencilInteraction * _Nonnull)interaction;
		[Export ("pencilInteractionDidTap:")]
		void PencilInteractionDidTap (UIPencilInteraction interaction);
	}

	// @interface UISceneConnectionOptions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISceneConnectionOptions
	{
		// @property (readonly, copy, nonatomic) NSSet<UIOpenURLContext *> * _Nonnull URLContexts;
		[Export ("URLContexts", ArgumentSemantic.Copy)]
		NSSet<UIOpenURLContext> URLContexts { get; }

		// @property (readonly, nonatomic) NSString * _Nullable sourceApplication;
		[NullAllowed, Export ("sourceApplication")]
		string SourceApplication { get; }

		// @property (readonly, nonatomic) NSString * _Nullable handoffUserActivityType;
		[NullAllowed, Export ("handoffUserActivityType")]
		string HandoffUserActivityType { get; }

		// @property (readonly, copy, nonatomic) NSSet<NSUserActivity *> * _Nonnull userActivities;
		[Export ("userActivities", ArgumentSemantic.Copy)]
		NSSet<NSUserActivity> UserActivities { get; }

		// @property (readonly, nonatomic) UNNotificationResponse * _Nullable notificationResponse __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("notificationResponse")]
		UNNotificationResponse NotificationResponse { get; }

		// @property (readonly, nonatomic) UIApplicationShortcutItem * _Nullable shortcutItem __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[NullAllowed, Export ("shortcutItem")]
		UIApplicationShortcutItem ShortcutItem { get; }

		// @property (readonly, nonatomic) CKShareMetadata * _Nullable cloudKitShareMetadata;
		[NullAllowed, Export ("cloudKitShareMetadata")]
		CKShareMetadata CloudKitShareMetadata { get; }
	}

	// @interface UISceneOpenURLOptions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISceneOpenURLOptions
	{
		// @property (readonly, nonatomic) NSString * _Nullable sourceApplication;
		[NullAllowed, Export ("sourceApplication")]
		string SourceApplication { get; }

		// @property (readonly, nonatomic) id _Nullable annotation;
		[NullAllowed, Export ("annotation")]
		NSObject Annotation { get; }

		// @property (readonly, nonatomic) int openInPlace;
		[Export ("openInPlace")]
		int OpenInPlace { get; }
	}

	// @interface UISceneOpenExternalURLOptions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UISceneOpenExternalURLOptions
	{
		// @property (readwrite, nonatomic) int universalLinksOnly;
		[Export ("universalLinksOnly")]
		int UniversalLinksOnly { get; set; }
	}

	// @interface UISceneActivationRequestOptions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UISceneActivationRequestOptions
	{
		// @property (readwrite, nonatomic, strong) UIScene * _Nullable requestingScene;
		[NullAllowed, Export ("requestingScene", ArgumentSemantic.Strong)]
		UIScene RequestingScene { get; set; }
	}

	// @interface UISceneDestructionRequestOptions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UISceneDestructionRequestOptions
	{
	}

	// @interface UIScene : UIResponder
	[iOS (13,0)]
	[BaseType (typeof(UIResponder))]
	[DisableDefaultCtor]
	interface UIScene
	{
		// -(instancetype _Nonnull)initWithSession:(UISceneSession * _Nonnull)session connectionOptions:(UISceneConnectionOptions * _Nonnull)connectionOptions __attribute__((objc_designated_initializer));
		[Export ("initWithSession:connectionOptions:")]
		[DesignatedInitializer]
		IntPtr Constructor (UISceneSession session, UISceneConnectionOptions connectionOptions);

		// @property (readonly, nonatomic) UISceneSession * _Nonnull session;
		[Export ("session")]
		UISceneSession Session { get; }

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UISceneDelegate Delegate { get; set; }

		// @property (nonatomic, strong) id<UISceneDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Strong)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, nonatomic) UISceneActivationState activationState;
		[Export ("activationState")]
		UISceneActivationState ActivationState { get; }

		// -(void)openURL:(NSURL * _Nonnull)url options:(UISceneOpenExternalURLOptions * _Nullable)options completionHandler:(void (^ _Nullable)(int))completion;
		[Export ("openURL:options:completionHandler:")]
		void OpenURL (NSUrl url, [NullAllowed] UISceneOpenExternalUrlOptions options, [NullAllowed] Action<int> completion);

		// @property (copy, nonatomic) NSString * _Null_unspecified title;
		[Export ("title")]
		string Title { get; set; }

		// @property (nonatomic, strong) UISceneActivationConditions * _Nonnull activationConditions;
		[Export ("activationConditions", ArgumentSemantic.Strong)]
		UISceneActivationConditions ActivationConditions { get; set; }
	}

	// @protocol UISceneDelegate <NSObject>
	[iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UISceneDelegate
	{
		// @optional -(void)scene:(UIScene * _Nonnull)scene willConnectToSession:(UISceneSession * _Nonnull)session options:(UISceneConnectionOptions * _Nonnull)connectionOptions;
		[Export ("scene:willConnectToSession:options:")]
		void Scene (UIScene scene, UISceneSession session, UISceneConnectionOptions connectionOptions);

		// @optional -(void)sceneDidDisconnect:(UIScene * _Nonnull)scene;
		[Export ("sceneDidDisconnect:")]
		void SceneDidDisconnect (UIScene scene);

		// @optional -(void)sceneDidBecomeActive:(UIScene * _Nonnull)scene;
		[Export ("sceneDidBecomeActive:")]
		void SceneDidBecomeActive (UIScene scene);

		// @optional -(void)sceneWillResignActive:(UIScene * _Nonnull)scene;
		[Export ("sceneWillResignActive:")]
		void SceneWillResignActive (UIScene scene);

		// @optional -(void)sceneWillEnterForeground:(UIScene * _Nonnull)scene;
		[Export ("sceneWillEnterForeground:")]
		void SceneWillEnterForeground (UIScene scene);

		// @optional -(void)sceneDidEnterBackground:(UIScene * _Nonnull)scene;
		[Export ("sceneDidEnterBackground:")]
		void SceneDidEnterBackground (UIScene scene);

		// @optional -(void)scene:(UIScene * _Nonnull)scene openURLContexts:(NSSet<UIOpenURLContext *> * _Nonnull)URLContexts;
		[Export ("scene:openURLContexts:")]
		void Scene (UIScene scene, NSSet<UIOpenURLContext> URLContexts);

		// @optional -(NSUserActivity * _Nullable)stateRestorationActivityForScene:(UIScene * _Nonnull)scene;
		[Export ("stateRestorationActivityForScene:")]
		[return: NullAllowed]
		NSUserActivity StateRestorationActivityForScene (UIScene scene);

		// @optional -(void)scene:(UIScene * _Nonnull)scene willContinueUserActivityWithType:(NSString * _Nonnull)userActivityType;
		[Export ("scene:willContinueUserActivityWithType:")]
		void Scene (UIScene scene, string userActivityType);

		// @optional -(void)scene:(UIScene * _Nonnull)scene continueUserActivity:(NSUserActivity * _Nonnull)userActivity;
		[Export ("scene:continueUserActivity:")]
		void Scene (UIScene scene, NSUserActivity userActivity);

		// @optional -(void)scene:(UIScene * _Nonnull)scene didFailToContinueUserActivityWithType:(NSString * _Nonnull)userActivityType error:(NSError * _Nonnull)error;
		[Export ("scene:didFailToContinueUserActivityWithType:error:")]
		void Scene (UIScene scene, string userActivityType, NSError error);

		// @optional -(void)scene:(UIScene * _Nonnull)scene didUpdateUserActivity:(NSUserActivity * _Nonnull)userActivity;
		[Export ("scene:didUpdateUserActivity:")]
		void Scene (UIScene scene, NSUserActivity userActivity);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSNotificationName _Nonnull UISceneWillConnectNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneWillConnectNotification", "__Internal")]
		NSString UISceneWillConnectNotification { get; }

		// extern const NSNotificationName _Nonnull UISceneDidDisconnectNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneDidDisconnectNotification", "__Internal")]
		NSString UISceneDidDisconnectNotification { get; }

		// extern const NSNotificationName _Nonnull UISceneDidActivateNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneDidActivateNotification", "__Internal")]
		NSString UISceneDidActivateNotification { get; }

		// extern const NSNotificationName _Nonnull UISceneWillDeactivateNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneWillDeactivateNotification", "__Internal")]
		NSString UISceneWillDeactivateNotification { get; }

		// extern const NSNotificationName _Nonnull UISceneWillEnterForegroundNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneWillEnterForegroundNotification", "__Internal")]
		NSString UISceneWillEnterForegroundNotification { get; }

		// extern const NSNotificationName _Nonnull UISceneDidEnterBackgroundNotification __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UISceneDidEnterBackgroundNotification", "__Internal")]
		NSString UISceneDidEnterBackgroundNotification { get; }
	}

	// @interface UIWindowScene : UIScene
	[iOS (13,0)]
	[BaseType (typeof(UIScene))]
	interface UIWindowScene
	{
		// @property (readonly, nonatomic) UIScreen * _Nonnull screen;
		[Export ("screen")]
		UIScreen Screen { get; }

		// @property (readonly, nonatomic) UIInterfaceOrientation interfaceOrientation __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("interfaceOrientation")]
		UIInterfaceOrientation InterfaceOrientation { get; }

		// @property (readonly, nonatomic) id<UICoordinateSpace> _Nonnull coordinateSpace;
		[Export ("coordinateSpace")]
		UICoordinateSpace CoordinateSpace { get; }

		// @property (readonly, nonatomic) UITraitCollection * _Nonnull traitCollection;
		[Export ("traitCollection")]
		UITraitCollection TraitCollection { get; }

		// @property (readonly, nonatomic) UISceneSizeRestrictions * _Nullable sizeRestrictions __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("sizeRestrictions")]
		UISceneSizeRestrictions SizeRestrictions { get; }

		// @property (readonly, nonatomic) NSArray<UIWindow *> * _Nonnull windows;
		[Export ("windows")]
		UIWindow[] Windows { get; }
	}

	// @protocol UIWindowSceneDelegate <UISceneDelegate>
	[iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	interface UIWindowSceneDelegate : IUISceneDelegate
	{
		// @optional @property (nonatomic, strong) UIWindow * _Nullable window;
		[NullAllowed, Export ("window", ArgumentSemantic.Strong)]
		UIWindow Window { get; set; }

		// @optional -(void)windowScene:(UIWindowScene * _Nonnull)windowScene didUpdateCoordinateSpace:(id<UICoordinateSpace> _Nonnull)previousCoordinateSpace interfaceOrientation:(UIInterfaceOrientation)previousInterfaceOrientation traitCollection:(UITraitCollection * _Nonnull)previousTraitCollection __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:")]
		void DidUpdateCoordinateSpace (UIWindowScene windowScene, UICoordinateSpace previousCoordinateSpace, UIInterfaceOrientation previousInterfaceOrientation, UITraitCollection previousTraitCollection);

		// @optional -(void)windowScene:(UIWindowScene * _Nonnull)windowScene performActionForShortcutItem:(UIApplicationShortcutItem * _Nonnull)shortcutItem completionHandler:(void (^ _Nonnull)(int))completionHandler __attribute__((availability(tvos, unavailable)));
		[NoTV]
		[Export ("windowScene:performActionForShortcutItem:completionHandler:")]
		void PerformActionForShortcutItem (UIWindowScene windowScene, UIApplicationShortcutItem shortcutItem, Action<int> completionHandler);

		// @optional -(void)windowScene:(UIWindowScene * _Nonnull)windowScene userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata * _Nonnull)cloudKitShareMetadata;
		[Export ("windowScene:userDidAcceptCloudKitShareWithMetadata:")]
		void UserDidAcceptCloudKitShareWithMetadata (UIWindowScene windowScene, CKShareMetadata cloudKitShareMetadata);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UISceneSessionRole _Nonnull UIWindowSceneSessionRoleApplication __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIWindowSceneSessionRoleApplication", "__Internal")]
		NSString UIWindowSceneSessionRoleApplication { get; }

		// extern const UISceneSessionRole _Nonnull UIWindowSceneSessionRoleExternalDisplay __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Field ("UIWindowSceneSessionRoleExternalDisplay", "__Internal")]
		NSString UIWindowSceneSessionRoleExternalDisplay { get; }
	}

	// @interface UIWindowSceneDestructionRequestOptions : UISceneDestructionRequestOptions
	[iOS (13,0)]
	[BaseType (typeof(UISceneDestructionRequestOptions))]
	interface UIWindowSceneDestructionRequestOptions
	{
		// @property (readwrite, nonatomic) UIWindowSceneDismissalAnimation windowDismissalAnimation;
		[Export ("windowDismissalAnimation", ArgumentSemantic.Assign)]
		UIWindowSceneDismissalAnimation WindowDismissalAnimation { get; set; }
	}

	// @interface UISceneSizeRestrictions : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISceneSizeRestrictions
	{
		// @property (assign, nonatomic) CGSize minimumSize;
		[Export ("minimumSize", ArgumentSemantic.Assign)]
		CGSize MinimumSize { get; set; }

		// @property (assign, nonatomic) CGSize maximumSize;
		[Export ("maximumSize", ArgumentSemantic.Assign)]
		CGSize MaximumSize { get; set; }
	}

	// @interface UISceneConfiguration : NSObject <NSCopying, NSSecureCoding>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UISceneConfiguration : INSCopying, INSSecureCoding
	{
		// +(instancetype _Nonnull)configurationWithName:(NSString * _Nullable)name sessionRole:(UISceneSessionRole _Nonnull)sessionRole;
		[Static]
		[Export ("configurationWithName:sessionRole:")]
		UISceneConfiguration ConfigurationWithName ([NullAllowed] string name, string sessionRole);

		// -(instancetype _Nonnull)initWithName:(NSString * _Nullable)name sessionRole:(UISceneSessionRole _Nonnull)sessionRole __attribute__((objc_designated_initializer));
		[Export ("initWithName:sessionRole:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string name, string sessionRole);

		// @property (readonly, nonatomic) NSString * _Nullable name;
		[NullAllowed, Export ("name")]
		string Name { get; }

		// @property (readonly, nonatomic) UISceneSessionRole _Nonnull role;
		[Export ("role")]
		string Role { get; }

		// @property (nonatomic) Class _Nullable sceneClass;
		[NullAllowed, Export ("sceneClass", ArgumentSemantic.Assign)]
		Class SceneClass { get; set; }

		// @property (nonatomic) Class _Nullable delegateClass;
		[NullAllowed, Export ("delegateClass", ArgumentSemantic.Assign)]
		Class DelegateClass { get; set; }

		// @property (nonatomic, strong) UIStoryboard * _Nullable storyboard;
		[NullAllowed, Export ("storyboard", ArgumentSemantic.Strong)]
		UIStoryboard Storyboard { get; set; }
	}

	// @interface UISceneSession : NSObject <NSSecureCoding>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UISceneSession : INSSecureCoding
	{
		// @property (readonly, nonatomic) UIScene * _Nullable scene;
		[NullAllowed, Export ("scene")]
		UIScene Scene { get; }

		// @property (readonly, nonatomic) UISceneSessionRole _Nonnull role;
		[Export ("role")]
		string Role { get; }

		// @property (readonly, copy, nonatomic) UISceneConfiguration * _Nonnull configuration;
		[Export ("configuration", ArgumentSemantic.Copy)]
		UISceneConfiguration Configuration { get; }

		// @property (readonly, nonatomic) NSString * _Nonnull persistentIdentifier;
		[Export ("persistentIdentifier")]
		string PersistentIdentifier { get; }

		// @property (nonatomic, strong) NSUserActivity * _Nullable stateRestorationActivity;
		[NullAllowed, Export ("stateRestorationActivity", ArgumentSemantic.Strong)]
		NSUserActivity StateRestorationActivity { get; set; }

		// @property (copy, nonatomic) NSDictionary<NSString *,id> * _Nullable userInfo;
		[NullAllowed, Export ("userInfo", ArgumentSemantic.Copy)]
		NSDictionary<NSString, NSObject> UserInfo { get; set; }
	}

	// @interface UISceneActivationConditions : NSObject <NSSecureCoding>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UISceneActivationConditions : INSSecureCoding
	{
		// -(instancetype _Nullable)initWithCoder:(NSCoder * _Nonnull)aDecoder __attribute__((objc_designated_initializer));
		[Export ("initWithCoder:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSCoder aDecoder);

		// @property (copy, nonatomic) NSPredicate * _Nonnull canActivateForTargetContentIdentifierPredicate;
		[Export ("canActivateForTargetContentIdentifierPredicate", ArgumentSemantic.Copy)]
		NSPredicate CanActivateForTargetContentIdentifierPredicate { get; set; }

		// @property (copy, nonatomic) NSPredicate * _Nonnull prefersToActivateForTargetContentIdentifierPredicate;
		[Export ("prefersToActivateForTargetContentIdentifierPredicate", ArgumentSemantic.Copy)]
		NSPredicate PrefersToActivateForTargetContentIdentifierPredicate { get; set; }
	}

	// @interface UISceneActivationConditions (NSUserActivity)
	[Category]
	[BaseType (typeof(NSUserActivity))]
	interface NSUserActivity_UISceneActivationConditions
	{
		// @property (copy, nonatomic) NSString * _Nullable targetContentIdentifier __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("targetContentIdentifier")]
		string TargetContentIdentifier { get; set; }
	}

	// @interface UIOpenURLContext : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIOpenURLContext
	{
		// @property (readonly, copy, nonatomic) NSURL * _Nonnull URL;
		[Export ("URL", ArgumentSemantic.Copy)]
		NSUrl URL { get; }

		// @property (readonly, nonatomic, strong) UISceneOpenURLOptions * _Nonnull options;
		[Export ("options", ArgumentSemantic.Strong)]
		UISceneOpenUrlOptions Options { get; }
	}

	// @interface UIStatusBarManager : NSObject
	[NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIStatusBarManager
	{
		// @property (readonly, nonatomic) UIStatusBarStyle statusBarStyle;
		[Export ("statusBarStyle")]
		UIStatusBarStyle StatusBarStyle { get; }

		// @property (readonly, getter = isStatusBarHidden, nonatomic) int statusBarHidden;
		[Export ("statusBarHidden")]
		int StatusBarHidden { [Bind ("isStatusBarHidden")] get; }

		// @property (readonly, nonatomic) CGRect statusBarFrame;
		[Export ("statusBarFrame")]
		CGRect StatusBarFrame { get; }
	}

	// @interface StatusBarManager (UIWindowScene)
	[Category]
	[BaseType (typeof(UIWindowScene))]
	interface UIWindowScene_StatusBarManager
	{
		// @property (readonly, nonatomic) UIStatusBarManager * _Nullable statusBarManager __attribute__((availability(ios, introduced=13.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (13, 0)]
		[NullAllowed, Export ("statusBarManager")]
		UIStatusBarManager StatusBarManager { get; }
	}

	// @interface UIScreenshotService : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIScreenshotService
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIScreenshotServiceDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIScreenshotServiceDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, nonatomic, weak) UIWindowScene * _Nullable windowScene;
		[NullAllowed, Export ("windowScene", ArgumentSemantic.Weak)]
		UIWindowScene WindowScene { get; }
	}

	// @interface UIScreenshotService (UIWindowScene)
	[iOS (13,0)]
	[Category]
	[BaseType (typeof(UIWindowScene))]
	interface UIWindowScene_UIScreenshotService
	{
		// @property (readonly, nonatomic) UIScreenshotService * _Nullable screenshotService;
		[NullAllowed, Export ("screenshotService")]
		UIScreenshotService ScreenshotService { get; }
	}

	// @protocol UIScreenshotServiceDelegate <NSObject>
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIScreenshotServiceDelegate
	{
		// @optional -(void)screenshotService:(UIScreenshotService * _Nonnull)screenshotService generatePDFRepresentationWithCompletion:(void (^ _Nonnull)(NSData * _Nullable, NSInteger, CGRect))completionHandler;
		[Export ("screenshotService:generatePDFRepresentationWithCompletion:")]
		void GeneratePDFRepresentationWithCompletion (UIScreenshotService screenshotService, Action<NSData, nint, CGRect> completionHandler);
	}

	// @interface NSItemProvider (NSUserActivity) <NSItemProviderReading, NSItemProviderWriting>
	[NoWatch, NoTV, iOS (13,0)]
	[Category]
	[BaseType (typeof(NSUserActivity))]
	interface NSUserActivity_NSItemProvider : INSItemProviderReading, INSItemProviderWriting
	{
	}

	[Static]
	 
	partial interface Constants
	{
		// extern NSString *const _Nonnull UNNotificationDefaultActionIdentifier __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (3, 0), NoTV, Mac (10, 14), iOS (10, 0)]
		[Field ("UNNotificationDefaultActionIdentifier", "__Internal")]
		NSString UNNotificationDefaultActionIdentifier { get; }

		// extern NSString *const _Nonnull UNNotificationDismissActionIdentifier __attribute__((availability(macos, introduced=10.14))) __attribute__((availability(ios, introduced=10.0))) __attribute__((availability(watchos, introduced=3.0))) __attribute__((availability(tvos, unavailable)));
		[Watch (3, 0), NoTV, Mac (10, 14), iOS (10, 0)]
		[Field ("UNNotificationDismissActionIdentifier", "__Internal")]
		NSString UNNotificationDismissActionIdentifier { get; }
	}

	// @interface UNNotificationResponse : NSObject <NSCopying, NSSecureCoding>
	[Watch (3,0), NoTV, Mac (10,14), iOS (10,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UNNotificationResponse : INSCopying, INSSecureCoding
	{
		// @property (readonly, copy, nonatomic) UNNotification * _Nonnull notification;
		[Export ("notification", ArgumentSemantic.Copy)]
		UNNotification Notification { get; }

		// @property (readonly, copy, nonatomic) NSString * _Nonnull actionIdentifier;
		[Export ("actionIdentifier")]
		string ActionIdentifier { get; }
	}

	// @interface UNTextInputNotificationResponse : UNNotificationResponse
	[Watch (3,0), NoTV, Mac (10,14), iOS (10,0)]
	[BaseType (typeof(UNNotificationResponse))]
	interface UNTextInputNotificationResponse
	{
		// @property (readonly, copy, nonatomic) NSString * _Nonnull userText;
		[Export ("userText")]
		string UserText { get; }
	}

	// @interface UIKitAdditions (UNNotificationResponse)
	[Category]
	[BaseType (typeof(UNNotificationResponse))]
	interface UNNotificationResponse_UIKitAdditions
	{
		// @property (readonly, nonatomic) UIScene * _Nullable targetScene __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[NullAllowed, Export ("targetScene")]
		UIScene TargetScene { get; }
	}

	// typedef void (^UIActionHandler)(__kindof UIAction * _Nonnull);
	delegate void UIActionHandler (UIAction arg0);

	// @interface UIAction : UIMenuElement
	[iOS (13,0)]
	[BaseType (typeof(UIMenuElement))]
	[DisableDefaultCtor]
	interface UIAction
	{
		// @property (copy, nonatomic) NSString * _Nonnull title;
		[Export ("title")]
		string Title { get; set; }

		// @property (copy, nonatomic) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Copy)]
		UIImage Image { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable discoverabilityTitle;
		[NullAllowed, Export ("discoverabilityTitle")]
		string DiscoverabilityTitle { get; set; }

		// @property (readonly, nonatomic) UIActionIdentifier _Nonnull identifier;
		[Export ("identifier")]
		string Identifier { get; }

		// @property (nonatomic) UIMenuElementAttributes attributes;
		[Export ("attributes", ArgumentSemantic.Assign)]
		UIMenuElementAttributes Attributes { get; set; }

		// @property (nonatomic) UIMenuElementState state;
		[Export ("state", ArgumentSemantic.Assign)]
		UIMenuElementState State { get; set; }

		// +(instancetype _Nonnull)actionWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nullable)image identifier:(UIActionIdentifier _Nullable)identifier handler:(UIActionHandler _Nonnull)handler __attribute__((swift_private));
		[Static]
		[Export ("actionWithTitle:image:identifier:handler:")]
		UIAction ActionWithTitle (string title, [NullAllowed] UIImage image, [NullAllowed] string identifier, UIActionHandler handler);
	}

	// @protocol UIMenuBuilder
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[iOS (13,0)]
	[Protocol]
	interface UIMenuBuilder
	{
		// @required @property (readonly, nonatomic) UIMenuSystem * _Nonnull system;
		[Abstract]
		[Export ("system")]
		UIMenuSystem System { get; }

		// @required -(UIMenu * _Nullable)menuForIdentifier:(UIMenuIdentifier _Nonnull)identifier __attribute__((swift_name("menu(for:)")));
		[Abstract]
		[Export ("menuForIdentifier:")]
		[return: NullAllowed]
		UIMenu MenuForIdentifier (string identifier);

		// @required -(UIAction * _Nullable)actionForIdentifier:(UIActionIdentifier _Nonnull)identifier __attribute__((swift_name("action(for:)")));
		[Abstract]
		[Export ("actionForIdentifier:")]
		[return: NullAllowed]
		UIAction ActionForIdentifier (string identifier);

		// @required -(UICommand * _Nullable)commandForAction:(SEL _Nonnull)action propertyList:(id _Nullable)propertyList __attribute__((swift_private));
		[Abstract]
		[Export ("commandForAction:propertyList:")]
		[return: NullAllowed]
		UICommand CommandForAction (Selector action, [NullAllowed] NSObject propertyList);

		// @required -(void)replaceMenuForIdentifier:(UIMenuIdentifier _Nonnull)replacedIdentifier withMenu:(UIMenu * _Nonnull)replacementMenu __attribute__((swift_name("replace(menu:with:)")));
		[Abstract]
		[Export ("replaceMenuForIdentifier:withMenu:")]
		void ReplaceMenuForIdentifier (string replacedIdentifier, UIMenu replacementMenu);

		// @required -(void)replaceChildrenOfMenuForIdentifier:(UIMenuIdentifier _Nonnull)parentIdentifier fromChildrenBlock:(NSArray<UIMenuElement *> * _Nonnull (^ _Nonnull)(NSArray<UIMenuElement *> * _Nonnull))childrenBlock __attribute__((swift_name("replaceChildren(ofMenu:from:)")));
		[Abstract]
		[Export ("replaceChildrenOfMenuForIdentifier:fromChildrenBlock:")]
		void ReplaceChildrenOfMenuForIdentifier (string parentIdentifier, Func<NSArray<UIMenuElement>, NSArray<UIMenuElement>> childrenBlock);

		// @required -(void)insertSiblingMenu:(UIMenu * _Nonnull)siblingMenu beforeMenuForIdentifier:(UIMenuIdentifier _Nonnull)siblingIdentifier __attribute__((swift_name("insertSibling(_:beforeMenu:)")));
		[Abstract]
		[Export ("insertSiblingMenu:beforeMenuForIdentifier:")]
		void InsertSiblingMenu (UIMenu siblingMenu, string siblingIdentifier);

		// @required -(void)insertSiblingMenu:(UIMenu * _Nonnull)siblingMenu afterMenuForIdentifier:(UIMenuIdentifier _Nonnull)siblingIdentifier __attribute__((swift_name("insertSibling(_:afterMenu:)")));
		[Abstract]
		[Export ("insertSiblingMenu:afterMenuForIdentifier:")]
		void InsertSiblingMenu (UIMenu siblingMenu, string siblingIdentifier);

		// @required -(void)insertChildMenu:(UIMenu * _Nonnull)childMenu atStartOfMenuForIdentifier:(UIMenuIdentifier _Nonnull)parentIdentifier __attribute__((swift_name("insertChild(_:atStartOfMenu:)")));
		[Abstract]
		[Export ("insertChildMenu:atStartOfMenuForIdentifier:")]
		void InsertChildMenu (UIMenu childMenu, string parentIdentifier);

		// @required -(void)insertChildMenu:(UIMenu * _Nonnull)childMenu atEndOfMenuForIdentifier:(UIMenuIdentifier _Nonnull)parentIdentifier __attribute__((swift_name("insertChild(_:atEndOfMenu:)")));
		[Abstract]
		[Export ("insertChildMenu:atEndOfMenuForIdentifier:")]
		void InsertChildMenu (UIMenu childMenu, string parentIdentifier);

		// @required -(void)removeMenuForIdentifier:(UIMenuIdentifier _Nonnull)removedIdentifier __attribute__((swift_name("remove(menu:)")));
		[Abstract]
		[Export ("removeMenuForIdentifier:")]
		void RemoveMenuForIdentifier (string removedIdentifier);
	}

	// @interface UIMenuSystem : NSObject
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIMenuSystem
	{
		// @property (readonly, nonatomic, class) UIMenuSystem * _Nonnull mainSystem;
		[Static]
		[Export ("mainSystem")]
		UIMenuSystem MainSystem { get; }

		// @property (readonly, nonatomic, class) UIMenuSystem * _Nonnull contextSystem;
		[Static]
		[Export ("contextSystem")]
		UIMenuSystem ContextSystem { get; }

		// -(void)setNeedsRebuild;
		[Export ("setNeedsRebuild")]
		void SetNeedsRebuild ();

		// -(void)setNeedsRevalidate;
		[Export ("setNeedsRevalidate")]
		void SetNeedsRevalidate ();
	}

	// typedef UIMenu * _Nullable (^UIContextMenuActionProvider)(NSArray<UIMenuElement *> * _Nonnull);
	delegate UIMenu UIContextMenuActionProvider (UIMenuElement[] arg0);

	// typedef UIViewController * _Nullable (^UIContextMenuContentPreviewProvider)();
	delegate UIViewController UIContextMenuContentPreviewProvider ();

	// @interface UIContextMenuConfiguration : NSObject
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	interface UIContextMenuConfiguration
	{
		// @property (readonly, nonatomic) id<NSCopying> _Nonnull identifier;
		[Export ("identifier")]
		NSCopying Identifier { get; }

		// +(instancetype _Nonnull)configurationWithIdentifier:(id<NSCopying> _Nullable)identifier previewProvider:(UIContextMenuContentPreviewProvider _Nullable)previewProvider actionProvider:(UIContextMenuActionProvider _Nullable)actionProvider;
		[Static]
		[Export ("configurationWithIdentifier:previewProvider:actionProvider:")]
		UIContextMenuConfiguration ConfigurationWithIdentifier ([NullAllowed] NSCopying identifier, [NullAllowed] UIContextMenuContentPreviewProvider previewProvider, [NullAllowed] UIContextMenuActionProvider actionProvider);
	}

	// @interface UIContextMenuInteraction : NSObject <UIInteraction>
	[NoWatch, NoTV, iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIContextMenuInteraction : IUIInteraction
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIContextMenuInteractionDelegate Delegate { get; }

		// @property (readonly, nonatomic, weak) id<UIContextMenuInteractionDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; }

		// -(instancetype _Nonnull)initWithDelegate:(id<UIContextMenuInteractionDelegate> _Nonnull)delegate __attribute__((objc_designated_initializer));
		[Export ("initWithDelegate:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIContextMenuInteractionDelegate @delegate);

		// -(CGPoint)locationInView:(UIView * _Nullable)view;
		[Export ("locationInView:")]
		CGPoint LocationInView ([NullAllowed] UIView view);
	}

	// @protocol UIContextMenuInteractionAnimating <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (13,0)]
	[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIContextMenuInteractionAnimating
	{
		// @required @property (readonly, nonatomic) UIViewController * _Nullable previewViewController;
		[Abstract]
		[NullAllowed, Export ("previewViewController")]
		UIViewController PreviewViewController { get; }

		// @required -(void)addAnimations:(void (^ _Nonnull)(void))animations;
		[Abstract]
		[Export ("addAnimations:")]
		void AddAnimations (Action animations);

		// @required -(void)addCompletion:(void (^ _Nonnull)(void))completion;
		[Abstract]
		[Export ("addCompletion:")]
		void AddCompletion (Action completion);
	}

	// @protocol UIContextMenuInteractionCommitAnimating <UIContextMenuInteractionAnimating>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[NoWatch, NoTV, iOS (13,0)]
	[Protocol]
	interface UIContextMenuInteractionCommitAnimating : IUIContextMenuInteractionAnimating
	{
		// @required @property (nonatomic) UIContextMenuInteractionCommitStyle preferredCommitStyle;
		[Abstract]
		[Export ("preferredCommitStyle", ArgumentSemantic.Assign)]
		UIContextMenuInteractionCommitStyle PreferredCommitStyle { get; set; }
	}

	// @protocol UIContextMenuInteractionDelegate <NSObject>
	[NoWatch, NoTV, iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIContextMenuInteractionDelegate
	{
		// @required -(UIContextMenuConfiguration * _Nullable)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction configurationForMenuAtLocation:(CGPoint)location;
		[Abstract]
		[Export ("contextMenuInteraction:configurationForMenuAtLocation:")]
		[return: NullAllowed]
		UIContextMenuConfiguration ContextMenuInteraction (UIContextMenuInteraction interaction, CGPoint location);

		// @optional -(UITargetedPreview * _Nullable)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction previewForHighlightingMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration;
		[Export ("contextMenuInteraction:previewForHighlightingMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuConfiguration configuration);

		// @optional -(UITargetedPreview * _Nullable)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction previewForDismissingMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration;
		[Export ("contextMenuInteraction:previewForDismissingMenuWithConfiguration:")]
		[return: NullAllowed]
		UITargetedPreview ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuConfiguration configuration);

		// @optional -(void)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction willPerformPreviewActionForMenuWithConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration animator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator;
		[Export ("contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:")]
		void ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuConfiguration configuration, UIContextMenuInteractionCommitAnimating animator);

		// @optional -(void)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction willDisplayMenuForConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration animator:(id<UIContextMenuInteractionAnimating> _Nullable)animator;
		[Export ("contextMenuInteraction:willDisplayMenuForConfiguration:animator:")]
		void ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuConfiguration configuration, [NullAllowed] UIContextMenuInteractionAnimating animator);

		// @optional -(void)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction willEndForConfiguration:(UIContextMenuConfiguration * _Nonnull)configuration animator:(id<UIContextMenuInteractionAnimating> _Nullable)animator;
		[Export ("contextMenuInteraction:willEndForConfiguration:animator:")]
		void ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuConfiguration configuration, [NullAllowed] UIContextMenuInteractionAnimating animator);

		// @optional -(void)contextMenuInteraction:(UIContextMenuInteraction * _Nonnull)interaction willCommitWithAnimator:(id<UIContextMenuInteractionCommitAnimating> _Nonnull)animator __attribute__((availability(ios, introduced=13.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 13, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("contextMenuInteraction:willCommitWithAnimator:")]
		void ContextMenuInteraction (UIContextMenuInteraction interaction, UIContextMenuInteractionCommitAnimating animator);

		// @optional -(void)contextMenuInteractionWillPresent:(UIContextMenuInteraction * _Nonnull)interaction __attribute__((availability(ios, introduced=13.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 13, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("contextMenuInteractionWillPresent:")]
		void ContextMenuInteractionWillPresent (UIContextMenuInteraction interaction);

		// @optional -(void)contextMenuInteractionDidEnd:(UIContextMenuInteraction * _Nonnull)interaction __attribute__((availability(ios, introduced=13.0, deprecated=13.0)));
		[Introduced (PlatformName.iOS, 13, 0)]
		[Deprecated (PlatformName.iOS, 13, 0)]
		[Export ("contextMenuInteractionDidEnd:")]
		void ContextMenuInteractionDidEnd (UIContextMenuInteraction interaction);
	}

	// @protocol UITextFormattingCoordinatorDelegate <NSObject>
	[iOS (13,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UITextFormattingCoordinatorDelegate
	{
		// @required -(void)updateTextAttributesWithConversionHandler:(UITextAttributesConversionHandler _Nonnull)conversionHandler __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Abstract]
		[Export ("updateTextAttributesWithConversionHandler:")]
		void UpdateTextAttributesWithConversionHandler (UITextAttributesConversionHandler conversionHandler);
	}

	// @interface UITextFormattingCoordinator : NSObject <UIFontPickerViewControllerDelegate>
	[iOS (13,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UITextFormattingCoordinator : IUIFontPickerViewControllerDelegate
	{
		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UITextFormattingCoordinatorDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UITextFormattingCoordinatorDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (readonly, getter = isFontPanelVisible, class) int fontPanelVisible;
		[Static]
		[Export ("fontPanelVisible")]
		int FontPanelVisible { [Bind ("isFontPanelVisible")] get; }

		// +(instancetype _Nonnull)textFormattingCoordinatorForWindowScene:(UIWindowScene * _Nonnull)windowScene;
		[Static]
		[Export ("textFormattingCoordinatorForWindowScene:")]
		UITextFormattingCoordinator TextFormattingCoordinatorForWindowScene (UIWindowScene windowScene);

		// -(instancetype _Nonnull)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene __attribute__((objc_designated_initializer));
		[Export ("initWithWindowScene:")]
		[DesignatedInitializer]
		IntPtr Constructor (UIWindowScene windowScene);

		// -(void)setSelectedAttributes:(NSDictionary<NSAttributedStringKey,id> * _Nonnull)attributes isMultiple:(int)flag;
		[Export ("setSelectedAttributes:isMultiple:")]
		void SetSelectedAttributes (NSDictionary<NSString, NSObject> attributes, int flag);

		// +(void)toggleFontPanel:(id _Nonnull)sender;
		[Static]
		[Export ("toggleFontPanel:")]
		void ToggleFontPanel (NSObject sender);
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const NSErrorDomain _Nonnull UIDocumentBrowserErrorDomain __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(watchos, unavailable))) __attribute__((availability(tvos, unavailable)));
		[NoWatch, NoTV, iOS (11, 0)]
		[Field ("UIDocumentBrowserErrorDomain", "__Internal")]
		NSString UIDocumentBrowserErrorDomain { get; }
	}

	// @interface UIDocumentBrowserViewController : UIViewController <NSCoding>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(UIViewController))]
	interface UIDocumentBrowserViewController : INSCoding
	{
		// -(instancetype _Nonnull)initForOpeningFilesWithContentTypes:(NSArray<NSString *> * _Nullable)allowedContentTypes __attribute__((objc_designated_initializer));
		[Export ("initForOpeningFilesWithContentTypes:")]
		[DesignatedInitializer]
		IntPtr Constructor ([NullAllowed] string[] allowedContentTypes);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDocumentBrowserViewControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIDocumentBrowserViewControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (assign, nonatomic) int allowsDocumentCreation;
		[Export ("allowsDocumentCreation")]
		int AllowsDocumentCreation { get; set; }

		// @property (assign, nonatomic) int allowsPickingMultipleItems;
		[Export ("allowsPickingMultipleItems")]
		int AllowsPickingMultipleItems { get; set; }

		// @property (readonly, copy, nonatomic) NSArray<NSString *> * _Nonnull allowedContentTypes;
		[Export ("allowedContentTypes", ArgumentSemantic.Copy)]
		string[] AllowedContentTypes { get; }

		// @property (readonly, copy, nonatomic) NSArray<NSString *> * _Nonnull recentDocumentsContentTypes __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("recentDocumentsContentTypes", ArgumentSemantic.Copy)]
		string[] RecentDocumentsContentTypes { get; }

		// @property (assign, nonatomic) int shouldShowFileExtensions __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("shouldShowFileExtensions")]
		int ShouldShowFileExtensions { get; set; }

		// @property (nonatomic, strong) NSArray<UIBarButtonItem *> * _Nonnull additionalLeadingNavigationBarButtonItems;
		[Export ("additionalLeadingNavigationBarButtonItems", ArgumentSemantic.Strong)]
		UIBarButtonItem[] AdditionalLeadingNavigationBarButtonItems { get; set; }

		// @property (nonatomic, strong) NSArray<UIBarButtonItem *> * _Nonnull additionalTrailingNavigationBarButtonItems;
		[Export ("additionalTrailingNavigationBarButtonItems", ArgumentSemantic.Strong)]
		UIBarButtonItem[] AdditionalTrailingNavigationBarButtonItems { get; set; }

		// -(void)revealDocumentAtURL:(NSURL * _Nonnull)url importIfNeeded:(int)importIfNeeded completion:(void (^ _Nullable)(NSURL * _Nullable, NSError * _Nullable))completion;
		[Export ("revealDocumentAtURL:importIfNeeded:completion:")]
		void RevealDocumentAtURL (NSUrl url, int importIfNeeded, [NullAllowed] Action<NSURL, NSError> completion);

		// -(void)importDocumentAtURL:(NSURL * _Nonnull)documentURL nextToDocumentAtURL:(NSURL * _Nonnull)neighbourURL mode:(UIDocumentBrowserImportMode)importMode completionHandler:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
		[Export ("importDocumentAtURL:nextToDocumentAtURL:mode:completionHandler:")]
		void ImportDocumentAtURL (NSUrl documentURL, NSUrl neighbourURL, UIDocumentBrowserImportMode importMode, Action<NSURL, NSError> completion);

		// -(UIDocumentBrowserTransitionController * _Nonnull)transitionControllerForDocumentAtURL:(NSURL * _Nonnull)documentURL __attribute__((availability(ios, introduced=12.0))) __attribute__((swift_name("transitionController(forDocumentAt:)")));
		[iOS (12,0)]
		[Export ("transitionControllerForDocumentAtURL:")]
		UIDocumentBrowserTransitionController TransitionControllerForDocumentAtURL (NSUrl documentURL);

		// -(UIDocumentBrowserTransitionController * _Nonnull)transitionControllerForDocumentURL:(NSURL * _Nonnull)documentURL __attribute__((availability(ios, introduced=11.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 11, 0)]
		[Deprecated (PlatformName.iOS, 12, 0)]
		[Export ("transitionControllerForDocumentURL:")]
		UIDocumentBrowserTransitionController TransitionControllerForDocumentURL (NSUrl documentURL);

		// @property (copy, nonatomic) NSArray<UIDocumentBrowserAction *> * _Nonnull customActions;
		[Export ("customActions", ArgumentSemantic.Copy)]
		UIDocumentBrowserAction[] CustomActions { get; set; }

		// @property (assign, nonatomic) UIDocumentBrowserUserInterfaceStyle browserUserInterfaceStyle;
		[Export ("browserUserInterfaceStyle", ArgumentSemantic.Assign)]
		UIDocumentBrowserUserInterfaceStyle BrowserUserInterfaceStyle { get; set; }

		// @property (copy, nonatomic) NSString * _Nonnull localizedCreateDocumentActionTitle __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("localizedCreateDocumentActionTitle")]
		string LocalizedCreateDocumentActionTitle { get; set; }

		// @property (assign, nonatomic) CGFloat defaultDocumentAspectRatio __attribute__((availability(ios, introduced=13.0)));
		[iOS (13, 0)]
		[Export ("defaultDocumentAspectRatio")]
		nfloat DefaultDocumentAspectRatio { get; set; }
	}

	// @protocol UIDocumentBrowserViewControllerDelegate <NSObject>
	[NoWatch, NoTV, iOS (11,0)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDocumentBrowserViewControllerDelegate
	{
		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller didPickDocumentURLs:(NSArray<NSURL *> * _Nonnull)documentURLs __attribute__((availability(ios, introduced=11.0, deprecated=12.0)));
		[Introduced (PlatformName.iOS, 11, 0)]
		[Deprecated (PlatformName.iOS, 12, 0)]
		[Export ("documentBrowser:didPickDocumentURLs:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, NSUrl[] documentURLs);

		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)documentURLs __attribute__((availability(ios, introduced=12.0)));
		[iOS (12,0)]
		[Export ("documentBrowser:didPickDocumentsAtURLs:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, NSUrl[] documentURLs);

		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller didRequestDocumentCreationWithHandler:(void (^ _Nonnull)(NSURL * _Nullable, UIDocumentBrowserImportMode))importHandler;
		[Export ("documentBrowser:didRequestDocumentCreationWithHandler:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, Action<NSURL, UIDocumentBrowserImportMode> importHandler);

		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller didImportDocumentAtURL:(NSURL * _Nonnull)sourceURL toDestinationURL:(NSURL * _Nonnull)destinationURL;
		[Export ("documentBrowser:didImportDocumentAtURL:toDestinationURL:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, NSUrl sourceURL, NSUrl destinationURL);

		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller failedToImportDocumentAtURL:(NSURL * _Nonnull)documentURL error:(NSError * _Nullable)error;
		[Export ("documentBrowser:failedToImportDocumentAtURL:error:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, NSUrl documentURL, [NullAllowed] NSError error);

		// @optional -(NSArray<__kindof UIActivity *> * _Nonnull)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller applicationActivitiesForDocumentURLs:(NSArray<NSURL *> * _Nonnull)documentURLs;
		[Export ("documentBrowser:applicationActivitiesForDocumentURLs:")]
		UIActivity[] DocumentBrowser (UIDocumentBrowserViewController controller, NSUrl[] documentURLs);

		// @optional -(void)documentBrowser:(UIDocumentBrowserViewController * _Nonnull)controller willPresentActivityViewController:(UIActivityViewController * _Nonnull)activityViewController;
		[Export ("documentBrowser:willPresentActivityViewController:")]
		void DocumentBrowser (UIDocumentBrowserViewController controller, UIActivityViewController activityViewController);
	}

	// @interface UIDocumentBrowserTransitionController : NSObject <UIViewControllerAnimatedTransitioning>
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDocumentBrowserTransitionController : IUIViewControllerAnimatedTransitioning
	{
		// @property (nonatomic, strong) NSProgress * _Nullable loadingProgress;
		[NullAllowed, Export ("loadingProgress", ArgumentSemantic.Strong)]
		NSProgress LoadingProgress { get; set; }

		// @property (nonatomic, weak) UIView * _Nullable targetView;
		[NullAllowed, Export ("targetView", ArgumentSemantic.Weak)]
		UIView TargetView { get; set; }
	}

	// @interface UIDocumentBrowserAction : NSObject
	[NoWatch, NoTV, iOS (11,0)]
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface UIDocumentBrowserAction
	{
		// -(instancetype _Nonnull)initWithIdentifier:(NSString * _Nonnull)identifier localizedTitle:(NSString * _Nonnull)localizedTitle availability:(UIDocumentBrowserActionAvailability)availability handler:(void (^ _Nonnull)(NSArray<NSURL *> * _Nonnull))handler __attribute__((objc_designated_initializer));
		[Export ("initWithIdentifier:localizedTitle:availability:handler:")]
		[DesignatedInitializer]
		IntPtr Constructor (string identifier, string localizedTitle, UIDocumentBrowserActionAvailability availability, Action<NSArray<NSURL>> handler);

		// @property (readonly, nonatomic) NSString * _Nonnull identifier;
		[Export ("identifier")]
		string Identifier { get; }

		// @property (readonly, nonatomic) NSString * _Nonnull localizedTitle;
		[Export ("localizedTitle")]
		string LocalizedTitle { get; }

		// @property (readonly, nonatomic) UIDocumentBrowserActionAvailability availability;
		[Export ("availability")]
		UIDocumentBrowserActionAvailability Availability { get; }

		// @property (nonatomic, strong) UIImage * _Nullable image;
		[NullAllowed, Export ("image", ArgumentSemantic.Strong)]
		UIImage Image { get; set; }

		// @property (copy, nonatomic) NSArray<NSString *> * _Nonnull supportedContentTypes;
		[Export ("supportedContentTypes", ArgumentSemantic.Copy)]
		string[] SupportedContentTypes { get; set; }

		// @property (assign, nonatomic) int supportsMultipleItems;
		[Export ("supportsMultipleItems")]
		int SupportsMultipleItems { get; set; }
	}

	[Static]
	 
	partial interface Constants
	{
		// extern const UIActivityType _Nonnull UIActivityTypePostToFacebook __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypePostToFacebook", "__Internal")]
		NSString UIActivityTypePostToFacebook { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePostToTwitter __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypePostToTwitter", "__Internal")]
		NSString UIActivityTypePostToTwitter { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePostToWeibo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypePostToWeibo", "__Internal")]
		NSString UIActivityTypePostToWeibo { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeMessage __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypeMessage", "__Internal")]
		NSString UIActivityTypeMessage { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeMail __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypeMail", "__Internal")]
		NSString UIActivityTypeMail { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePrint __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypePrint", "__Internal")]
		NSString UIActivityTypePrint { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeCopyToPasteboard __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypeCopyToPasteboard", "__Internal")]
		NSString UIActivityTypeCopyToPasteboard { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeAssignToContact __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypeAssignToContact", "__Internal")]
		NSString UIActivityTypeAssignToContact { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeSaveToCameraRoll __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=6.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (6, 0)]
		[Field ("UIActivityTypeSaveToCameraRoll", "__Internal")]
		NSString UIActivityTypeSaveToCameraRoll { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeAddToReadingList __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Field ("UIActivityTypeAddToReadingList", "__Internal")]
		NSString UIActivityTypeAddToReadingList { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePostToFlickr __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Field ("UIActivityTypePostToFlickr", "__Internal")]
		NSString UIActivityTypePostToFlickr { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePostToVimeo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Field ("UIActivityTypePostToVimeo", "__Internal")]
		NSString UIActivityTypePostToVimeo { get; }

		// extern const UIActivityType _Nonnull UIActivityTypePostToTencentWeibo __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Field ("UIActivityTypePostToTencentWeibo", "__Internal")]
		NSString UIActivityTypePostToTencentWeibo { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeAirDrop __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=7.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (7, 0)]
		[Field ("UIActivityTypeAirDrop", "__Internal")]
		NSString UIActivityTypeAirDrop { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeOpenInIBooks __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=9.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (9, 0)]
		[Field ("UIActivityTypeOpenInIBooks", "__Internal")]
		NSString UIActivityTypeOpenInIBooks { get; }

		// extern const UIActivityType _Nonnull UIActivityTypeMarkupAsPDF __attribute__((visibility("default"))) __attribute__((availability(ios, introduced=11.0))) __attribute__((availability(tvos, unavailable)));
		[NoTV, iOS (11, 0)]
		[Field ("UIActivityTypeMarkupAsPDF", "__Internal")]
		NSString UIActivityTypeMarkupAsPDF { get; }
	}

	// @interface UIActivity : NSObject
	[NoTV, iOS (6,0)]
	[BaseType (typeof(NSObject))]
	interface UIActivity
	{
		// @property (readonly, nonatomic, class) UIActivityCategory activityCategory __attribute__((availability(ios, introduced=7.0)));
		[iOS (7, 0)]
		[Static]
		[Export ("activityCategory")]
		UIActivityCategory ActivityCategory { get; }

		// @property (readonly, nonatomic) UIActivityType _Nullable activityType;
		[NullAllowed, Export ("activityType")]
		string ActivityType { get; }

		// @property (readonly, nonatomic) NSString * _Nullable activityTitle;
		[NullAllowed, Export ("activityTitle")]
		string ActivityTitle { get; }

		// @property (readonly, nonatomic) UIImage * _Nullable activityImage;
		[NullAllowed, Export ("activityImage")]
		UIImage ActivityImage { get; }

		// -(int)canPerformWithActivityItems:(NSArray * _Nonnull)activityItems;
		[Export ("canPerformWithActivityItems:")]
		[Verify (StronglyTypedNSArray)]
		int CanPerformWithActivityItems (NSObject[] activityItems);

		// -(void)prepareWithActivityItems:(NSArray * _Nonnull)activityItems;
		[Export ("prepareWithActivityItems:")]
		[Verify (StronglyTypedNSArray)]
		void PrepareWithActivityItems (NSObject[] activityItems);

		// @property (readonly, nonatomic) UIViewController * _Nullable activityViewController;
		[NullAllowed, Export ("activityViewController")]
		UIViewController ActivityViewController { get; }

		// -(void)performActivity;
		[Export ("performActivity")]
		void PerformActivity ();

		// -(void)activityDidFinish:(int)completed;
		[Export ("activityDidFinish:")]
		void ActivityDidFinish (int completed);
	}

	// @protocol UIActivityItemSource <NSObject>
	/*
  Check whether adding [Model] to this declaration is appropriate.
  [Model] is used to generate a C# class that implements this protocol,
  and might be useful for protocols that consumers are supposed to implement,
  since consumers can subclass the generated class instead of implementing
  the generated interface. If consumers are not supposed to implement this
  protocol, then [Model] is redundant and will generate code that will never
  be used.
*/[Protocol]
	[BaseType (typeof(NSObject))]
	interface UIActivityItemSource
	{
		// @required -(id _Nonnull)activityViewControllerPlaceholderItem:(UIActivityViewController * _Nonnull)activityViewController;
		[Abstract]
		[Export ("activityViewControllerPlaceholderItem:")]
		NSObject ActivityViewControllerPlaceholderItem (UIActivityViewController activityViewController);

		// @required -(id _Nullable)activityViewController:(UIActivityViewController * _Nonnull)activityViewController itemForActivityType:(UIActivityType _Nullable)activityType;
		[Abstract]
		[Export ("activityViewController:itemForActivityType:")]
		[return: NullAllowed]
		NSObject ActivityViewController (UIActivityViewController activityViewController, [NullAllowed] string activityType);

		// @optional -(NSString * _Nonnull)activityViewController:(UIActivityViewController * _Nonnull)activityViewController subjectForActivityType:(UIActivityType _Nullable)activityType;
		[Export ("activityViewController:subjectForActivityType:")]
		string ActivityViewController (UIActivityViewController activityViewController, [NullAllowed] string activityType);

		// @optional -(NSString * _Nonnull)activityViewController:(UIActivityViewController * _Nonnull)activityViewController dataTypeIdentifierForActivityType:(UIActivityType _Nullable)activityType;
		[Export ("activityViewController:dataTypeIdentifierForActivityType:")]
		string ActivityViewController (UIActivityViewController activityViewController, [NullAllowed] string activityType);

		// @optional -(UIImage * _Nullable)activityViewController:(UIActivityViewController * _Nonnull)activityViewController thumbnailImageForActivityType:(UIActivityType _Nullable)activityType suggestedSize:(CGSize)size;
		[Export ("activityViewController:thumbnailImageForActivityType:suggestedSize:")]
		[return: NullAllowed]
		UIImage ActivityViewController (UIActivityViewController activityViewController, [NullAllowed] string activityType, CGSize size);

		// @optional -(LPLinkMetadata * _Nullable)activityViewControllerLinkMetadata:(UIActivityViewController * _Nonnull)activityViewController __attribute__((availability(ios, introduced=13.0)));
		[iOS (13,0)]
		[Export ("activityViewControllerLinkMetadata:")]
		[return: NullAllowed]
		LPLinkMetadata ActivityViewControllerLinkMetadata (UIActivityViewController activityViewController);
	}

	// @interface UIActivityItemProvider : NSOperation <UIActivityItemSource>
	[NoTV, iOS (6,0)]
	[BaseType (typeof(NSOperation))]
	[DisableDefaultCtor]
	interface UIActivityItemProvider : IUIActivityItemSource
	{
		// -(instancetype _Nonnull)initWithPlaceholderItem:(id _Nonnull)placeholderItem __attribute__((objc_designated_initializer));
		[Export ("initWithPlaceholderItem:")]
		[DesignatedInitializer]
		IntPtr Constructor (NSObject placeholderItem);

		// @property (readonly, nonatomic, strong) id _Nullable placeholderItem;
		[NullAllowed, Export ("placeholderItem", ArgumentSemantic.Strong)]
		NSObject PlaceholderItem { get; }

		// @property (readonly, copy, nonatomic) UIActivityType _Nullable activityType;
		[NullAllowed, Export ("activityType")]
		string ActivityType { get; }

		// @property (readonly, nonatomic) id _Nonnull item;
		[Export ("item")]
		NSObject Item { get; }
	}

	// typedef void (^UIActivityViewControllerCompletionHandler)(UIActivityType _Nullable, int);
	delegate void UIActivityViewControllerCompletionHandler ([NullAllowed] string arg0, int arg1);

	// typedef void (^UIActivityViewControllerCompletionWithItemsHandler)(UIActivityType _Nullable, int, NSArray * _Nullable, NSError * _Nullable);
	delegate void UIActivityViewControllerCompletionWithItemsHandler ([NullAllowed] string arg0, int arg1, [NullAllowed] NSObject[] arg2, [NullAllowed] NSError arg3);

	// @interface UIActivityViewController : UIViewController
	[NoTV, iOS (6,0)]
	[BaseType (typeof(UIViewController))]
	[DisableDefaultCtor]
	interface UIActivityViewController
	{
		// -(instancetype _Nonnull)initWithActivityItems:(NSArray * _Nonnull)activityItems applicationActivities:(NSArray<__kindof UIActivity *> * _Nullable)applicationActivities __attribute__((objc_designated_initializer));
		[Export ("initWithActivityItems:applicationActivities:")]
		[DesignatedInitializer]
		[Verify (StronglyTypedNSArray)]
		IntPtr Constructor (NSObject[] activityItems, [NullAllowed] UIActivity[] applicationActivities);

		// @property (copy, nonatomic) UIActivityViewControllerCompletionHandler _Nullable completionHandler __attribute__((availability(ios, introduced=6.0, deprecated=8.0)));
		[Introduced (PlatformName.iOS, 6, 0)]
		[Deprecated (PlatformName.iOS, 8, 0)]
		[NullAllowed, Export ("completionHandler", ArgumentSemantic.Copy)]
		UIActivityViewControllerCompletionHandler CompletionHandler { get; set; }

		// @property (copy, nonatomic) UIActivityViewControllerCompletionWithItemsHandler _Nullable completionWithItemsHandler __attribute__((availability(ios, introduced=8.0)));
		[iOS (8, 0)]
		[NullAllowed, Export ("completionWithItemsHandler", ArgumentSemantic.Copy)]
		UIActivityViewControllerCompletionWithItemsHandler CompletionWithItemsHandler { get; set; }

		// @property (copy, nonatomic) NSArray<UIActivityType> * _Nullable excludedActivityTypes;
		[NullAllowed, Export ("excludedActivityTypes", ArgumentSemantic.Copy)]
		string[] ExcludedActivityTypes { get; set; }
	}

	// @interface UIDocumentInteractionController : NSObject <UIActionSheetDelegate>
	[NoTV, iOS (3,2)]
	[BaseType (typeof(NSObject))]
	interface UIDocumentInteractionController : IUIActionSheetDelegate
	{
		// +(UIDocumentInteractionController * _Nonnull)interactionControllerWithURL:(NSURL * _Nonnull)url;
		[Static]
		[Export ("interactionControllerWithURL:")]
		UIDocumentInteractionController InteractionControllerWithURL (NSUrl url);

		[Wrap ("WeakDelegate")]
		[NullAllowed]
		UIDocumentInteractionControllerDelegate Delegate { get; set; }

		// @property (nonatomic, weak) id<UIDocumentInteractionControllerDelegate> _Nullable delegate;
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (strong) NSURL * _Nullable URL;
		[NullAllowed, Export ("URL", ArgumentSemantic.Strong)]
		NSUrl URL { get; set; }

		// @property (copy, nonatomic) NSString * _Nullable UTI;
		[NullAllowed, Export ("UTI")]
		string UTI { get; set; }

		// @property (copy) NSString * _Nullable name;
		[NullAllowed, Export ("name")]
		string Name { get; set; }

		// @property (readonly, nonatomic) NSArray<UIImage *> * _Nonnull icons;
		[Export ("icons")]
		UIImage[] Icons { get; }

		// @property (nonatomic, strong) id _Nullable annotation;
		[NullAllowed, Export ("annotation", ArgumentSemantic.Strong)]
		NSObject Annotation { get; set; }

		// -(int)presentOptionsMenuFromRect:(CGRect)rect inView:(UIView * _Nonnull)view animated:(int)animated;
		[Export ("presentOptionsMenuFromRect:inView:animated:")]
		int PresentOptionsMenuFromRect (CGRect rect, UIView view, int animated);

		// -(int)presentOptionsMenuFromBarButtonItem:(UIBarButtonItem * _Nonnull)item animated:(int)animated;
		[Export ("presentOptionsMenuFromBarButtonItem:animated:")]
		int PresentOptionsMenuFromBarButtonItem (UIBarButtonItem item, int animated);

		// -(int)presentPreviewAnimated:(int)animated;
		[Export ("presentPreviewAnimated:")]
		int PresentPreviewAnimated (int animated);

		// -(int)presentOpenInMenuFromRect:(CGRect)rect inView:(UIView * _Nonnull)view animated:(int)animated;
		[Export ("presentOpenInMenuFromRect:inView:animated:")]
		int PresentOpenInMenuFromRect (CGRect rect, UIView view, int animated);

		// -(int)presentOpenInMenuFromBarButtonItem:(UIBarButtonItem * _Nonnull)item animated:(int)animated;
		[Export ("presentOpenInMenuFromBarButtonItem:animated:")]
		int PresentOpenInMenuFromBarButtonItem (UIBarButtonItem item, int animated);

		// -(void)dismissPreviewAnimated:(int)animated;
		[Export ("dismissPreviewAnimated:")]
		void DismissPreviewAnimated (int animated);

		// -(void)dismissMenuAnimated:(int)animated;
		[Export ("dismissMenuAnimated:")]
		void DismissMenuAnimated (int animated);

		// @property (readonly, nonatomic) NSArray<__kindof UIGestureRecognizer *> * _Nonnull gestureRecognizers;
		[Export ("gestureRecognizers")]
		UIGestureRecognizer[] GestureRecognizers { get; }
	}

	// @protocol UIDocumentInteractionControllerDelegate <NSObject>
	[NoTV, iOS (3,2)]
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType (typeof(NSObject))]
	interface UIDocumentInteractionControllerDelegate
	{
		// @optional -(UIViewController * _Nonnull)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerViewControllerForPreview:")]
		UIViewController DocumentInteractionControllerViewControllerForPreview (UIDocumentInteractionController controller);

		// @optional -(CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerRectForPreview:")]
		CGRect DocumentInteractionControllerRectForPreview (UIDocumentInteractionController controller);

		// @optional -(UIView * _Nullable)documentInteractionControllerViewForPreview:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerViewForPreview:")]
		[return: NullAllowed]
		UIView DocumentInteractionControllerViewForPreview (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerWillBeginPreview:")]
		void DocumentInteractionControllerWillBeginPreview (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerDidEndPreview:")]
		void DocumentInteractionControllerDidEndPreview (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerWillPresentOptionsMenu:")]
		void DocumentInteractionControllerWillPresentOptionsMenu (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerDidDismissOptionsMenu:")]
		void DocumentInteractionControllerDidDismissOptionsMenu (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerWillPresentOpenInMenu:")]
		void DocumentInteractionControllerWillPresentOpenInMenu (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController * _Nonnull)controller;
		[Export ("documentInteractionControllerDidDismissOpenInMenu:")]
		void DocumentInteractionControllerDidDismissOpenInMenu (UIDocumentInteractionController controller);

		// @optional -(void)documentInteractionController:(UIDocumentInteractionController * _Nonnull)controller willBeginSendingToApplication:(NSString * _Nullable)application;
		[Export ("documentInteractionController:willBeginSendingToApplication:")]
		void DocumentInteractionController (UIDocumentInteractionController controller, [NullAllowed] string application);

		// @optional -(void)documentInteractionController:(UIDocumentInteractionController * _Nonnull)controller didEndSendingToApplication:(NSString * _Nullable)application;
		[Export ("documentInteractionController:didEndSendingToApplication:")]
		void DocumentInteractionController (UIDocumentInteractionController controller, [NullAllowed] string application);

		// @optional -(int)documentInteractionController:(UIDocumentInteractionController * _Nonnull)controller canPerformAction:(SEL _Nullable)action __attribute__((availability(ios, introduced=3.2, deprecated=6.0)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[Export ("documentInteractionController:canPerformAction:")]
		int DocumentInteractionController (UIDocumentInteractionController controller, [NullAllowed] Selector action);

		// @optional -(int)documentInteractionController:(UIDocumentInteractionController * _Nonnull)controller performAction:(SEL _Nullable)action __attribute__((availability(ios, introduced=3.2, deprecated=6.0)));
		[Introduced (PlatformName.iOS, 3, 2)]
		[Deprecated (PlatformName.iOS, 6, 0)]
		[Export ("documentInteractionController:performAction:")]
		int DocumentInteractionController (UIDocumentInteractionController controller, [NullAllowed] Selector action);
	}

	// @interface SimpleDemoViewController : UIViewController
	[BaseType (typeof(UIViewController))]
	interface SimpleDemoViewController
	{
		// @property (retain, nonatomic) UITextField * m_deviceIpField __attribute__((iboutlet));
		[Export ("m_deviceIpField", ArgumentSemantic.Retain)]
		UITextField M_deviceIpField { get; set; }

		// @property (retain, nonatomic) UITextField * m_devicePortField __attribute__((iboutlet));
		[Export ("m_devicePortField", ArgumentSemantic.Retain)]
		UITextField M_devicePortField { get; set; }

		// @property (retain, nonatomic) UITextField * m_uerNameField __attribute__((iboutlet));
		[Export ("m_uerNameField", ArgumentSemantic.Retain)]
		UITextField M_uerNameField { get; set; }

		// @property (retain, nonatomic) UITextField * m_passwordField __attribute__((iboutlet));
		[Export ("m_passwordField", ArgumentSemantic.Retain)]
		UITextField M_passwordField { get; set; }

		// @property (retain, nonatomic) UIView * m_playView __attribute__((iboutlet));
		[Export ("m_playView", ArgumentSemantic.Retain)]
		UIView M_playView { get; set; }

		// @property (retain, nonatomic) UIButton * m_playButton __attribute__((iboutlet));
		[Export ("m_playButton", ArgumentSemantic.Retain)]
		UIButton M_playButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_playbackButton __attribute__((iboutlet));
		[Export ("m_playbackButton", ArgumentSemantic.Retain)]
		UIButton M_playbackButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_loginButton __attribute__((iboutlet));
		[Export ("m_loginButton", ArgumentSemantic.Retain)]
		UIButton M_loginButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_getcfgButton __attribute__((iboutlet));
		[Export ("m_getcfgButton", ArgumentSemantic.Retain)]
		UIButton M_getcfgButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_captureButton __attribute__((iboutlet));
		[Export ("m_captureButton", ArgumentSemantic.Retain)]
		UIButton M_captureButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_recordButton __attribute__((iboutlet));
		[Export ("m_recordButton", ArgumentSemantic.Retain)]
		UIButton M_recordButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_talkButton __attribute__((iboutlet));
		[Export ("m_talkButton", ArgumentSemantic.Retain)]
		UIButton M_talkButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_ptzButton __attribute__((iboutlet));
		[Export ("m_ptzButton", ArgumentSemantic.Retain)]
		UIButton M_ptzButton { get; set; }

		// @property (retain, nonatomic) UIButton * m_otherButton __attribute__((iboutlet));
		[Export ("m_otherButton", ArgumentSemantic.Retain)]
		UIButton M_otherButton { get; set; }

		// @property (retain, nonatomic) id m_playThreadID;
		[Export ("m_playThreadID", ArgumentSemantic.Retain)]
		NSObject M_playThreadID { get; set; }

		// @property _Bool m_bThreadRun;
		[Export ("m_bThreadRun")]
		bool M_bThreadRun { get; set; }

		// @property int m_lUserID;
		[Export ("m_lUserID")]
		int M_lUserID { get; set; }

		// @property int m_lRealPlayID;
		[Export ("m_lRealPlayID")]
		int M_lRealPlayID { get; set; }

		// @property int m_lPlaybackID;
		[Export ("m_lPlaybackID")]
		int M_lPlaybackID { get; set; }

		// @property _Bool m_bPreview;
		[Export ("m_bPreview")]
		bool M_bPreview { get; set; }

		// @property _Bool m_bRecord;
		[Export ("m_bRecord")]
		bool M_bRecord { get; set; }

		// @property _Bool m_bPTZL;
		[Export ("m_bPTZL")]
		bool M_bPTZL { get; set; }

		// @property _Bool m_bVoiceTalk;
		[Export ("m_bVoiceTalk")]
		bool M_bVoiceTalk { get; set; }

		// @property _Bool m_bStopPlayback;
		[Export ("m_bStopPlayback")]
		bool M_bStopPlayback { get; set; }

		// -(void)playerBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("playerBtnClicked:")]
		void PlayerBtnClicked (NSObject sender);

		// -(void)playbackBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("playbackBtnClicked:")]
		void PlaybackBtnClicked (NSObject sender);

		// -(void)loginBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("loginBtnClicked:")]
		void LoginBtnClicked (NSObject sender);

		// -(void)getcfgBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("getcfgBtnClicked:")]
		void GetcfgBtnClicked (NSObject sender);

		// -(void)captureBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("captureBtnClicked:")]
		void CaptureBtnClicked (NSObject sender);

		// -(void)recordBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("recordBtnClicked:")]
		void RecordBtnClicked (NSObject sender);

		// -(void)talkBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("talkBtnClicked:")]
		void TalkBtnClicked (NSObject sender);

		// -(void)ptzBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("ptzBtnClicked:")]
		void PtzBtnClicked (NSObject sender);

		// -(void)ptzBtnClickedUp:(id)sender __attribute__((ibaction));
		[Export ("ptzBtnClickedUp:")]
		void PtzBtnClickedUp (NSObject sender);

		// -(void)otherBtnClicked:(id)sender __attribute__((ibaction));
		[Export ("otherBtnClicked:")]
		void OtherBtnClicked (NSObject sender);

		// -(void)textFieldEditingDidBegin:(id)sender __attribute__((ibaction));
		[Export ("textFieldEditingDidBegin:")]
		void TextFieldEditingDidBegin (NSObject sender);

		// -(void)textFieldEditingDidEndOnExit:(id)sender __attribute__((ibaction));
		[Export ("textFieldEditingDidEndOnExit:")]
		void TextFieldEditingDidEndOnExit (NSObject sender);

		// -(void)keyboardWillHide:(NSNotification *)note __attribute__((ibaction));
		[Export ("keyboardWillHide:")]
		void KeyboardWillHide (NSNotification note);

		// -(_Bool)validateValue:(DeviceInfo *)deviceInfo;
		[Export ("validateValue:")]
		bool ValidateValue (DeviceInfo deviceInfo);

		// -(_Bool)isValidIP:(NSString *)ipStr;
		[Export ("isValidIP:")]
		bool IsValidIP (string ipStr);

		// -(void)startPlay;
		[Export ("startPlay")]
		void StartPlay ();

		// -(void)stopPlay;
		[Export ("stopPlay")]
		void StopPlay ();

		// -(void)startPlayback;
		[Export ("startPlayback")]
		void StartPlayback ();

		// -(void)stopPlayback;
		[Export ("stopPlayback")]
		void StopPlayback ();

		// -(_Bool)loginNormalDevice;
		[Export ("loginNormalDevice")]
		[Verify (MethodToProperty)]
		bool LoginNormalDevice { get; }

		// -(_Bool)loginEZVIZDevice;
		[Export ("loginEZVIZDevice")]
		[Verify (MethodToProperty)]
		bool LoginEZVIZDevice { get; }
	}

	// @interface SimpleDemoAppDelegate : NSObject <UIApplicationDelegate>
	[BaseType (typeof(NSObject))]
	interface SimpleDemoAppDelegate : IUIApplicationDelegate
	{
		// @property (retain, nonatomic) UIWindow * window __attribute__((iboutlet));
		[Export ("window", ArgumentSemantic.Retain)]
		UIWindow Window { get; set; }

		// @property (retain, nonatomic) SimpleDemoViewController * viewController __attribute__((iboutlet));
		[Export ("viewController", ArgumentSemantic.Retain)]
		SimpleDemoViewController ViewController { get; set; }
	}
}
